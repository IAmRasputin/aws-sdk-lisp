;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/savingsplans/api
  (:use)
  (:nicknames #:aws/savingsplans)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/savingsplans/api)
(common-lisp:progn
 (common-lisp:defclass savingsplans-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "savingsplans"))
 (common-lisp:export 'savingsplans-request))
(common-lisp:progn
 (common-lisp:define-condition savingsplans-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'savingsplans-error))
(common-lisp:defvar *error-map*
  '(("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:deftype amount () 'common-lisp:string)
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-savings-plan-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-savings-plan-request-"))
   (savings-plan-offering-id
    (common-lisp:error ":savingsplanofferingid is required") :type
    (common-lisp:or savings-plan-offering-id common-lisp:null))
   (commitment (common-lisp:error ":commitment is required") :type
    (common-lisp:or amount common-lisp:null))
   (upfront-payment-amount common-lisp:nil :type
    (common-lisp:or amount common-lisp:null))
   (purchase-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-savings-plan-request
                    'make-create-savings-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-savings-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-savings-plan-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-plan-offering-id))
      (common-lisp:list
       (common-lisp:cons "savingsPlanOfferingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'commitment))
      (common-lisp:list
       (common-lisp:cons "commitment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'upfront-payment-amount))
      (common-lisp:list
       (common-lisp:cons "upfrontPaymentAmount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'purchase-time))
      (common-lisp:list
       (common-lisp:cons "purchaseTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-savings-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-savings-plan-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-savings-plan-response-"))
   (savings-plan-id common-lisp:nil :type
    (common-lisp:or savings-plan-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-savings-plan-response
                    'make-create-savings-plan-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-savings-plan-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-savings-plan-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-plan-id))
      (common-lisp:list
       (common-lisp:cons "savingsPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-savings-plan-response))
   common-lisp:nil))
(common-lisp:deftype currency-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype currency-list ()
   '(trivial-types:proper-list currency-code))
 (common-lisp:defun |make-currency-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list currency-code))
   aws-sdk/generator/shape::members))
(common-lisp:deftype date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-queued-savings-plan-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-queued-savings-plan-request-"))
   (savings-plan-id (common-lisp:error ":savingsplanid is required") :type
    (common-lisp:or savings-plan-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-queued-savings-plan-request
                    'make-delete-queued-savings-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-queued-savings-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-queued-savings-plan-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-plan-id))
      (common-lisp:list
       (common-lisp:cons "savingsPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-queued-savings-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-queued-savings-plan-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-queued-savings-plan-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-queued-savings-plan-response
                    'make-delete-queued-savings-plan-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-queued-savings-plan-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-queued-savings-plan-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-queued-savings-plan-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-savings-plan-rates-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-savings-plan-rates-request-"))
   (savings-plan-id (common-lisp:error ":savingsplanid is required") :type
    (common-lisp:or savings-plan-id common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or savings-plan-rate-filter-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-savings-plan-rates-request
                    'make-describe-savings-plan-rates-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plan-rates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plan-rates-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-plan-id))
      (common-lisp:list
       (common-lisp:cons "savingsPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plan-rates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-savings-plan-rates-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-savings-plan-rates-response-"))
   (savings-plan-id common-lisp:nil :type
    (common-lisp:or savings-plan-id common-lisp:null))
   (search-results common-lisp:nil :type
    (common-lisp:or savings-plan-rate-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-savings-plan-rates-response
                    'make-describe-savings-plan-rates-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plan-rates-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plan-rates-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-plan-id))
      (common-lisp:list
       (common-lisp:cons "savingsPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'search-results))
      (common-lisp:list
       (common-lisp:cons "searchResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plan-rates-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-savings-plans-offering-rates-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-savings-plans-offering-rates-request-"))
   (savings-plan-offering-ids common-lisp:nil :type
    (common-lisp:or uuids common-lisp:null))
   (savings-plan-payment-options common-lisp:nil :type
    (common-lisp:or savings-plan-payment-option-list common-lisp:null))
   (savings-plan-types common-lisp:nil :type
    (common-lisp:or savings-plan-type-list common-lisp:null))
   (products common-lisp:nil :type
    (common-lisp:or savings-plan-product-type-list common-lisp:null))
   (service-codes common-lisp:nil :type
    (common-lisp:or savings-plan-rate-service-code-list common-lisp:null))
   (usage-types common-lisp:nil :type
    (common-lisp:or savings-plan-rate-usage-type-list common-lisp:null))
   (operations common-lisp:nil :type
    (common-lisp:or savings-plan-rate-operation-list common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or savings-plan-offering-rate-filters-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-savings-plans-offering-rates-request
                    'make-describe-savings-plans-offering-rates-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-offering-rates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-offering-rates-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-plan-offering-ids))
      (common-lisp:list
       (common-lisp:cons "savingsPlanOfferingIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-plan-payment-options))
      (common-lisp:list
       (common-lisp:cons "savingsPlanPaymentOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-plan-types))
      (common-lisp:list
       (common-lisp:cons "savingsPlanTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'products))
      (common-lisp:list
       (common-lisp:cons "products"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-codes))
      (common-lisp:list
       (common-lisp:cons "serviceCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-types))
      (common-lisp:list
       (common-lisp:cons "usageTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-offering-rates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-savings-plans-offering-rates-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-savings-plans-offering-rates-response-"))
   (search-results common-lisp:nil :type
    (common-lisp:or savings-plan-offering-rates-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-savings-plans-offering-rates-response
                    'make-describe-savings-plans-offering-rates-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-offering-rates-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-offering-rates-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'search-results))
      (common-lisp:list
       (common-lisp:cons "searchResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-offering-rates-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-savings-plans-offerings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-savings-plans-offerings-request-"))
   (offering-ids common-lisp:nil :type (common-lisp:or uuids common-lisp:null))
   (payment-options common-lisp:nil :type
    (common-lisp:or savings-plan-payment-option-list common-lisp:null))
   (product-type common-lisp:nil :type
    (common-lisp:or savings-plan-product-type common-lisp:null))
   (plan-types common-lisp:nil :type
    (common-lisp:or savings-plan-type-list common-lisp:null))
   (durations common-lisp:nil :type
    (common-lisp:or durations-list common-lisp:null))
   (currencies common-lisp:nil :type
    (common-lisp:or currency-list common-lisp:null))
   (descriptions common-lisp:nil :type
    (common-lisp:or savings-plan-descriptions-list common-lisp:null))
   (service-codes common-lisp:nil :type
    (common-lisp:or savings-plan-service-code-list common-lisp:null))
   (usage-types common-lisp:nil :type
    (common-lisp:or savings-plan-usage-type-list common-lisp:null))
   (operations common-lisp:nil :type
    (common-lisp:or savings-plan-operation-list common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or savings-plan-offering-filters-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-savings-plans-offerings-request
                    'make-describe-savings-plans-offerings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-offerings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-offerings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offering-ids))
      (common-lisp:list
       (common-lisp:cons "offeringIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payment-options))
      (common-lisp:list
       (common-lisp:cons "paymentOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "productType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'plan-types))
      (common-lisp:list
       (common-lisp:cons "planTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'durations))
      (common-lisp:list
       (common-lisp:cons "durations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currencies))
      (common-lisp:list
       (common-lisp:cons "currencies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'descriptions))
      (common-lisp:list
       (common-lisp:cons "descriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-codes))
      (common-lisp:list
       (common-lisp:cons "serviceCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-types))
      (common-lisp:list
       (common-lisp:cons "usageTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-offerings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-savings-plans-offerings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-savings-plans-offerings-response-"))
   (search-results common-lisp:nil :type
    (common-lisp:or savings-plan-offerings-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-savings-plans-offerings-response
                    'make-describe-savings-plans-offerings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-offerings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-offerings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'search-results))
      (common-lisp:list
       (common-lisp:cons "searchResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-offerings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-savings-plans-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-savings-plans-request-"))
   (savings-plan-arns common-lisp:nil :type
    (common-lisp:or savings-plan-arn-list common-lisp:null))
   (savings-plan-ids common-lisp:nil :type
    (common-lisp:or savings-plan-id-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (states common-lisp:nil :type
    (common-lisp:or savings-plan-state-list common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or savings-plan-filter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-savings-plans-request
                    'make-describe-savings-plans-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-plan-arns))
      (common-lisp:list
       (common-lisp:cons "savingsPlanArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-plan-ids))
      (common-lisp:list
       (common-lisp:cons "savingsPlanIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'states))
      (common-lisp:list
       (common-lisp:cons "states"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-savings-plans-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-savings-plans-response-"))
   (savings-plans common-lisp:nil :type
    (common-lisp:or savings-plan-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-savings-plans-response
                    'make-describe-savings-plans-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-plans))
      (common-lisp:list
       (common-lisp:cons "savingsPlans"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-savings-plans-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype durations-list ()
   '(trivial-types:proper-list savings-plans-duration))
 (common-lisp:defun |make-durations-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list savings-plans-duration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ec2instance-family () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype filter-values-list ()
   '(trivial-types:proper-list json-safe-filter-value-string))
 (common-lisp:defun |make-filter-values-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            json-safe-filter-value-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (savingsplans-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype json-safe-filter-value-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype list-of-strings () '(trivial-types:proper-list string))
 (common-lisp:defun |make-list-of-strings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or savings-plan-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype page-size () 'common-lisp:integer)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (parent-savings-plan-offering (:copier common-lisp:nil)
      (:conc-name "struct-shape-parent-savings-plan-offering-"))
   (offering-id common-lisp:nil :type (common-lisp:or uuid common-lisp:null))
   (payment-option common-lisp:nil :type
    (common-lisp:or savings-plan-payment-option common-lisp:null))
   (plan-type common-lisp:nil :type
    (common-lisp:or savings-plan-type common-lisp:null))
   (duration-seconds common-lisp:nil :type
    (common-lisp:or savings-plans-duration common-lisp:null))
   (currency common-lisp:nil :type
    (common-lisp:or currency-code common-lisp:null))
   (plan-description common-lisp:nil :type
    (common-lisp:or savings-plan-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parent-savings-plan-offering
                    'make-parent-savings-plan-offering))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          parent-savings-plan-offering))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          parent-savings-plan-offering))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offering-id))
      (common-lisp:list
       (common-lisp:cons "offeringId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payment-option))
      (common-lisp:list
       (common-lisp:cons "paymentOption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'plan-type))
      (common-lisp:list
       (common-lisp:cons "planType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-seconds))
      (common-lisp:list
       (common-lisp:cons "durationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'plan-description))
      (common-lisp:list
       (common-lisp:cons "planDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          parent-savings-plan-offering))
   common-lisp:nil))
(common-lisp:deftype region () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (savingsplans-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (savings-plan (:copier common-lisp:nil)
      (:conc-name "struct-shape-savings-plan-"))
   (offering-id common-lisp:nil :type
    (common-lisp:or savings-plan-offering-id common-lisp:null))
   (savings-plan-id common-lisp:nil :type
    (common-lisp:or savings-plan-id common-lisp:null))
   (savings-plan-arn common-lisp:nil :type
    (common-lisp:or savings-plan-arn common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (start common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (end common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or savings-plan-state common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or region common-lisp:null))
   (ec2instance-family common-lisp:nil :type
    (common-lisp:or ec2instance-family common-lisp:null))
   (savings-plan-type common-lisp:nil :type
    (common-lisp:or savings-plan-type common-lisp:null))
   (payment-option common-lisp:nil :type
    (common-lisp:or savings-plan-payment-option common-lisp:null))
   (product-types common-lisp:nil :type
    (common-lisp:or savings-plan-product-type-list common-lisp:null))
   (currency common-lisp:nil :type
    (common-lisp:or currency-code common-lisp:null))
   (commitment common-lisp:nil :type (common-lisp:or amount common-lisp:null))
   (upfront-payment-amount common-lisp:nil :type
    (common-lisp:or amount common-lisp:null))
   (recurring-payment-amount common-lisp:nil :type
    (common-lisp:or amount common-lisp:null))
   (term-duration-in-seconds common-lisp:nil :type
    (common-lisp:or term-duration-in-seconds common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'savings-plan 'make-savings-plan))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input savings-plan))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input savings-plan))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offering-id))
      (common-lisp:list
       (common-lisp:cons "offeringId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-plan-id))
      (common-lisp:list
       (common-lisp:cons "savingsPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-plan-arn))
      (common-lisp:list
       (common-lisp:cons "savingsPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start))
      (common-lisp:list
       (common-lisp:cons "start"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end))
      (common-lisp:list
       (common-lisp:cons "end"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ec2instance-family))
      (common-lisp:list
       (common-lisp:cons "ec2InstanceFamily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-plan-type))
      (common-lisp:list
       (common-lisp:cons "savingsPlanType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payment-option))
      (common-lisp:list
       (common-lisp:cons "paymentOption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-types))
      (common-lisp:list
       (common-lisp:cons "productTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'commitment))
      (common-lisp:list
       (common-lisp:cons "commitment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'upfront-payment-amount))
      (common-lisp:list
       (common-lisp:cons "upfrontPaymentAmount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recurring-payment-amount))
      (common-lisp:list
       (common-lisp:cons "recurringPaymentAmount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'term-duration-in-seconds))
      (common-lisp:list
       (common-lisp:cons "termDurationInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input savings-plan))
   common-lisp:nil))
(common-lisp:deftype savings-plan-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-arn-list ()
   '(trivial-types:proper-list savings-plan-arn))
 (common-lisp:defun |make-savings-plan-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list savings-plan-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-descriptions-list ()
   '(trivial-types:proper-list savings-plan-description))
 (common-lisp:defun |make-savings-plan-descriptions-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (savings-plan-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-savings-plan-filter-"))
   (name common-lisp:nil :type
    (common-lisp:or savings-plans-filter-name common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or list-of-strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'savings-plan-filter 'make-savings-plan-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input savings-plan-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input savings-plan-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input savings-plan-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype savings-plan-filter-list ()
   '(trivial-types:proper-list savings-plan-filter))
 (common-lisp:defun |make-savings-plan-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list savings-plan-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-id-list ()
   '(trivial-types:proper-list savings-plan-id))
 (common-lisp:defun |make-savings-plan-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list savings-plan-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype savings-plan-list ()
   '(trivial-types:proper-list savings-plan))
 (common-lisp:defun |make-savings-plan-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list savings-plan))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (savings-plan-offering (:copier common-lisp:nil)
      (:conc-name "struct-shape-savings-plan-offering-"))
   (offering-id common-lisp:nil :type (common-lisp:or uuid common-lisp:null))
   (product-types common-lisp:nil :type
    (common-lisp:or savings-plan-product-type-list common-lisp:null))
   (plan-type common-lisp:nil :type
    (common-lisp:or savings-plan-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or savings-plan-description common-lisp:null))
   (payment-option common-lisp:nil :type
    (common-lisp:or savings-plan-payment-option common-lisp:null))
   (duration-seconds common-lisp:nil :type
    (common-lisp:or savings-plans-duration common-lisp:null))
   (currency common-lisp:nil :type
    (common-lisp:or currency-code common-lisp:null))
   (service-code common-lisp:nil :type
    (common-lisp:or savings-plan-service-code common-lisp:null))
   (usage-type common-lisp:nil :type
    (common-lisp:or savings-plan-usage-type common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or savings-plan-operation common-lisp:null))
   (properties common-lisp:nil :type
    (common-lisp:or savings-plan-offering-property-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'savings-plan-offering 'make-savings-plan-offering))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offering-id))
      (common-lisp:list
       (common-lisp:cons "offeringId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-types))
      (common-lisp:list
       (common-lisp:cons "productTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'plan-type))
      (common-lisp:list
       (common-lisp:cons "planType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payment-option))
      (common-lisp:list
       (common-lisp:cons "paymentOption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-seconds))
      (common-lisp:list
       (common-lisp:cons "durationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-code))
      (common-lisp:list
       (common-lisp:cons "serviceCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-type))
      (common-lisp:list
       (common-lisp:cons "usageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering))
   common-lisp:nil))
(common-lisp:deftype savings-plan-offering-filter-attribute ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (savings-plan-offering-filter-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-savings-plan-offering-filter-element-"))
   (name common-lisp:nil :type
    (common-lisp:or savings-plan-offering-filter-attribute common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or filter-values-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'savings-plan-offering-filter-element
                    'make-savings-plan-offering-filter-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-filter-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-filter-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-filter-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype savings-plan-offering-filters-list ()
   '(trivial-types:proper-list savings-plan-offering-filter-element))
 (common-lisp:defun |make-savings-plan-offering-filters-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-offering-filter-element))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-offering-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (savings-plan-offering-property (:copier common-lisp:nil)
      (:conc-name "struct-shape-savings-plan-offering-property-"))
   (name common-lisp:nil :type
    (common-lisp:or savings-plan-offering-property-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or json-safe-filter-value-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'savings-plan-offering-property
                    'make-savings-plan-offering-property))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-property))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-property))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-property))
   common-lisp:nil))
(common-lisp:deftype savings-plan-offering-property-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-offering-property-list ()
   '(trivial-types:proper-list savings-plan-offering-property))
 (common-lisp:defun |make-savings-plan-offering-property-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-offering-property))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (savings-plan-offering-rate (:copier common-lisp:nil)
      (:conc-name "struct-shape-savings-plan-offering-rate-"))
   (savings-plan-offering common-lisp:nil :type
    (common-lisp:or parent-savings-plan-offering common-lisp:null))
   (rate common-lisp:nil :type
    (common-lisp:or savings-plan-rate-price-per-unit common-lisp:null))
   (unit common-lisp:nil :type
    (common-lisp:or savings-plan-rate-unit common-lisp:null))
   (product-type common-lisp:nil :type
    (common-lisp:or savings-plan-product-type common-lisp:null))
   (service-code common-lisp:nil :type
    (common-lisp:or savings-plan-rate-service-code common-lisp:null))
   (usage-type common-lisp:nil :type
    (common-lisp:or savings-plan-rate-usage-type common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or savings-plan-rate-operation common-lisp:null))
   (properties common-lisp:nil :type
    (common-lisp:or savings-plan-offering-rate-property-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'savings-plan-offering-rate
                    'make-savings-plan-offering-rate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-rate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-rate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-plan-offering))
      (common-lisp:list
       (common-lisp:cons "savingsPlanOffering"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate))
      (common-lisp:list
       (common-lisp:cons "rate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "productType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-code))
      (common-lisp:list
       (common-lisp:cons "serviceCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-type))
      (common-lisp:list
       (common-lisp:cons "usageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-rate))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (savings-plan-offering-rate-filter-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-savings-plan-offering-rate-filter-element-"))
   (name common-lisp:nil :type
    (common-lisp:or savings-plan-rate-filter-attribute common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or filter-values-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'savings-plan-offering-rate-filter-element
                    'make-savings-plan-offering-rate-filter-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-rate-filter-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-rate-filter-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-rate-filter-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype savings-plan-offering-rate-filters-list ()
   '(trivial-types:proper-list savings-plan-offering-rate-filter-element))
 (common-lisp:defun |make-savings-plan-offering-rate-filters-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-offering-rate-filter-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (savings-plan-offering-rate-property (:copier common-lisp:nil)
      (:conc-name "struct-shape-savings-plan-offering-rate-property-"))
   (name common-lisp:nil :type
    (common-lisp:or json-safe-filter-value-string common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or json-safe-filter-value-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'savings-plan-offering-rate-property
                    'make-savings-plan-offering-rate-property))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-rate-property))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-rate-property))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-offering-rate-property))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype savings-plan-offering-rate-property-list ()
   '(trivial-types:proper-list savings-plan-offering-rate-property))
 (common-lisp:defun |make-savings-plan-offering-rate-property-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-offering-rate-property))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype savings-plan-offering-rates-list ()
   '(trivial-types:proper-list savings-plan-offering-rate))
 (common-lisp:defun |make-savings-plan-offering-rates-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-offering-rate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype savings-plan-offerings-list ()
   '(trivial-types:proper-list savings-plan-offering))
 (common-lisp:defun |make-savings-plan-offerings-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list savings-plan-offering))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-operation () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-operation-list ()
   '(trivial-types:proper-list savings-plan-operation))
 (common-lisp:defun |make-savings-plan-operation-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list savings-plan-operation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-payment-option () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-payment-option-list ()
   '(trivial-types:proper-list savings-plan-payment-option))
 (common-lisp:defun |make-savings-plan-payment-option-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-payment-option))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-product-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-product-type-list ()
   '(trivial-types:proper-list savings-plan-product-type))
 (common-lisp:defun |make-savings-plan-product-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-product-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (savings-plan-rate (:copier common-lisp:nil)
      (:conc-name "struct-shape-savings-plan-rate-"))
   (rate common-lisp:nil :type (common-lisp:or amount common-lisp:null))
   (currency common-lisp:nil :type
    (common-lisp:or currency-code common-lisp:null))
   (unit common-lisp:nil :type
    (common-lisp:or savings-plan-rate-unit common-lisp:null))
   (product-type common-lisp:nil :type
    (common-lisp:or savings-plan-product-type common-lisp:null))
   (service-code common-lisp:nil :type
    (common-lisp:or savings-plan-rate-service-code common-lisp:null))
   (usage-type common-lisp:nil :type
    (common-lisp:or savings-plan-rate-usage-type common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or savings-plan-rate-operation common-lisp:null))
   (properties common-lisp:nil :type
    (common-lisp:or savings-plan-rate-property-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'savings-plan-rate 'make-savings-plan-rate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input savings-plan-rate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input savings-plan-rate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate))
      (common-lisp:list
       (common-lisp:cons "rate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "productType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-code))
      (common-lisp:list
       (common-lisp:cons "serviceCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-type))
      (common-lisp:list
       (common-lisp:cons "usageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input savings-plan-rate))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (savings-plan-rate-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-savings-plan-rate-filter-"))
   (name common-lisp:nil :type
    (common-lisp:or savings-plan-rate-filter-name common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or list-of-strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'savings-plan-rate-filter 'make-savings-plan-rate-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-rate-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-rate-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-rate-filter))
   common-lisp:nil))
(common-lisp:deftype savings-plan-rate-filter-attribute () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-rate-filter-list ()
   '(trivial-types:proper-list savings-plan-rate-filter))
 (common-lisp:defun |make-savings-plan-rate-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-rate-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-rate-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-rate-list ()
   '(trivial-types:proper-list savings-plan-rate))
 (common-lisp:defun |make-savings-plan-rate-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list savings-plan-rate))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-rate-operation () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-rate-operation-list ()
   '(trivial-types:proper-list savings-plan-rate-operation))
 (common-lisp:defun |make-savings-plan-rate-operation-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-rate-operation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-rate-price-per-unit () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (savings-plan-rate-property (:copier common-lisp:nil)
      (:conc-name "struct-shape-savings-plan-rate-property-"))
   (name common-lisp:nil :type
    (common-lisp:or savings-plan-rate-property-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or json-safe-filter-value-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'savings-plan-rate-property
                    'make-savings-plan-rate-property))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-rate-property))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-rate-property))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          savings-plan-rate-property))
   common-lisp:nil))
(common-lisp:deftype savings-plan-rate-property-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-rate-property-list ()
   '(trivial-types:proper-list savings-plan-rate-property))
 (common-lisp:defun |make-savings-plan-rate-property-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-rate-property))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-rate-service-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-rate-service-code-list ()
   '(trivial-types:proper-list savings-plan-rate-service-code))
 (common-lisp:defun |make-savings-plan-rate-service-code-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-rate-service-code))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-rate-unit () 'common-lisp:string)
(common-lisp:deftype savings-plan-rate-usage-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-rate-usage-type-list ()
   '(trivial-types:proper-list savings-plan-rate-usage-type))
 (common-lisp:defun |make-savings-plan-rate-usage-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-rate-usage-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-service-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-service-code-list ()
   '(trivial-types:proper-list savings-plan-service-code))
 (common-lisp:defun |make-savings-plan-service-code-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            savings-plan-service-code))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-state-list ()
   '(trivial-types:proper-list savings-plan-state))
 (common-lisp:defun |make-savings-plan-state-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list savings-plan-state))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-type-list ()
   '(trivial-types:proper-list savings-plan-type))
 (common-lisp:defun |make-savings-plan-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list savings-plan-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plan-usage-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype savings-plan-usage-type-list ()
   '(trivial-types:proper-list savings-plan-usage-type))
 (common-lisp:defun |make-savings-plan-usage-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list savings-plan-usage-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype savings-plans-duration () 'common-lisp:integer)
(common-lisp:deftype savings-plans-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (savingsplans-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or savings-plan-arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype term-duration-in-seconds () 'common-lisp:integer)
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype uuids () '(trivial-types:proper-list uuid))
 (common-lisp:defun |make-uuids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list uuid))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or savings-plan-arn common-lisp:null))
   (tag-keys (common-lisp:error ":tagkeys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "tagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (savingsplans-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defun create-savings-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key savings-plan-offering-id commitment
                     upfront-payment-amount purchase-time client-token tags)
   (common-lisp:declare
    (common-lisp:ignorable savings-plan-offering-id commitment
     upfront-payment-amount purchase-time client-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-savings-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'savingsplans-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/CreateSavingsPlan"
                                                        "CreateSavingsPlan"
                                                        "2019-06-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-savings-plan))
(common-lisp:progn
 (common-lisp:defun delete-queued-savings-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key savings-plan-id)
   (common-lisp:declare (common-lisp:ignorable savings-plan-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-queued-savings-plan-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'savingsplans-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DeleteQueuedSavingsPlan"
                                                        "DeleteQueuedSavingsPlan"
                                                        "2019-06-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-queued-savings-plan))
(common-lisp:progn
 (common-lisp:defun describe-savings-plan-rates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key savings-plan-id filters next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable savings-plan-id filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-savings-plan-rates-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'savingsplans-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DescribeSavingsPlanRates"
                                                        "DescribeSavingsPlanRates"
                                                        "2019-06-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-savings-plan-rates))
(common-lisp:progn
 (common-lisp:defun describe-savings-plans
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key savings-plan-arns savings-plan-ids
                     next-token max-results states filters)
   (common-lisp:declare
    (common-lisp:ignorable savings-plan-arns savings-plan-ids next-token
     max-results states filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-savings-plans-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'savingsplans-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DescribeSavingsPlans"
                                                        "DescribeSavingsPlans"
                                                        "2019-06-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-savings-plans))
(common-lisp:progn
 (common-lisp:defun describe-savings-plans-offering-rates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key savings-plan-offering-ids
                     savings-plan-payment-options savings-plan-types products
                     service-codes usage-types operations filters next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable savings-plan-offering-ids
     savings-plan-payment-options savings-plan-types products service-codes
     usage-types operations filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-savings-plans-offering-rates-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'savingsplans-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DescribeSavingsPlansOfferingRates"
                                                        "DescribeSavingsPlansOfferingRates"
                                                        "2019-06-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-savings-plans-offering-rates))
(common-lisp:progn
 (common-lisp:defun describe-savings-plans-offerings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key offering-ids payment-options product-type
                     plan-types durations currencies descriptions service-codes
                     usage-types operations filters next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable offering-ids payment-options product-type plan-types
     durations currencies descriptions service-codes usage-types operations
     filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-savings-plans-offerings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'savingsplans-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DescribeSavingsPlansOfferings"
                                                        "DescribeSavingsPlansOfferings"
                                                        "2019-06-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-savings-plans-offerings))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'savingsplans-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ListTagsForResource"
                                                        "ListTagsForResource"
                                                        "2019-06-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'savingsplans-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/TagResource"
                                                        "TagResource"
                                                        "2019-06-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'savingsplans-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/UntagResource"
                                                        "UntagResource"
                                                        "2019-06-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
