;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/route53-recovery-readiness/api
  (:use)
  (:nicknames #:aws/route53-recovery-readiness)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/route53-recovery-readiness/api)
(common-lisp:progn
 (common-lisp:defclass route53-recovery-readiness-request
                       (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "route53-recovery-readiness"
                        :protocol :rest-json))
 (common-lisp:export 'route53-recovery-readiness-request))
(common-lisp:progn
 (common-lisp:define-condition route53-recovery-readiness-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'route53-recovery-readiness-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (route53-recovery-readiness-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (cell-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-cell-output-"))
   (cell-arn (common-lisp:error ":cell-arn is required") :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (cell-name (common-lisp:error ":cell-name is required") :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (cells (common-lisp:error ":cells is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (parent-readiness-scopes
    (common-lisp:error ":parent-readiness-scopes is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cell-output 'make-cell-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cell-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cell-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-arn))
      (common-lisp:list
       (common-lisp:cons "CellArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-name))
      (common-lisp:list
       (common-lisp:cons "CellName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-readiness-scopes))
      (common-lisp:list
       (common-lisp:cons "ParentReadinessScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cell-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (route53-recovery-readiness-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cell-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cell-request-"))
   (cell-name (common-lisp:error ":cell-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (cells common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cell-request 'make-create-cell-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-cell-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-cell-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-name))
      (common-lisp:list
       (common-lisp:cons "CellName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-cell-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cell-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cell-response-"))
   (cell-arn common-lisp:nil :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (cell-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (cells common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (parent-readiness-scopes common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cell-response 'make-create-cell-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-cell-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-cell-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-arn))
      (common-lisp:list
       (common-lisp:cons "CellArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-name))
      (common-lisp:list
       (common-lisp:cons "CellName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-readiness-scopes))
      (common-lisp:list
       (common-lisp:cons "ParentReadinessScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-cell-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cross-account-authorization-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cross-account-authorization-request-"))
   (cross-account-authorization
    (common-lisp:error ":cross-account-authorization is required") :type
    (common-lisp:or cross-account-authorization common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cross-account-authorization-request
                    'make-create-cross-account-authorization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cross-account-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cross-account-authorization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cross-account-authorization))
      (common-lisp:list
       (common-lisp:cons "CrossAccountAuthorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cross-account-authorization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cross-account-authorization-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cross-account-authorization-response-"))
   (cross-account-authorization common-lisp:nil :type
    (common-lisp:or cross-account-authorization common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cross-account-authorization-response
                    'make-create-cross-account-authorization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cross-account-authorization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cross-account-authorization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cross-account-authorization))
      (common-lisp:list
       (common-lisp:cons "CrossAccountAuthorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cross-account-authorization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-readiness-check-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-readiness-check-request-"))
   (readiness-check-name
    (common-lisp:error ":readiness-check-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-set-name (common-lisp:error ":resource-set-name is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-readiness-check-request
                    'make-create-readiness-check-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-readiness-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-readiness-check-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readiness-check-name))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-readiness-check-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-readiness-check-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-readiness-check-response-"))
   (readiness-check-arn common-lisp:nil :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (readiness-check-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (resource-set common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-readiness-check-response
                    'make-create-readiness-check-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-readiness-check-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-readiness-check-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-check-arn))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readiness-check-name))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set))
      (common-lisp:list
       (common-lisp:cons "ResourceSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-readiness-check-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-recovery-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-recovery-group-request-"))
   (cells common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (recovery-group-name (common-lisp:error ":recovery-group-name is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-recovery-group-request
                    'make-create-recovery-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-recovery-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-recovery-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-name))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-recovery-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-recovery-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-recovery-group-response-"))
   (cells common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (recovery-group-arn common-lisp:nil :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (recovery-group-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-recovery-group-response
                    'make-create-recovery-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-recovery-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-recovery-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-name))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-recovery-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-resource-set-request-"))
   (resource-set-name (common-lisp:error ":resource-set-name is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (resource-set-type (common-lisp:error ":resource-set-type is required")
    :type (common-lisp:or |__stringPatternAWSAZaZ09AZaZ09| common-lisp:null))
   (resources (common-lisp:error ":resources is required") :type
    (common-lisp:or |__listOfResource| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-set-request
                    'make-create-resource-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-type))
      (common-lisp:list
       (common-lisp:cons "ResourceSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-resource-set-response-"))
   (resource-set-arn common-lisp:nil :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (resource-set-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (resource-set-type common-lisp:nil :type
    (common-lisp:or |__stringPatternAWSAZaZ09AZaZ09| common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or |__listOfResource| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-set-response
                    'make-create-resource-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-type))
      (common-lisp:list
       (common-lisp:cons "ResourceSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-set-response))
   common-lisp:nil))
(common-lisp:deftype cross-account-authorization () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dnstarget-resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-dnstarget-resource-"))
   (domain-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (hosted-zone-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (record-set-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (record-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (target-resource common-lisp:nil :type
    (common-lisp:or target-resource common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dnstarget-resource 'make-dnstarget-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dnstarget-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dnstarget-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hosted-zone-arn))
      (common-lisp:list
       (common-lisp:cons "HostedZoneArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'record-set-id))
      (common-lisp:list
       (common-lisp:cons "RecordSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'record-type))
      (common-lisp:list
       (common-lisp:cons "RecordType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-resource))
      (common-lisp:list
       (common-lisp:cons "TargetResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dnstarget-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-cell-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-cell-request-"))
   (cell-name (common-lisp:error ":cell-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cell-request 'make-delete-cell-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-cell-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-cell-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-cell-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-cross-account-authorization-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-cross-account-authorization-request-"))
   (cross-account-authorization
    (common-lisp:error ":cross-account-authorization is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cross-account-authorization-request
                    'make-delete-cross-account-authorization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cross-account-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cross-account-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cross-account-authorization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-cross-account-authorization-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-cross-account-authorization-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-cross-account-authorization-response
                    'make-delete-cross-account-authorization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cross-account-authorization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cross-account-authorization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cross-account-authorization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-readiness-check-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-readiness-check-request-"))
   (readiness-check-name
    (common-lisp:error ":readiness-check-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-readiness-check-request
                    'make-delete-readiness-check-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-readiness-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-readiness-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-readiness-check-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-recovery-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-recovery-group-request-"))
   (recovery-group-name (common-lisp:error ":recovery-group-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-recovery-group-request
                    'make-delete-recovery-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-recovery-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-recovery-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-recovery-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-resource-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-resource-set-request-"))
   (resource-set-name (common-lisp:error ":resource-set-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-resource-set-request
                    'make-delete-resource-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-architecture-recommendations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-architecture-recommendations-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (recovery-group-name (common-lisp:error ":recovery-group-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-architecture-recommendations-request
                    'make-get-architecture-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-architecture-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-architecture-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-architecture-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-architecture-recommendations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-architecture-recommendations-response-"))
   (last-audit-timestamp common-lisp:nil :type
    (common-lisp:or last-audit-timestamp common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (recommendations common-lisp:nil :type
    (common-lisp:or |__listOfRecommendation| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-architecture-recommendations-response
                    'make-get-architecture-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-architecture-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-architecture-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-audit-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastAuditTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendations))
      (common-lisp:list
       (common-lisp:cons "Recommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-architecture-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-cell-readiness-summary-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-cell-readiness-summary-request-"))
   (cell-name (common-lisp:error ":cell-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-cell-readiness-summary-request
                    'make-get-cell-readiness-summary-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-cell-readiness-summary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-cell-readiness-summary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-cell-readiness-summary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-cell-readiness-summary-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-cell-readiness-summary-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (readiness common-lisp:nil :type
    (common-lisp:or readiness common-lisp:null))
   (readiness-checks common-lisp:nil :type
    (common-lisp:or |__listOfReadinessCheckSummary| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-cell-readiness-summary-response
                    'make-get-cell-readiness-summary-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-cell-readiness-summary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-cell-readiness-summary-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-checks))
      (common-lisp:list
       (common-lisp:cons "ReadinessChecks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-cell-readiness-summary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-cell-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-cell-request-"))
   (cell-name (common-lisp:error ":cell-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-cell-request 'make-get-cell-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-cell-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-cell-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-cell-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-cell-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-cell-response-"))
   (cell-arn common-lisp:nil :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (cell-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (cells common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (parent-readiness-scopes common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-cell-response 'make-get-cell-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-cell-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-cell-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-arn))
      (common-lisp:list
       (common-lisp:cons "CellArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-name))
      (common-lisp:list
       (common-lisp:cons "CellName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-readiness-scopes))
      (common-lisp:list
       (common-lisp:cons "ParentReadinessScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-cell-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-readiness-check-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-readiness-check-request-"))
   (readiness-check-name
    (common-lisp:error ":readiness-check-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-readiness-check-request
                    'make-get-readiness-check-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-readiness-check-resource-status-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-readiness-check-resource-status-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (readiness-check-name
    (common-lisp:error ":readiness-check-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-identifier (common-lisp:error ":resource-identifier is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-readiness-check-resource-status-request
                    'make-get-readiness-check-resource-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-resource-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-resource-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-resource-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-readiness-check-resource-status-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-readiness-check-resource-status-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (readiness common-lisp:nil :type
    (common-lisp:or readiness common-lisp:null))
   (rules common-lisp:nil :type
    (common-lisp:or |__listOfRuleResult| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-readiness-check-resource-status-response
                    'make-get-readiness-check-resource-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-resource-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-resource-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules))
      (common-lisp:list
       (common-lisp:cons "Rules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-resource-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-readiness-check-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-readiness-check-response-"))
   (readiness-check-arn common-lisp:nil :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (readiness-check-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (resource-set common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-readiness-check-response
                    'make-get-readiness-check-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-check-arn))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readiness-check-name))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set))
      (common-lisp:list
       (common-lisp:cons "ResourceSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-readiness-check-status-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-readiness-check-status-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (readiness-check-name
    (common-lisp:error ":readiness-check-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-readiness-check-status-request
                    'make-get-readiness-check-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-readiness-check-status-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-readiness-check-status-response-"))
   (messages common-lisp:nil :type
    (common-lisp:or |__listOfMessage| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (readiness common-lisp:nil :type
    (common-lisp:or readiness common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or |__listOfResourceResult| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-readiness-check-status-response
                    'make-get-readiness-check-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages))
      (common-lisp:list
       (common-lisp:cons "Messages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-recovery-group-readiness-summary-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-recovery-group-readiness-summary-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (recovery-group-name (common-lisp:error ":recovery-group-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-recovery-group-readiness-summary-request
                    'make-get-recovery-group-readiness-summary-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-readiness-summary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-readiness-summary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-readiness-summary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-recovery-group-readiness-summary-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-recovery-group-readiness-summary-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (readiness common-lisp:nil :type
    (common-lisp:or readiness common-lisp:null))
   (readiness-checks common-lisp:nil :type
    (common-lisp:or |__listOfReadinessCheckSummary| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-recovery-group-readiness-summary-response
                    'make-get-recovery-group-readiness-summary-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-readiness-summary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-readiness-summary-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-checks))
      (common-lisp:list
       (common-lisp:cons "ReadinessChecks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-readiness-summary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-recovery-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-recovery-group-request-"))
   (recovery-group-name (common-lisp:error ":recovery-group-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-recovery-group-request
                    'make-get-recovery-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-recovery-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-recovery-group-response-"))
   (cells common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (recovery-group-arn common-lisp:nil :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (recovery-group-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-recovery-group-response
                    'make-get-recovery-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-name))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-set-request-"))
   (resource-set-name (common-lisp:error ":resource-set-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-set-request 'make-get-resource-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-set-response-"))
   (resource-set-arn common-lisp:nil :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (resource-set-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (resource-set-type common-lisp:nil :type
    (common-lisp:or |__stringPatternAWSAZaZ09AZaZ09| common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or |__listOfResource| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-set-response
                    'make-get-resource-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-type))
      (common-lisp:list
       (common-lisp:cons "ResourceSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (route53-recovery-readiness-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype last-audit-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-cells-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-cells-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-cells-request 'make-list-cells-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-cells-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-cells-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-cells-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-cells-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-cells-response-"))
   (cells common-lisp:nil :type
    (common-lisp:or |__listOfCellOutput| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-cells-response 'make-list-cells-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-cells-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-cells-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-cells-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-cross-account-authorizations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-cross-account-authorizations-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-cross-account-authorizations-request
                    'make-list-cross-account-authorizations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-cross-account-authorizations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-cross-account-authorizations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-cross-account-authorizations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-cross-account-authorizations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-cross-account-authorizations-response-"))
   (cross-account-authorizations common-lisp:nil :type
    (common-lisp:or |__listOfCrossAccountAuthorization| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-cross-account-authorizations-response
                    'make-list-cross-account-authorizations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-cross-account-authorizations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-cross-account-authorizations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cross-account-authorizations))
      (common-lisp:list
       (common-lisp:cons "CrossAccountAuthorizations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-cross-account-authorizations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-readiness-checks-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-readiness-checks-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-readiness-checks-request
                    'make-list-readiness-checks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-readiness-checks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-readiness-checks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-readiness-checks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-readiness-checks-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-readiness-checks-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (readiness-checks common-lisp:nil :type
    (common-lisp:or |__listOfReadinessCheckOutput| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-readiness-checks-response
                    'make-list-readiness-checks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-readiness-checks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-readiness-checks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-checks))
      (common-lisp:list
       (common-lisp:cons "ReadinessChecks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-readiness-checks-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-recovery-groups-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-recovery-groups-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-recovery-groups-request
                    'make-list-recovery-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-recovery-groups-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-recovery-groups-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (recovery-groups common-lisp:nil :type
    (common-lisp:or |__listOfRecoveryGroupOutput| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-recovery-groups-response
                    'make-list-recovery-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-groups))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-sets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-resource-sets-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-sets-request
                    'make-list-resource-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-sets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-sets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-resource-sets-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-sets common-lisp:nil :type
    (common-lisp:or |__listOfResourceSetOutput| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-sets-response
                    'make-list-resource-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-sets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-sets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-sets))
      (common-lisp:list
       (common-lisp:cons "ResourceSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-sets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-rules-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-rules-output-"))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or |__stringMax64| common-lisp:null))
   (rule-description (common-lisp:error ":rule-description is required") :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (rule-id (common-lisp:error ":rule-id is required") :type
    (common-lisp:or |__stringMax64| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rules-output 'make-list-rules-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-rules-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-rules-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-description))
      (common-lisp:list
       (common-lisp:cons "RuleDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-id))
      (common-lisp:list
       (common-lisp:cons "RuleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-rules-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-rules-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-rules-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rules-request 'make-list-rules-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-rules-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-rules-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-rules-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (rules common-lisp:nil :type
    (common-lisp:or |__listOfListRulesOutput| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rules-response 'make-list-rules-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-rules-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-rules-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules))
      (common-lisp:list
       (common-lisp:cons "Rules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-rules-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resources-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resources-request
                    'make-list-tags-for-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resources-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resources-response-"))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resources-response
                    'make-list-tags-for-resources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resources-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (message (:copier common-lisp:nil) (:conc-name "struct-shape-message-"))
   (message-text common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-text))
      (common-lisp:list
       (common-lisp:cons "MessageText"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (nlbresource (:copier common-lisp:nil)
      (:conc-name "struct-shape-nlbresource-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'nlbresource 'make-nlbresource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input nlbresource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input nlbresource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input nlbresource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (r53resource-record (:copier common-lisp:nil)
      (:conc-name "struct-shape-r53resource-record-"))
   (domain-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (record-set-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'r53resource-record 'make-r53resource-record))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input r53resource-record))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input r53resource-record))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'record-set-id))
      (common-lisp:list
       (common-lisp:cons "RecordSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input r53resource-record))
   common-lisp:nil))
(common-lisp:deftype readiness () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (readiness-check-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-readiness-check-output-"))
   (readiness-check-arn (common-lisp:error ":readiness-check-arn is required")
    :type (common-lisp:or |__stringMax256| common-lisp:null))
   (readiness-check-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (resource-set (common-lisp:error ":resource-set is required") :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'readiness-check-output 'make-readiness-check-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          readiness-check-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          readiness-check-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-check-arn))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readiness-check-name))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set))
      (common-lisp:list
       (common-lisp:cons "ResourceSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          readiness-check-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (readiness-check-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-readiness-check-summary-"))
   (readiness common-lisp:nil :type
    (common-lisp:or readiness common-lisp:null))
   (readiness-check-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'readiness-check-summary 'make-readiness-check-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          readiness-check-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          readiness-check-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readiness-check-name))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          readiness-check-summary))
   common-lisp:nil))
(common-lisp:deftype readiness-check-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (recommendation (:copier common-lisp:nil)
      (:conc-name "struct-shape-recommendation-"))
   (recommendation-text (common-lisp:error ":recommendation-text is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'recommendation 'make-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendation-text))
      (common-lisp:list
       (common-lisp:cons "RecommendationText"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (recovery-group-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-recovery-group-output-"))
   (cells (common-lisp:error ":cells is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (recovery-group-arn (common-lisp:error ":recovery-group-arn is required")
    :type (common-lisp:or |__stringMax256| common-lisp:null))
   (recovery-group-name (common-lisp:error ":recovery-group-name is required")
    :type (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recovery-group-output 'make-recovery-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recovery-group-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recovery-group-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-name))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recovery-group-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (resource (:copier common-lisp:nil) (:conc-name "struct-shape-resource-"))
   (component-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (dns-target-resource common-lisp:nil :type
    (common-lisp:or dnstarget-resource common-lisp:null))
   (readiness-scopes common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (resource-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-id))
      (common-lisp:list
       (common-lisp:cons "ComponentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dns-target-resource))
      (common-lisp:list
       (common-lisp:cons "DnsTargetResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-scopes))
      (common-lisp:list
       (common-lisp:cons "ReadinessScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (route53-recovery-readiness-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-result-"))
   (component-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-checked-timestamp
    (common-lisp:error ":last-checked-timestamp is required") :type
    (common-lisp:or readiness-check-timestamp common-lisp:null))
   (readiness (common-lisp:error ":readiness is required") :type
    (common-lisp:or readiness common-lisp:null))
   (resource-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource-result 'make-resource-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-id))
      (common-lisp:list
       (common-lisp:cons "ComponentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-checked-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastCheckedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-set-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-set-output-"))
   (resource-set-arn (common-lisp:error ":resource-set-arn is required") :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (resource-set-name (common-lisp:error ":resource-set-name is required")
    :type (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (resource-set-type (common-lisp:error ":resource-set-type is required")
    :type (common-lisp:or |__stringPatternAWSAZaZ09AZaZ09| common-lisp:null))
   (resources (common-lisp:error ":resources is required") :type
    (common-lisp:or |__listOfResource| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-set-output 'make-resource-set-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-set-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-set-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-type))
      (common-lisp:list
       (common-lisp:cons "ResourceSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-set-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (rule-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-rule-result-"))
   (last-checked-timestamp
    (common-lisp:error ":last-checked-timestamp is required") :type
    (common-lisp:or readiness-check-timestamp common-lisp:null))
   (messages (common-lisp:error ":messages is required") :type
    (common-lisp:or |__listOfMessage| common-lisp:null))
   (readiness (common-lisp:error ":readiness is required") :type
    (common-lisp:or readiness common-lisp:null))
   (rule-id (common-lisp:error ":rule-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule-result 'make-rule-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-checked-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastCheckedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages))
      (common-lisp:list
       (common-lisp:cons "Messages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-id))
      (common-lisp:list
       (common-lisp:cons "RuleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tags () 'common-lisp:hash-table)
 (common-lisp:defun |make-tags| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (target-resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-target-resource-"))
   (nlbresource common-lisp:nil :type
    (common-lisp:or nlbresource common-lisp:null))
   (r53resource common-lisp:nil :type
    (common-lisp:or r53resource-record common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-resource 'make-target-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input target-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input target-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nlbresource))
      (common-lisp:list
       (common-lisp:cons "NLBResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'r53resource))
      (common-lisp:list
       (common-lisp:cons "R53Resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input target-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (route53-recovery-readiness-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-cell-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-cell-request-"))
   (cell-name (common-lisp:error ":cell-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (cells (common-lisp:error ":cells is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-cell-request 'make-update-cell-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-cell-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-cell-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-cell-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-cell-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-cell-response-"))
   (cell-arn common-lisp:nil :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (cell-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (cells common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (parent-readiness-scopes common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-cell-response 'make-update-cell-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-cell-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-cell-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-arn))
      (common-lisp:list
       (common-lisp:cons "CellArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-name))
      (common-lisp:list
       (common-lisp:cons "CellName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-readiness-scopes))
      (common-lisp:list
       (common-lisp:cons "ParentReadinessScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-cell-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-readiness-check-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-readiness-check-request-"))
   (readiness-check-name
    (common-lisp:error ":readiness-check-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-set-name (common-lisp:error ":resource-set-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-readiness-check-request
                    'make-update-readiness-check-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-readiness-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-readiness-check-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-readiness-check-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-readiness-check-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-readiness-check-response-"))
   (readiness-check-arn common-lisp:nil :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (readiness-check-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (resource-set common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-readiness-check-response
                    'make-update-readiness-check-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-readiness-check-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-readiness-check-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-check-arn))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readiness-check-name))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set))
      (common-lisp:list
       (common-lisp:cons "ResourceSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-readiness-check-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-recovery-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-recovery-group-request-"))
   (cells (common-lisp:error ":cells is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (recovery-group-name (common-lisp:error ":recovery-group-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-recovery-group-request
                    'make-update-recovery-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-recovery-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-recovery-group-response-"))
   (cells common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (recovery-group-arn common-lisp:nil :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (recovery-group-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-recovery-group-response
                    'make-update-recovery-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-name))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-resource-set-request-"))
   (resource-set-name (common-lisp:error ":resource-set-name is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (resource-set-type (common-lisp:error ":resource-set-type is required")
    :type (common-lisp:or |__stringPatternAWSAZaZ09AZaZ09| common-lisp:null))
   (resources (common-lisp:error ":resources is required") :type
    (common-lisp:or |__listOfResource| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-resource-set-request
                    'make-update-resource-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-type))
      (common-lisp:list
       (common-lisp:cons "ResourceSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-resource-set-response-"))
   (resource-set-arn common-lisp:nil :type
    (common-lisp:or |__stringMax256| common-lisp:null))
   (resource-set-name common-lisp:nil :type
    (common-lisp:or |__stringMax64PatternAAZAZ09Z| common-lisp:null))
   (resource-set-type common-lisp:nil :type
    (common-lisp:or |__stringPatternAWSAZaZ09AZaZ09| common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or |__listOfResource| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-resource-set-response
                    'make-update-resource-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-type))
      (common-lisp:list
       (common-lisp:cons "ResourceSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (route53-recovery-readiness-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:deftype |__listOfCellOutput| ()
   '(trivial-types:proper-list cell-output))
 (common-lisp:defun |make-__listofcelloutput|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cell-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfCrossAccountAuthorization| ()
   '(trivial-types:proper-list cross-account-authorization))
 (common-lisp:defun |make-__listofcrossaccountauthorization|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cross-account-authorization))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfListRulesOutput| ()
   '(trivial-types:proper-list list-rules-output))
 (common-lisp:defun |make-__listoflistrulesoutput|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list list-rules-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfMessage| ()
   '(trivial-types:proper-list message))
 (common-lisp:defun |make-__listofmessage|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list message))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfReadinessCheckOutput| ()
   '(trivial-types:proper-list readiness-check-output))
 (common-lisp:defun |make-__listofreadinesscheckoutput|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list readiness-check-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfReadinessCheckSummary| ()
   '(trivial-types:proper-list readiness-check-summary))
 (common-lisp:defun |make-__listofreadinesschecksummary|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list readiness-check-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfRecommendation| ()
   '(trivial-types:proper-list recommendation))
 (common-lisp:defun |make-__listofrecommendation|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfRecoveryGroupOutput| ()
   '(trivial-types:proper-list recovery-group-output))
 (common-lisp:defun |make-__listofrecoverygroupoutput|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recovery-group-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfResource| ()
   '(trivial-types:proper-list resource))
 (common-lisp:defun |make-__listofresource|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfResourceResult| ()
   '(trivial-types:proper-list resource-result))
 (common-lisp:defun |make-__listofresourceresult|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfResourceSetOutput| ()
   '(trivial-types:proper-list resource-set-output))
 (common-lisp:defun |make-__listofresourcesetoutput|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-set-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfRuleResult| ()
   '(trivial-types:proper-list rule-result))
 (common-lisp:defun |make-__listofruleresult|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun |make-__listof__string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__stringMax256| () 'common-lisp:string)
(common-lisp:deftype |__stringMax64| () 'common-lisp:string)
(common-lisp:deftype |__stringMax64PatternAAZAZ09Z| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternAWSAZaZ09AZaZ09| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-cell
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cell-name cells tags)
   (common-lisp:declare (common-lisp:ignorable cell-name cells tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-cell-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "POST" :rest-json "/cells" "CreateCell" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-cell))
(common-lisp:progn
 (common-lisp:defun create-cross-account-authorization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cross-account-authorization)
   (common-lisp:declare (common-lisp:ignorable cross-account-authorization))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-cross-account-authorization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "POST" :rest-json "/crossaccountauthorizations"
        "CreateCrossAccountAuthorization" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-cross-account-authorization))
(common-lisp:progn
 (common-lisp:defun create-readiness-check
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key readiness-check-name resource-set-name
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable readiness-check-name resource-set-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-readiness-check-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "POST" :rest-json "/readinesschecks" "CreateReadinessCheck"
        "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-readiness-check))
(common-lisp:progn
 (common-lisp:defun create-recovery-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cells recovery-group-name tags)
   (common-lisp:declare (common-lisp:ignorable cells recovery-group-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-recovery-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "POST" :rest-json "/recoverygroups" "CreateRecoveryGroup"
        "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-recovery-group))
(common-lisp:progn
 (common-lisp:defun create-resource-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-set-name resource-set-type
                     resources tags)
   (common-lisp:declare
    (common-lisp:ignorable resource-set-name resource-set-type resources tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-resource-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "POST" :rest-json "/resourcesets" "CreateResourceSet" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-resource-set))
(common-lisp:progn
 (common-lisp:defun delete-cell
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cell-name)
   (common-lisp:declare (common-lisp:ignorable cell-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-cell-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/cells/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'cell-name))))
        "DeleteCell" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-cell))
(common-lisp:progn
 (common-lisp:defun delete-cross-account-authorization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cross-account-authorization)
   (common-lisp:declare (common-lisp:ignorable cross-account-authorization))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-cross-account-authorization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/crossaccountauthorizations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'cross-account-authorization))))
        "DeleteCrossAccountAuthorization" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-cross-account-authorization))
(common-lisp:progn
 (common-lisp:defun delete-readiness-check
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key readiness-check-name)
   (common-lisp:declare (common-lisp:ignorable readiness-check-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-readiness-check-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/readinesschecks/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'readiness-check-name))))
        "DeleteReadinessCheck" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-readiness-check))
(common-lisp:progn
 (common-lisp:defun delete-recovery-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recovery-group-name)
   (common-lisp:declare (common-lisp:ignorable recovery-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-recovery-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/recoverygroups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'recovery-group-name))))
        "DeleteRecoveryGroup" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-recovery-group))
(common-lisp:progn
 (common-lisp:defun delete-resource-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-set-name)
   (common-lisp:declare (common-lisp:ignorable resource-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/resourcesets/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-set-name))))
        "DeleteResourceSet" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-resource-set))
(common-lisp:progn
 (common-lisp:defun get-architecture-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     recovery-group-name)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token recovery-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-architecture-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/recoverygroups/~A/architectureRecommendations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'recovery-group-name))))
        "GetArchitectureRecommendations" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-architecture-recommendations))
(common-lisp:progn
 (common-lisp:defun get-cell
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cell-name)
   (common-lisp:declare (common-lisp:ignorable cell-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-cell-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/cells/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'cell-name))))
        "GetCell" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-cell))
(common-lisp:progn
 (common-lisp:defun get-cell-readiness-summary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cell-name max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable cell-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-cell-readiness-summary-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/cellreadiness/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'cell-name))))
        "GetCellReadinessSummary" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-cell-readiness-summary))
(common-lisp:progn
 (common-lisp:defun get-readiness-check
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key readiness-check-name)
   (common-lisp:declare (common-lisp:ignorable readiness-check-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-readiness-check-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/readinesschecks/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'readiness-check-name))))
        "GetReadinessCheck" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-readiness-check))
(common-lisp:progn
 (common-lisp:defun get-readiness-check-resource-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     readiness-check-name resource-identifier)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token readiness-check-name
     resource-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-readiness-check-resource-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/readinesschecks/~A/resource/~A/status"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'readiness-check-name))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-identifier))))
        "GetReadinessCheckResourceStatus" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-readiness-check-resource-status))
(common-lisp:progn
 (common-lisp:defun get-readiness-check-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     readiness-check-name)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token readiness-check-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-readiness-check-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/readinesschecks/~A/status"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'readiness-check-name))))
        "GetReadinessCheckStatus" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-readiness-check-status))
(common-lisp:progn
 (common-lisp:defun get-recovery-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recovery-group-name)
   (common-lisp:declare (common-lisp:ignorable recovery-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-recovery-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/recoverygroups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'recovery-group-name))))
        "GetRecoveryGroup" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-recovery-group))
(common-lisp:progn
 (common-lisp:defun get-recovery-group-readiness-summary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     recovery-group-name)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token recovery-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-recovery-group-readiness-summary-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/recoverygroupreadiness/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'recovery-group-name))))
        "GetRecoveryGroupReadinessSummary" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-recovery-group-readiness-summary))
(common-lisp:progn
 (common-lisp:defun get-resource-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-set-name)
   (common-lisp:declare (common-lisp:ignorable resource-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/resourcesets/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-set-name))))
        "GetResourceSet" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-set))
(common-lisp:progn
 (common-lisp:defun list-cells
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-cells-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json "/cells" "ListCells" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-cells))
(common-lisp:progn
 (common-lisp:defun list-cross-account-authorizations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-cross-account-authorizations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json "/crossaccountauthorizations"
        "ListCrossAccountAuthorizations" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-cross-account-authorizations))
(common-lisp:progn
 (common-lisp:defun list-readiness-checks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-readiness-checks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json "/readinesschecks" "ListReadinessChecks"
        "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-readiness-checks))
(common-lisp:progn
 (common-lisp:defun list-recovery-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-recovery-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json "/recoverygroups" "ListRecoveryGroups" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-recovery-groups))
(common-lisp:progn
 (common-lisp:defun list-resource-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-resource-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json "/resourcesets" "ListResourceSets" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-resource-sets))
(common-lisp:progn
 (common-lisp:defun list-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token resource-type)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-rules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json "/rules" "ListRules" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-rules))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResources" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resources))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "POST" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-cell
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cell-name cells)
   (common-lisp:declare (common-lisp:ignorable cell-name cells))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-cell-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "PUT" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/cells/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'cell-name))))
        "UpdateCell" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-cell))
(common-lisp:progn
 (common-lisp:defun update-readiness-check
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key readiness-check-name resource-set-name)
   (common-lisp:declare
    (common-lisp:ignorable readiness-check-name resource-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-readiness-check-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "PUT" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/readinesschecks/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'readiness-check-name))))
        "UpdateReadinessCheck" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-readiness-check))
(common-lisp:progn
 (common-lisp:defun update-recovery-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cells recovery-group-name)
   (common-lisp:declare (common-lisp:ignorable cells recovery-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-recovery-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "PUT" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/recoverygroups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'recovery-group-name))))
        "UpdateRecoveryGroup" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-recovery-group))
(common-lisp:progn
 (common-lisp:defun update-resource-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-set-name resource-set-type
                     resources)
   (common-lisp:declare
    (common-lisp:ignorable resource-set-name resource-set-type resources))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-resource-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "PUT" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/resourcesets/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-set-name))))
        "UpdateResourceSet" "2019-12-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-resource-set))
