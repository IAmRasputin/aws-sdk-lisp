;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/chime-sdk-voice/api
  (:use)
  (:nicknames #:aws/chime-sdk-voice)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/chime-sdk-voice/api)
(common-lisp:progn
 (common-lisp:defclass chime-sdk-voice-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "chime-sdk-voice"))
 (common-lisp:export 'chime-sdk-voice-request))
(common-lisp:progn
 (common-lisp:define-condition chime-sdk-voice-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'chime-sdk-voice-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("ForbiddenException" . forbidden-exception)
    ("GoneException" . gone-exception)
    ("NotFoundException" . not-found-exception)
    ("ResourceLimitExceededException" . resource-limit-exceeded-exception)
    ("ServiceFailureException" . service-failure-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottledClientException" . throttled-client-exception)
    ("UnauthorizedClientException" . unauthorized-client-exception)
    ("UnprocessableEntityException" . unprocessable-entity-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'access-denied-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (address (:copier common-lisp:nil) (:conc-name "struct-shape-address-"))
   (street-name common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (street-suffix common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (post-directional common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (pre-directional common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (street-number common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (city common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (postal-code common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (postal-code-plus4 common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (country common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'address 'make-address))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input address))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input address))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-name))
      (common-lisp:list
       (common-lisp:cons "streetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-suffix))
      (common-lisp:list
       (common-lisp:cons "streetSuffix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'post-directional))
      (common-lisp:list
       (common-lisp:cons "postDirectional"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pre-directional))
      (common-lisp:list
       (common-lisp:cons "preDirectional"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-number))
      (common-lisp:list
       (common-lisp:cons "streetNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "city"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code))
      (common-lisp:list
       (common-lisp:cons "postalCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code-plus4))
      (common-lisp:list
       (common-lisp:cons "postalCodePlus4"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input address))
   common-lisp:nil))
(common-lisp:deftype alexa-skill-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype alexa-skill-id-list ()
   '(trivial-types:proper-list alexa-skill-id))
 (common-lisp:defun |make-alexa-skill-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alexa-skill-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype alexa-skill-status () 'common-lisp:string)
(common-lisp:deftype alpha2country-code () 'common-lisp:string)
(common-lisp:deftype area-code () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (associate-phone-numbers-with-voice-connector-group-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-phone-numbers-with-voice-connector-group-request-"))
   (voice-connector-group-id
    (common-lisp:error ":voice-connector-group-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (e164phone-numbers (common-lisp:error ":e164phone-numbers is required")
    :type (common-lisp:or e164phone-number-list common-lisp:null))
   (force-associate common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-phone-numbers-with-voice-connector-group-request
                    'make-associate-phone-numbers-with-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force-associate))
      (common-lisp:list
       (common-lisp:cons "ForceAssociate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-phone-numbers-with-voice-connector-group-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-phone-numbers-with-voice-connector-group-response-"))
   (phone-number-errors common-lisp:nil :type
    (common-lisp:or phone-number-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'associate-phone-numbers-with-voice-connector-group-response
   'make-associate-phone-numbers-with-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-phone-numbers-with-voice-connector-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-phone-numbers-with-voice-connector-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null))
   (e164phone-numbers (common-lisp:error ":e164phone-numbers is required")
    :type (common-lisp:or e164phone-number-list common-lisp:null))
   (force-associate common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-phone-numbers-with-voice-connector-request
                    'make-associate-phone-numbers-with-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force-associate))
      (common-lisp:list
       (common-lisp:cons "ForceAssociate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-phone-numbers-with-voice-connector-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-phone-numbers-with-voice-connector-response-"))
   (phone-number-errors common-lisp:nil :type
    (common-lisp:or phone-number-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-phone-numbers-with-voice-connector-response
                    'make-associate-phone-numbers-with-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'bad-request-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-delete-phone-number-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-delete-phone-number-request-"))
   (phone-number-ids (common-lisp:error ":phone-number-ids is required") :type
    (common-lisp:or non-empty-string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-delete-phone-number-request
                    'make-batch-delete-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-ids))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-delete-phone-number-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-delete-phone-number-response-"))
   (phone-number-errors common-lisp:nil :type
    (common-lisp:or phone-number-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-delete-phone-number-response
                    'make-batch-delete-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-update-phone-number-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-update-phone-number-request-"))
   (update-phone-number-request-items
    (common-lisp:error ":update-phone-number-request-items is required") :type
    (common-lisp:or update-phone-number-request-item-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-update-phone-number-request
                    'make-batch-update-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-phone-number-request-items))
      (common-lisp:list
       (common-lisp:cons "UpdatePhoneNumberRequestItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-update-phone-number-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-update-phone-number-response-"))
   (phone-number-errors common-lisp:nil :type
    (common-lisp:or phone-number-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-update-phone-number-response
                    'make-batch-update-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-response))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (call-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-call-details-"))
   (voice-connector-id common-lisp:nil :type
    (common-lisp:or non-empty-string128 common-lisp:null))
   (transaction-id common-lisp:nil :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (is-caller common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'call-details 'make-call-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input call-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input call-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transaction-id))
      (common-lisp:list
       (common-lisp:cons "TransactionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-caller))
      (common-lisp:list
       (common-lisp:cons "IsCaller"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input call-details))
   common-lisp:nil))
(common-lisp:deftype calling-name () 'common-lisp:string)
(common-lisp:deftype calling-name-status () 'common-lisp:string)
(common-lisp:deftype calling-region () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype calling-region-list ()
   '(trivial-types:proper-list calling-region))
 (common-lisp:defun |make-calling-region-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list calling-region))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (candidate-address (:copier common-lisp:nil)
      (:conc-name "struct-shape-candidate-address-"))
   (street-info common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (street-number common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (city common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (postal-code common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (postal-code-plus4 common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (country common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'candidate-address 'make-candidate-address))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input candidate-address))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input candidate-address))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-info))
      (common-lisp:list
       (common-lisp:cons "streetInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-number))
      (common-lisp:list
       (common-lisp:cons "streetNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "city"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code))
      (common-lisp:list
       (common-lisp:cons "postalCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code-plus4))
      (common-lisp:list
       (common-lisp:cons "postalCodePlus4"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input candidate-address))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype candidate-address-list ()
   '(trivial-types:proper-list candidate-address))
 (common-lisp:defun |make-candidate-address-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list candidate-address))
   aws-sdk/generator/shape::members))
(common-lisp:deftype capability () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype capability-list ()
   '(trivial-types:proper-list capability))
 (common-lisp:defun |make-capability-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list capability))
   aws-sdk/generator/shape::members))
(common-lisp:deftype client-request-id () 'common-lisp:string)
(common-lisp:deftype confidence-score () 'common-lisp:single-float)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'conflict-exception)))
(common-lisp:deftype country () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype country-list () '(trivial-types:proper-list country))
 (common-lisp:defun |make-country-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list country))
   aws-sdk/generator/shape::members))
(common-lisp:deftype cps-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (create-phone-number-order-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-phone-number-order-request-"))
   (product-type (common-lisp:error ":product-type is required") :type
    (common-lisp:or phone-number-product-type common-lisp:null))
   (e164phone-numbers (common-lisp:error ":e164phone-numbers is required")
    :type (common-lisp:or e164phone-number-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-phone-number-order-request
                    'make-create-phone-number-order-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-phone-number-order-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-phone-number-order-response-"))
   (phone-number-order common-lisp:nil :type
    (common-lisp:or phone-number-order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-phone-number-order-response
                    'make-create-phone-number-order-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-order))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-proxy-session-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-proxy-session-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null))
   (participant-phone-numbers
    (common-lisp:error ":participant-phone-numbers is required") :type
    (common-lisp:or participant-phone-number-list common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or proxy-session-name-string common-lisp:null))
   (expiry-minutes common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (capabilities (common-lisp:error ":capabilities is required") :type
    (common-lisp:or capability-list common-lisp:null))
   (number-selection-behavior common-lisp:nil :type
    (common-lisp:or number-selection-behavior common-lisp:null))
   (geo-match-level common-lisp:nil :type
    (common-lisp:or geo-match-level common-lisp:null))
   (geo-match-params common-lisp:nil :type
    (common-lisp:or geo-match-params common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-proxy-session-request
                    'make-create-proxy-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'participant-phone-numbers))
      (common-lisp:list
       (common-lisp:cons "ParticipantPhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "ExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "Capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-selection-behavior))
      (common-lisp:list
       (common-lisp:cons "NumberSelectionBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-match-level))
      (common-lisp:list
       (common-lisp:cons "GeoMatchLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-match-params))
      (common-lisp:list
       (common-lisp:cons "GeoMatchParams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-proxy-session-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-proxy-session-response-"))
   (proxy-session common-lisp:nil :type
    (common-lisp:or proxy-session common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-proxy-session-response
                    'make-create-proxy-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-session))
      (common-lisp:list
       (common-lisp:cons "ProxySession"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-sip-media-application-call-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-sip-media-application-call-request-"))
   (from-phone-number (common-lisp:error ":from-phone-number is required")
    :type (common-lisp:or e164phone-number common-lisp:null))
   (to-phone-number (common-lisp:error ":to-phone-number is required") :type
    (common-lisp:or e164phone-number common-lisp:null))
   (sip-media-application-id
    (common-lisp:error ":sip-media-application-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (sip-headers common-lisp:nil :type
    (common-lisp:or sip-headers-map common-lisp:null))
   (arguments-map common-lisp:nil :type
    (common-lisp:or smacreate-call-arguments-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-sip-media-application-call-request
                    'make-create-sip-media-application-call-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-phone-number))
      (common-lisp:list
       (common-lisp:cons "FromPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-phone-number))
      (common-lisp:list
       (common-lisp:cons "ToPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-headers))
      (common-lisp:list
       (common-lisp:cons "SipHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arguments-map))
      (common-lisp:list
       (common-lisp:cons "ArgumentsMap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-sip-media-application-call-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-sip-media-application-call-response-"))
   (sip-media-application-call common-lisp:nil :type
    (common-lisp:or sip-media-application-call common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-sip-media-application-call-response
                    'make-create-sip-media-application-call-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-call))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationCall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-sip-media-application-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-sip-media-application-request-"))
   (aws-region (common-lisp:error ":aws-region is required") :type
    (common-lisp:or string common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or sip-media-application-name common-lisp:null))
   (endpoints (common-lisp:error ":endpoints is required") :type
    (common-lisp:or sip-media-application-endpoint-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-sip-media-application-request
                    'make-create-sip-media-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-sip-media-application-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-sip-media-application-response-"))
   (sip-media-application common-lisp:nil :type
    (common-lisp:or sip-media-application common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-sip-media-application-response
                    'make-create-sip-media-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-sip-rule-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-sip-rule-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or sip-rule-name common-lisp:null))
   (trigger-type (common-lisp:error ":trigger-type is required") :type
    (common-lisp:or sip-rule-trigger-type common-lisp:null))
   (trigger-value (common-lisp:error ":trigger-value is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (disabled common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null))
   (target-applications common-lisp:nil :type
    (common-lisp:or sip-rule-target-application-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-sip-rule-request 'make-create-sip-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-type))
      (common-lisp:list
       (common-lisp:cons "TriggerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-value))
      (common-lisp:list
       (common-lisp:cons "TriggerValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-applications))
      (common-lisp:list
       (common-lisp:cons "TargetApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-sip-rule-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-sip-rule-response-"))
   (sip-rule common-lisp:nil :type (common-lisp:or sip-rule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-sip-rule-response 'make-create-sip-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rule))
      (common-lisp:list
       (common-lisp:cons "SipRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-voice-connector-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-voice-connector-group-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or voice-connector-group-name common-lisp:null))
   (voice-connector-items common-lisp:nil :type
    (common-lisp:or voice-connector-item-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-voice-connector-group-request
                    'make-create-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-items))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-voice-connector-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-voice-connector-group-response-"))
   (voice-connector-group common-lisp:nil :type
    (common-lisp:or voice-connector-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-voice-connector-group-response
                    'make-create-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-voice-connector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-voice-connector-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or voice-connector-name common-lisp:null))
   (aws-region common-lisp:nil :type
    (common-lisp:or voice-connector-aws-region common-lisp:null))
   (require-encryption (common-lisp:error ":require-encryption is required")
    :type (common-lisp:or boolean common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-voice-connector-request
                    'make-create-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-encryption))
      (common-lisp:list
       (common-lisp:cons "RequireEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-voice-connector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-voice-connector-response-"))
   (voice-connector common-lisp:nil :type
    (common-lisp:or voice-connector common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-voice-connector-response
                    'make-create-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-voice-profile-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-voice-profile-domain-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or voice-profile-domain-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or voice-profile-domain-description common-lisp:null))
   (server-side-encryption-configuration
    (common-lisp:error ":server-side-encryption-configuration is required")
    :type
    (common-lisp:or server-side-encryption-configuration common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-id common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-voice-profile-domain-request
                    'make-create-voice-profile-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-side-encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerSideEncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-voice-profile-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-voice-profile-domain-response-"))
   (voice-profile-domain common-lisp:nil :type
    (common-lisp:or voice-profile-domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-voice-profile-domain-response
                    'make-create-voice-profile-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-voice-profile-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-voice-profile-request-"))
   (speaker-search-task-id
    (common-lisp:error ":speaker-search-task-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-voice-profile-request
                    'make-create-voice-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'speaker-search-task-id))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchTaskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-voice-profile-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-voice-profile-response-"))
   (voice-profile common-lisp:nil :type
    (common-lisp:or voice-profile common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-voice-profile-response
                    'make-create-voice-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile))
      (common-lisp:list
       (common-lisp:cons "VoiceProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (credential (:copier common-lisp:nil)
      (:conc-name "struct-shape-credential-"))
   (username common-lisp:nil :type
    (common-lisp:or sensitive-string common-lisp:null))
   (password common-lisp:nil :type
    (common-lisp:or sensitive-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'credential 'make-credential))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input credential))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input credential))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input credential))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype credential-list ()
   '(trivial-types:proper-list credential))
 (common-lisp:defun |make-credential-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list credential))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (dnisemergency-calling-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-dnisemergency-calling-configuration-"))
   (emergency-phone-number
    (common-lisp:error ":emergency-phone-number is required") :type
    (common-lisp:or e164phone-number common-lisp:null))
   (test-phone-number common-lisp:nil :type
    (common-lisp:or e164phone-number common-lisp:null))
   (calling-country (common-lisp:error ":calling-country is required") :type
    (common-lisp:or alpha2country-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dnisemergency-calling-configuration
                    'make-dnisemergency-calling-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dnisemergency-calling-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dnisemergency-calling-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-phone-number))
      (common-lisp:list
       (common-lisp:cons "EmergencyPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-phone-number))
      (common-lisp:list
       (common-lisp:cons "TestPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-country))
      (common-lisp:list
       (common-lisp:cons "CallingCountry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dnisemergency-calling-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dnisemergency-calling-configuration-list ()
   '(trivial-types:proper-list dnisemergency-calling-configuration))
 (common-lisp:defun |make-dnisemergency-calling-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            dnisemergency-calling-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype data-retention-in-hours () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-phone-number-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-phone-number-request-"))
   (phone-number-id (common-lisp:error ":phone-number-id is required") :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-phone-number-request
                    'make-delete-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-proxy-session-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-proxy-session-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null))
   (proxy-session-id (common-lisp:error ":proxy-session-id is required") :type
    (common-lisp:or non-empty-string128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-proxy-session-request
                    'make-delete-proxy-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-proxy-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-sip-media-application-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-sip-media-application-request-"))
   (sip-media-application-id
    (common-lisp:error ":sip-media-application-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-sip-media-application-request
                    'make-delete-sip-media-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-media-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-sip-rule-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-sip-rule-request-"))
   (sip-rule-id (common-lisp:error ":sip-rule-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-sip-rule-request 'make-delete-sip-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-voice-connector-emergency-calling-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-voice-connector-emergency-calling-configuration-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'delete-voice-connector-emergency-calling-configuration-request
   'make-delete-voice-connector-emergency-calling-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-emergency-calling-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-voice-connector-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-voice-connector-group-request-"))
   (voice-connector-group-id
    (common-lisp:error ":voice-connector-group-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-group-request
                    'make-delete-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-voice-connector-origination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-voice-connector-origination-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-origination-request
                    'make-delete-voice-connector-origination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-origination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-voice-connector-proxy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-voice-connector-proxy-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-proxy-request
                    'make-delete-voice-connector-proxy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-proxy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-voice-connector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-voice-connector-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-request
                    'make-delete-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-voice-connector-streaming-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-voice-connector-streaming-configuration-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-streaming-configuration-request
                    'make-delete-voice-connector-streaming-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-streaming-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-voice-connector-termination-credentials-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-voice-connector-termination-credentials-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null))
   (usernames (common-lisp:error ":usernames is required") :type
    (common-lisp:or sensitive-string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-termination-credentials-request
                    'make-delete-voice-connector-termination-credentials-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-credentials-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usernames))
      (common-lisp:list
       (common-lisp:cons "Usernames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-voice-connector-termination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-voice-connector-termination-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-termination-request
                    'make-delete-voice-connector-termination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-voice-profile-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-voice-profile-domain-request-"))
   (voice-profile-domain-id
    (common-lisp:error ":voice-profile-domain-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-voice-profile-domain-request
                    'make-delete-voice-profile-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-profile-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-profile-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-profile-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-voice-profile-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-voice-profile-request-"))
   (voice-profile-id (common-lisp:error ":voice-profile-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-voice-profile-request
                    'make-delete-voice-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-phone-numbers-from-voice-connector-group-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-phone-numbers-from-voice-connector-group-request-"))
   (voice-connector-group-id
    (common-lisp:error ":voice-connector-group-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (e164phone-numbers (common-lisp:error ":e164phone-numbers is required")
    :type (common-lisp:or e164phone-number-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'disassociate-phone-numbers-from-voice-connector-group-request
   'make-disassociate-phone-numbers-from-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-phone-numbers-from-voice-connector-group-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-phone-numbers-from-voice-connector-group-response-"))
   (phone-number-errors common-lisp:nil :type
    (common-lisp:or phone-number-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'disassociate-phone-numbers-from-voice-connector-group-response
   'make-disassociate-phone-numbers-from-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-phone-numbers-from-voice-connector-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-phone-numbers-from-voice-connector-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null))
   (e164phone-numbers (common-lisp:error ":e164phone-numbers is required")
    :type (common-lisp:or e164phone-number-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-phone-numbers-from-voice-connector-request
                    'make-disassociate-phone-numbers-from-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-phone-numbers-from-voice-connector-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-phone-numbers-from-voice-connector-response-"))
   (phone-number-errors common-lisp:nil :type
    (common-lisp:or phone-number-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-phone-numbers-from-voice-connector-response
                    'make-disassociate-phone-numbers-from-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-response))
   common-lisp:nil))
(common-lisp:deftype e164phone-number () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype e164phone-number-list ()
   '(trivial-types:proper-list e164phone-number))
 (common-lisp:defun |make-e164phone-number-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list e164phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (emergency-calling-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-emergency-calling-configuration-"))
   (dnis common-lisp:nil :type
    (common-lisp:or dnisemergency-calling-configuration-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'emergency-calling-configuration
                    'make-emergency-calling-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          emergency-calling-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          emergency-calling-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dnis))
      (common-lisp:list
       (common-lisp:cons "DNIS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          emergency-calling-configuration))
   common-lisp:nil))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'forbidden-exception)))
(common-lisp:deftype function-arn () 'common-lisp:string)
(common-lisp:deftype geo-match-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (geo-match-params (:copier common-lisp:nil)
      (:conc-name "struct-shape-geo-match-params-"))
   (country (common-lisp:error ":country is required") :type
    (common-lisp:or country common-lisp:null))
   (area-code (common-lisp:error ":area-code is required") :type
    (common-lisp:or area-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'geo-match-params 'make-geo-match-params))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input geo-match-params))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input geo-match-params))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'area-code))
      (common-lisp:list
       (common-lisp:cons "AreaCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input geo-match-params))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-global-settings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-global-settings-response-"))
   (voice-connector common-lisp:nil :type
    (common-lisp:or voice-connector-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-global-settings-response
                    'make-get-global-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-global-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-global-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-global-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-phone-number-order-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-phone-number-order-request-"))
   (phone-number-order-id
    (common-lisp:error ":phone-number-order-id is required") :type
    (common-lisp:or guid-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-order-request
                    'make-get-phone-number-order-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-phone-number-order-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-phone-number-order-response-"))
   (phone-number-order common-lisp:nil :type
    (common-lisp:or phone-number-order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-order-response
                    'make-get-phone-number-order-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-order))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-phone-number-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-phone-number-request-"))
   (phone-number-id (common-lisp:error ":phone-number-id is required") :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-request 'make-get-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-phone-number-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-phone-number-response-"))
   (phone-number common-lisp:nil :type
    (common-lisp:or phone-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-response
                    'make-get-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-phone-number-settings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-phone-number-settings-response-"))
   (calling-name common-lisp:nil :type
    (common-lisp:or calling-name common-lisp:null))
   (calling-name-updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-settings-response
                    'make-get-phone-number-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'calling-name-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "CallingNameUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-proxy-session-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-proxy-session-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null))
   (proxy-session-id (common-lisp:error ":proxy-session-id is required") :type
    (common-lisp:or non-empty-string128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-proxy-session-request
                    'make-get-proxy-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-proxy-session-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-proxy-session-response-"))
   (proxy-session common-lisp:nil :type
    (common-lisp:or proxy-session common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-proxy-session-response
                    'make-get-proxy-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-session))
      (common-lisp:list
       (common-lisp:cons "ProxySession"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sip-media-application-alexa-skill-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-sip-media-application-alexa-skill-configuration-request-"))
   (sip-media-application-id
    (common-lisp:error ":sip-media-application-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'get-sip-media-application-alexa-skill-configuration-request
   'make-get-sip-media-application-alexa-skill-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-alexa-skill-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-alexa-skill-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-alexa-skill-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sip-media-application-alexa-skill-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-sip-media-application-alexa-skill-configuration-response-"))
   (sip-media-application-alexa-skill-configuration common-lisp:nil :type
    (common-lisp:or sip-media-application-alexa-skill-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'get-sip-media-application-alexa-skill-configuration-response
   'make-get-sip-media-application-alexa-skill-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-alexa-skill-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-alexa-skill-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-alexa-skill-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationAlexaSkillConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-alexa-skill-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sip-media-application-logging-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-sip-media-application-logging-configuration-request-"))
   (sip-media-application-id
    (common-lisp:error ":sip-media-application-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sip-media-application-logging-configuration-request
                    'make-get-sip-media-application-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sip-media-application-logging-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-sip-media-application-logging-configuration-response-"))
   (sip-media-application-logging-configuration common-lisp:nil :type
    (common-lisp:or sip-media-application-logging-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sip-media-application-logging-configuration-response
                    'make-get-sip-media-application-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-logging-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationLoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sip-media-application-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-sip-media-application-request-"))
   (sip-media-application-id
    (common-lisp:error ":sip-media-application-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sip-media-application-request
                    'make-get-sip-media-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sip-media-application-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-sip-media-application-response-"))
   (sip-media-application common-lisp:nil :type
    (common-lisp:or sip-media-application common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sip-media-application-response
                    'make-get-sip-media-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sip-rule-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-sip-rule-request-"))
   (sip-rule-id (common-lisp:error ":sip-rule-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sip-rule-request 'make-get-sip-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-sip-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sip-rule-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-sip-rule-response-"))
   (sip-rule common-lisp:nil :type (common-lisp:or sip-rule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sip-rule-response 'make-get-sip-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rule))
      (common-lisp:list
       (common-lisp:cons "SipRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-speaker-search-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-speaker-search-task-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null))
   (speaker-search-task-id
    (common-lisp:error ":speaker-search-task-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-speaker-search-task-request
                    'make-get-speaker-search-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-speaker-search-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-speaker-search-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-speaker-search-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-speaker-search-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-speaker-search-task-response-"))
   (speaker-search-task common-lisp:nil :type
    (common-lisp:or speaker-search-task common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-speaker-search-task-response
                    'make-get-speaker-search-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-speaker-search-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-speaker-search-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speaker-search-task))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchTask"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-speaker-search-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-emergency-calling-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-voice-connector-emergency-calling-configuration-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'get-voice-connector-emergency-calling-configuration-request
   'make-get-voice-connector-emergency-calling-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-emergency-calling-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-voice-connector-emergency-calling-configuration-response-"))
   (emergency-calling-configuration common-lisp:nil :type
    (common-lisp:or emergency-calling-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'get-voice-connector-emergency-calling-configuration-response
   'make-get-voice-connector-emergency-calling-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-calling-configuration))
      (common-lisp:list
       (common-lisp:cons "EmergencyCallingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-connector-group-request-"))
   (voice-connector-group-id
    (common-lisp:error ":voice-connector-group-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-group-request
                    'make-get-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-connector-group-response-"))
   (voice-connector-group common-lisp:nil :type
    (common-lisp:or voice-connector-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-group-response
                    'make-get-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-logging-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-voice-connector-logging-configuration-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-logging-configuration-request
                    'make-get-voice-connector-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-logging-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-voice-connector-logging-configuration-response-"))
   (logging-configuration common-lisp:nil :type
    (common-lisp:or logging-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-logging-configuration-response
                    'make-get-voice-connector-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logging-configuration))
      (common-lisp:list
       (common-lisp:cons "LoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-origination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-connector-origination-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-origination-request
                    'make-get-voice-connector-origination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-origination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-connector-origination-response-"))
   (origination common-lisp:nil :type
    (common-lisp:or origination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-origination-response
                    'make-get-voice-connector-origination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-proxy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-connector-proxy-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-proxy-request
                    'make-get-voice-connector-proxy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-proxy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-connector-proxy-response-"))
   (proxy common-lisp:nil :type (common-lisp:or proxy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-proxy-response
                    'make-get-voice-connector-proxy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy))
      (common-lisp:list
       (common-lisp:cons "Proxy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-connector-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-request
                    'make-get-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-connector-response-"))
   (voice-connector common-lisp:nil :type
    (common-lisp:or voice-connector common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-response
                    'make-get-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-streaming-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-voice-connector-streaming-configuration-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-streaming-configuration-request
                    'make-get-voice-connector-streaming-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-streaming-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-voice-connector-streaming-configuration-response-"))
   (streaming-configuration common-lisp:nil :type
    (common-lisp:or streaming-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-streaming-configuration-response
                    'make-get-voice-connector-streaming-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-configuration))
      (common-lisp:list
       (common-lisp:cons "StreamingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-termination-health-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-voice-connector-termination-health-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-termination-health-request
                    'make-get-voice-connector-termination-health-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-termination-health-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-voice-connector-termination-health-response-"))
   (termination-health common-lisp:nil :type
    (common-lisp:or termination-health common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-termination-health-response
                    'make-get-voice-connector-termination-health-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'termination-health))
      (common-lisp:list
       (common-lisp:cons "TerminationHealth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-termination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-connector-termination-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-termination-request
                    'make-get-voice-connector-termination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-connector-termination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-connector-termination-response-"))
   (termination common-lisp:nil :type
    (common-lisp:or termination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-termination-response
                    'make-get-voice-connector-termination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'termination))
      (common-lisp:list
       (common-lisp:cons "Termination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-profile-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-profile-domain-request-"))
   (voice-profile-domain-id
    (common-lisp:error ":voice-profile-domain-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-profile-domain-request
                    'make-get-voice-profile-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-profile-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-profile-domain-response-"))
   (voice-profile-domain common-lisp:nil :type
    (common-lisp:or voice-profile-domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-profile-domain-response
                    'make-get-voice-profile-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-profile-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-profile-request-"))
   (voice-profile-id (common-lisp:error ":voice-profile-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-profile-request
                    'make-get-voice-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-profile-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-profile-response-"))
   (voice-profile common-lisp:nil :type
    (common-lisp:or voice-profile common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-profile-response
                    'make-get-voice-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile))
      (common-lisp:list
       (common-lisp:cons "VoiceProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-tone-analysis-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-tone-analysis-task-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null))
   (voice-tone-analysis-task-id
    (common-lisp:error ":voice-tone-analysis-task-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (is-caller (common-lisp:error ":is-caller is required") :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-tone-analysis-task-request
                    'make-get-voice-tone-analysis-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-tone-analysis-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-tone-analysis-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-tone-analysis-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-voice-tone-analysis-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-voice-tone-analysis-task-response-"))
   (voice-tone-analysis-task common-lisp:nil :type
    (common-lisp:or voice-tone-analysis-task common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-voice-tone-analysis-task-response
                    'make-get-voice-tone-analysis-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-tone-analysis-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-tone-analysis-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-tone-analysis-task))
      (common-lisp:list
       (common-lisp:cons "VoiceToneAnalysisTask"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-tone-analysis-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition gone-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'gone-exception)))
(common-lisp:deftype guid-string () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:deftype iso8601timestamp () 'common-lisp:string)
(common-lisp:deftype language-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-available-voice-connector-regions-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-available-voice-connector-regions-response-"))
   (voice-connector-regions common-lisp:nil :type
    (common-lisp:or voice-connector-aws-region-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-available-voice-connector-regions-response
                    'make-list-available-voice-connector-regions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-available-voice-connector-regions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-available-voice-connector-regions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-regions))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorRegions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-available-voice-connector-regions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-phone-number-orders-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-phone-number-orders-request-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-max common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-phone-number-orders-request
                    'make-list-phone-number-orders-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-phone-number-orders-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-phone-number-orders-response-"))
   (phone-number-orders common-lisp:nil :type
    (common-lisp:or phone-number-order-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-phone-number-orders-response
                    'make-list-phone-number-orders-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-orders))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberOrders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-phone-numbers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-phone-numbers-request-"))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (product-type common-lisp:nil :type
    (common-lisp:or phone-number-product-type common-lisp:null))
   (filter-name common-lisp:nil :type
    (common-lisp:or phone-number-association-name common-lisp:null))
   (filter-value common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-max common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-phone-numbers-request
                    'make-list-phone-numbers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-phone-numbers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-phone-numbers-response-"))
   (phone-numbers common-lisp:nil :type
    (common-lisp:or phone-number-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-phone-numbers-response
                    'make-list-phone-numbers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-numbers))
      (common-lisp:list
       (common-lisp:cons "PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-proxy-sessions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-proxy-sessions-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or proxy-session-status common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token-string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-max common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-proxy-sessions-request
                    'make-list-proxy-sessions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-proxy-sessions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-proxy-sessions-response-"))
   (proxy-sessions common-lisp:nil :type
    (common-lisp:or proxy-sessions common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-proxy-sessions-response
                    'make-list-proxy-sessions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-sessions))
      (common-lisp:list
       (common-lisp:cons "ProxySessions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-sip-media-applications-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-sip-media-applications-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or result-max common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-sip-media-applications-request
                    'make-list-sip-media-applications-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-sip-media-applications-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-sip-media-applications-response-"))
   (sip-media-applications common-lisp:nil :type
    (common-lisp:or sip-media-application-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-sip-media-applications-response
                    'make-list-sip-media-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-applications))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-sip-rules-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-sip-rules-request-"))
   (sip-media-application-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-max common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-sip-rules-request 'make-list-sip-rules-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-sip-rules-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-sip-rules-response-"))
   (sip-rules common-lisp:nil :type
    (common-lisp:or sip-rule-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-sip-rules-response 'make-list-sip-rules-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rules))
      (common-lisp:list
       (common-lisp:cons "SipRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-supported-phone-number-countries-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-supported-phone-number-countries-request-"))
   (product-type (common-lisp:error ":product-type is required") :type
    (common-lisp:or phone-number-product-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-supported-phone-number-countries-request
                    'make-list-supported-phone-number-countries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-supported-phone-number-countries-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-supported-phone-number-countries-response-"))
   (phone-number-countries common-lisp:nil :type
    (common-lisp:or phone-number-countries-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-supported-phone-number-countries-response
                    'make-list-supported-phone-number-countries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'phone-number-countries))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-voice-connector-groups-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-voice-connector-groups-request-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-max common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-voice-connector-groups-request
                    'make-list-voice-connector-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-voice-connector-groups-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-voice-connector-groups-response-"))
   (voice-connector-groups common-lisp:nil :type
    (common-lisp:or voice-connector-group-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-voice-connector-groups-response
                    'make-list-voice-connector-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-groups))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-voice-connector-termination-credentials-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-voice-connector-termination-credentials-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-voice-connector-termination-credentials-request
                    'make-list-voice-connector-termination-credentials-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-voice-connector-termination-credentials-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-voice-connector-termination-credentials-response-"))
   (usernames common-lisp:nil :type
    (common-lisp:or sensitive-string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-voice-connector-termination-credentials-response
                    'make-list-voice-connector-termination-credentials-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usernames))
      (common-lisp:list
       (common-lisp:cons "Usernames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-voice-connectors-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-voice-connectors-request-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-max common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-voice-connectors-request
                    'make-list-voice-connectors-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-voice-connectors-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-voice-connectors-response-"))
   (voice-connectors common-lisp:nil :type
    (common-lisp:or voice-connector-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-voice-connectors-response
                    'make-list-voice-connectors-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connectors))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-voice-profile-domains-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-voice-profile-domains-request-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-max common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-voice-profile-domains-request
                    'make-list-voice-profile-domains-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profile-domains-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profile-domains-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profile-domains-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-voice-profile-domains-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-voice-profile-domains-response-"))
   (voice-profile-domains common-lisp:nil :type
    (common-lisp:or voice-profile-domain-summary-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-voice-profile-domains-response
                    'make-list-voice-profile-domains-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profile-domains-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profile-domains-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domains))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profile-domains-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-voice-profiles-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-voice-profiles-request-"))
   (voice-profile-domain-id
    (common-lisp:error ":voice-profile-domain-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-max common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-voice-profiles-request
                    'make-list-voice-profiles-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profiles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profiles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profiles-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-voice-profiles-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-voice-profiles-response-"))
   (voice-profiles common-lisp:nil :type
    (common-lisp:or voice-profile-summary-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-voice-profiles-response
                    'make-list-voice-profiles-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profiles-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profiles-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profiles))
      (common-lisp:list
       (common-lisp:cons "VoiceProfiles"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profiles-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (logging-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-logging-configuration-"))
   (enable-siplogs common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (enable-media-metric-logs common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'logging-configuration 'make-logging-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          logging-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          logging-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enable-siplogs))
      (common-lisp:list
       (common-lisp:cons "EnableSIPLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-media-metric-logs))
      (common-lisp:list
       (common-lisp:cons "EnableMediaMetricLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          logging-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (media-insights-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-media-insights-configuration-"))
   (disabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (configuration-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'media-insights-configuration
                    'make-media-insights-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          media-insights-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          media-insights-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          media-insights-configuration))
   common-lisp:nil))
(common-lisp:deftype next-token-string () 'common-lisp:string)
(common-lisp:deftype non-empty-string () 'common-lisp:string)
(common-lisp:deftype non-empty-string128 () 'common-lisp:string)
(common-lisp:deftype non-empty-string256 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype non-empty-string-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-non-empty-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'not-found-exception)))
(common-lisp:deftype notification-target () 'common-lisp:string)
(common-lisp:deftype nullable-boolean () 'common-lisp:boolean)
(common-lisp:deftype number-selection-behavior () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ordered-phone-number (:copier common-lisp:nil)
      (:conc-name "struct-shape-ordered-phone-number-"))
   (e164phone-number common-lisp:nil :type
    (common-lisp:or e164phone-number common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or ordered-phone-number-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ordered-phone-number 'make-ordered-phone-number))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ordered-phone-number))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ordered-phone-number))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-number))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ordered-phone-number))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ordered-phone-number-list ()
   '(trivial-types:proper-list ordered-phone-number))
 (common-lisp:defun |make-ordered-phone-number-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ordered-phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ordered-phone-number-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (origination (:copier common-lisp:nil)
      (:conc-name "struct-shape-origination-"))
   (routes common-lisp:nil :type
    (common-lisp:or origination-route-list common-lisp:null))
   (disabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'origination 'make-origination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input origination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input origination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routes))
      (common-lisp:list
       (common-lisp:cons "Routes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input origination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (origination-route (:copier common-lisp:nil)
      (:conc-name "struct-shape-origination-route-"))
   (host common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or origination-route-protocol common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or origination-route-priority common-lisp:null))
   (weight common-lisp:nil :type
    (common-lisp:or origination-route-weight common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'origination-route 'make-origination-route))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input origination-route))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input origination-route))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port))
      (common-lisp:list
       (common-lisp:cons "Port"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'weight))
      (common-lisp:list
       (common-lisp:cons "Weight"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input origination-route))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype origination-route-list ()
   '(trivial-types:proper-list origination-route))
 (common-lisp:defun |make-origination-route-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list origination-route))
   aws-sdk/generator/shape::members))
(common-lisp:deftype origination-route-priority () 'common-lisp:integer)
(common-lisp:deftype origination-route-protocol () 'common-lisp:string)
(common-lisp:deftype origination-route-weight () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (participant (:copier common-lisp:nil)
      (:conc-name "struct-shape-participant-"))
   (phone-number common-lisp:nil :type
    (common-lisp:or e164phone-number common-lisp:null))
   (proxy-phone-number common-lisp:nil :type
    (common-lisp:or e164phone-number common-lisp:null)))
 (common-lisp:export (common-lisp:list 'participant 'make-participant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input participant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input participant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-phone-number))
      (common-lisp:list
       (common-lisp:cons "ProxyPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input participant))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype participant-phone-number-list ()
   '(trivial-types:proper-list e164phone-number))
 (common-lisp:defun |make-participant-phone-number-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list e164phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype participants () '(trivial-types:proper-list participant))
 (common-lisp:defun |make-participants|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list participant))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (phone-number (:copier common-lisp:nil)
      (:conc-name "struct-shape-phone-number-"))
   (phone-number-id common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (e164phone-number common-lisp:nil :type
    (common-lisp:or e164phone-number common-lisp:null))
   (country common-lisp:nil :type
    (common-lisp:or alpha2country-code common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or phone-number-type common-lisp:null))
   (product-type common-lisp:nil :type
    (common-lisp:or phone-number-product-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or phone-number-status common-lisp:null))
   (capabilities common-lisp:nil :type
    (common-lisp:or phone-number-capabilities common-lisp:null))
   (associations common-lisp:nil :type
    (common-lisp:or phone-number-association-list common-lisp:null))
   (calling-name common-lisp:nil :type
    (common-lisp:or calling-name common-lisp:null))
   (calling-name-status common-lisp:nil :type
    (common-lisp:or calling-name-status common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (deletion-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (order-id common-lisp:nil :type
    (common-lisp:or guid-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phone-number 'make-phone-number))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input phone-number))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input phone-number))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-id))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-number))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "Capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'associations))
      (common-lisp:list
       (common-lisp:cons "Associations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name-status))
      (common-lisp:list
       (common-lisp:cons "CallingNameStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deletion-timestamp))
      (common-lisp:list
       (common-lisp:cons "DeletionTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'order-id))
      (common-lisp:list
       (common-lisp:cons "OrderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input phone-number))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (phone-number-association (:copier common-lisp:nil)
      (:conc-name "struct-shape-phone-number-association-"))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or phone-number-association-name common-lisp:null))
   (associated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'phone-number-association 'make-phone-number-association))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-association))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-association))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'associated-timestamp))
      (common-lisp:list
       (common-lisp:cons "AssociatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-association))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-association-list ()
   '(trivial-types:proper-list phone-number-association))
 (common-lisp:defun |make-phone-number-association-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            phone-number-association))
   aws-sdk/generator/shape::members))
(common-lisp:deftype phone-number-association-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (phone-number-capabilities (:copier common-lisp:nil)
      (:conc-name "struct-shape-phone-number-capabilities-"))
   (inbound-call common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null))
   (outbound-call common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null))
   (inbound-sms common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null))
   (outbound-sms common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null))
   (inbound-mms common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null))
   (outbound-mms common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'phone-number-capabilities
                    'make-phone-number-capabilities))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-capabilities))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-capabilities))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbound-call))
      (common-lisp:list
       (common-lisp:cons "InboundCall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-call))
      (common-lisp:list
       (common-lisp:cons "OutboundCall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbound-sms))
      (common-lisp:list
       (common-lisp:cons "InboundSMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-sms))
      (common-lisp:list
       (common-lisp:cons "OutboundSMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbound-mms))
      (common-lisp:list
       (common-lisp:cons "InboundMMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-mms))
      (common-lisp:list
       (common-lisp:cons "OutboundMMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-capabilities))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-countries-list ()
   '(trivial-types:proper-list phone-number-country))
 (common-lisp:defun |make-phone-number-countries-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number-country))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (phone-number-country (:copier common-lisp:nil)
      (:conc-name "struct-shape-phone-number-country-"))
   (country-code common-lisp:nil :type
    (common-lisp:or alpha2country-code common-lisp:null))
   (supported-phone-number-types common-lisp:nil :type
    (common-lisp:or phone-number-type-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'phone-number-country 'make-phone-number-country))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input phone-number-country))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input phone-number-country))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "CountryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'supported-phone-number-types))
      (common-lisp:list
       (common-lisp:cons "SupportedPhoneNumberTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input phone-number-country))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (phone-number-error (:copier common-lisp:nil)
      (:conc-name "struct-shape-phone-number-error-"))
   (phone-number-id common-lisp:nil :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'phone-number-error 'make-phone-number-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input phone-number-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input phone-number-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-id))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input phone-number-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-error-list ()
   '(trivial-types:proper-list phone-number-error))
 (common-lisp:defun |make-phone-number-error-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype phone-number-list ()
   '(trivial-types:proper-list phone-number))
 (common-lisp:defun |make-phone-number-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:deftype phone-number-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (phone-number-order (:copier common-lisp:nil)
      (:conc-name "struct-shape-phone-number-order-"))
   (phone-number-order-id common-lisp:nil :type
    (common-lisp:or guid-string common-lisp:null))
   (product-type common-lisp:nil :type
    (common-lisp:or phone-number-product-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or phone-number-order-status common-lisp:null))
   (order-type common-lisp:nil :type
    (common-lisp:or phone-number-order-type common-lisp:null))
   (ordered-phone-numbers common-lisp:nil :type
    (common-lisp:or ordered-phone-number-list common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'phone-number-order 'make-phone-number-order))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input phone-number-order))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input phone-number-order))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'phone-number-order-id))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberOrderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'order-type))
      (common-lisp:list
       (common-lisp:cons "OrderType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ordered-phone-numbers))
      (common-lisp:list
       (common-lisp:cons "OrderedPhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input phone-number-order))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-order-list ()
   '(trivial-types:proper-list phone-number-order))
 (common-lisp:defun |make-phone-number-order-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number-order))
   aws-sdk/generator/shape::members))
(common-lisp:deftype phone-number-order-status () 'common-lisp:string)
(common-lisp:deftype phone-number-order-type () 'common-lisp:string)
(common-lisp:deftype phone-number-product-type () 'common-lisp:string)
(common-lisp:deftype phone-number-status () 'common-lisp:string)
(common-lisp:deftype phone-number-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype phone-number-type-list ()
   '(trivial-types:proper-list phone-number-type))
 (common-lisp:defun |make-phone-number-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype port () 'common-lisp:integer)
(common-lisp:deftype positive-integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (proxy (:copier common-lisp:nil) (:conc-name "struct-shape-proxy-"))
   (default-session-expiry-minutes common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (disabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (fall-back-phone-number common-lisp:nil :type
    (common-lisp:or e164phone-number common-lisp:null))
   (phone-number-countries common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'proxy 'make-proxy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input proxy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input proxy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-session-expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "DefaultSessionExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fall-back-phone-number))
      (common-lisp:list
       (common-lisp:cons "FallBackPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'phone-number-countries))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input proxy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (proxy-session (:copier common-lisp:nil)
      (:conc-name "struct-shape-proxy-session-"))
   (voice-connector-id common-lisp:nil :type
    (common-lisp:or non-empty-string128 common-lisp:null))
   (proxy-session-id common-lisp:nil :type
    (common-lisp:or non-empty-string128 common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string128 common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or proxy-session-status common-lisp:null))
   (expiry-minutes common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null))
   (capabilities common-lisp:nil :type
    (common-lisp:or capability-list common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (ended-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (participants common-lisp:nil :type
    (common-lisp:or participants common-lisp:null))
   (number-selection-behavior common-lisp:nil :type
    (common-lisp:or number-selection-behavior common-lisp:null))
   (geo-match-level common-lisp:nil :type
    (common-lisp:or geo-match-level common-lisp:null))
   (geo-match-params common-lisp:nil :type
    (common-lisp:or geo-match-params common-lisp:null)))
 (common-lisp:export (common-lisp:list 'proxy-session 'make-proxy-session))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input proxy-session))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input proxy-session))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-session-id))
      (common-lisp:list
       (common-lisp:cons "ProxySessionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "ExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "Capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ended-timestamp))
      (common-lisp:list
       (common-lisp:cons "EndedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'participants))
      (common-lisp:list
       (common-lisp:cons "Participants"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-selection-behavior))
      (common-lisp:list
       (common-lisp:cons "NumberSelectionBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-match-level))
      (common-lisp:list
       (common-lisp:cons "GeoMatchLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-match-params))
      (common-lisp:list
       (common-lisp:cons "GeoMatchParams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input proxy-session))
   common-lisp:nil))
(common-lisp:deftype proxy-session-name-string () 'common-lisp:string)
(common-lisp:deftype proxy-session-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype proxy-sessions ()
   '(trivial-types:proper-list proxy-session))
 (common-lisp:defun |make-proxy-sessions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list proxy-session))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (put-sip-media-application-alexa-skill-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-sip-media-application-alexa-skill-configuration-request-"))
   (sip-media-application-id
    (common-lisp:error ":sip-media-application-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (sip-media-application-alexa-skill-configuration common-lisp:nil :type
    (common-lisp:or sip-media-application-alexa-skill-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'put-sip-media-application-alexa-skill-configuration-request
   'make-put-sip-media-application-alexa-skill-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-alexa-skill-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-alexa-skill-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-alexa-skill-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationAlexaSkillConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-alexa-skill-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-sip-media-application-alexa-skill-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-sip-media-application-alexa-skill-configuration-response-"))
   (sip-media-application-alexa-skill-configuration common-lisp:nil :type
    (common-lisp:or sip-media-application-alexa-skill-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'put-sip-media-application-alexa-skill-configuration-response
   'make-put-sip-media-application-alexa-skill-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-alexa-skill-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-alexa-skill-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-alexa-skill-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationAlexaSkillConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-alexa-skill-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-sip-media-application-logging-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-sip-media-application-logging-configuration-request-"))
   (sip-media-application-id
    (common-lisp:error ":sip-media-application-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (sip-media-application-logging-configuration common-lisp:nil :type
    (common-lisp:or sip-media-application-logging-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-sip-media-application-logging-configuration-request
                    'make-put-sip-media-application-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-logging-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationLoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-sip-media-application-logging-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-sip-media-application-logging-configuration-response-"))
   (sip-media-application-logging-configuration common-lisp:nil :type
    (common-lisp:or sip-media-application-logging-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-sip-media-application-logging-configuration-response
                    'make-put-sip-media-application-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-logging-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationLoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-emergency-calling-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-voice-connector-emergency-calling-configuration-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null))
   (emergency-calling-configuration
    (common-lisp:error ":emergency-calling-configuration is required") :type
    (common-lisp:or emergency-calling-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'put-voice-connector-emergency-calling-configuration-request
   'make-put-voice-connector-emergency-calling-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-calling-configuration))
      (common-lisp:list
       (common-lisp:cons "EmergencyCallingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-emergency-calling-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-voice-connector-emergency-calling-configuration-response-"))
   (emergency-calling-configuration common-lisp:nil :type
    (common-lisp:or emergency-calling-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'put-voice-connector-emergency-calling-configuration-response
   'make-put-voice-connector-emergency-calling-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-calling-configuration))
      (common-lisp:list
       (common-lisp:cons "EmergencyCallingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-logging-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-voice-connector-logging-configuration-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null))
   (logging-configuration
    (common-lisp:error ":logging-configuration is required") :type
    (common-lisp:or logging-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-logging-configuration-request
                    'make-put-voice-connector-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logging-configuration))
      (common-lisp:list
       (common-lisp:cons "LoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-logging-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-voice-connector-logging-configuration-response-"))
   (logging-configuration common-lisp:nil :type
    (common-lisp:or logging-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-logging-configuration-response
                    'make-put-voice-connector-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logging-configuration))
      (common-lisp:list
       (common-lisp:cons "LoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-origination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-voice-connector-origination-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null))
   (origination (common-lisp:error ":origination is required") :type
    (common-lisp:or origination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-origination-request
                    'make-put-voice-connector-origination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-origination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-voice-connector-origination-response-"))
   (origination common-lisp:nil :type
    (common-lisp:or origination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-origination-response
                    'make-put-voice-connector-origination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-proxy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-voice-connector-proxy-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null))
   (default-session-expiry-minutes
    (common-lisp:error ":default-session-expiry-minutes is required") :type
    (common-lisp:or integer common-lisp:null))
   (phone-number-pool-countries
    (common-lisp:error ":phone-number-pool-countries is required") :type
    (common-lisp:or country-list common-lisp:null))
   (fall-back-phone-number common-lisp:nil :type
    (common-lisp:or e164phone-number common-lisp:null))
   (disabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-proxy-request
                    'make-put-voice-connector-proxy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-session-expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "DefaultSessionExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'phone-number-pool-countries))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberPoolCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fall-back-phone-number))
      (common-lisp:list
       (common-lisp:cons "FallBackPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-proxy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-voice-connector-proxy-response-"))
   (proxy common-lisp:nil :type (common-lisp:or proxy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-proxy-response
                    'make-put-voice-connector-proxy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy))
      (common-lisp:list
       (common-lisp:cons "Proxy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-streaming-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-voice-connector-streaming-configuration-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null))
   (streaming-configuration
    (common-lisp:error ":streaming-configuration is required") :type
    (common-lisp:or streaming-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-streaming-configuration-request
                    'make-put-voice-connector-streaming-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-configuration))
      (common-lisp:list
       (common-lisp:cons "StreamingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-streaming-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-voice-connector-streaming-configuration-response-"))
   (streaming-configuration common-lisp:nil :type
    (common-lisp:or streaming-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-streaming-configuration-response
                    'make-put-voice-connector-streaming-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-configuration))
      (common-lisp:list
       (common-lisp:cons "StreamingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-termination-credentials-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-voice-connector-termination-credentials-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null))
   (credentials common-lisp:nil :type
    (common-lisp:or credential-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-termination-credentials-request
                    'make-put-voice-connector-termination-credentials-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-credentials-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "Credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-termination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-voice-connector-termination-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null))
   (termination (common-lisp:error ":termination is required") :type
    (common-lisp:or termination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-termination-request
                    'make-put-voice-connector-termination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'termination))
      (common-lisp:list
       (common-lisp:cons "Termination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-voice-connector-termination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-voice-connector-termination-response-"))
   (termination common-lisp:nil :type
    (common-lisp:or termination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-termination-response
                    'make-put-voice-connector-termination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'termination))
      (common-lisp:list
       (common-lisp:cons "Termination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-limit-exceeded-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'resource-limit-exceeded-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (restore-phone-number-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-restore-phone-number-request-"))
   (phone-number-id (common-lisp:error ":phone-number-id is required") :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'restore-phone-number-request
                    'make-restore-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (restore-phone-number-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-restore-phone-number-response-"))
   (phone-number common-lisp:nil :type
    (common-lisp:or phone-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'restore-phone-number-response
                    'make-restore-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-response))
   common-lisp:nil))
(common-lisp:deftype result-max () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype smacreate-call-arguments-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-smacreate-call-arguments-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype smaupdate-call-arguments-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-smaupdate-call-arguments-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (search-available-phone-numbers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-search-available-phone-numbers-request-"))
   (area-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (city common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (country common-lisp:nil :type
    (common-lisp:or alpha2country-code common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (toll-free-prefix common-lisp:nil :type
    (common-lisp:or toll-free-prefix common-lisp:null))
   (phone-number-type common-lisp:nil :type
    (common-lisp:or phone-number-type common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or phone-number-max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'search-available-phone-numbers-request
                    'make-search-available-phone-numbers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (search-available-phone-numbers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-search-available-phone-numbers-response-"))
   (e164phone-numbers common-lisp:nil :type
    (common-lisp:or e164phone-number-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'search-available-phone-numbers-response
                    'make-search-available-phone-numbers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-response))
   common-lisp:nil))
(common-lisp:deftype sensitive-non-empty-string () 'common-lisp:string)
(common-lisp:deftype sensitive-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype sensitive-string-list ()
   '(trivial-types:proper-list sensitive-string))
 (common-lisp:defun |make-sensitive-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sensitive-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (server-side-encryption-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-server-side-encryption-configuration-"))
   (kms-key-arn (common-lisp:error ":kms-key-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'server-side-encryption-configuration
                    'make-server-side-encryption-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-failure-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'service-failure-exception)))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'service-unavailable-exception)))
(common-lisp:deftype sip-application-priority () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype sip-headers-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-sip-headers-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (sip-media-application (:copier common-lisp:nil)
      (:conc-name "struct-shape-sip-media-application-"))
   (sip-media-application-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (aws-region common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or sip-media-application-name common-lisp:null))
   (endpoints common-lisp:nil :type
    (common-lisp:or sip-media-application-endpoint-list common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (sip-media-application-arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sip-media-application 'make-sip-media-application))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-id))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-arn))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sip-media-application-alexa-skill-configuration (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-sip-media-application-alexa-skill-configuration-"))
   (alexa-skill-status (common-lisp:error ":alexa-skill-status is required")
    :type (common-lisp:or alexa-skill-status common-lisp:null))
   (alexa-skill-ids (common-lisp:error ":alexa-skill-ids is required") :type
    (common-lisp:or alexa-skill-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sip-media-application-alexa-skill-configuration
                    'make-sip-media-application-alexa-skill-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-alexa-skill-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-alexa-skill-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alexa-skill-status))
      (common-lisp:list
       (common-lisp:cons "AlexaSkillStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alexa-skill-ids))
      (common-lisp:list
       (common-lisp:cons "AlexaSkillIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-alexa-skill-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sip-media-application-call (:copier common-lisp:nil)
      (:conc-name "struct-shape-sip-media-application-call-"))
   (transaction-id common-lisp:nil :type
    (common-lisp:or guid-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sip-media-application-call
                    'make-sip-media-application-call))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-call))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-call))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transaction-id))
      (common-lisp:list
       (common-lisp:cons "TransactionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-call))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sip-media-application-endpoint (:copier common-lisp:nil)
      (:conc-name "struct-shape-sip-media-application-endpoint-"))
   (lambda-arn common-lisp:nil :type
    (common-lisp:or function-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sip-media-application-endpoint
                    'make-sip-media-application-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-arn))
      (common-lisp:list
       (common-lisp:cons "LambdaArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sip-media-application-endpoint-list ()
   '(trivial-types:proper-list sip-media-application-endpoint))
 (common-lisp:defun |make-sip-media-application-endpoint-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sip-media-application-endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype sip-media-application-list ()
   '(trivial-types:proper-list sip-media-application))
 (common-lisp:defun |make-sip-media-application-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sip-media-application))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (sip-media-application-logging-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-sip-media-application-logging-configuration-"))
   (enable-sip-media-application-message-logs common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sip-media-application-logging-configuration
                    'make-sip-media-application-logging-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-logging-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-logging-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-sip-media-application-message-logs))
      (common-lisp:list
       (common-lisp:cons "EnableSipMediaApplicationMessageLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-logging-configuration))
   common-lisp:nil))
(common-lisp:deftype sip-media-application-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (sip-rule (:copier common-lisp:nil) (:conc-name "struct-shape-sip-rule-"))
   (sip-rule-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or sip-rule-name common-lisp:null))
   (disabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (trigger-type common-lisp:nil :type
    (common-lisp:or sip-rule-trigger-type common-lisp:null))
   (trigger-value common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (target-applications common-lisp:nil :type
    (common-lisp:or sip-rule-target-application-list common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sip-rule 'make-sip-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sip-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sip-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rule-id))
      (common-lisp:list
       (common-lisp:cons "SipRuleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-type))
      (common-lisp:list
       (common-lisp:cons "TriggerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-value))
      (common-lisp:list
       (common-lisp:cons "TriggerValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-applications))
      (common-lisp:list
       (common-lisp:cons "TargetApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sip-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sip-rule-list () '(trivial-types:proper-list sip-rule))
 (common-lisp:defun |make-sip-rule-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sip-rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sip-rule-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (sip-rule-target-application (:copier common-lisp:nil)
      (:conc-name "struct-shape-sip-rule-target-application-"))
   (sip-media-application-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or sip-application-priority common-lisp:null))
   (aws-region common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sip-rule-target-application
                    'make-sip-rule-target-application))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-rule-target-application))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-rule-target-application))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-id))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-rule-target-application))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sip-rule-target-application-list ()
   '(trivial-types:proper-list sip-rule-target-application))
 (common-lisp:defun |make-sip-rule-target-application-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sip-rule-target-application))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sip-rule-trigger-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (speaker-search-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-speaker-search-details-"))
   (results common-lisp:nil :type
    (common-lisp:or speaker-search-result-list common-lisp:null))
   (voiceprint-generation-status common-lisp:nil :type
    (common-lisp:or non-empty-string256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'speaker-search-details 'make-speaker-search-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          speaker-search-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          speaker-search-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'results))
      (common-lisp:list
       (common-lisp:cons "Results"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voiceprint-generation-status))
      (common-lisp:list
       (common-lisp:cons "VoiceprintGenerationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          speaker-search-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (speaker-search-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-speaker-search-result-"))
   (confidence-score common-lisp:nil :type
    (common-lisp:or confidence-score common-lisp:null))
   (voice-profile-id common-lisp:nil :type
    (common-lisp:or non-empty-string256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'speaker-search-result 'make-speaker-search-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          speaker-search-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          speaker-search-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'confidence-score))
      (common-lisp:list
       (common-lisp:cons "ConfidenceScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          speaker-search-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype speaker-search-result-list ()
   '(trivial-types:proper-list speaker-search-result))
 (common-lisp:defun |make-speaker-search-result-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list speaker-search-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (speaker-search-task (:copier common-lisp:nil)
      (:conc-name "struct-shape-speaker-search-task-"))
   (speaker-search-task-id common-lisp:nil :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (speaker-search-task-status common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (call-details common-lisp:nil :type
    (common-lisp:or call-details common-lisp:null))
   (speaker-search-details common-lisp:nil :type
    (common-lisp:or speaker-search-details common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (started-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'speaker-search-task 'make-speaker-search-task))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input speaker-search-task))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input speaker-search-task))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'speaker-search-task-id))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchTaskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'speaker-search-task-status))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchTaskStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'call-details))
      (common-lisp:list
       (common-lisp:cons "CallDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'speaker-search-details))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-timestamp))
      (common-lisp:list
       (common-lisp:cons "StartedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input speaker-search-task))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-speaker-search-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-speaker-search-task-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null))
   (transaction-id (common-lisp:error ":transaction-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (voice-profile-domain-id
    (common-lisp:error ":voice-profile-domain-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-speaker-search-task-request
                    'make-start-speaker-search-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-search-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-search-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transaction-id))
      (common-lisp:list
       (common-lisp:cons "TransactionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-search-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-speaker-search-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-speaker-search-task-response-"))
   (speaker-search-task common-lisp:nil :type
    (common-lisp:or speaker-search-task common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-speaker-search-task-response
                    'make-start-speaker-search-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-search-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-search-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speaker-search-task))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchTask"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-search-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-voice-tone-analysis-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-voice-tone-analysis-task-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null))
   (transaction-id (common-lisp:error ":transaction-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-voice-tone-analysis-task-request
                    'make-start-voice-tone-analysis-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-voice-tone-analysis-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-voice-tone-analysis-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transaction-id))
      (common-lisp:list
       (common-lisp:cons "TransactionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-voice-tone-analysis-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-voice-tone-analysis-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-voice-tone-analysis-task-response-"))
   (voice-tone-analysis-task common-lisp:nil :type
    (common-lisp:or voice-tone-analysis-task common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-voice-tone-analysis-task-response
                    'make-start-voice-tone-analysis-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-voice-tone-analysis-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-voice-tone-analysis-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-tone-analysis-task))
      (common-lisp:list
       (common-lisp:cons "VoiceToneAnalysisTask"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-voice-tone-analysis-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-speaker-search-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-speaker-search-task-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null))
   (speaker-search-task-id
    (common-lisp:error ":speaker-search-task-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-speaker-search-task-request
                    'make-stop-speaker-search-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-speaker-search-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-speaker-search-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-speaker-search-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-voice-tone-analysis-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-voice-tone-analysis-task-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null))
   (voice-tone-analysis-task-id
    (common-lisp:error ":voice-tone-analysis-task-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-voice-tone-analysis-task-request
                    'make-stop-voice-tone-analysis-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-voice-tone-analysis-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-voice-tone-analysis-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-voice-tone-analysis-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (streaming-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-streaming-configuration-"))
   (data-retention-in-hours
    (common-lisp:error ":data-retention-in-hours is required") :type
    (common-lisp:or data-retention-in-hours common-lisp:null))
   (disabled (common-lisp:error ":disabled is required") :type
    (common-lisp:or boolean common-lisp:null))
   (streaming-notification-targets common-lisp:nil :type
    (common-lisp:or streaming-notification-target-list common-lisp:null))
   (media-insights-configuration common-lisp:nil :type
    (common-lisp:or media-insights-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'streaming-configuration 'make-streaming-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          streaming-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          streaming-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-retention-in-hours))
      (common-lisp:list
       (common-lisp:cons "DataRetentionInHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-notification-targets))
      (common-lisp:list
       (common-lisp:cons "StreamingNotificationTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-insights-configuration))
      (common-lisp:list
       (common-lisp:cons "MediaInsightsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          streaming-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (streaming-notification-target (:copier common-lisp:nil)
      (:conc-name "struct-shape-streaming-notification-target-"))
   (notification-target common-lisp:nil :type
    (common-lisp:or notification-target common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'streaming-notification-target
                    'make-streaming-notification-target))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          streaming-notification-target))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          streaming-notification-target))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-target))
      (common-lisp:list
       (common-lisp:cons "NotificationTarget"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          streaming-notification-target))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype streaming-notification-target-list ()
   '(trivial-types:proper-list streaming-notification-target))
 (common-lisp:defun |make-streaming-notification-target-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            streaming-notification-target))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype string128 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (termination (:copier common-lisp:nil)
      (:conc-name "struct-shape-termination-"))
   (cps-limit common-lisp:nil :type
    (common-lisp:or cps-limit common-lisp:null))
   (default-phone-number common-lisp:nil :type
    (common-lisp:or e164phone-number common-lisp:null))
   (calling-regions common-lisp:nil :type
    (common-lisp:or calling-region-list common-lisp:null))
   (cidr-allowed-list common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (disabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'termination 'make-termination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input termination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input termination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cps-limit))
      (common-lisp:list
       (common-lisp:cons "CpsLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-phone-number))
      (common-lisp:list
       (common-lisp:cons "DefaultPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-regions))
      (common-lisp:list
       (common-lisp:cons "CallingRegions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cidr-allowed-list))
      (common-lisp:list
       (common-lisp:cons "CidrAllowedList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input termination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (termination-health (:copier common-lisp:nil)
      (:conc-name "struct-shape-termination-health-"))
   (timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (source common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'termination-health 'make-termination-health))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input termination-health))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input termination-health))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input termination-health))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition throttled-client-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'throttled-client-exception)))
(common-lisp:deftype toll-free-prefix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unauthorized-client-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'unauthorized-client-exception)))
(common-lisp:progn
 (common-lisp:define-condition unprocessable-entity-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'unprocessable-entity-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-global-settings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-global-settings-request-"))
   (voice-connector common-lisp:nil :type
    (common-lisp:or voice-connector-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-global-settings-request
                    'make-update-global-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-global-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-global-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-global-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-phone-number-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-phone-number-request-"))
   (phone-number-id (common-lisp:error ":phone-number-id is required") :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (product-type common-lisp:nil :type
    (common-lisp:or phone-number-product-type common-lisp:null))
   (calling-name common-lisp:nil :type
    (common-lisp:or calling-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-phone-number-request
                    'make-update-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-phone-number-request-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-phone-number-request-item-"))
   (phone-number-id (common-lisp:error ":phone-number-id is required") :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (product-type common-lisp:nil :type
    (common-lisp:or phone-number-product-type common-lisp:null))
   (calling-name common-lisp:nil :type
    (common-lisp:or calling-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-phone-number-request-item
                    'make-update-phone-number-request-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-id))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype update-phone-number-request-item-list ()
   '(trivial-types:proper-list update-phone-number-request-item))
 (common-lisp:defun |make-update-phone-number-request-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            update-phone-number-request-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (update-phone-number-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-phone-number-response-"))
   (phone-number common-lisp:nil :type
    (common-lisp:or phone-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-phone-number-response
                    'make-update-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-phone-number-settings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-phone-number-settings-request-"))
   (calling-name (common-lisp:error ":calling-name is required") :type
    (common-lisp:or calling-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-phone-number-settings-request
                    'make-update-phone-number-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-proxy-session-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-proxy-session-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string128 common-lisp:null))
   (proxy-session-id (common-lisp:error ":proxy-session-id is required") :type
    (common-lisp:or non-empty-string128 common-lisp:null))
   (capabilities (common-lisp:error ":capabilities is required") :type
    (common-lisp:or capability-list common-lisp:null))
   (expiry-minutes common-lisp:nil :type
    (common-lisp:or positive-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-proxy-session-request
                    'make-update-proxy-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "Capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "ExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-proxy-session-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-proxy-session-response-"))
   (proxy-session common-lisp:nil :type
    (common-lisp:or proxy-session common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-proxy-session-response
                    'make-update-proxy-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-session))
      (common-lisp:list
       (common-lisp:cons "ProxySession"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-sip-media-application-call-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-sip-media-application-call-request-"))
   (sip-media-application-id
    (common-lisp:error ":sip-media-application-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (transaction-id (common-lisp:error ":transaction-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (arguments (common-lisp:error ":arguments is required") :type
    (common-lisp:or smaupdate-call-arguments-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-sip-media-application-call-request
                    'make-update-sip-media-application-call-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arguments))
      (common-lisp:list
       (common-lisp:cons "Arguments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-sip-media-application-call-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-sip-media-application-call-response-"))
   (sip-media-application-call common-lisp:nil :type
    (common-lisp:or sip-media-application-call common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-sip-media-application-call-response
                    'make-update-sip-media-application-call-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-call))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationCall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-sip-media-application-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-sip-media-application-request-"))
   (sip-media-application-id
    (common-lisp:error ":sip-media-application-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or sip-media-application-name common-lisp:null))
   (endpoints common-lisp:nil :type
    (common-lisp:or sip-media-application-endpoint-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-sip-media-application-request
                    'make-update-sip-media-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-sip-media-application-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-sip-media-application-response-"))
   (sip-media-application common-lisp:nil :type
    (common-lisp:or sip-media-application common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-sip-media-application-response
                    'make-update-sip-media-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-sip-rule-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-sip-rule-request-"))
   (sip-rule-id (common-lisp:error ":sip-rule-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or sip-rule-name common-lisp:null))
   (disabled common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null))
   (target-applications common-lisp:nil :type
    (common-lisp:or sip-rule-target-application-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-sip-rule-request 'make-update-sip-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-applications))
      (common-lisp:list
       (common-lisp:cons "TargetApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-sip-rule-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-sip-rule-response-"))
   (sip-rule common-lisp:nil :type (common-lisp:or sip-rule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-sip-rule-response 'make-update-sip-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rule))
      (common-lisp:list
       (common-lisp:cons "SipRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-voice-connector-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-voice-connector-group-request-"))
   (voice-connector-group-id
    (common-lisp:error ":voice-connector-group-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or voice-connector-group-name common-lisp:null))
   (voice-connector-items
    (common-lisp:error ":voice-connector-items is required") :type
    (common-lisp:or voice-connector-item-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-voice-connector-group-request
                    'make-update-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-items))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-voice-connector-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-voice-connector-group-response-"))
   (voice-connector-group common-lisp:nil :type
    (common-lisp:or voice-connector-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-voice-connector-group-response
                    'make-update-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-voice-connector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-voice-connector-request-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or voice-connector-name common-lisp:null))
   (require-encryption (common-lisp:error ":require-encryption is required")
    :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-voice-connector-request
                    'make-update-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-encryption))
      (common-lisp:list
       (common-lisp:cons "RequireEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-voice-connector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-voice-connector-response-"))
   (voice-connector common-lisp:nil :type
    (common-lisp:or voice-connector common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-voice-connector-response
                    'make-update-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-voice-profile-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-voice-profile-domain-request-"))
   (voice-profile-domain-id
    (common-lisp:error ":voice-profile-domain-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or voice-profile-domain-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or voice-profile-domain-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-voice-profile-domain-request
                    'make-update-voice-profile-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-voice-profile-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-voice-profile-domain-response-"))
   (voice-profile-domain common-lisp:nil :type
    (common-lisp:or voice-profile-domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-voice-profile-domain-response
                    'make-update-voice-profile-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-voice-profile-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-voice-profile-request-"))
   (voice-profile-id (common-lisp:error ":voice-profile-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (speaker-search-task-id
    (common-lisp:error ":speaker-search-task-id is required") :type
    (common-lisp:or non-empty-string256 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-voice-profile-request
                    'make-update-voice-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'speaker-search-task-id))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchTaskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-voice-profile-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-voice-profile-response-"))
   (voice-profile common-lisp:nil :type
    (common-lisp:or voice-profile common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-voice-profile-response
                    'make-update-voice-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile))
      (common-lisp:list
       (common-lisp:cons "VoiceProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (validate-e911address-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-validate-e911address-request-"))
   (aws-account-id (common-lisp:error ":aws-account-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (street-number (common-lisp:error ":street-number is required") :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (street-info (common-lisp:error ":street-info is required") :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (city (common-lisp:error ":city is required") :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (state (common-lisp:error ":state is required") :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (country (common-lisp:error ":country is required") :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null))
   (postal-code (common-lisp:error ":postal-code is required") :type
    (common-lisp:or sensitive-non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validate-e911address-request
                    'make-validate-e911address-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account-id))
      (common-lisp:list
       (common-lisp:cons "AwsAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-number))
      (common-lisp:list
       (common-lisp:cons "StreetNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-info))
      (common-lisp:list
       (common-lisp:cons "StreetInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "City"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code))
      (common-lisp:list
       (common-lisp:cons "PostalCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (validate-e911address-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-validate-e911address-response-"))
   (validation-result common-lisp:nil :type
    (common-lisp:or validation-result common-lisp:null))
   (address-external-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (address common-lisp:nil :type (common-lisp:or address common-lisp:null))
   (candidate-address-list common-lisp:nil :type
    (common-lisp:or candidate-address-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validate-e911address-response
                    'make-validate-e911address-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validation-result))
      (common-lisp:list
       (common-lisp:cons "ValidationResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address-external-id))
      (common-lisp:list
       (common-lisp:cons "AddressExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'candidate-address-list))
      (common-lisp:list
       (common-lisp:cons "CandidateAddressList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-response))
   common-lisp:nil))
(common-lisp:deftype validation-result () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (voice-connector (:copier common-lisp:nil)
      (:conc-name "struct-shape-voice-connector-"))
   (voice-connector-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (aws-region common-lisp:nil :type
    (common-lisp:or voice-connector-aws-region common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or voice-connector-name common-lisp:null))
   (outbound-host-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (require-encryption common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (voice-connector-arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'voice-connector 'make-voice-connector))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input voice-connector))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input voice-connector))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-host-name))
      (common-lisp:list
       (common-lisp:cons "OutboundHostName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-encryption))
      (common-lisp:list
       (common-lisp:cons "RequireEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input voice-connector))
   common-lisp:nil))
(common-lisp:deftype voice-connector-aws-region () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype voice-connector-aws-region-list ()
   '(trivial-types:proper-list voice-connector-aws-region))
 (common-lisp:defun |make-voice-connector-aws-region-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            voice-connector-aws-region))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (voice-connector-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-voice-connector-group-"))
   (voice-connector-group-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or voice-connector-group-name common-lisp:null))
   (voice-connector-items common-lisp:nil :type
    (common-lisp:or voice-connector-item-list common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (voice-connector-group-arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'voice-connector-group 'make-voice-connector-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-items))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype voice-connector-group-list ()
   '(trivial-types:proper-list voice-connector-group))
 (common-lisp:defun |make-voice-connector-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list voice-connector-group))
   aws-sdk/generator/shape::members))
(common-lisp:deftype voice-connector-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (voice-connector-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-voice-connector-item-"))
   (voice-connector-id (common-lisp:error ":voice-connector-id is required")
    :type (common-lisp:or non-empty-string common-lisp:null))
   (priority (common-lisp:error ":priority is required") :type
    (common-lisp:or voice-connector-item-priority common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'voice-connector-item 'make-voice-connector-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input voice-connector-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input voice-connector-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input voice-connector-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype voice-connector-item-list ()
   '(trivial-types:proper-list voice-connector-item))
 (common-lisp:defun |make-voice-connector-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list voice-connector-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype voice-connector-item-priority () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype voice-connector-list ()
   '(trivial-types:proper-list voice-connector))
 (common-lisp:defun |make-voice-connector-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list voice-connector))
   aws-sdk/generator/shape::members))
(common-lisp:deftype voice-connector-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (voice-connector-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-voice-connector-settings-"))
   (cdr-bucket common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'voice-connector-settings 'make-voice-connector-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdr-bucket))
      (common-lisp:list
       (common-lisp:cons "CdrBucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (voice-profile (:copier common-lisp:nil)
      (:conc-name "struct-shape-voice-profile-"))
   (voice-profile-id common-lisp:nil :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (voice-profile-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (voice-profile-domain-id common-lisp:nil :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (expiration-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'voice-profile 'make-voice-profile))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input voice-profile))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input voice-profile))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'expiration-timestamp))
      (common-lisp:list
       (common-lisp:cons "ExpirationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input voice-profile))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (voice-profile-domain (:copier common-lisp:nil)
      (:conc-name "struct-shape-voice-profile-domain-"))
   (voice-profile-domain-id common-lisp:nil :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (voice-profile-domain-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or voice-profile-domain-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or voice-profile-domain-description common-lisp:null))
   (server-side-encryption-configuration common-lisp:nil :type
    (common-lisp:or server-side-encryption-configuration common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'voice-profile-domain 'make-voice-profile-domain))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input voice-profile-domain))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input voice-profile-domain))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-side-encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerSideEncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input voice-profile-domain))
   common-lisp:nil))
(common-lisp:deftype voice-profile-domain-description () 'common-lisp:string)
(common-lisp:deftype voice-profile-domain-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (voice-profile-domain-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-voice-profile-domain-summary-"))
   (voice-profile-domain-id common-lisp:nil :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (voice-profile-domain-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or voice-profile-domain-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or voice-profile-domain-description common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'voice-profile-domain-summary
                    'make-voice-profile-domain-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-profile-domain-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-profile-domain-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-profile-domain-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype voice-profile-domain-summary-list ()
   '(trivial-types:proper-list voice-profile-domain-summary))
 (common-lisp:defun |make-voice-profile-domain-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            voice-profile-domain-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (voice-profile-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-voice-profile-summary-"))
   (voice-profile-id common-lisp:nil :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (voice-profile-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (voice-profile-domain-id common-lisp:nil :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (expiration-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'voice-profile-summary 'make-voice-profile-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-profile-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-profile-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'expiration-timestamp))
      (common-lisp:list
       (common-lisp:cons "ExpirationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-profile-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype voice-profile-summary-list ()
   '(trivial-types:proper-list voice-profile-summary))
 (common-lisp:defun |make-voice-profile-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list voice-profile-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (voice-tone-analysis-task (:copier common-lisp:nil)
      (:conc-name "struct-shape-voice-tone-analysis-task-"))
   (voice-tone-analysis-task-id common-lisp:nil :type
    (common-lisp:or non-empty-string256 common-lisp:null))
   (voice-tone-analysis-task-status common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (call-details common-lisp:nil :type
    (common-lisp:or call-details common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (updated-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (started-timestamp common-lisp:nil :type
    (common-lisp:or iso8601timestamp common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'voice-tone-analysis-task 'make-voice-tone-analysis-task))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-tone-analysis-task))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-tone-analysis-task))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-tone-analysis-task-id))
      (common-lisp:list
       (common-lisp:cons "VoiceToneAnalysisTaskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-tone-analysis-task-status))
      (common-lisp:list
       (common-lisp:cons "VoiceToneAnalysisTaskStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'call-details))
      (common-lisp:list
       (common-lisp:cons "CallDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-timestamp))
      (common-lisp:list
       (common-lisp:cons "StartedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-tone-analysis-task))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun associate-phone-numbers-with-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id e164phone-numbers
                     force-associate)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id e164phone-numbers
     force-associate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-phone-numbers-with-voice-connector-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A?operation=associate-phone-numbers"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "AssociatePhoneNumbersWithVoiceConnector" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-phone-numbers-with-voice-connector))
(common-lisp:progn
 (common-lisp:defun associate-phone-numbers-with-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id
                     e164phone-numbers force-associate)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-group-id e164phone-numbers
     force-associate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-phone-numbers-with-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connector-groups/~A?operation=associate-phone-numbers"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-group-id))))
        "AssociatePhoneNumbersWithVoiceConnectorGroup" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-phone-numbers-with-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun batch-delete-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-ids)
   (common-lisp:declare (common-lisp:ignorable phone-number-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-delete-phone-number-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/phone-numbers?operation=batch-delete" "BatchDeletePhoneNumber"
        "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-delete-phone-number))
(common-lisp:progn
 (common-lisp:defun batch-update-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-phone-number-request-items)
   (common-lisp:declare
    (common-lisp:ignorable update-phone-number-request-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-update-phone-number-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/phone-numbers?operation=batch-update" "BatchUpdatePhoneNumber"
        "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-update-phone-number))
(common-lisp:progn
 (common-lisp:defun create-phone-number-order
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key product-type e164phone-numbers)
   (common-lisp:declare (common-lisp:ignorable product-type e164phone-numbers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-phone-number-order-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/phone-number-orders" "CreatePhoneNumberOrder" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-phone-number-order))
(common-lisp:progn
 (common-lisp:defun create-proxy-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     participant-phone-numbers name expiry-minutes capabilities
                     number-selection-behavior geo-match-level
                     geo-match-params)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id participant-phone-numbers name
     expiry-minutes capabilities number-selection-behavior geo-match-level
     geo-match-params))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-proxy-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/proxy-sessions"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "CreateProxySession" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-proxy-session))
(common-lisp:progn
 (common-lisp:defun create-sip-media-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key aws-region name endpoints tags)
   (common-lisp:declare (common-lisp:ignorable aws-region name endpoints tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-sip-media-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/sip-media-applications" "CreateSipMediaApplication" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-sip-media-application))
(common-lisp:progn
 (common-lisp:defun create-sip-media-application-call
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key from-phone-number to-phone-number
                     sip-media-application-id sip-headers arguments-map)
   (common-lisp:declare
    (common-lisp:ignorable from-phone-number to-phone-number
     sip-media-application-id sip-headers arguments-map))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-sip-media-application-call-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/sip-media-applications/~A/calls"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "CreateSipMediaApplicationCall" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-sip-media-application-call))
(common-lisp:progn
 (common-lisp:defun create-sip-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name trigger-type trigger-value disabled
                     target-applications)
   (common-lisp:declare
    (common-lisp:ignorable name trigger-type trigger-value disabled
     target-applications))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-sip-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/sip-rules" "CreateSipRule" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-sip-rule))
(common-lisp:progn
 (common-lisp:defun create-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name aws-region require-encryption tags)
   (common-lisp:declare
    (common-lisp:ignorable name aws-region require-encryption tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-voice-connector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/voice-connectors" "CreateVoiceConnector" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-voice-connector))
(common-lisp:progn
 (common-lisp:defun create-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name voice-connector-items)
   (common-lisp:declare (common-lisp:ignorable name voice-connector-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/voice-connector-groups" "CreateVoiceConnectorGroup" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun create-voice-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key speaker-search-task-id)
   (common-lisp:declare (common-lisp:ignorable speaker-search-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-voice-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/voice-profiles" "CreateVoiceProfile" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-voice-profile))
(common-lisp:progn
 (common-lisp:defun create-voice-profile-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description
                     server-side-encryption-configuration client-request-token
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable name description
     server-side-encryption-configuration client-request-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-voice-profile-domain-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/voice-profile-domains" "CreateVoiceProfileDomain" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-voice-profile-domain))
(common-lisp:progn
 (common-lisp:defun delete-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-id)
   (common-lisp:declare (common-lisp:ignorable phone-number-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-phone-number-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/phone-numbers/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'phone-number-id))))
        "DeletePhoneNumber" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-phone-number))
(common-lisp:progn
 (common-lisp:defun delete-proxy-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id proxy-session-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id proxy-session-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-proxy-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/proxy-sessions/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'proxy-session-id))))
        "DeleteProxySession" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-proxy-session))
(common-lisp:progn
 (common-lisp:defun delete-sip-media-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id)
   (common-lisp:declare (common-lisp:ignorable sip-media-application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-sip-media-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sip-media-applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "DeleteSipMediaApplication" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-sip-media-application))
(common-lisp:progn
 (common-lisp:defun delete-sip-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-rule-id)
   (common-lisp:declare (common-lisp:ignorable sip-rule-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-sip-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sip-rules/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-rule-id))))
        "DeleteSipRule" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-sip-rule))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-voice-connector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-connectors/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnector" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-voice-connector))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-emergency-calling-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-emergency-calling-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/emergency-calling-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnectorEmergencyCallingConfiguration" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-voice-connector-emergency-calling-configuration))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-connector-groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-group-id))))
        "DeleteVoiceConnectorGroup" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-origination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-origination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/origination"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnectorOrigination" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-voice-connector-origination))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-proxy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-proxy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/programmable-numbers/proxy"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnectorProxy" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-voice-connector-proxy))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-streaming-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-streaming-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/streaming-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnectorStreamingConfiguration" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-voice-connector-streaming-configuration))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-termination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-termination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnectorTermination" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-voice-connector-termination))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-termination-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id usernames)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id usernames))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-termination-credentials-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination/credentials?operation=delete"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnectorTerminationCredentials" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-voice-connector-termination-credentials))
(common-lisp:progn
 (common-lisp:defun delete-voice-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-id)
   (common-lisp:declare (common-lisp:ignorable voice-profile-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-voice-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-profiles/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-profile-id))))
        "DeleteVoiceProfile" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-voice-profile))
(common-lisp:progn
 (common-lisp:defun delete-voice-profile-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-domain-id)
   (common-lisp:declare (common-lisp:ignorable voice-profile-domain-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-profile-domain-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-profile-domains/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-profile-domain-id))))
        "DeleteVoiceProfileDomain" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-voice-profile-domain))
(common-lisp:progn
 (common-lisp:defun disassociate-phone-numbers-from-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id e164phone-numbers)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id e164phone-numbers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-phone-numbers-from-voice-connector-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A?operation=disassociate-phone-numbers"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DisassociatePhoneNumbersFromVoiceConnector" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-phone-numbers-from-voice-connector))
(common-lisp:progn
 (common-lisp:defun disassociate-phone-numbers-from-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id
                     e164phone-numbers)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-group-id e164phone-numbers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-phone-numbers-from-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connector-groups/~A?operation=disassociate-phone-numbers"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-group-id))))
        "DisassociatePhoneNumbersFromVoiceConnectorGroup" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-phone-numbers-from-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun get-global-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'chime-sdk-voice-request :method "GET" :path
                                "/settings" :params
                                `(("Action" ,@"GetGlobalSettings")
                                  ("Version" ,@"2022-08-03"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-global-settings))
(common-lisp:progn
 (common-lisp:defun get-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-id)
   (common-lisp:declare (common-lisp:ignorable phone-number-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-phone-number-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/phone-numbers/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'phone-number-id))))
        "GetPhoneNumber" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-phone-number))
(common-lisp:progn
 (common-lisp:defun get-phone-number-order
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-order-id)
   (common-lisp:declare (common-lisp:ignorable phone-number-order-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-phone-number-order-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/phone-number-orders/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'phone-number-order-id))))
        "GetPhoneNumberOrder" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-phone-number-order))
(common-lisp:progn
 (common-lisp:defun get-phone-number-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'chime-sdk-voice-request :method "GET" :path
                                "/settings/phone-number" :params
                                `(("Action" ,@"GetPhoneNumberSettings")
                                  ("Version" ,@"2022-08-03"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-phone-number-settings))
(common-lisp:progn
 (common-lisp:defun get-proxy-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id proxy-session-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id proxy-session-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-proxy-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/proxy-sessions/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'proxy-session-id))))
        "GetProxySession" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-proxy-session))
(common-lisp:progn
 (common-lisp:defun get-sip-media-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id)
   (common-lisp:declare (common-lisp:ignorable sip-media-application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-sip-media-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sip-media-applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "GetSipMediaApplication" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-sip-media-application))
(common-lisp:progn
 (common-lisp:defun get-sip-media-application-alexa-skill-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id)
   (common-lisp:declare (common-lisp:ignorable sip-media-application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-sip-media-application-alexa-skill-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/sip-media-applications/~A/alexa-skill-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "GetSipMediaApplicationAlexaSkillConfiguration" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-sip-media-application-alexa-skill-configuration))
(common-lisp:progn
 (common-lisp:defun get-sip-media-application-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id)
   (common-lisp:declare (common-lisp:ignorable sip-media-application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-sip-media-application-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/sip-media-applications/~A/logging-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "GetSipMediaApplicationLoggingConfiguration" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-sip-media-application-logging-configuration))
(common-lisp:progn
 (common-lisp:defun get-sip-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-rule-id)
   (common-lisp:declare (common-lisp:ignorable sip-rule-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sip-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sip-rules/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-rule-id))))
        "GetSipRule" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-sip-rule))
(common-lisp:progn
 (common-lisp:defun get-speaker-search-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     speaker-search-task-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id speaker-search-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-speaker-search-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/speaker-search-tasks/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'speaker-search-task-id))))
        "GetSpeakerSearchTask" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-speaker-search-task))
(common-lisp:progn
 (common-lisp:defun get-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-voice-connector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-connectors/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnector" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-voice-connector))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-emergency-calling-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-emergency-calling-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/emergency-calling-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorEmergencyCallingConfiguration" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-voice-connector-emergency-calling-configuration))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-connector-groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-group-id))))
        "GetVoiceConnectorGroup" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/logging-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorLoggingConfiguration" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-voice-connector-logging-configuration))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-origination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-origination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/origination"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorOrigination" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-voice-connector-origination))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-proxy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-proxy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/programmable-numbers/proxy"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorProxy" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-voice-connector-proxy))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-streaming-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-streaming-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/streaming-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorStreamingConfiguration" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-voice-connector-streaming-configuration))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-termination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-termination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorTermination" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-voice-connector-termination))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-termination-health
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-termination-health-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination/health"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorTerminationHealth" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-voice-connector-termination-health))
(common-lisp:progn
 (common-lisp:defun get-voice-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-id)
   (common-lisp:declare (common-lisp:ignorable voice-profile-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-voice-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-profiles/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-profile-id))))
        "GetVoiceProfile" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-voice-profile))
(common-lisp:progn
 (common-lisp:defun get-voice-profile-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-domain-id)
   (common-lisp:declare (common-lisp:ignorable voice-profile-domain-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-voice-profile-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-profile-domains/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-profile-domain-id))))
        "GetVoiceProfileDomain" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-voice-profile-domain))
(common-lisp:progn
 (common-lisp:defun get-voice-tone-analysis-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     voice-tone-analysis-task-id is-caller)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id voice-tone-analysis-task-id
     is-caller))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-tone-analysis-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/voice-tone-analysis-tasks/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-tone-analysis-task-id))))
        "GetVoiceToneAnalysisTask" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-voice-tone-analysis-task))
(common-lisp:progn
 (common-lisp:defun list-available-voice-connector-regions ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'chime-sdk-voice-request :method "GET" :path
                                "/voice-connector-regions" :params
                                `(("Action"
                                   ,@"ListAvailableVoiceConnectorRegions")
                                  ("Version" ,@"2022-08-03"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'list-available-voice-connector-regions))
(common-lisp:progn
 (common-lisp:defun list-phone-number-orders
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-phone-number-orders-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/phone-number-orders" "ListPhoneNumberOrders" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-phone-number-orders))
(common-lisp:progn
 (common-lisp:defun list-phone-numbers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key status product-type filter-name
                     filter-value max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable status product-type filter-name filter-value
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-phone-numbers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/phone-numbers" "ListPhoneNumbers" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-phone-numbers))
(common-lisp:progn
 (common-lisp:defun list-proxy-sessions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id status next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id status next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-proxy-sessions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/proxy-sessions"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "ListProxySessions" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-proxy-sessions))
(common-lisp:progn
 (common-lisp:defun list-sip-media-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-sip-media-applications-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/sip-media-applications" "ListSipMediaApplications" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-sip-media-applications))
(common-lisp:progn
 (common-lisp:defun list-sip-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-sip-rules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/sip-rules" "ListSipRules" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-sip-rules))
(common-lisp:progn
 (common-lisp:defun list-supported-phone-number-countries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key product-type)
   (common-lisp:declare (common-lisp:ignorable product-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-supported-phone-number-countries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/phone-number-countries" "ListSupportedPhoneNumberCountries"
        "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-supported-phone-number-countries))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/tags" "ListTagsForResource" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-voice-connector-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-voice-connector-groups-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/voice-connector-groups" "ListVoiceConnectorGroups" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-voice-connector-groups))
(common-lisp:progn
 (common-lisp:defun list-voice-connector-termination-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-voice-connector-termination-credentials-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination/credentials"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "ListVoiceConnectorTerminationCredentials" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-voice-connector-termination-credentials))
(common-lisp:progn
 (common-lisp:defun list-voice-connectors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-voice-connectors-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/voice-connectors" "ListVoiceConnectors" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-voice-connectors))
(common-lisp:progn
 (common-lisp:defun list-voice-profile-domains
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-voice-profile-domains-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/voice-profile-domains" "ListVoiceProfileDomains" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-voice-profile-domains))
(common-lisp:progn
 (common-lisp:defun list-voice-profiles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-domain-id next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable voice-profile-domain-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-voice-profiles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/voice-profiles" "ListVoiceProfiles" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-voice-profiles))
(common-lisp:progn
 (common-lisp:defun put-sip-media-application-alexa-skill-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id
                     sip-media-application-alexa-skill-configuration)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id
     sip-media-application-alexa-skill-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-sip-media-application-alexa-skill-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/sip-media-applications/~A/alexa-skill-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "PutSipMediaApplicationAlexaSkillConfiguration" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-sip-media-application-alexa-skill-configuration))
(common-lisp:progn
 (common-lisp:defun put-sip-media-application-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id
                     sip-media-application-logging-configuration)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id
     sip-media-application-logging-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-sip-media-application-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/sip-media-applications/~A/logging-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "PutSipMediaApplicationLoggingConfiguration" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-sip-media-application-logging-configuration))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-emergency-calling-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     emergency-calling-configuration)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id emergency-calling-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-emergency-calling-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/emergency-calling-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorEmergencyCallingConfiguration" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-voice-connector-emergency-calling-configuration))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id logging-configuration)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id logging-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/logging-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorLoggingConfiguration" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-voice-connector-logging-configuration))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-origination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id origination)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id origination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-origination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/origination"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorOrigination" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-voice-connector-origination))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-proxy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     default-session-expiry-minutes phone-number-pool-countries
                     fall-back-phone-number disabled)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id default-session-expiry-minutes
     phone-number-pool-countries fall-back-phone-number disabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-proxy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/programmable-numbers/proxy"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorProxy" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-voice-connector-proxy))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-streaming-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     streaming-configuration)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id streaming-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-streaming-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/streaming-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorStreamingConfiguration" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-voice-connector-streaming-configuration))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-termination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id termination)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id termination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-termination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorTermination" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-voice-connector-termination))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-termination-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id credentials)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id credentials))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-termination-credentials-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination/credentials?operation=put"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorTerminationCredentials" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-voice-connector-termination-credentials))
(common-lisp:progn
 (common-lisp:defun restore-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-id)
   (common-lisp:declare (common-lisp:ignorable phone-number-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-restore-phone-number-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/phone-numbers/~A?operation=restore"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'phone-number-id))))
        "RestorePhoneNumber" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'restore-phone-number))
(common-lisp:progn
 (common-lisp:defun search-available-phone-numbers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key area-code city country state
                     toll-free-prefix phone-number-type max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable area-code city country state toll-free-prefix
     phone-number-type max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-search-available-phone-numbers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/search?type=phone-numbers" "SearchAvailablePhoneNumbers"
        "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'search-available-phone-numbers))
(common-lisp:progn
 (common-lisp:defun start-speaker-search-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id transaction-id
                     voice-profile-domain-id client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id transaction-id
     voice-profile-domain-id client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-speaker-search-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/speaker-search-tasks"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "StartSpeakerSearchTask" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-speaker-search-task))
(common-lisp:progn
 (common-lisp:defun start-voice-tone-analysis-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id transaction-id
                     language-code client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id transaction-id language-code
     client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-voice-tone-analysis-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/voice-tone-analysis-tasks"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "StartVoiceToneAnalysisTask" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-voice-tone-analysis-task))
(common-lisp:progn
 (common-lisp:defun stop-speaker-search-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     speaker-search-task-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id speaker-search-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-speaker-search-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/speaker-search-tasks/~A?operation=stop"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'speaker-search-task-id))))
        "StopSpeakerSearchTask" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-speaker-search-task))
(common-lisp:progn
 (common-lisp:defun stop-voice-tone-analysis-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     voice-tone-analysis-task-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id voice-tone-analysis-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-voice-tone-analysis-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/voice-tone-analysis-tasks/~A?operation=stop"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-tone-analysis-task-id))))
        "StopVoiceToneAnalysisTask" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-voice-tone-analysis-task))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/tags?operation=tag-resource" "TagResource" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/tags?operation=untag-resource" "UntagResource" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-global-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector)
   (common-lisp:declare (common-lisp:ignorable voice-connector))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-global-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        "/settings" "UpdateGlobalSettings" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-global-settings))
(common-lisp:progn
 (common-lisp:defun update-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-id product-type
                     calling-name)
   (common-lisp:declare
    (common-lisp:ignorable phone-number-id product-type calling-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-phone-number-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/phone-numbers/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'phone-number-id))))
        "UpdatePhoneNumber" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-phone-number))
(common-lisp:progn
 (common-lisp:defun update-phone-number-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key calling-name)
   (common-lisp:declare (common-lisp:ignorable calling-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-phone-number-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        "/settings/phone-number" "UpdatePhoneNumberSettings" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-phone-number-settings))
(common-lisp:progn
 (common-lisp:defun update-proxy-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id proxy-session-id
                     capabilities expiry-minutes)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id proxy-session-id capabilities
     expiry-minutes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-proxy-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/proxy-sessions/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'proxy-session-id))))
        "UpdateProxySession" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-proxy-session))
(common-lisp:progn
 (common-lisp:defun update-sip-media-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id name endpoints)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id name endpoints))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-sip-media-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sip-media-applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "UpdateSipMediaApplication" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-sip-media-application))
(common-lisp:progn
 (common-lisp:defun update-sip-media-application-call
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id transaction-id
                     arguments)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id transaction-id arguments))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-sip-media-application-call-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/sip-media-applications/~A/calls/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'transaction-id))))
        "UpdateSipMediaApplicationCall" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-sip-media-application-call))
(common-lisp:progn
 (common-lisp:defun update-sip-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-rule-id name disabled
                     target-applications)
   (common-lisp:declare
    (common-lisp:ignorable sip-rule-id name disabled target-applications))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-sip-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sip-rules/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-rule-id))))
        "UpdateSipRule" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-sip-rule))
(common-lisp:progn
 (common-lisp:defun update-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id name
                     require-encryption)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id name require-encryption))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-voice-connector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-connectors/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "UpdateVoiceConnector" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-voice-connector))
(common-lisp:progn
 (common-lisp:defun update-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id name
                     voice-connector-items)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-group-id name
     voice-connector-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-connector-groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-group-id))))
        "UpdateVoiceConnectorGroup" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun update-voice-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-id speaker-search-task-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-profile-id speaker-search-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-voice-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-profiles/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-profile-id))))
        "UpdateVoiceProfile" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-voice-profile))
(common-lisp:progn
 (common-lisp:defun update-voice-profile-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-domain-id name description)
   (common-lisp:declare
    (common-lisp:ignorable voice-profile-domain-id name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-voice-profile-domain-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-profile-domains/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-profile-domain-id))))
        "UpdateVoiceProfileDomain" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-voice-profile-domain))
(common-lisp:progn
 (common-lisp:defun validate-e911address
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key aws-account-id street-number street-info
                     city state country postal-code)
   (common-lisp:declare
    (common-lisp:ignorable aws-account-id street-number street-info city state
     country postal-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-validate-e911address-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/emergency-calling/address" "ValidateE911Address" "2022-08-03"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'validate-e911address))
