;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/sesv2/api
  (:use)
  (:nicknames #:aws/sesv2)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/sesv2/api)
(common-lisp:progn
 (common-lisp:defclass sesv2-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "sesv2" :protocol
                        :rest-json))
 (common-lisp:export 'sesv2-request))
(common-lisp:progn
 (common-lisp:define-condition sesv2-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'sesv2-error))
(common-lisp:defvar *error-map*
  '(("AccountSuspendedException" . account-suspended-exception)
    ("AlreadyExistsException" . already-exists-exception)
    ("BadRequestException" . bad-request-exception)
    ("ConcurrentModificationException" . concurrent-modification-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServiceErrorException" . internal-service-error-exception)
    ("InvalidNextTokenException" . invalid-next-token-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("MailFromDomainNotVerifiedException"
     . mail-from-domain-not-verified-exception)
    ("MessageRejected" . message-rejected)
    ("NotFoundException" . not-found-exception)
    ("SendingPausedException" . sending-paused-exception)
    ("TooManyRequestsException" . too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (account-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-account-details-"))
   (mail-type common-lisp:nil :type
    (common-lisp:or mail-type common-lisp:null))
   (website-url common-lisp:nil :type
    (common-lisp:or website-url common-lisp:null))
   (contact-language common-lisp:nil :type
    (common-lisp:or contact-language common-lisp:null))
   (use-case-description common-lisp:nil :type
    (common-lisp:or use-case-description common-lisp:null))
   (additional-contact-email-addresses common-lisp:nil :type
    (common-lisp:or additional-contact-email-addresses common-lisp:null))
   (review-details common-lisp:nil :type
    (common-lisp:or review-details common-lisp:null)))
 (common-lisp:export (common-lisp:list 'account-details 'make-account-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mail-type))
      (common-lisp:list
       (common-lisp:cons "MailType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'website-url))
      (common-lisp:list
       (common-lisp:cons "WebsiteURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contact-language))
      (common-lisp:list
       (common-lisp:cons "ContactLanguage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'use-case-description))
      (common-lisp:list
       (common-lisp:cons "UseCaseDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-contact-email-addresses))
      (common-lisp:list
       (common-lisp:cons "AdditionalContactEmailAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'review-details))
      (common-lisp:list
       (common-lisp:cons "ReviewDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition account-suspended-exception
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'account-suspended-exception)))
(common-lisp:deftype additional-contact-email-address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype additional-contact-email-addresses ()
   '(trivial-types:proper-list additional-contact-email-address))
 (common-lisp:defun |make-additional-contact-email-addresses|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            additional-contact-email-address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition already-exists-exception
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'already-exists-exception)))
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:deftype attributes-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'bad-request-exception)))
(common-lisp:progn
 (common-lisp:deftype batch-get-metric-data-queries ()
   '(trivial-types:proper-list batch-get-metric-data-query))
 (common-lisp:defun |make-batch-get-metric-data-queries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-get-metric-data-query))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-metric-data-query (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-metric-data-query-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or query-identifier common-lisp:null))
   (namespace (common-lisp:error ":namespace is required") :type
    (common-lisp:or metric-namespace common-lisp:null))
   (metric (common-lisp:error ":metric is required") :type
    (common-lisp:or metric common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or dimensions common-lisp:null))
   (start-date (common-lisp:error ":start-date is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (end-date (common-lisp:error ":end-date is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-metric-data-query
                    'make-batch-get-metric-data-query))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-metric-data-query))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-metric-data-query))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric))
      (common-lisp:list
       (common-lisp:cons "Metric"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date))
      (common-lisp:list
       (common-lisp:cons "StartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-date))
      (common-lisp:list
       (common-lisp:cons "EndDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-metric-data-query))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-metric-data-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-metric-data-request-"))
   (queries (common-lisp:error ":queries is required") :type
    (common-lisp:or batch-get-metric-data-queries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-metric-data-request
                    'make-batch-get-metric-data-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-metric-data-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-metric-data-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queries))
      (common-lisp:list
       (common-lisp:cons "Queries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-metric-data-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-metric-data-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-metric-data-response-"))
   (results common-lisp:nil :type
    (common-lisp:or metric-data-result-list common-lisp:null))
   (errors common-lisp:nil :type
    (common-lisp:or metric-data-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-metric-data-response
                    'make-batch-get-metric-data-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-metric-data-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-metric-data-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'results))
      (common-lisp:list
       (common-lisp:cons "Results"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-metric-data-response))
   common-lisp:nil))
(common-lisp:deftype behavior-on-mx-failure () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype blacklist-entries ()
   '(trivial-types:proper-list blacklist-entry))
 (common-lisp:defun |make-blacklist-entries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list blacklist-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (blacklist-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-blacklist-entry-"))
   (rbl-name common-lisp:nil :type (common-lisp:or rbl-name common-lisp:null))
   (listing-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or blacklisting-description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'blacklist-entry 'make-blacklist-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input blacklist-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input blacklist-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rbl-name))
      (common-lisp:list
       (common-lisp:cons "RblName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'listing-time))
      (common-lisp:list
       (common-lisp:cons "ListingTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input blacklist-entry))
   common-lisp:nil))
(common-lisp:deftype blacklist-item-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype blacklist-item-names ()
   '(trivial-types:proper-list blacklist-item-name))
 (common-lisp:defun |make-blacklist-item-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list blacklist-item-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype blacklist-report () 'common-lisp:hash-table)
 (common-lisp:defun |make-blacklist-report|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype blacklisting-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (body (:copier common-lisp:nil) (:conc-name "struct-shape-body-"))
   (text common-lisp:nil :type (common-lisp:or content common-lisp:null))
   (html common-lisp:nil :type (common-lisp:or content common-lisp:null)))
 (common-lisp:export (common-lisp:list 'body 'make-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input body))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input body))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'html))
      (common-lisp:list
       (common-lisp:cons "Html"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input body))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (bulk-email-content (:copier common-lisp:nil)
      (:conc-name "struct-shape-bulk-email-content-"))
   (template common-lisp:nil :type (common-lisp:or template common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bulk-email-content 'make-bulk-email-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bulk-email-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bulk-email-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template))
      (common-lisp:list
       (common-lisp:cons "Template"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bulk-email-content))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (bulk-email-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-bulk-email-entry-"))
   (destination (common-lisp:error ":destination is required") :type
    (common-lisp:or destination common-lisp:null))
   (replacement-tags common-lisp:nil :type
    (common-lisp:or message-tag-list common-lisp:null))
   (replacement-email-content common-lisp:nil :type
    (common-lisp:or replacement-email-content common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bulk-email-entry 'make-bulk-email-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bulk-email-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bulk-email-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replacement-tags))
      (common-lisp:list
       (common-lisp:cons "ReplacementTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replacement-email-content))
      (common-lisp:list
       (common-lisp:cons "ReplacementEmailContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bulk-email-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bulk-email-entry-list ()
   '(trivial-types:proper-list bulk-email-entry))
 (common-lisp:defun |make-bulk-email-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bulk-email-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (bulk-email-entry-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-bulk-email-entry-result-"))
   (status common-lisp:nil :type
    (common-lisp:or bulk-email-status common-lisp:null))
   (error common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (message-id common-lisp:nil :type
    (common-lisp:or outbound-message-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bulk-email-entry-result 'make-bulk-email-entry-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bulk-email-entry-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bulk-email-entry-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bulk-email-entry-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bulk-email-entry-result-list ()
   '(trivial-types:proper-list bulk-email-entry-result))
 (common-lisp:defun |make-bulk-email-entry-result-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bulk-email-entry-result))
   aws-sdk/generator/shape::members))
(common-lisp:deftype bulk-email-status () 'common-lisp:string)
(common-lisp:deftype campaign-id () 'common-lisp:string)
(common-lisp:deftype case-id () 'common-lisp:string)
(common-lisp:deftype charset () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-cloud-watch-destination-"))
   (dimension-configurations
    (common-lisp:error ":dimension-configurations is required") :type
    (common-lisp:or cloud-watch-dimension-configurations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-destination 'make-cloud-watch-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-configurations))
      (common-lisp:list
       (common-lisp:cons "DimensionConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-dimension-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-cloud-watch-dimension-configuration-"))
   (dimension-name (common-lisp:error ":dimension-name is required") :type
    (common-lisp:or dimension-name common-lisp:null))
   (dimension-value-source
    (common-lisp:error ":dimension-value-source is required") :type
    (common-lisp:or dimension-value-source common-lisp:null))
   (default-dimension-value
    (common-lisp:error ":default-dimension-value is required") :type
    (common-lisp:or default-dimension-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-dimension-configuration
                    'make-cloud-watch-dimension-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-dimension-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-dimension-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-name))
      (common-lisp:list
       (common-lisp:cons "DimensionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-value-source))
      (common-lisp:list
       (common-lisp:cons "DimensionValueSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-dimension-value))
      (common-lisp:list
       (common-lisp:cons "DefaultDimensionValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-dimension-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cloud-watch-dimension-configurations ()
   '(trivial-types:proper-list cloud-watch-dimension-configuration))
 (common-lisp:defun |make-cloud-watch-dimension-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cloud-watch-dimension-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition concurrent-modification-exception
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'concurrent-modification-exception)))
(common-lisp:deftype configuration-set-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype configuration-set-name-list ()
   '(trivial-types:proper-list configuration-set-name))
 (common-lisp:defun |make-configuration-set-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration-set-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'conflict-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (contact (:copier common-lisp:nil) (:conc-name "struct-shape-contact-"))
   (email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (topic-preferences common-lisp:nil :type
    (common-lisp:or topic-preference-list common-lisp:null))
   (topic-default-preferences common-lisp:nil :type
    (common-lisp:or topic-preference-list common-lisp:null))
   (unsubscribe-all common-lisp:nil :type
    (common-lisp:or unsubscribe-all common-lisp:null))
   (last-updated-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'contact 'make-contact))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input contact))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input contact))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "EmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-preferences))
      (common-lisp:list
       (common-lisp:cons "TopicPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'topic-default-preferences))
      (common-lisp:list
       (common-lisp:cons "TopicDefaultPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unsubscribe-all))
      (common-lisp:list
       (common-lisp:cons "UnsubscribeAll"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input contact))
   common-lisp:nil))
(common-lisp:deftype contact-language () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (contact-list (:copier common-lisp:nil)
      (:conc-name "struct-shape-contact-list-"))
   (contact-list-name common-lisp:nil :type
    (common-lisp:or contact-list-name common-lisp:null))
   (last-updated-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'contact-list 'make-contact-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input contact-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input contact-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contact-list-name))
      (common-lisp:list
       (common-lisp:cons "ContactListName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input contact-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (contact-list-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-contact-list-destination-"))
   (contact-list-name (common-lisp:error ":contact-list-name is required")
    :type (common-lisp:or contact-list-name common-lisp:null))
   (contact-list-import-action
    (common-lisp:error ":contact-list-import-action is required") :type
    (common-lisp:or contact-list-import-action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'contact-list-destination 'make-contact-list-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          contact-list-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          contact-list-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contact-list-name))
      (common-lisp:list
       (common-lisp:cons "ContactListName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'contact-list-import-action))
      (common-lisp:list
       (common-lisp:cons "ContactListImportAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          contact-list-destination))
   common-lisp:nil))
(common-lisp:deftype contact-list-import-action () 'common-lisp:string)
(common-lisp:deftype contact-list-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (content (:copier common-lisp:nil) (:conc-name "struct-shape-content-"))
   (data (common-lisp:error ":data is required") :type
    (common-lisp:or message-data common-lisp:null))
   (charset common-lisp:nil :type (common-lisp:or charset common-lisp:null)))
 (common-lisp:export (common-lisp:list 'content 'make-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charset))
      (common-lisp:list
       (common-lisp:cons "Charset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input content))
   common-lisp:nil))
(common-lisp:deftype counter () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-event-destination-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-configuration-set-event-destination-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination-name
    (common-lisp:error ":event-destination-name is required") :type
    (common-lisp:or event-destination-name common-lisp:null))
   (event-destination (common-lisp:error ":event-destination is required")
    :type (common-lisp:or event-destination-definition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-event-destination-request
                    'make-create-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-destination-name))
      (common-lisp:list
       (common-lisp:cons "EventDestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destination))
      (common-lisp:list
       (common-lisp:cons "EventDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-event-destination-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-configuration-set-event-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-event-destination-response
                    'make-create-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-configuration-set-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (tracking-options common-lisp:nil :type
    (common-lisp:or tracking-options common-lisp:null))
   (delivery-options common-lisp:nil :type
    (common-lisp:or delivery-options common-lisp:null))
   (reputation-options common-lisp:nil :type
    (common-lisp:or reputation-options common-lisp:null))
   (sending-options common-lisp:nil :type
    (common-lisp:or sending-options common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (suppression-options common-lisp:nil :type
    (common-lisp:or suppression-options common-lisp:null))
   (vdm-options common-lisp:nil :type
    (common-lisp:or vdm-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-request
                    'make-create-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracking-options))
      (common-lisp:list
       (common-lisp:cons "TrackingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-options))
      (common-lisp:list
       (common-lisp:cons "DeliveryOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reputation-options))
      (common-lisp:list
       (common-lisp:cons "ReputationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-options))
      (common-lisp:list
       (common-lisp:cons "SendingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suppression-options))
      (common-lisp:list
       (common-lisp:cons "SuppressionOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vdm-options))
      (common-lisp:list
       (common-lisp:cons "VdmOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-configuration-set-response-")))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-response
                    'make-create-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-contact-list-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-contact-list-request-"))
   (contact-list-name (common-lisp:error ":contact-list-name is required")
    :type (common-lisp:or contact-list-name common-lisp:null))
   (topics common-lisp:nil :type (common-lisp:or topics common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-contact-list-request
                    'make-create-contact-list-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-contact-list-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-contact-list-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contact-list-name))
      (common-lisp:list
       (common-lisp:cons "ContactListName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topics))
      (common-lisp:list
       (common-lisp:cons "Topics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-contact-list-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-contact-list-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-contact-list-response-")))
 (common-lisp:export
  (common-lisp:list 'create-contact-list-response
                    'make-create-contact-list-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-contact-list-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-contact-list-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-contact-list-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-contact-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-contact-request-"))
   (contact-list-name (common-lisp:error ":contact-list-name is required")
    :type (common-lisp:or contact-list-name common-lisp:null))
   (email-address (common-lisp:error ":email-address is required") :type
    (common-lisp:or email-address common-lisp:null))
   (topic-preferences common-lisp:nil :type
    (common-lisp:or topic-preference-list common-lisp:null))
   (unsubscribe-all common-lisp:nil :type
    (common-lisp:or unsubscribe-all common-lisp:null))
   (attributes-data common-lisp:nil :type
    (common-lisp:or attributes-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-contact-request 'make-create-contact-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-contact-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-contact-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "EmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-preferences))
      (common-lisp:list
       (common-lisp:cons "TopicPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unsubscribe-all))
      (common-lisp:list
       (common-lisp:cons "UnsubscribeAll"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes-data))
      (common-lisp:list
       (common-lisp:cons "AttributesData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-contact-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-contact-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-contact-response-")))
 (common-lisp:export
  (common-lisp:list 'create-contact-response 'make-create-contact-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-contact-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-contact-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-contact-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-custom-verification-email-template-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-custom-verification-email-template-request-"))
   (template-name (common-lisp:error ":template-name is required") :type
    (common-lisp:or email-template-name common-lisp:null))
   (from-email-address (common-lisp:error ":from-email-address is required")
    :type (common-lisp:or email-address common-lisp:null))
   (template-subject (common-lisp:error ":template-subject is required") :type
    (common-lisp:or email-template-subject common-lisp:null))
   (template-content (common-lisp:error ":template-content is required") :type
    (common-lisp:or template-content common-lisp:null))
   (success-redirection-url
    (common-lisp:error ":success-redirection-url is required") :type
    (common-lisp:or success-redirection-url common-lisp:null))
   (failure-redirection-url
    (common-lisp:error ":failure-redirection-url is required") :type
    (common-lisp:or failure-redirection-url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-custom-verification-email-template-request
                    'make-create-custom-verification-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-verification-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-verification-email-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-subject))
      (common-lisp:list
       (common-lisp:cons "TemplateSubject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-content))
      (common-lisp:list
       (common-lisp:cons "TemplateContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'success-redirection-url))
      (common-lisp:list
       (common-lisp:cons "SuccessRedirectionURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-redirection-url))
      (common-lisp:list
       (common-lisp:cons "FailureRedirectionURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-verification-email-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-custom-verification-email-template-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-custom-verification-email-template-response-")))
 (common-lisp:export
  (common-lisp:list 'create-custom-verification-email-template-response
                    'make-create-custom-verification-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-verification-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-verification-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-verification-email-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-dedicated-ip-pool-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-dedicated-ip-pool-request-"))
   (pool-name (common-lisp:error ":pool-name is required") :type
    (common-lisp:or pool-name common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (scaling-mode common-lisp:nil :type
    (common-lisp:or scaling-mode common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-dedicated-ip-pool-request
                    'make-create-dedicated-ip-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-name))
      (common-lisp:list
       (common-lisp:cons "PoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scaling-mode))
      (common-lisp:list
       (common-lisp:cons "ScalingMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-dedicated-ip-pool-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-dedicated-ip-pool-response-")))
 (common-lisp:export
  (common-lisp:list 'create-dedicated-ip-pool-response
                    'make-create-dedicated-ip-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-deliverability-test-report-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-deliverability-test-report-request-"))
   (report-name common-lisp:nil :type
    (common-lisp:or report-name common-lisp:null))
   (from-email-address (common-lisp:error ":from-email-address is required")
    :type (common-lisp:or email-address common-lisp:null))
   (content (common-lisp:error ":content is required") :type
    (common-lisp:or email-content common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deliverability-test-report-request
                    'make-create-deliverability-test-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-name))
      (common-lisp:list
       (common-lisp:cons "ReportName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-deliverability-test-report-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-deliverability-test-report-response-"))
   (report-id (common-lisp:error ":report-id is required") :type
    (common-lisp:or report-id common-lisp:null))
   (deliverability-test-status
    (common-lisp:error ":deliverability-test-status is required") :type
    (common-lisp:or deliverability-test-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deliverability-test-report-response
                    'make-create-deliverability-test-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-id))
      (common-lisp:list
       (common-lisp:cons "ReportId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deliverability-test-status))
      (common-lisp:list
       (common-lisp:cons "DeliverabilityTestStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-email-identity-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-email-identity-policy-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (policy-name (common-lisp:error ":policy-name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (policy (common-lisp:error ":policy is required") :type
    (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-email-identity-policy-request
                    'make-create-email-identity-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-email-identity-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-email-identity-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'create-email-identity-policy-response
                    'make-create-email-identity-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-email-identity-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-email-identity-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (dkim-signing-attributes common-lisp:nil :type
    (common-lisp:or dkim-signing-attributes common-lisp:null))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-email-identity-request
                    'make-create-email-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-identity))
      (common-lisp:list
       (common-lisp:cons "EmailIdentity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dkim-signing-attributes))
      (common-lisp:list
       (common-lisp:cons "DkimSigningAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-email-identity-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-email-identity-response-"))
   (identity-type common-lisp:nil :type
    (common-lisp:or identity-type common-lisp:null))
   (verified-for-sending-status common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (dkim-attributes common-lisp:nil :type
    (common-lisp:or dkim-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-email-identity-response
                    'make-create-email-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-type))
      (common-lisp:list
       (common-lisp:cons "IdentityType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verified-for-sending-status))
      (common-lisp:list
       (common-lisp:cons "VerifiedForSendingStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dkim-attributes))
      (common-lisp:list
       (common-lisp:cons "DkimAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-email-template-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-email-template-request-"))
   (template-name (common-lisp:error ":template-name is required") :type
    (common-lisp:or email-template-name common-lisp:null))
   (template-content (common-lisp:error ":template-content is required") :type
    (common-lisp:or email-template-content common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-email-template-request
                    'make-create-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-content))
      (common-lisp:list
       (common-lisp:cons "TemplateContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-email-template-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-email-template-response-")))
 (common-lisp:export
  (common-lisp:list 'create-email-template-response
                    'make-create-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-import-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-import-job-request-"))
   (import-destination (common-lisp:error ":import-destination is required")
    :type (common-lisp:or import-destination common-lisp:null))
   (import-data-source (common-lisp:error ":import-data-source is required")
    :type (common-lisp:or import-data-source common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-import-job-request
                    'make-create-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-destination))
      (common-lisp:list
       (common-lisp:cons "ImportDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-data-source))
      (common-lisp:list
       (common-lisp:cons "ImportDataSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-import-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-import-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-import-job-response
                    'make-create-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-response))
   common-lisp:nil))
(common-lisp:deftype custom-redirect-domain () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (custom-verification-email-template-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-custom-verification-email-template-metadata-"))
   (template-name common-lisp:nil :type
    (common-lisp:or email-template-name common-lisp:null))
   (from-email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (template-subject common-lisp:nil :type
    (common-lisp:or email-template-subject common-lisp:null))
   (success-redirection-url common-lisp:nil :type
    (common-lisp:or success-redirection-url common-lisp:null))
   (failure-redirection-url common-lisp:nil :type
    (common-lisp:or failure-redirection-url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-verification-email-template-metadata
                    'make-custom-verification-email-template-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-verification-email-template-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-verification-email-template-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-subject))
      (common-lisp:list
       (common-lisp:cons "TemplateSubject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'success-redirection-url))
      (common-lisp:list
       (common-lisp:cons "SuccessRedirectionURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-redirection-url))
      (common-lisp:list
       (common-lisp:cons "FailureRedirectionURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-verification-email-template-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype custom-verification-email-templates-list ()
   '(trivial-types:proper-list custom-verification-email-template-metadata))
 (common-lisp:defun |make-custom-verification-email-templates-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-verification-email-template-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (daily-volume (:copier common-lisp:nil)
      (:conc-name "struct-shape-daily-volume-"))
   (start-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (volume-statistics common-lisp:nil :type
    (common-lisp:or volume-statistics common-lisp:null))
   (domain-isp-placements common-lisp:nil :type
    (common-lisp:or domain-isp-placements common-lisp:null)))
 (common-lisp:export (common-lisp:list 'daily-volume 'make-daily-volume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input daily-volume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input daily-volume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date))
      (common-lisp:list
       (common-lisp:cons "StartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-statistics))
      (common-lisp:list
       (common-lisp:cons "VolumeStatistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-isp-placements))
      (common-lisp:list
       (common-lisp:cons "DomainIspPlacements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input daily-volume))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype daily-volumes ()
   '(trivial-types:proper-list daily-volume))
 (common-lisp:defun |make-daily-volumes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list daily-volume))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (dashboard-attributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-dashboard-attributes-"))
   (engagement-metrics common-lisp:nil :type
    (common-lisp:or feature-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dashboard-attributes 'make-dashboard-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dashboard-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dashboard-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engagement-metrics))
      (common-lisp:list
       (common-lisp:cons "EngagementMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dashboard-attributes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dashboard-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-dashboard-options-"))
   (engagement-metrics common-lisp:nil :type
    (common-lisp:or feature-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dashboard-options 'make-dashboard-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dashboard-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dashboard-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engagement-metrics))
      (common-lisp:list
       (common-lisp:cons "EngagementMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dashboard-options))
   common-lisp:nil))
(common-lisp:deftype data-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dedicated-ip (:copier common-lisp:nil)
      (:conc-name "struct-shape-dedicated-ip-"))
   (ip (common-lisp:error ":ip is required") :type
    (common-lisp:or ip common-lisp:null))
   (warmup-status (common-lisp:error ":warmup-status is required") :type
    (common-lisp:or warmup-status common-lisp:null))
   (warmup-percentage (common-lisp:error ":warmup-percentage is required")
    :type (common-lisp:or percentage100wrapper common-lisp:null))
   (pool-name common-lisp:nil :type
    (common-lisp:or pool-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dedicated-ip 'make-dedicated-ip))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dedicated-ip))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dedicated-ip))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip))
      (common-lisp:list
       (common-lisp:cons "Ip"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warmup-status))
      (common-lisp:list
       (common-lisp:cons "WarmupStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warmup-percentage))
      (common-lisp:list
       (common-lisp:cons "WarmupPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-name))
      (common-lisp:list
       (common-lisp:cons "PoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dedicated-ip))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dedicated-ip-list ()
   '(trivial-types:proper-list dedicated-ip))
 (common-lisp:defun |make-dedicated-ip-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dedicated-ip))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (dedicated-ip-pool (:copier common-lisp:nil)
      (:conc-name "struct-shape-dedicated-ip-pool-"))
   (pool-name (common-lisp:error ":pool-name is required") :type
    (common-lisp:or pool-name common-lisp:null))
   (scaling-mode (common-lisp:error ":scaling-mode is required") :type
    (common-lisp:or scaling-mode common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dedicated-ip-pool 'make-dedicated-ip-pool))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dedicated-ip-pool))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dedicated-ip-pool))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-name))
      (common-lisp:list
       (common-lisp:cons "PoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scaling-mode))
      (common-lisp:list
       (common-lisp:cons "ScalingMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dedicated-ip-pool))
   common-lisp:nil))
(common-lisp:deftype default-dimension-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-event-destination-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-configuration-set-event-destination-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination-name
    (common-lisp:error ":event-destination-name is required") :type
    (common-lisp:or event-destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-event-destination-request
                    'make-delete-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-event-destination-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-configuration-set-event-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-event-destination-response
                    'make-delete-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-configuration-set-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-request
                    'make-delete-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-configuration-set-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-response
                    'make-delete-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-contact-list-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-contact-list-request-"))
   (contact-list-name (common-lisp:error ":contact-list-name is required")
    :type (common-lisp:or contact-list-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-contact-list-request
                    'make-delete-contact-list-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-contact-list-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-contact-list-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-contact-list-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-contact-list-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-contact-list-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-contact-list-response
                    'make-delete-contact-list-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-contact-list-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-contact-list-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-contact-list-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-contact-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-contact-request-"))
   (contact-list-name (common-lisp:error ":contact-list-name is required")
    :type (common-lisp:or contact-list-name common-lisp:null))
   (email-address (common-lisp:error ":email-address is required") :type
    (common-lisp:or email-address common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-contact-request 'make-delete-contact-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-contact-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-contact-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-contact-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-contact-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-contact-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-contact-response 'make-delete-contact-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-contact-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-contact-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-contact-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-custom-verification-email-template-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-custom-verification-email-template-request-"))
   (template-name (common-lisp:error ":template-name is required") :type
    (common-lisp:or email-template-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-custom-verification-email-template-request
                    'make-delete-custom-verification-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-verification-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-verification-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-verification-email-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-custom-verification-email-template-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-custom-verification-email-template-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-custom-verification-email-template-response
                    'make-delete-custom-verification-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-verification-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-verification-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-verification-email-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-dedicated-ip-pool-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-dedicated-ip-pool-request-"))
   (pool-name (common-lisp:error ":pool-name is required") :type
    (common-lisp:or pool-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-dedicated-ip-pool-request
                    'make-delete-dedicated-ip-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-dedicated-ip-pool-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-dedicated-ip-pool-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-dedicated-ip-pool-response
                    'make-delete-dedicated-ip-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-email-identity-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-email-identity-policy-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (policy-name (common-lisp:error ":policy-name is required") :type
    (common-lisp:or policy-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-email-identity-policy-request
                    'make-delete-email-identity-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-email-identity-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-email-identity-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-email-identity-policy-response
                    'make-delete-email-identity-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-email-identity-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-email-identity-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-email-identity-request
                    'make-delete-email-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-email-identity-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-email-identity-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-email-identity-response
                    'make-delete-email-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-email-template-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-email-template-request-"))
   (template-name (common-lisp:error ":template-name is required") :type
    (common-lisp:or email-template-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-email-template-request
                    'make-delete-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-email-template-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-email-template-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-email-template-response
                    'make-delete-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-suppressed-destination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-suppressed-destination-request-"))
   (email-address (common-lisp:error ":email-address is required") :type
    (common-lisp:or email-address common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-suppressed-destination-request
                    'make-delete-suppressed-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-suppressed-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-suppressed-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-suppressed-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-suppressed-destination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-suppressed-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-suppressed-destination-response
                    'make-delete-suppressed-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-suppressed-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-suppressed-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-suppressed-destination-response))
   common-lisp:nil))
(common-lisp:deftype deliverability-dashboard-account-status ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (deliverability-test-report (:copier common-lisp:nil)
      (:conc-name "struct-shape-deliverability-test-report-"))
   (report-id common-lisp:nil :type
    (common-lisp:or report-id common-lisp:null))
   (report-name common-lisp:nil :type
    (common-lisp:or report-name common-lisp:null))
   (subject common-lisp:nil :type
    (common-lisp:or deliverability-test-subject common-lisp:null))
   (from-email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (create-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (deliverability-test-status common-lisp:nil :type
    (common-lisp:or deliverability-test-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deliverability-test-report
                    'make-deliverability-test-report))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deliverability-test-report))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deliverability-test-report))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-id))
      (common-lisp:list
       (common-lisp:cons "ReportId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-name))
      (common-lisp:list
       (common-lisp:cons "ReportName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-date))
      (common-lisp:list
       (common-lisp:cons "CreateDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deliverability-test-status))
      (common-lisp:list
       (common-lisp:cons "DeliverabilityTestStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deliverability-test-report))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype deliverability-test-reports ()
   '(trivial-types:proper-list deliverability-test-report))
 (common-lisp:defun |make-deliverability-test-reports|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            deliverability-test-report))
   aws-sdk/generator/shape::members))
(common-lisp:deftype deliverability-test-status () 'common-lisp:string)
(common-lisp:deftype deliverability-test-subject () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delivery-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-delivery-options-"))
   (tls-policy common-lisp:nil :type
    (common-lisp:or tls-policy common-lisp:null))
   (sending-pool-name common-lisp:nil :type
    (common-lisp:or pool-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delivery-options 'make-delivery-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delivery-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delivery-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-policy))
      (common-lisp:list
       (common-lisp:cons "TlsPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-pool-name))
      (common-lisp:list
       (common-lisp:cons "SendingPoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delivery-options))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-destination-"))
   (to-addresses common-lisp:nil :type
    (common-lisp:or email-address-list common-lisp:null))
   (cc-addresses common-lisp:nil :type
    (common-lisp:or email-address-list common-lisp:null))
   (bcc-addresses common-lisp:nil :type
    (common-lisp:or email-address-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'destination 'make-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-addresses))
      (common-lisp:list
       (common-lisp:cons "ToAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cc-addresses))
      (common-lisp:list
       (common-lisp:cons "CcAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bcc-addresses))
      (common-lisp:list
       (common-lisp:cons "BccAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input destination))
   common-lisp:nil))
(common-lisp:deftype dimension-name () 'common-lisp:string)
(common-lisp:deftype dimension-value-source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dimensions () 'common-lisp:hash-table)
 (common-lisp:defun |make-dimensions| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype display-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dkim-attributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-dkim-attributes-"))
   (signing-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or dkim-status common-lisp:null))
   (tokens common-lisp:nil :type
    (common-lisp:or dns-token-list common-lisp:null))
   (signing-attributes-origin common-lisp:nil :type
    (common-lisp:or dkim-signing-attributes-origin common-lisp:null))
   (next-signing-key-length common-lisp:nil :type
    (common-lisp:or dkim-signing-key-length common-lisp:null))
   (current-signing-key-length common-lisp:nil :type
    (common-lisp:or dkim-signing-key-length common-lisp:null))
   (last-key-generation-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dkim-attributes 'make-dkim-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dkim-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dkim-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-enabled))
      (common-lisp:list
       (common-lisp:cons "SigningEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tokens))
      (common-lisp:list
       (common-lisp:cons "Tokens"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signing-attributes-origin))
      (common-lisp:list
       (common-lisp:cons "SigningAttributesOrigin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'next-signing-key-length))
      (common-lisp:list
       (common-lisp:cons "NextSigningKeyLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-signing-key-length))
      (common-lisp:list
       (common-lisp:cons "CurrentSigningKeyLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-key-generation-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastKeyGenerationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dkim-attributes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dkim-signing-attributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-dkim-signing-attributes-"))
   (domain-signing-selector common-lisp:nil :type
    (common-lisp:or selector common-lisp:null))
   (domain-signing-private-key common-lisp:nil :type
    (common-lisp:or private-key common-lisp:null))
   (next-signing-key-length common-lisp:nil :type
    (common-lisp:or dkim-signing-key-length common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dkim-signing-attributes 'make-dkim-signing-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dkim-signing-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dkim-signing-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-signing-selector))
      (common-lisp:list
       (common-lisp:cons "DomainSigningSelector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-signing-private-key))
      (common-lisp:list
       (common-lisp:cons "DomainSigningPrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'next-signing-key-length))
      (common-lisp:list
       (common-lisp:cons "NextSigningKeyLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dkim-signing-attributes))
   common-lisp:nil))
(common-lisp:deftype dkim-signing-attributes-origin () 'common-lisp:string)
(common-lisp:deftype dkim-signing-key-length () 'common-lisp:string)
(common-lisp:deftype dkim-status () 'common-lisp:string)
(common-lisp:deftype dns-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dns-token-list () '(trivial-types:proper-list dns-token))
 (common-lisp:defun |make-dns-token-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dns-token))
   aws-sdk/generator/shape::members))
(common-lisp:deftype domain () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (domain-deliverability-campaign (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-deliverability-campaign-"))
   (campaign-id common-lisp:nil :type
    (common-lisp:or campaign-id common-lisp:null))
   (image-url common-lisp:nil :type
    (common-lisp:or image-url common-lisp:null))
   (subject common-lisp:nil :type (common-lisp:or subject common-lisp:null))
   (from-address common-lisp:nil :type
    (common-lisp:or identity common-lisp:null))
   (sending-ips common-lisp:nil :type
    (common-lisp:or ip-list common-lisp:null))
   (first-seen-date-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-seen-date-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (inbox-count common-lisp:nil :type (common-lisp:or volume common-lisp:null))
   (spam-count common-lisp:nil :type (common-lisp:or volume common-lisp:null))
   (read-rate common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (delete-rate common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (read-delete-rate common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (projected-volume common-lisp:nil :type
    (common-lisp:or volume common-lisp:null))
   (esps common-lisp:nil :type (common-lisp:or esps common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-deliverability-campaign
                    'make-domain-deliverability-campaign))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-campaign))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-campaign))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-id))
      (common-lisp:list
       (common-lisp:cons "CampaignId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-url))
      (common-lisp:list
       (common-lisp:cons "ImageUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-address))
      (common-lisp:list
       (common-lisp:cons "FromAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-ips))
      (common-lisp:list
       (common-lisp:cons "SendingIps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'first-seen-date-time))
      (common-lisp:list
       (common-lisp:cons "FirstSeenDateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-seen-date-time))
      (common-lisp:list
       (common-lisp:cons "LastSeenDateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-count))
      (common-lisp:list
       (common-lisp:cons "InboxCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-count))
      (common-lisp:list
       (common-lisp:cons "SpamCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-rate))
      (common-lisp:list
       (common-lisp:cons "ReadRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delete-rate))
      (common-lisp:list
       (common-lisp:cons "DeleteRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-delete-rate))
      (common-lisp:list
       (common-lisp:cons "ReadDeleteRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-volume))
      (common-lisp:list
       (common-lisp:cons "ProjectedVolume"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'esps))
      (common-lisp:list
       (common-lisp:cons "Esps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-campaign))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-deliverability-campaign-list ()
   '(trivial-types:proper-list domain-deliverability-campaign))
 (common-lisp:defun |make-domain-deliverability-campaign-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            domain-deliverability-campaign))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (domain-deliverability-tracking-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-deliverability-tracking-option-"))
   (domain common-lisp:nil :type (common-lisp:or domain common-lisp:null))
   (subscription-start-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (inbox-placement-tracking-option common-lisp:nil :type
    (common-lisp:or inbox-placement-tracking-option common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-deliverability-tracking-option
                    'make-domain-deliverability-tracking-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-tracking-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-tracking-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subscription-start-date))
      (common-lisp:list
       (common-lisp:cons "SubscriptionStartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inbox-placement-tracking-option))
      (common-lisp:list
       (common-lisp:cons "InboxPlacementTrackingOption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-tracking-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-deliverability-tracking-options ()
   '(trivial-types:proper-list domain-deliverability-tracking-option))
 (common-lisp:defun |make-domain-deliverability-tracking-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            domain-deliverability-tracking-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (domain-isp-placement (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-isp-placement-"))
   (isp-name common-lisp:nil :type (common-lisp:or isp-name common-lisp:null))
   (inbox-raw-count common-lisp:nil :type
    (common-lisp:or volume common-lisp:null))
   (spam-raw-count common-lisp:nil :type
    (common-lisp:or volume common-lisp:null))
   (inbox-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (spam-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-isp-placement 'make-domain-isp-placement))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-isp-placement))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-isp-placement))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isp-name))
      (common-lisp:list
       (common-lisp:cons "IspName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-raw-count))
      (common-lisp:list
       (common-lisp:cons "InboxRawCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-raw-count))
      (common-lisp:list
       (common-lisp:cons "SpamRawCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-percentage))
      (common-lisp:list
       (common-lisp:cons "InboxPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-percentage))
      (common-lisp:list
       (common-lisp:cons "SpamPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-isp-placement))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-isp-placements ()
   '(trivial-types:proper-list domain-isp-placement))
 (common-lisp:defun |make-domain-isp-placements|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-isp-placement))
   aws-sdk/generator/shape::members))
(common-lisp:deftype email-address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype email-address-list ()
   '(trivial-types:proper-list email-address))
 (common-lisp:defun |make-email-address-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list email-address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (email-content (:copier common-lisp:nil)
      (:conc-name "struct-shape-email-content-"))
   (simple common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (raw common-lisp:nil :type (common-lisp:or raw-message common-lisp:null))
   (template common-lisp:nil :type (common-lisp:or template common-lisp:null)))
 (common-lisp:export (common-lisp:list 'email-content 'make-email-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input email-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input email-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple))
      (common-lisp:list
       (common-lisp:cons "Simple"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw))
      (common-lisp:list
       (common-lisp:cons "Raw"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template))
      (common-lisp:list
       (common-lisp:cons "Template"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input email-content))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (email-template-content (:copier common-lisp:nil)
      (:conc-name "struct-shape-email-template-content-"))
   (subject common-lisp:nil :type
    (common-lisp:or email-template-subject common-lisp:null))
   (text common-lisp:nil :type
    (common-lisp:or email-template-text common-lisp:null))
   (html common-lisp:nil :type
    (common-lisp:or email-template-html common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'email-template-content 'make-email-template-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          email-template-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          email-template-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'html))
      (common-lisp:list
       (common-lisp:cons "Html"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          email-template-content))
   common-lisp:nil))
(common-lisp:deftype email-template-data () 'common-lisp:string)
(common-lisp:deftype email-template-html () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (email-template-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-email-template-metadata-"))
   (template-name common-lisp:nil :type
    (common-lisp:or email-template-name common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'email-template-metadata 'make-email-template-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          email-template-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          email-template-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          email-template-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype email-template-metadata-list ()
   '(trivial-types:proper-list email-template-metadata))
 (common-lisp:defun |make-email-template-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list email-template-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype email-template-name () 'common-lisp:string)
(common-lisp:deftype email-template-subject () 'common-lisp:string)
(common-lisp:deftype email-template-text () 'common-lisp:string)
(common-lisp:deftype enabled () 'common-lisp:boolean)
(common-lisp:deftype enabled-wrapper () 'common-lisp:boolean)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype esp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype esps () '(trivial-types:proper-list esp))
 (common-lisp:defun |make-esps|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list esp))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (event-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-event-destination-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or event-destination-name common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or enabled common-lisp:null))
   (matching-event-types
    (common-lisp:error ":matching-event-types is required") :type
    (common-lisp:or event-types common-lisp:null))
   (kinesis-firehose-destination common-lisp:nil :type
    (common-lisp:or kinesis-firehose-destination common-lisp:null))
   (cloud-watch-destination common-lisp:nil :type
    (common-lisp:or cloud-watch-destination common-lisp:null))
   (sns-destination common-lisp:nil :type
    (common-lisp:or sns-destination common-lisp:null))
   (pinpoint-destination common-lisp:nil :type
    (common-lisp:or pinpoint-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-destination 'make-event-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'matching-event-types))
      (common-lisp:list
       (common-lisp:cons "MatchingEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kinesis-firehose-destination))
      (common-lisp:list
       (common-lisp:cons "KinesisFirehoseDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-destination))
      (common-lisp:list
       (common-lisp:cons "CloudWatchDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-destination))
      (common-lisp:list
       (common-lisp:cons "SnsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pinpoint-destination))
      (common-lisp:list
       (common-lisp:cons "PinpointDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (event-destination-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-event-destination-definition-"))
   (enabled common-lisp:nil :type (common-lisp:or enabled common-lisp:null))
   (matching-event-types common-lisp:nil :type
    (common-lisp:or event-types common-lisp:null))
   (kinesis-firehose-destination common-lisp:nil :type
    (common-lisp:or kinesis-firehose-destination common-lisp:null))
   (cloud-watch-destination common-lisp:nil :type
    (common-lisp:or cloud-watch-destination common-lisp:null))
   (sns-destination common-lisp:nil :type
    (common-lisp:or sns-destination common-lisp:null))
   (pinpoint-destination common-lisp:nil :type
    (common-lisp:or pinpoint-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-destination-definition
                    'make-event-destination-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'matching-event-types))
      (common-lisp:list
       (common-lisp:cons "MatchingEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kinesis-firehose-destination))
      (common-lisp:list
       (common-lisp:cons "KinesisFirehoseDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-destination))
      (common-lisp:list
       (common-lisp:cons "CloudWatchDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-destination))
      (common-lisp:list
       (common-lisp:cons "SnsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pinpoint-destination))
      (common-lisp:list
       (common-lisp:cons "PinpointDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   common-lisp:nil))
(common-lisp:deftype event-destination-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-destinations ()
   '(trivial-types:proper-list event-destination))
 (common-lisp:defun |make-event-destinations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-destination))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-types () '(trivial-types:proper-list event-type))
 (common-lisp:defun |make-event-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype failed-records-count () 'common-lisp:integer)
(common-lisp:deftype failed-records-s3url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (failure-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-failure-info-"))
   (failed-records-s3url common-lisp:nil :type
    (common-lisp:or failed-records-s3url common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'failure-info 'make-failure-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input failure-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input failure-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-records-s3url))
      (common-lisp:list
       (common-lisp:cons "FailedRecordsS3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input failure-info))
   common-lisp:nil))
(common-lisp:deftype failure-redirection-url () 'common-lisp:string)
(common-lisp:deftype feature-status () 'common-lisp:string)
(common-lisp:deftype feedback-id () 'common-lisp:string)
(common-lisp:deftype general-enforcement-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-account-request-")))
 (common-lisp:export
  (common-lisp:list 'get-account-request 'make-get-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-account-response-"))
   (dedicated-ip-auto-warmup-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (enforcement-status common-lisp:nil :type
    (common-lisp:or general-enforcement-status common-lisp:null))
   (production-access-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (send-quota common-lisp:nil :type
    (common-lisp:or send-quota common-lisp:null))
   (sending-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (suppression-attributes common-lisp:nil :type
    (common-lisp:or suppression-attributes common-lisp:null))
   (details common-lisp:nil :type
    (common-lisp:or account-details common-lisp:null))
   (vdm-attributes common-lisp:nil :type
    (common-lisp:or vdm-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-account-response 'make-get-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dedicated-ip-auto-warmup-enabled))
      (common-lisp:list
       (common-lisp:cons "DedicatedIpAutoWarmupEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enforcement-status))
      (common-lisp:list
       (common-lisp:cons "EnforcementStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'production-access-enabled))
      (common-lisp:list
       (common-lisp:cons "ProductionAccessEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'send-quota))
      (common-lisp:list
       (common-lisp:cons "SendQuota"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suppression-attributes))
      (common-lisp:list
       (common-lisp:cons "SuppressionAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'details))
      (common-lisp:list
       (common-lisp:cons "Details"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vdm-attributes))
      (common-lisp:list
       (common-lisp:cons "VdmAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-blacklist-reports-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-blacklist-reports-request-"))
   (blacklist-item-names
    (common-lisp:error ":blacklist-item-names is required") :type
    (common-lisp:or blacklist-item-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-blacklist-reports-request
                    'make-get-blacklist-reports-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-blacklist-reports-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-blacklist-reports-response-"))
   (blacklist-report (common-lisp:error ":blacklist-report is required") :type
    (common-lisp:or blacklist-report common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-blacklist-reports-response
                    'make-get-blacklist-reports-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blacklist-report))
      (common-lisp:list
       (common-lisp:cons "BlacklistReport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-configuration-set-event-destinations-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-configuration-set-event-destinations-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-event-destinations-request
                    'make-get-configuration-set-event-destinations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-configuration-set-event-destinations-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-configuration-set-event-destinations-response-"))
   (event-destinations common-lisp:nil :type
    (common-lisp:or event-destinations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-event-destinations-response
                    'make-get-configuration-set-event-destinations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destinations))
      (common-lisp:list
       (common-lisp:cons "EventDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-configuration-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-configuration-set-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-request
                    'make-get-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-configuration-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-configuration-set-response-"))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (tracking-options common-lisp:nil :type
    (common-lisp:or tracking-options common-lisp:null))
   (delivery-options common-lisp:nil :type
    (common-lisp:or delivery-options common-lisp:null))
   (reputation-options common-lisp:nil :type
    (common-lisp:or reputation-options common-lisp:null))
   (sending-options common-lisp:nil :type
    (common-lisp:or sending-options common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (suppression-options common-lisp:nil :type
    (common-lisp:or suppression-options common-lisp:null))
   (vdm-options common-lisp:nil :type
    (common-lisp:or vdm-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-response
                    'make-get-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracking-options))
      (common-lisp:list
       (common-lisp:cons "TrackingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-options))
      (common-lisp:list
       (common-lisp:cons "DeliveryOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reputation-options))
      (common-lisp:list
       (common-lisp:cons "ReputationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-options))
      (common-lisp:list
       (common-lisp:cons "SendingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suppression-options))
      (common-lisp:list
       (common-lisp:cons "SuppressionOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vdm-options))
      (common-lisp:list
       (common-lisp:cons "VdmOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-contact-list-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-contact-list-request-"))
   (contact-list-name (common-lisp:error ":contact-list-name is required")
    :type (common-lisp:or contact-list-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-contact-list-request 'make-get-contact-list-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-contact-list-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-contact-list-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-contact-list-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-contact-list-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-contact-list-response-"))
   (contact-list-name common-lisp:nil :type
    (common-lisp:or contact-list-name common-lisp:null))
   (topics common-lisp:nil :type (common-lisp:or topics common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-updated-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-contact-list-response
                    'make-get-contact-list-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-contact-list-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-contact-list-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contact-list-name))
      (common-lisp:list
       (common-lisp:cons "ContactListName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topics))
      (common-lisp:list
       (common-lisp:cons "Topics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-contact-list-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-contact-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-contact-request-"))
   (contact-list-name (common-lisp:error ":contact-list-name is required")
    :type (common-lisp:or contact-list-name common-lisp:null))
   (email-address (common-lisp:error ":email-address is required") :type
    (common-lisp:or email-address common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-contact-request 'make-get-contact-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-contact-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-contact-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-contact-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-contact-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-contact-response-"))
   (contact-list-name common-lisp:nil :type
    (common-lisp:or contact-list-name common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (topic-preferences common-lisp:nil :type
    (common-lisp:or topic-preference-list common-lisp:null))
   (topic-default-preferences common-lisp:nil :type
    (common-lisp:or topic-preference-list common-lisp:null))
   (unsubscribe-all common-lisp:nil :type
    (common-lisp:or unsubscribe-all common-lisp:null))
   (attributes-data common-lisp:nil :type
    (common-lisp:or attributes-data common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-updated-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-contact-response 'make-get-contact-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-contact-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-contact-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contact-list-name))
      (common-lisp:list
       (common-lisp:cons "ContactListName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "EmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-preferences))
      (common-lisp:list
       (common-lisp:cons "TopicPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'topic-default-preferences))
      (common-lisp:list
       (common-lisp:cons "TopicDefaultPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unsubscribe-all))
      (common-lisp:list
       (common-lisp:cons "UnsubscribeAll"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes-data))
      (common-lisp:list
       (common-lisp:cons "AttributesData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-contact-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-custom-verification-email-template-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-custom-verification-email-template-request-"))
   (template-name (common-lisp:error ":template-name is required") :type
    (common-lisp:or email-template-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-custom-verification-email-template-request
                    'make-get-custom-verification-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-verification-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-verification-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-verification-email-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-custom-verification-email-template-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-custom-verification-email-template-response-"))
   (template-name common-lisp:nil :type
    (common-lisp:or email-template-name common-lisp:null))
   (from-email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (template-subject common-lisp:nil :type
    (common-lisp:or email-template-subject common-lisp:null))
   (template-content common-lisp:nil :type
    (common-lisp:or template-content common-lisp:null))
   (success-redirection-url common-lisp:nil :type
    (common-lisp:or success-redirection-url common-lisp:null))
   (failure-redirection-url common-lisp:nil :type
    (common-lisp:or failure-redirection-url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-custom-verification-email-template-response
                    'make-get-custom-verification-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-verification-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-verification-email-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-subject))
      (common-lisp:list
       (common-lisp:cons "TemplateSubject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-content))
      (common-lisp:list
       (common-lisp:cons "TemplateContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'success-redirection-url))
      (common-lisp:list
       (common-lisp:cons "SuccessRedirectionURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-redirection-url))
      (common-lisp:list
       (common-lisp:cons "FailureRedirectionURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-verification-email-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-dedicated-ip-pool-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-dedicated-ip-pool-request-"))
   (pool-name (common-lisp:error ":pool-name is required") :type
    (common-lisp:or pool-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ip-pool-request
                    'make-get-dedicated-ip-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-dedicated-ip-pool-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-dedicated-ip-pool-response-"))
   (dedicated-ip-pool common-lisp:nil :type
    (common-lisp:or dedicated-ip-pool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ip-pool-response
                    'make-get-dedicated-ip-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-pool-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dedicated-ip-pool))
      (common-lisp:list
       (common-lisp:cons "DedicatedIpPool"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-pool-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-dedicated-ip-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-dedicated-ip-request-"))
   (ip (common-lisp:error ":ip is required") :type
    (common-lisp:or ip common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ip-request 'make-get-dedicated-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-dedicated-ip-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-dedicated-ip-response-"))
   (dedicated-ip common-lisp:nil :type
    (common-lisp:or dedicated-ip common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ip-response
                    'make-get-dedicated-ip-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dedicated-ip))
      (common-lisp:list
       (common-lisp:cons "DedicatedIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-dedicated-ips-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-dedicated-ips-request-"))
   (pool-name common-lisp:nil :type
    (common-lisp:or pool-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ips-request
                    'make-get-dedicated-ips-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-dedicated-ips-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-dedicated-ips-response-"))
   (dedicated-ips common-lisp:nil :type
    (common-lisp:or dedicated-ip-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ips-response
                    'make-get-dedicated-ips-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dedicated-ips))
      (common-lisp:list
       (common-lisp:cons "DedicatedIps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deliverability-dashboard-options-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-deliverability-dashboard-options-request-")))
 (common-lisp:export
  (common-lisp:list 'get-deliverability-dashboard-options-request
                    'make-get-deliverability-dashboard-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deliverability-dashboard-options-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-deliverability-dashboard-options-response-"))
   (dashboard-enabled (common-lisp:error ":dashboard-enabled is required")
    :type (common-lisp:or enabled common-lisp:null))
   (subscription-expiry-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (account-status common-lisp:nil :type
    (common-lisp:or deliverability-dashboard-account-status common-lisp:null))
   (active-subscribed-domains common-lisp:nil :type
    (common-lisp:or domain-deliverability-tracking-options common-lisp:null))
   (pending-expiration-subscribed-domains common-lisp:nil :type
    (common-lisp:or domain-deliverability-tracking-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deliverability-dashboard-options-response
                    'make-get-deliverability-dashboard-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-enabled))
      (common-lisp:list
       (common-lisp:cons "DashboardEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subscription-expiry-date))
      (common-lisp:list
       (common-lisp:cons "SubscriptionExpiryDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-status))
      (common-lisp:list
       (common-lisp:cons "AccountStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'active-subscribed-domains))
      (common-lisp:list
       (common-lisp:cons "ActiveSubscribedDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-expiration-subscribed-domains))
      (common-lisp:list
       (common-lisp:cons "PendingExpirationSubscribedDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deliverability-test-report-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-deliverability-test-report-request-"))
   (report-id (common-lisp:error ":report-id is required") :type
    (common-lisp:or report-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deliverability-test-report-request
                    'make-get-deliverability-test-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deliverability-test-report-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-deliverability-test-report-response-"))
   (deliverability-test-report
    (common-lisp:error ":deliverability-test-report is required") :type
    (common-lisp:or deliverability-test-report common-lisp:null))
   (overall-placement (common-lisp:error ":overall-placement is required")
    :type (common-lisp:or placement-statistics common-lisp:null))
   (isp-placements (common-lisp:error ":isp-placements is required") :type
    (common-lisp:or isp-placements common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or message-content common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deliverability-test-report-response
                    'make-get-deliverability-test-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deliverability-test-report))
      (common-lisp:list
       (common-lisp:cons "DeliverabilityTestReport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overall-placement))
      (common-lisp:list
       (common-lisp:cons "OverallPlacement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isp-placements))
      (common-lisp:list
       (common-lisp:cons "IspPlacements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-deliverability-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-deliverability-campaign-request-"))
   (campaign-id (common-lisp:error ":campaign-id is required") :type
    (common-lisp:or campaign-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-deliverability-campaign-request
                    'make-get-domain-deliverability-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-deliverability-campaign-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-deliverability-campaign-response-"))
   (domain-deliverability-campaign
    (common-lisp:error ":domain-deliverability-campaign is required") :type
    (common-lisp:or domain-deliverability-campaign common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-deliverability-campaign-response
                    'make-get-domain-deliverability-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-deliverability-campaign))
      (common-lisp:list
       (common-lisp:cons "DomainDeliverabilityCampaign"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-statistics-report-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-statistics-report-request-"))
   (domain (common-lisp:error ":domain is required") :type
    (common-lisp:or identity common-lisp:null))
   (start-date (common-lisp:error ":start-date is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (end-date (common-lisp:error ":end-date is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-statistics-report-request
                    'make-get-domain-statistics-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-statistics-report-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-statistics-report-response-"))
   (overall-volume (common-lisp:error ":overall-volume is required") :type
    (common-lisp:or overall-volume common-lisp:null))
   (daily-volumes (common-lisp:error ":daily-volumes is required") :type
    (common-lisp:or daily-volumes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-statistics-report-response
                    'make-get-domain-statistics-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overall-volume))
      (common-lisp:list
       (common-lisp:cons "OverallVolume"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'daily-volumes))
      (common-lisp:list
       (common-lisp:cons "DailyVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-email-identity-policies-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-email-identity-policies-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-email-identity-policies-request
                    'make-get-email-identity-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-policies-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-policies-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-policies-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-email-identity-policies-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-email-identity-policies-response-"))
   (policies common-lisp:nil :type
    (common-lisp:or policy-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-email-identity-policies-response
                    'make-get-email-identity-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-policies-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-policies-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policies))
      (common-lisp:list
       (common-lisp:cons "Policies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-policies-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-email-identity-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-email-identity-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-email-identity-request
                    'make-get-email-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-email-identity-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-email-identity-response-"))
   (identity-type common-lisp:nil :type
    (common-lisp:or identity-type common-lisp:null))
   (feedback-forwarding-status common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (verified-for-sending-status common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (dkim-attributes common-lisp:nil :type
    (common-lisp:or dkim-attributes common-lisp:null))
   (mail-from-attributes common-lisp:nil :type
    (common-lisp:or mail-from-attributes common-lisp:null))
   (policies common-lisp:nil :type
    (common-lisp:or policy-map common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (verification-status common-lisp:nil :type
    (common-lisp:or verification-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-email-identity-response
                    'make-get-email-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-type))
      (common-lisp:list
       (common-lisp:cons "IdentityType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'feedback-forwarding-status))
      (common-lisp:list
       (common-lisp:cons "FeedbackForwardingStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verified-for-sending-status))
      (common-lisp:list
       (common-lisp:cons "VerifiedForSendingStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dkim-attributes))
      (common-lisp:list
       (common-lisp:cons "DkimAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mail-from-attributes))
      (common-lisp:list
       (common-lisp:cons "MailFromAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policies))
      (common-lisp:list
       (common-lisp:cons "Policies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'verification-status))
      (common-lisp:list
       (common-lisp:cons "VerificationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-email-template-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-email-template-request-"))
   (template-name (common-lisp:error ":template-name is required") :type
    (common-lisp:or email-template-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-email-template-request
                    'make-get-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-email-template-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-email-template-response-"))
   (template-name (common-lisp:error ":template-name is required") :type
    (common-lisp:or email-template-name common-lisp:null))
   (template-content (common-lisp:error ":template-content is required") :type
    (common-lisp:or email-template-content common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-email-template-response
                    'make-get-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-content))
      (common-lisp:list
       (common-lisp:cons "TemplateContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-import-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-import-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-import-job-request 'make-get-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-import-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-import-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (import-destination common-lisp:nil :type
    (common-lisp:or import-destination common-lisp:null))
   (import-data-source common-lisp:nil :type
    (common-lisp:or import-data-source common-lisp:null))
   (failure-info common-lisp:nil :type
    (common-lisp:or failure-info common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (completed-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (processed-records-count common-lisp:nil :type
    (common-lisp:or processed-records-count common-lisp:null))
   (failed-records-count common-lisp:nil :type
    (common-lisp:or failed-records-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-import-job-response 'make-get-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-destination))
      (common-lisp:list
       (common-lisp:cons "ImportDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-data-source))
      (common-lisp:list
       (common-lisp:cons "ImportDataSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-info))
      (common-lisp:list
       (common-lisp:cons "FailureInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completed-timestamp))
      (common-lisp:list
       (common-lisp:cons "CompletedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'processed-records-count))
      (common-lisp:list
       (common-lisp:cons "ProcessedRecordsCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-records-count))
      (common-lisp:list
       (common-lisp:cons "FailedRecordsCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-suppressed-destination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-suppressed-destination-request-"))
   (email-address (common-lisp:error ":email-address is required") :type
    (common-lisp:or email-address common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-suppressed-destination-request
                    'make-get-suppressed-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suppressed-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suppressed-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suppressed-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-suppressed-destination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-suppressed-destination-response-"))
   (suppressed-destination
    (common-lisp:error ":suppressed-destination is required") :type
    (common-lisp:or suppressed-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-suppressed-destination-response
                    'make-get-suppressed-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suppressed-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suppressed-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suppressed-destination))
      (common-lisp:list
       (common-lisp:cons "SuppressedDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suppressed-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (guardian-attributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-guardian-attributes-"))
   (optimized-shared-delivery common-lisp:nil :type
    (common-lisp:or feature-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'guardian-attributes 'make-guardian-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input guardian-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input guardian-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'optimized-shared-delivery))
      (common-lisp:list
       (common-lisp:cons "OptimizedSharedDelivery"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input guardian-attributes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (guardian-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-guardian-options-"))
   (optimized-shared-delivery common-lisp:nil :type
    (common-lisp:or feature-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'guardian-options 'make-guardian-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input guardian-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input guardian-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'optimized-shared-delivery))
      (common-lisp:list
       (common-lisp:cons "OptimizedSharedDelivery"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input guardian-options))
   common-lisp:nil))
(common-lisp:deftype identity () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (identity-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-identity-info-"))
   (identity-type common-lisp:nil :type
    (common-lisp:or identity-type common-lisp:null))
   (identity-name common-lisp:nil :type
    (common-lisp:or identity common-lisp:null))
   (sending-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (verification-status common-lisp:nil :type
    (common-lisp:or verification-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'identity-info 'make-identity-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input identity-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input identity-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-type))
      (common-lisp:list
       (common-lisp:cons "IdentityType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-name))
      (common-lisp:list
       (common-lisp:cons "IdentityName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'verification-status))
      (common-lisp:list
       (common-lisp:cons "VerificationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input identity-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype identity-info-list ()
   '(trivial-types:proper-list identity-info))
 (common-lisp:defun |make-identity-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list identity-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype identity-type () 'common-lisp:string)
(common-lisp:deftype image-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (import-data-source (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-data-source-"))
   (s3url (common-lisp:error ":s3url is required") :type
    (common-lisp:or s3url common-lisp:null))
   (data-format (common-lisp:error ":data-format is required") :type
    (common-lisp:or data-format common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-data-source 'make-import-data-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-data-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-data-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-format))
      (common-lisp:list
       (common-lisp:cons "DataFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-data-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-destination-"))
   (suppression-list-destination common-lisp:nil :type
    (common-lisp:or suppression-list-destination common-lisp:null))
   (contact-list-destination common-lisp:nil :type
    (common-lisp:or contact-list-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-destination 'make-import-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suppression-list-destination))
      (common-lisp:list
       (common-lisp:cons "SuppressionListDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'contact-list-destination))
      (common-lisp:list
       (common-lisp:cons "ContactListDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-destination))
   common-lisp:nil))
(common-lisp:deftype import-destination-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (import-job-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-job-summary-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (import-destination common-lisp:nil :type
    (common-lisp:or import-destination common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (processed-records-count common-lisp:nil :type
    (common-lisp:or processed-records-count common-lisp:null))
   (failed-records-count common-lisp:nil :type
    (common-lisp:or failed-records-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-job-summary 'make-import-job-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-job-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-job-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-destination))
      (common-lisp:list
       (common-lisp:cons "ImportDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'processed-records-count))
      (common-lisp:list
       (common-lisp:cons "ProcessedRecordsCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-records-count))
      (common-lisp:list
       (common-lisp:cons "FailedRecordsCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-job-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype import-job-summary-list ()
   '(trivial-types:proper-list import-job-summary))
 (common-lisp:defun |make-import-job-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list import-job-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (inbox-placement-tracking-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-inbox-placement-tracking-option-"))
   (global common-lisp:nil :type (common-lisp:or enabled common-lisp:null))
   (tracked-isps common-lisp:nil :type
    (common-lisp:or isp-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inbox-placement-tracking-option
                    'make-inbox-placement-tracking-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          inbox-placement-tracking-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          inbox-placement-tracking-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'global))
      (common-lisp:list
       (common-lisp:cons "Global"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracked-isps))
      (common-lisp:list
       (common-lisp:cons "TrackedIsps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          inbox-placement-tracking-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-service-error-exception
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'internal-service-error-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-next-token-exception
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-next-token-exception)))
(common-lisp:deftype ip () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ip-list () '(trivial-types:proper-list ip))
 (common-lisp:defun |make-ip-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ip))
   aws-sdk/generator/shape::members))
(common-lisp:deftype isp-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype isp-name-list () '(trivial-types:proper-list isp-name))
 (common-lisp:defun |make-isp-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list isp-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (isp-placement (:copier common-lisp:nil)
      (:conc-name "struct-shape-isp-placement-"))
   (isp-name common-lisp:nil :type (common-lisp:or isp-name common-lisp:null))
   (placement-statistics common-lisp:nil :type
    (common-lisp:or placement-statistics common-lisp:null)))
 (common-lisp:export (common-lisp:list 'isp-placement 'make-isp-placement))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input isp-placement))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input isp-placement))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isp-name))
      (common-lisp:list
       (common-lisp:cons "IspName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'placement-statistics))
      (common-lisp:list
       (common-lisp:cons "PlacementStatistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input isp-placement))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype isp-placements ()
   '(trivial-types:proper-list isp-placement))
 (common-lisp:defun |make-isp-placements|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list isp-placement))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-id () 'common-lisp:string)
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (kinesis-firehose-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-kinesis-firehose-destination-"))
   (iam-role-arn (common-lisp:error ":iam-role-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (delivery-stream-arn (common-lisp:error ":delivery-stream-arn is required")
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-firehose-destination
                    'make-kinesis-firehose-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-stream-arn))
      (common-lisp:list
       (common-lisp:cons "DeliveryStreamArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   common-lisp:nil))
(common-lisp:deftype last-fresh-start () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'limit-exceeded-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configuration-sets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-configuration-sets-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configuration-sets-request
                    'make-list-configuration-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configuration-sets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-configuration-sets-response-"))
   (configuration-sets common-lisp:nil :type
    (common-lisp:or configuration-set-name-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configuration-sets-response
                    'make-list-configuration-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-sets))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-contact-lists-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-contact-lists-request-"))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-contact-lists-request
                    'make-list-contact-lists-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-contact-lists-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-contact-lists-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-contact-lists-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-contact-lists-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-contact-lists-response-"))
   (contact-lists common-lisp:nil :type
    (common-lisp:or list-of-contact-lists common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-contact-lists-response
                    'make-list-contact-lists-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-contact-lists-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-contact-lists-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contact-lists))
      (common-lisp:list
       (common-lisp:cons "ContactLists"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-contact-lists-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-contacts-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-contacts-filter-"))
   (filtered-status common-lisp:nil :type
    (common-lisp:or subscription-status common-lisp:null))
   (topic-filter common-lisp:nil :type
    (common-lisp:or topic-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-contacts-filter 'make-list-contacts-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-contacts-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-contacts-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filtered-status))
      (common-lisp:list
       (common-lisp:cons "FilteredStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-filter))
      (common-lisp:list
       (common-lisp:cons "TopicFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-contacts-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-contacts-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-contacts-request-"))
   (contact-list-name (common-lisp:error ":contact-list-name is required")
    :type (common-lisp:or contact-list-name common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or list-contacts-filter common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-contacts-request 'make-list-contacts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-contacts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-contacts-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-contacts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-contacts-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-contacts-response-"))
   (contacts common-lisp:nil :type
    (common-lisp:or list-of-contacts common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-contacts-response 'make-list-contacts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-contacts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-contacts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contacts))
      (common-lisp:list
       (common-lisp:cons "Contacts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-contacts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-verification-email-templates-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-custom-verification-email-templates-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-verification-email-templates-request
                    'make-list-custom-verification-email-templates-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-verification-email-templates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-verification-email-templates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-verification-email-templates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-verification-email-templates-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-custom-verification-email-templates-response-"))
   (custom-verification-email-templates common-lisp:nil :type
    (common-lisp:or custom-verification-email-templates-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-verification-email-templates-response
                    'make-list-custom-verification-email-templates-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-verification-email-templates-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-verification-email-templates-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-verification-email-templates))
      (common-lisp:list
       (common-lisp:cons "CustomVerificationEmailTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-verification-email-templates-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-dedicated-ip-pools-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-dedicated-ip-pools-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-dedicated-ip-pools-request
                    'make-list-dedicated-ip-pools-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-dedicated-ip-pools-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-dedicated-ip-pools-response-"))
   (dedicated-ip-pools common-lisp:nil :type
    (common-lisp:or list-of-dedicated-ip-pools common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-dedicated-ip-pools-response
                    'make-list-dedicated-ip-pools-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dedicated-ip-pools))
      (common-lisp:list
       (common-lisp:cons "DedicatedIpPools"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-deliverability-test-reports-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-deliverability-test-reports-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-deliverability-test-reports-request
                    'make-list-deliverability-test-reports-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-deliverability-test-reports-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-deliverability-test-reports-response-"))
   (deliverability-test-reports
    (common-lisp:error ":deliverability-test-reports is required") :type
    (common-lisp:or deliverability-test-reports common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-deliverability-test-reports-response
                    'make-list-deliverability-test-reports-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deliverability-test-reports))
      (common-lisp:list
       (common-lisp:cons "DeliverabilityTestReports"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-domain-deliverability-campaigns-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-domain-deliverability-campaigns-request-"))
   (start-date (common-lisp:error ":start-date is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (end-date (common-lisp:error ":end-date is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (subscribed-domain (common-lisp:error ":subscribed-domain is required")
    :type (common-lisp:or domain common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domain-deliverability-campaigns-request
                    'make-list-domain-deliverability-campaigns-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-domain-deliverability-campaigns-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-domain-deliverability-campaigns-response-"))
   (domain-deliverability-campaigns
    (common-lisp:error ":domain-deliverability-campaigns is required") :type
    (common-lisp:or domain-deliverability-campaign-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domain-deliverability-campaigns-response
                    'make-list-domain-deliverability-campaigns-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-deliverability-campaigns))
      (common-lisp:list
       (common-lisp:cons "DomainDeliverabilityCampaigns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-email-identities-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-email-identities-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-email-identities-request
                    'make-list-email-identities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-email-identities-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-email-identities-response-"))
   (email-identities common-lisp:nil :type
    (common-lisp:or identity-info-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-email-identities-response
                    'make-list-email-identities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-identities))
      (common-lisp:list
       (common-lisp:cons "EmailIdentities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-email-templates-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-email-templates-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-email-templates-request
                    'make-list-email-templates-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-email-templates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-email-templates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-email-templates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-email-templates-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-email-templates-response-"))
   (templates-metadata common-lisp:nil :type
    (common-lisp:or email-template-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-email-templates-response
                    'make-list-email-templates-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-email-templates-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-email-templates-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'templates-metadata))
      (common-lisp:list
       (common-lisp:cons "TemplatesMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-email-templates-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-import-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-import-jobs-request-"))
   (import-destination-type common-lisp:nil :type
    (common-lisp:or import-destination-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-import-jobs-request 'make-list-import-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-import-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-import-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-destination-type))
      (common-lisp:list
       (common-lisp:cons "ImportDestinationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-import-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-import-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-import-jobs-response-"))
   (import-jobs common-lisp:nil :type
    (common-lisp:or import-job-summary-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-import-jobs-response
                    'make-list-import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-import-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-import-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-jobs))
      (common-lisp:list
       (common-lisp:cons "ImportJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-import-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-management-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-management-options-"))
   (contact-list-name (common-lisp:error ":contact-list-name is required")
    :type (common-lisp:or contact-list-name common-lisp:null))
   (topic-name common-lisp:nil :type
    (common-lisp:or topic-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-management-options 'make-list-management-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-management-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-management-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contact-list-name))
      (common-lisp:list
       (common-lisp:cons "ContactListName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-name))
      (common-lisp:list
       (common-lisp:cons "TopicName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-management-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-of-contact-lists ()
   '(trivial-types:proper-list contact-list))
 (common-lisp:defun |make-list-of-contact-lists|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list contact-list))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-contacts () '(trivial-types:proper-list contact))
 (common-lisp:defun |make-list-of-contacts|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list contact))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-dedicated-ip-pools ()
   '(trivial-types:proper-list pool-name))
 (common-lisp:defun |make-list-of-dedicated-ip-pools|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pool-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype list-recommendation-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype list-recommendations-filter () 'common-lisp:hash-table)
 (common-lisp:defun |make-list-recommendations-filter|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype list-recommendations-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-recommendations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-recommendations-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or list-recommendations-filter common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-recommendations-request
                    'make-list-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-size))
      (common-lisp:list
       (common-lisp:cons "PageSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-recommendations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-recommendations-response-"))
   (recommendations common-lisp:nil :type
    (common-lisp:or recommendations-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-recommendations-response
                    'make-list-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendations))
      (common-lisp:list
       (common-lisp:cons "Recommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-suppressed-destinations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-suppressed-destinations-request-"))
   (reasons common-lisp:nil :type
    (common-lisp:or suppression-list-reasons common-lisp:null))
   (start-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-date common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-suppressed-destinations-request
                    'make-list-suppressed-destinations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-suppressed-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-suppressed-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-suppressed-destinations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-suppressed-destinations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-suppressed-destinations-response-"))
   (suppressed-destination-summaries common-lisp:nil :type
    (common-lisp:or suppressed-destination-summaries common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-suppressed-destinations-response
                    'make-list-suppressed-destinations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-suppressed-destinations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-suppressed-destinations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suppressed-destination-summaries))
      (common-lisp:list
       (common-lisp:cons "SuppressedDestinationSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-suppressed-destinations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (mail-from-attributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-mail-from-attributes-"))
   (mail-from-domain (common-lisp:error ":mail-from-domain is required") :type
    (common-lisp:or mail-from-domain-name common-lisp:null))
   (mail-from-domain-status
    (common-lisp:error ":mail-from-domain-status is required") :type
    (common-lisp:or mail-from-domain-status common-lisp:null))
   (behavior-on-mx-failure
    (common-lisp:error ":behavior-on-mx-failure is required") :type
    (common-lisp:or behavior-on-mx-failure common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'mail-from-attributes 'make-mail-from-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mail-from-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mail-from-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mail-from-domain))
      (common-lisp:list
       (common-lisp:cons "MailFromDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mail-from-domain-status))
      (common-lisp:list
       (common-lisp:cons "MailFromDomainStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'behavior-on-mx-failure))
      (common-lisp:list
       (common-lisp:cons "BehaviorOnMxFailure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mail-from-attributes))
   common-lisp:nil))
(common-lisp:deftype mail-from-domain-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition mail-from-domain-not-verified-exception
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'mail-from-domain-not-verified-exception)))
(common-lisp:deftype mail-from-domain-status () 'common-lisp:string)
(common-lisp:deftype mail-type () 'common-lisp:string)
(common-lisp:deftype max24hour-send () 'common-lisp:double-float)
(common-lisp:deftype max-items () 'common-lisp:integer)
(common-lisp:deftype max-send-rate () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (message (:copier common-lisp:nil) (:conc-name "struct-shape-message-"))
   (subject (common-lisp:error ":subject is required") :type
    (common-lisp:or content common-lisp:null))
   (body (common-lisp:error ":body is required") :type
    (common-lisp:or body common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message))
   common-lisp:nil))
(common-lisp:deftype message-content () 'common-lisp:string)
(common-lisp:deftype message-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition message-rejected
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'message-rejected)))
(common-lisp:progn
 (common-lisp:defstruct
     (message-tag (:copier common-lisp:nil)
      (:conc-name "struct-shape-message-tag-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or message-tag-name common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or message-tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message-tag 'make-message-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message-tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message-tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message-tag))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype message-tag-list ()
   '(trivial-types:proper-list message-tag))
 (common-lisp:defun |make-message-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list message-tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype message-tag-name () 'common-lisp:string)
(common-lisp:deftype message-tag-value () 'common-lisp:string)
(common-lisp:deftype metric () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (metric-data-error (:copier common-lisp:nil)
      (:conc-name "struct-shape-metric-data-error-"))
   (id common-lisp:nil :type
    (common-lisp:or query-identifier common-lisp:null))
   (code common-lisp:nil :type
    (common-lisp:or query-error-code common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or query-error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-data-error 'make-metric-data-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-data-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-data-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-data-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype metric-data-error-list ()
   '(trivial-types:proper-list metric-data-error))
 (common-lisp:defun |make-metric-data-error-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-data-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (metric-data-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-metric-data-result-"))
   (id common-lisp:nil :type
    (common-lisp:or query-identifier common-lisp:null))
   (timestamps common-lisp:nil :type
    (common-lisp:or timestamp-list common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or metric-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-data-result 'make-metric-data-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-data-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-data-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamps))
      (common-lisp:list
       (common-lisp:cons "Timestamps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-data-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype metric-data-result-list ()
   '(trivial-types:proper-list metric-data-result))
 (common-lisp:defun |make-metric-data-result-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-data-result))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-dimension-name () 'common-lisp:string)
(common-lisp:deftype metric-dimension-value () 'common-lisp:string)
(common-lisp:deftype metric-namespace () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype metric-value-list ()
   '(trivial-types:proper-list counter))
 (common-lisp:defun |make-metric-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list counter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'not-found-exception)))
(common-lisp:deftype outbound-message-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (overall-volume (:copier common-lisp:nil)
      (:conc-name "struct-shape-overall-volume-"))
   (volume-statistics common-lisp:nil :type
    (common-lisp:or volume-statistics common-lisp:null))
   (read-rate-percent common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (domain-isp-placements common-lisp:nil :type
    (common-lisp:or domain-isp-placements common-lisp:null)))
 (common-lisp:export (common-lisp:list 'overall-volume 'make-overall-volume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input overall-volume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input overall-volume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-statistics))
      (common-lisp:list
       (common-lisp:cons "VolumeStatistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-rate-percent))
      (common-lisp:list
       (common-lisp:cons "ReadRatePercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-isp-placements))
      (common-lisp:list
       (common-lisp:cons "DomainIspPlacements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input overall-volume))
   common-lisp:nil))
(common-lisp:deftype percentage () 'common-lisp:double-float)
(common-lisp:deftype percentage100wrapper () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (pinpoint-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-pinpoint-destination-"))
   (application-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pinpoint-destination 'make-pinpoint-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input pinpoint-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input pinpoint-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input pinpoint-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (placement-statistics (:copier common-lisp:nil)
      (:conc-name "struct-shape-placement-statistics-"))
   (inbox-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (spam-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (missing-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (spf-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (dkim-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'placement-statistics 'make-placement-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input placement-statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input placement-statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-percentage))
      (common-lisp:list
       (common-lisp:cons "InboxPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-percentage))
      (common-lisp:list
       (common-lisp:cons "SpamPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'missing-percentage))
      (common-lisp:list
       (common-lisp:cons "MissingPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spf-percentage))
      (common-lisp:list
       (common-lisp:cons "SpfPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dkim-percentage))
      (common-lisp:list
       (common-lisp:cons "DkimPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input placement-statistics))
   common-lisp:nil))
(common-lisp:deftype policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype policy-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-policy-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype policy-name () 'common-lisp:string)
(common-lisp:deftype pool-name () 'common-lisp:string)
(common-lisp:deftype private-key () 'common-lisp:string)
(common-lisp:deftype processed-records-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-dedicated-ip-warmup-attributes-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-account-dedicated-ip-warmup-attributes-request-"))
   (auto-warmup-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-account-dedicated-ip-warmup-attributes-request
                    'make-put-account-dedicated-ip-warmup-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-warmup-enabled))
      (common-lisp:list
       (common-lisp:cons "AutoWarmupEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-dedicated-ip-warmup-attributes-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-account-dedicated-ip-warmup-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-account-dedicated-ip-warmup-attributes-response
                    'make-put-account-dedicated-ip-warmup-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-details-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-account-details-request-"))
   (mail-type (common-lisp:error ":mail-type is required") :type
    (common-lisp:or mail-type common-lisp:null))
   (website-url (common-lisp:error ":website-url is required") :type
    (common-lisp:or website-url common-lisp:null))
   (contact-language common-lisp:nil :type
    (common-lisp:or contact-language common-lisp:null))
   (use-case-description
    (common-lisp:error ":use-case-description is required") :type
    (common-lisp:or use-case-description common-lisp:null))
   (additional-contact-email-addresses common-lisp:nil :type
    (common-lisp:or additional-contact-email-addresses common-lisp:null))
   (production-access-enabled common-lisp:nil :type
    (common-lisp:or enabled-wrapper common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-account-details-request
                    'make-put-account-details-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-details-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-details-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mail-type))
      (common-lisp:list
       (common-lisp:cons "MailType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'website-url))
      (common-lisp:list
       (common-lisp:cons "WebsiteURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contact-language))
      (common-lisp:list
       (common-lisp:cons "ContactLanguage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'use-case-description))
      (common-lisp:list
       (common-lisp:cons "UseCaseDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-contact-email-addresses))
      (common-lisp:list
       (common-lisp:cons "AdditionalContactEmailAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'production-access-enabled))
      (common-lisp:list
       (common-lisp:cons "ProductionAccessEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-details-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-details-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-account-details-response-")))
 (common-lisp:export
  (common-lisp:list 'put-account-details-response
                    'make-put-account-details-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-details-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-details-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-details-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-sending-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-account-sending-attributes-request-"))
   (sending-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-account-sending-attributes-request
                    'make-put-account-sending-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-sending-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-account-sending-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-account-sending-attributes-response
                    'make-put-account-sending-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-suppression-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-account-suppression-attributes-request-"))
   (suppressed-reasons common-lisp:nil :type
    (common-lisp:or suppression-list-reasons common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-account-suppression-attributes-request
                    'make-put-account-suppression-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-suppression-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-suppression-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suppressed-reasons))
      (common-lisp:list
       (common-lisp:cons "SuppressedReasons"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-suppression-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-suppression-attributes-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-account-suppression-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-account-suppression-attributes-response
                    'make-put-account-suppression-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-suppression-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-suppression-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-suppression-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-vdm-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-account-vdm-attributes-request-"))
   (vdm-attributes (common-lisp:error ":vdm-attributes is required") :type
    (common-lisp:or vdm-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-account-vdm-attributes-request
                    'make-put-account-vdm-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-vdm-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-vdm-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vdm-attributes))
      (common-lisp:list
       (common-lisp:cons "VdmAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-vdm-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-vdm-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-account-vdm-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-account-vdm-attributes-response
                    'make-put-account-vdm-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-vdm-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-vdm-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-vdm-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-delivery-options-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-delivery-options-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (tls-policy common-lisp:nil :type
    (common-lisp:or tls-policy common-lisp:null))
   (sending-pool-name common-lisp:nil :type
    (common-lisp:or sending-pool-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-delivery-options-request
                    'make-put-configuration-set-delivery-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-policy))
      (common-lisp:list
       (common-lisp:cons "TlsPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-pool-name))
      (common-lisp:list
       (common-lisp:cons "SendingPoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-delivery-options-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-delivery-options-response-")))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-delivery-options-response
                    'make-put-configuration-set-delivery-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-reputation-options-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-reputation-options-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (reputation-metrics-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-reputation-options-request
                    'make-put-configuration-set-reputation-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reputation-metrics-enabled))
      (common-lisp:list
       (common-lisp:cons "ReputationMetricsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-reputation-options-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-reputation-options-response-")))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-reputation-options-response
                    'make-put-configuration-set-reputation-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-sending-options-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-sending-options-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (sending-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-sending-options-request
                    'make-put-configuration-set-sending-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-sending-options-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-sending-options-response-")))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-sending-options-response
                    'make-put-configuration-set-sending-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-suppression-options-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-suppression-options-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (suppressed-reasons common-lisp:nil :type
    (common-lisp:or suppression-list-reasons common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-suppression-options-request
                    'make-put-configuration-set-suppression-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-suppression-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-suppression-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suppressed-reasons))
      (common-lisp:list
       (common-lisp:cons "SuppressedReasons"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-suppression-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-suppression-options-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-suppression-options-response-")))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-suppression-options-response
                    'make-put-configuration-set-suppression-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-suppression-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-suppression-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-suppression-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-tracking-options-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-tracking-options-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (custom-redirect-domain common-lisp:nil :type
    (common-lisp:or custom-redirect-domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-tracking-options-request
                    'make-put-configuration-set-tracking-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-redirect-domain))
      (common-lisp:list
       (common-lisp:cons "CustomRedirectDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-tracking-options-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-tracking-options-response-")))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-tracking-options-response
                    'make-put-configuration-set-tracking-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-vdm-options-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-configuration-set-vdm-options-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (vdm-options common-lisp:nil :type
    (common-lisp:or vdm-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-vdm-options-request
                    'make-put-configuration-set-vdm-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-vdm-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-vdm-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vdm-options))
      (common-lisp:list
       (common-lisp:cons "VdmOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-vdm-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-vdm-options-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-configuration-set-vdm-options-response-")))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-vdm-options-response
                    'make-put-configuration-set-vdm-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-vdm-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-vdm-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-vdm-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-dedicated-ip-in-pool-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-dedicated-ip-in-pool-request-"))
   (ip (common-lisp:error ":ip is required") :type
    (common-lisp:or ip common-lisp:null))
   (destination-pool-name
    (common-lisp:error ":destination-pool-name is required") :type
    (common-lisp:or pool-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-dedicated-ip-in-pool-request
                    'make-put-dedicated-ip-in-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-pool-name))
      (common-lisp:list
       (common-lisp:cons "DestinationPoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-dedicated-ip-in-pool-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-dedicated-ip-in-pool-response-")))
 (common-lisp:export
  (common-lisp:list 'put-dedicated-ip-in-pool-response
                    'make-put-dedicated-ip-in-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-dedicated-ip-warmup-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-dedicated-ip-warmup-attributes-request-"))
   (ip (common-lisp:error ":ip is required") :type
    (common-lisp:or ip common-lisp:null))
   (warmup-percentage (common-lisp:error ":warmup-percentage is required")
    :type (common-lisp:or percentage100wrapper common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-dedicated-ip-warmup-attributes-request
                    'make-put-dedicated-ip-warmup-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warmup-percentage))
      (common-lisp:list
       (common-lisp:cons "WarmupPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-dedicated-ip-warmup-attributes-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-dedicated-ip-warmup-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-dedicated-ip-warmup-attributes-response
                    'make-put-dedicated-ip-warmup-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-deliverability-dashboard-option-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-deliverability-dashboard-option-request-"))
   (dashboard-enabled (common-lisp:error ":dashboard-enabled is required")
    :type (common-lisp:or enabled common-lisp:null))
   (subscribed-domains common-lisp:nil :type
    (common-lisp:or domain-deliverability-tracking-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-deliverability-dashboard-option-request
                    'make-put-deliverability-dashboard-option-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-enabled))
      (common-lisp:list
       (common-lisp:cons "DashboardEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscribed-domains))
      (common-lisp:list
       (common-lisp:cons "SubscribedDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-deliverability-dashboard-option-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-deliverability-dashboard-option-response-")))
 (common-lisp:export
  (common-lisp:list 'put-deliverability-dashboard-option-response
                    'make-put-deliverability-dashboard-option-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-configuration-set-attributes-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-configuration-set-attributes-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-configuration-set-attributes-request
                    'make-put-email-identity-configuration-set-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-configuration-set-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-configuration-set-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-configuration-set-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-configuration-set-attributes-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-configuration-set-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-configuration-set-attributes-response
                    'make-put-email-identity-configuration-set-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-configuration-set-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-configuration-set-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-configuration-set-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-dkim-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-email-identity-dkim-attributes-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (signing-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-dkim-attributes-request
                    'make-put-email-identity-dkim-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-enabled))
      (common-lisp:list
       (common-lisp:cons "SigningEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-dkim-attributes-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-dkim-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-dkim-attributes-response
                    'make-put-email-identity-dkim-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-dkim-signing-attributes-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-dkim-signing-attributes-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (signing-attributes-origin
    (common-lisp:error ":signing-attributes-origin is required") :type
    (common-lisp:or dkim-signing-attributes-origin common-lisp:null))
   (signing-attributes common-lisp:nil :type
    (common-lisp:or dkim-signing-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-dkim-signing-attributes-request
                    'make-put-email-identity-dkim-signing-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-signing-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-signing-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signing-attributes-origin))
      (common-lisp:list
       (common-lisp:cons "SigningAttributesOrigin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-attributes))
      (common-lisp:list
       (common-lisp:cons "SigningAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-signing-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-dkim-signing-attributes-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-dkim-signing-attributes-response-"))
   (dkim-status common-lisp:nil :type
    (common-lisp:or dkim-status common-lisp:null))
   (dkim-tokens common-lisp:nil :type
    (common-lisp:or dns-token-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-dkim-signing-attributes-response
                    'make-put-email-identity-dkim-signing-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-signing-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-signing-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dkim-status))
      (common-lisp:list
       (common-lisp:cons "DkimStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dkim-tokens))
      (common-lisp:list
       (common-lisp:cons "DkimTokens"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-signing-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-feedback-attributes-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-feedback-attributes-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (email-forwarding-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-feedback-attributes-request
                    'make-put-email-identity-feedback-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-forwarding-enabled))
      (common-lisp:list
       (common-lisp:cons "EmailForwardingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-feedback-attributes-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-feedback-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-feedback-attributes-response
                    'make-put-email-identity-feedback-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-mail-from-attributes-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-mail-from-attributes-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (mail-from-domain common-lisp:nil :type
    (common-lisp:or mail-from-domain-name common-lisp:null))
   (behavior-on-mx-failure common-lisp:nil :type
    (common-lisp:or behavior-on-mx-failure common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-mail-from-attributes-request
                    'make-put-email-identity-mail-from-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mail-from-domain))
      (common-lisp:list
       (common-lisp:cons "MailFromDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'behavior-on-mx-failure))
      (common-lisp:list
       (common-lisp:cons "BehaviorOnMxFailure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-mail-from-attributes-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-mail-from-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-mail-from-attributes-response
                    'make-put-email-identity-mail-from-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-suppressed-destination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-suppressed-destination-request-"))
   (email-address (common-lisp:error ":email-address is required") :type
    (common-lisp:or email-address common-lisp:null))
   (reason (common-lisp:error ":reason is required") :type
    (common-lisp:or suppression-list-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-suppressed-destination-request
                    'make-put-suppressed-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-suppressed-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-suppressed-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "EmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-suppressed-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-suppressed-destination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-suppressed-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'put-suppressed-destination-response
                    'make-put-suppressed-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-suppressed-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-suppressed-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-suppressed-destination-response))
   common-lisp:nil))
(common-lisp:deftype query-error-code () 'common-lisp:string)
(common-lisp:deftype query-error-message () 'common-lisp:string)
(common-lisp:deftype query-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (raw-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-raw-message-"))
   (data (common-lisp:error ":data is required") :type
    (common-lisp:or raw-message-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'raw-message 'make-raw-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input raw-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input raw-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input raw-message))
   common-lisp:nil))
(common-lisp:deftype raw-message-data ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype rbl-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (recommendation (:copier common-lisp:nil)
      (:conc-name "struct-shape-recommendation-"))
   (resource-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or recommendation-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or recommendation-description common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or recommendation-status common-lisp:null))
   (created-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-updated-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (impact common-lisp:nil :type
    (common-lisp:or recommendation-impact common-lisp:null)))
 (common-lisp:export (common-lisp:list 'recommendation 'make-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'impact))
      (common-lisp:list
       (common-lisp:cons "Impact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recommendation))
   common-lisp:nil))
(common-lisp:deftype recommendation-description () 'common-lisp:string)
(common-lisp:deftype recommendation-impact () 'common-lisp:string)
(common-lisp:deftype recommendation-status () 'common-lisp:string)
(common-lisp:deftype recommendation-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recommendations-list ()
   '(trivial-types:proper-list recommendation))
 (common-lisp:defun |make-recommendations-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype rendered-email-template () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (replacement-email-content (:copier common-lisp:nil)
      (:conc-name "struct-shape-replacement-email-content-"))
   (replacement-template common-lisp:nil :type
    (common-lisp:or replacement-template common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'replacement-email-content
                    'make-replacement-email-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          replacement-email-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          replacement-email-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replacement-template))
      (common-lisp:list
       (common-lisp:cons "ReplacementTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          replacement-email-content))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (replacement-template (:copier common-lisp:nil)
      (:conc-name "struct-shape-replacement-template-"))
   (replacement-template-data common-lisp:nil :type
    (common-lisp:or email-template-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'replacement-template 'make-replacement-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input replacement-template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input replacement-template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replacement-template-data))
      (common-lisp:list
       (common-lisp:cons "ReplacementTemplateData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input replacement-template))
   common-lisp:nil))
(common-lisp:deftype report-id () 'common-lisp:string)
(common-lisp:deftype report-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (reputation-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-reputation-options-"))
   (reputation-metrics-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (last-fresh-start common-lisp:nil :type
    (common-lisp:or last-fresh-start common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reputation-options 'make-reputation-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reputation-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reputation-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reputation-metrics-enabled))
      (common-lisp:list
       (common-lisp:cons "ReputationMetricsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-fresh-start))
      (common-lisp:list
       (common-lisp:cons "LastFreshStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reputation-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (review-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-review-details-"))
   (status common-lisp:nil :type
    (common-lisp:or review-status common-lisp:null))
   (case-id common-lisp:nil :type (common-lisp:or case-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'review-details 'make-review-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input review-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input review-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'case-id))
      (common-lisp:list
       (common-lisp:cons "CaseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input review-details))
   common-lisp:nil))
(common-lisp:deftype review-status () 'common-lisp:string)
(common-lisp:deftype s3url () 'common-lisp:string)
(common-lisp:deftype scaling-mode () 'common-lisp:string)
(common-lisp:deftype selector () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (send-bulk-email-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-bulk-email-request-"))
   (from-email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (from-email-address-identity-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (reply-to-addresses common-lisp:nil :type
    (common-lisp:or email-address-list common-lisp:null))
   (feedback-forwarding-email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (feedback-forwarding-email-address-identity-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (default-email-tags common-lisp:nil :type
    (common-lisp:or message-tag-list common-lisp:null))
   (default-content (common-lisp:error ":default-content is required") :type
    (common-lisp:or bulk-email-content common-lisp:null))
   (bulk-email-entries (common-lisp:error ":bulk-email-entries is required")
    :type (common-lisp:or bulk-email-entry-list common-lisp:null))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-bulk-email-request 'make-send-bulk-email-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-bulk-email-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-bulk-email-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'from-email-address-identity-arn))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddressIdentityArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reply-to-addresses))
      (common-lisp:list
       (common-lisp:cons "ReplyToAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'feedback-forwarding-email-address))
      (common-lisp:list
       (common-lisp:cons "FeedbackForwardingEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'feedback-forwarding-email-address-identity-arn))
      (common-lisp:list
       (common-lisp:cons "FeedbackForwardingEmailAddressIdentityArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-email-tags))
      (common-lisp:list
       (common-lisp:cons "DefaultEmailTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-content))
      (common-lisp:list
       (common-lisp:cons "DefaultContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bulk-email-entries))
      (common-lisp:list
       (common-lisp:cons "BulkEmailEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-bulk-email-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-bulk-email-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-bulk-email-response-"))
   (bulk-email-entry-results
    (common-lisp:error ":bulk-email-entry-results is required") :type
    (common-lisp:or bulk-email-entry-result-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-bulk-email-response 'make-send-bulk-email-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-bulk-email-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-bulk-email-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bulk-email-entry-results))
      (common-lisp:list
       (common-lisp:cons "BulkEmailEntryResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-bulk-email-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-custom-verification-email-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-custom-verification-email-request-"))
   (email-address (common-lisp:error ":email-address is required") :type
    (common-lisp:or email-address common-lisp:null))
   (template-name (common-lisp:error ":template-name is required") :type
    (common-lisp:or email-template-name common-lisp:null))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-custom-verification-email-request
                    'make-send-custom-verification-email-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-custom-verification-email-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-custom-verification-email-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "EmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-custom-verification-email-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-custom-verification-email-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-custom-verification-email-response-"))
   (message-id common-lisp:nil :type
    (common-lisp:or outbound-message-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-custom-verification-email-response
                    'make-send-custom-verification-email-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-custom-verification-email-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-custom-verification-email-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-custom-verification-email-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-email-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-email-request-"))
   (from-email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (from-email-address-identity-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or destination common-lisp:null))
   (reply-to-addresses common-lisp:nil :type
    (common-lisp:or email-address-list common-lisp:null))
   (feedback-forwarding-email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (feedback-forwarding-email-address-identity-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (content (common-lisp:error ":content is required") :type
    (common-lisp:or email-content common-lisp:null))
   (email-tags common-lisp:nil :type
    (common-lisp:or message-tag-list common-lisp:null))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (list-management-options common-lisp:nil :type
    (common-lisp:or list-management-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-email-request 'make-send-email-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-email-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-email-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'from-email-address-identity-arn))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddressIdentityArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reply-to-addresses))
      (common-lisp:list
       (common-lisp:cons "ReplyToAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'feedback-forwarding-email-address))
      (common-lisp:list
       (common-lisp:cons "FeedbackForwardingEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'feedback-forwarding-email-address-identity-arn))
      (common-lisp:list
       (common-lisp:cons "FeedbackForwardingEmailAddressIdentityArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-tags))
      (common-lisp:list
       (common-lisp:cons "EmailTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'list-management-options))
      (common-lisp:list
       (common-lisp:cons "ListManagementOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-email-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-email-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-email-response-"))
   (message-id common-lisp:nil :type
    (common-lisp:or outbound-message-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-email-response 'make-send-email-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-email-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-email-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-email-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-quota (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-quota-"))
   (max24hour-send common-lisp:nil :type
    (common-lisp:or max24hour-send common-lisp:null))
   (max-send-rate common-lisp:nil :type
    (common-lisp:or max-send-rate common-lisp:null))
   (sent-last24hours common-lisp:nil :type
    (common-lisp:or sent-last24hours common-lisp:null)))
 (common-lisp:export (common-lisp:list 'send-quota 'make-send-quota))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-quota))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-quota))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max24hour-send))
      (common-lisp:list
       (common-lisp:cons "Max24HourSend"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-send-rate))
      (common-lisp:list
       (common-lisp:cons "MaxSendRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sent-last24hours))
      (common-lisp:list
       (common-lisp:cons "SentLast24Hours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-quota))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sending-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-sending-options-"))
   (sending-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sending-options 'make-sending-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sending-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sending-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sending-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition sending-paused-exception
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'sending-paused-exception)))
(common-lisp:deftype sending-pool-name () 'common-lisp:string)
(common-lisp:deftype sent-last24hours () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (sns-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-sns-destination-"))
   (topic-arn (common-lisp:error ":topic-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sns-destination 'make-sns-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sns-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sns-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sns-destination))
   common-lisp:nil))
(common-lisp:deftype subject () 'common-lisp:string)
(common-lisp:deftype subscription-status () 'common-lisp:string)
(common-lisp:deftype success-redirection-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (suppressed-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-suppressed-destination-"))
   (email-address (common-lisp:error ":email-address is required") :type
    (common-lisp:or email-address common-lisp:null))
   (reason (common-lisp:error ":reason is required") :type
    (common-lisp:or suppression-list-reason common-lisp:null))
   (last-update-time (common-lisp:error ":last-update-time is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or suppressed-destination-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'suppressed-destination 'make-suppressed-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suppressed-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suppressed-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "EmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suppressed-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (suppressed-destination-attributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-suppressed-destination-attributes-"))
   (message-id common-lisp:nil :type
    (common-lisp:or outbound-message-id common-lisp:null))
   (feedback-id common-lisp:nil :type
    (common-lisp:or feedback-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'suppressed-destination-attributes
                    'make-suppressed-destination-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suppressed-destination-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suppressed-destination-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'feedback-id))
      (common-lisp:list
       (common-lisp:cons "FeedbackId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suppressed-destination-attributes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype suppressed-destination-summaries ()
   '(trivial-types:proper-list suppressed-destination-summary))
 (common-lisp:defun |make-suppressed-destination-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            suppressed-destination-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (suppressed-destination-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-suppressed-destination-summary-"))
   (email-address (common-lisp:error ":email-address is required") :type
    (common-lisp:or email-address common-lisp:null))
   (reason (common-lisp:error ":reason is required") :type
    (common-lisp:or suppression-list-reason common-lisp:null))
   (last-update-time (common-lisp:error ":last-update-time is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'suppressed-destination-summary
                    'make-suppressed-destination-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suppressed-destination-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suppressed-destination-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "EmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suppressed-destination-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (suppression-attributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-suppression-attributes-"))
   (suppressed-reasons common-lisp:nil :type
    (common-lisp:or suppression-list-reasons common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'suppression-attributes 'make-suppression-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suppression-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suppression-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suppressed-reasons))
      (common-lisp:list
       (common-lisp:cons "SuppressedReasons"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suppression-attributes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (suppression-list-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-suppression-list-destination-"))
   (suppression-list-import-action
    (common-lisp:error ":suppression-list-import-action is required") :type
    (common-lisp:or suppression-list-import-action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'suppression-list-destination
                    'make-suppression-list-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suppression-list-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suppression-list-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suppression-list-import-action))
      (common-lisp:list
       (common-lisp:cons "SuppressionListImportAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suppression-list-destination))
   common-lisp:nil))
(common-lisp:deftype suppression-list-import-action () 'common-lisp:string)
(common-lisp:deftype suppression-list-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype suppression-list-reasons ()
   '(trivial-types:proper-list suppression-list-reason))
 (common-lisp:defun |make-suppression-list-reasons|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list suppression-list-reason))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (suppression-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-suppression-options-"))
   (suppressed-reasons common-lisp:nil :type
    (common-lisp:or suppression-list-reasons common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'suppression-options 'make-suppression-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input suppression-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input suppression-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suppressed-reasons))
      (common-lisp:list
       (common-lisp:cons "SuppressedReasons"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input suppression-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (template (:copier common-lisp:nil) (:conc-name "struct-shape-template-"))
   (template-name common-lisp:nil :type
    (common-lisp:or email-template-name common-lisp:null))
   (template-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (template-data common-lisp:nil :type
    (common-lisp:or email-template-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'template 'make-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-arn))
      (common-lisp:list
       (common-lisp:cons "TemplateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-data))
      (common-lisp:list
       (common-lisp:cons "TemplateData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input template))
   common-lisp:nil))
(common-lisp:deftype template-content () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (test-render-email-template-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-render-email-template-request-"))
   (template-name (common-lisp:error ":template-name is required") :type
    (common-lisp:or email-template-name common-lisp:null))
   (template-data (common-lisp:error ":template-data is required") :type
    (common-lisp:or email-template-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-render-email-template-request
                    'make-test-render-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-render-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-render-email-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-data))
      (common-lisp:list
       (common-lisp:cons "TemplateData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-render-email-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (test-render-email-template-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-render-email-template-response-"))
   (rendered-template (common-lisp:error ":rendered-template is required")
    :type (common-lisp:or rendered-email-template common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-render-email-template-response
                    'make-test-render-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-render-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-render-email-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rendered-template))
      (common-lisp:list
       (common-lisp:cons "RenderedTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-render-email-template-response))
   common-lisp:nil))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype timestamp-list () '(trivial-types:proper-list timestamp))
 (common-lisp:defun |make-timestamp-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list timestamp))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tls-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (sesv2-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (topic (:copier common-lisp:nil) (:conc-name "struct-shape-topic-"))
   (topic-name (common-lisp:error ":topic-name is required") :type
    (common-lisp:or topic-name common-lisp:null))
   (display-name (common-lisp:error ":display-name is required") :type
    (common-lisp:or display-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (default-subscription-status
    (common-lisp:error ":default-subscription-status is required") :type
    (common-lisp:or subscription-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'topic 'make-topic))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input topic))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input topic))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-name))
      (common-lisp:list
       (common-lisp:cons "TopicName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "DisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-subscription-status))
      (common-lisp:list
       (common-lisp:cons "DefaultSubscriptionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input topic))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (topic-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-topic-filter-"))
   (topic-name common-lisp:nil :type
    (common-lisp:or topic-name common-lisp:null))
   (use-default-if-preference-unavailable common-lisp:nil :type
    (common-lisp:or use-default-if-preference-unavailable common-lisp:null)))
 (common-lisp:export (common-lisp:list 'topic-filter 'make-topic-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input topic-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input topic-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-name))
      (common-lisp:list
       (common-lisp:cons "TopicName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'use-default-if-preference-unavailable))
      (common-lisp:list
       (common-lisp:cons "UseDefaultIfPreferenceUnavailable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input topic-filter))
   common-lisp:nil))
(common-lisp:deftype topic-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (topic-preference (:copier common-lisp:nil)
      (:conc-name "struct-shape-topic-preference-"))
   (topic-name (common-lisp:error ":topic-name is required") :type
    (common-lisp:or topic-name common-lisp:null))
   (subscription-status (common-lisp:error ":subscription-status is required")
    :type (common-lisp:or subscription-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'topic-preference 'make-topic-preference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input topic-preference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input topic-preference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-name))
      (common-lisp:list
       (common-lisp:cons "TopicName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-status))
      (common-lisp:list
       (common-lisp:cons "SubscriptionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input topic-preference))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype topic-preference-list ()
   '(trivial-types:proper-list topic-preference))
 (common-lisp:defun |make-topic-preference-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list topic-preference))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype topics () '(trivial-types:proper-list topic))
 (common-lisp:defun |make-topics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list topic))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tracking-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-tracking-options-"))
   (custom-redirect-domain
    (common-lisp:error ":custom-redirect-domain is required") :type
    (common-lisp:or custom-redirect-domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tracking-options 'make-tracking-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tracking-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tracking-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-redirect-domain))
      (common-lisp:list
       (common-lisp:cons "CustomRedirectDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tracking-options))
   common-lisp:nil))
(common-lisp:deftype unsubscribe-all () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-set-event-destination-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-configuration-set-event-destination-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination-name
    (common-lisp:error ":event-destination-name is required") :type
    (common-lisp:or event-destination-name common-lisp:null))
   (event-destination (common-lisp:error ":event-destination is required")
    :type (common-lisp:or event-destination-definition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-configuration-set-event-destination-request
                    'make-update-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destination))
      (common-lisp:list
       (common-lisp:cons "EventDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-set-event-destination-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-configuration-set-event-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'update-configuration-set-event-destination-response
                    'make-update-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-contact-list-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-contact-list-request-"))
   (contact-list-name (common-lisp:error ":contact-list-name is required")
    :type (common-lisp:or contact-list-name common-lisp:null))
   (topics common-lisp:nil :type (common-lisp:or topics common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-contact-list-request
                    'make-update-contact-list-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-contact-list-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-contact-list-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topics))
      (common-lisp:list
       (common-lisp:cons "Topics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-contact-list-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-contact-list-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-contact-list-response-")))
 (common-lisp:export
  (common-lisp:list 'update-contact-list-response
                    'make-update-contact-list-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-contact-list-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-contact-list-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-contact-list-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-contact-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-contact-request-"))
   (contact-list-name (common-lisp:error ":contact-list-name is required")
    :type (common-lisp:or contact-list-name common-lisp:null))
   (email-address (common-lisp:error ":email-address is required") :type
    (common-lisp:or email-address common-lisp:null))
   (topic-preferences common-lisp:nil :type
    (common-lisp:or topic-preference-list common-lisp:null))
   (unsubscribe-all common-lisp:nil :type
    (common-lisp:or unsubscribe-all common-lisp:null))
   (attributes-data common-lisp:nil :type
    (common-lisp:or attributes-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-contact-request 'make-update-contact-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-contact-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-contact-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-preferences))
      (common-lisp:list
       (common-lisp:cons "TopicPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unsubscribe-all))
      (common-lisp:list
       (common-lisp:cons "UnsubscribeAll"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes-data))
      (common-lisp:list
       (common-lisp:cons "AttributesData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-contact-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-contact-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-contact-response-")))
 (common-lisp:export
  (common-lisp:list 'update-contact-response 'make-update-contact-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-contact-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-contact-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-contact-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-custom-verification-email-template-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-custom-verification-email-template-request-"))
   (template-name (common-lisp:error ":template-name is required") :type
    (common-lisp:or email-template-name common-lisp:null))
   (from-email-address (common-lisp:error ":from-email-address is required")
    :type (common-lisp:or email-address common-lisp:null))
   (template-subject (common-lisp:error ":template-subject is required") :type
    (common-lisp:or email-template-subject common-lisp:null))
   (template-content (common-lisp:error ":template-content is required") :type
    (common-lisp:or template-content common-lisp:null))
   (success-redirection-url
    (common-lisp:error ":success-redirection-url is required") :type
    (common-lisp:or success-redirection-url common-lisp:null))
   (failure-redirection-url
    (common-lisp:error ":failure-redirection-url is required") :type
    (common-lisp:or failure-redirection-url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-custom-verification-email-template-request
                    'make-update-custom-verification-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-verification-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-verification-email-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-subject))
      (common-lisp:list
       (common-lisp:cons "TemplateSubject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-content))
      (common-lisp:list
       (common-lisp:cons "TemplateContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'success-redirection-url))
      (common-lisp:list
       (common-lisp:cons "SuccessRedirectionURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-redirection-url))
      (common-lisp:list
       (common-lisp:cons "FailureRedirectionURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-verification-email-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-custom-verification-email-template-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-custom-verification-email-template-response-")))
 (common-lisp:export
  (common-lisp:list 'update-custom-verification-email-template-response
                    'make-update-custom-verification-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-verification-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-verification-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-verification-email-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-email-identity-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-email-identity-policy-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (policy-name (common-lisp:error ":policy-name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (policy (common-lisp:error ":policy is required") :type
    (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-email-identity-policy-request
                    'make-update-email-identity-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-email-identity-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-email-identity-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-email-identity-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-email-identity-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-email-identity-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'update-email-identity-policy-response
                    'make-update-email-identity-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-email-identity-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-email-identity-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-email-identity-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-email-template-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-email-template-request-"))
   (template-name (common-lisp:error ":template-name is required") :type
    (common-lisp:or email-template-name common-lisp:null))
   (template-content (common-lisp:error ":template-content is required") :type
    (common-lisp:or email-template-content common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-email-template-request
                    'make-update-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-content))
      (common-lisp:list
       (common-lisp:cons "TemplateContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-email-template-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-email-template-response-")))
 (common-lisp:export
  (common-lisp:list 'update-email-template-response
                    'make-update-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-response))
   common-lisp:nil))
(common-lisp:deftype use-case-description () 'common-lisp:string)
(common-lisp:deftype use-default-if-preference-unavailable ()
  'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (vdm-attributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-vdm-attributes-"))
   (vdm-enabled (common-lisp:error ":vdm-enabled is required") :type
    (common-lisp:or feature-status common-lisp:null))
   (dashboard-attributes common-lisp:nil :type
    (common-lisp:or dashboard-attributes common-lisp:null))
   (guardian-attributes common-lisp:nil :type
    (common-lisp:or guardian-attributes common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vdm-attributes 'make-vdm-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vdm-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vdm-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vdm-enabled))
      (common-lisp:list
       (common-lisp:cons "VdmEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dashboard-attributes))
      (common-lisp:list
       (common-lisp:cons "DashboardAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'guardian-attributes))
      (common-lisp:list
       (common-lisp:cons "GuardianAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vdm-attributes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (vdm-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-vdm-options-"))
   (dashboard-options common-lisp:nil :type
    (common-lisp:or dashboard-options common-lisp:null))
   (guardian-options common-lisp:nil :type
    (common-lisp:or guardian-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vdm-options 'make-vdm-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vdm-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vdm-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-options))
      (common-lisp:list
       (common-lisp:cons "DashboardOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'guardian-options))
      (common-lisp:list
       (common-lisp:cons "GuardianOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vdm-options))
   common-lisp:nil))
(common-lisp:deftype verification-status () 'common-lisp:string)
(common-lisp:deftype volume () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (volume-statistics (:copier common-lisp:nil)
      (:conc-name "struct-shape-volume-statistics-"))
   (inbox-raw-count common-lisp:nil :type
    (common-lisp:or volume common-lisp:null))
   (spam-raw-count common-lisp:nil :type
    (common-lisp:or volume common-lisp:null))
   (projected-inbox common-lisp:nil :type
    (common-lisp:or volume common-lisp:null))
   (projected-spam common-lisp:nil :type
    (common-lisp:or volume common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'volume-statistics 'make-volume-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input volume-statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input volume-statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-raw-count))
      (common-lisp:list
       (common-lisp:cons "InboxRawCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-raw-count))
      (common-lisp:list
       (common-lisp:cons "SpamRawCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-inbox))
      (common-lisp:list
       (common-lisp:cons "ProjectedInbox"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-spam))
      (common-lisp:list
       (common-lisp:cons "ProjectedSpam"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input volume-statistics))
   common-lisp:nil))
(common-lisp:deftype warmup-status () 'common-lisp:string)
(common-lisp:deftype website-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun batch-get-metric-data
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queries)
   (common-lisp:declare (common-lisp:ignorable queries))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-metric-data-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/metrics/batch"
                                                        "BatchGetMetricData"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-get-metric-data))
(common-lisp:progn
 (common-lisp:defun create-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name tracking-options
                     delivery-options reputation-options sending-options tags
                     suppression-options vdm-options)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name tracking-options
     delivery-options reputation-options sending-options tags
     suppression-options vdm-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/configuration-sets"
                                                        "CreateConfigurationSet"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-configuration-set))
(common-lisp:progn
 (common-lisp:defun create-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     event-destination-name event-destination)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination-name
     event-destination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/configuration-sets/~A/event-destinations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "CreateConfigurationSetEventDestination"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun create-contact
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key contact-list-name email-address
                     topic-preferences unsubscribe-all attributes-data)
   (common-lisp:declare
    (common-lisp:ignorable contact-list-name email-address topic-preferences
     unsubscribe-all attributes-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-contact-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/contact-lists/~A/contacts"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'contact-list-name))))
                                                        "CreateContact"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-contact))
(common-lisp:progn
 (common-lisp:defun create-contact-list
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key contact-list-name topics description
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable contact-list-name topics description tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-contact-list-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/contact-lists"
                                                        "CreateContactList"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-contact-list))
(common-lisp:progn
 (common-lisp:defun create-custom-verification-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name from-email-address
                     template-subject template-content success-redirection-url
                     failure-redirection-url)
   (common-lisp:declare
    (common-lisp:ignorable template-name from-email-address template-subject
     template-content success-redirection-url failure-redirection-url))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-custom-verification-email-template-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/custom-verification-email-templates"
                                                        "CreateCustomVerificationEmailTemplate"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-custom-verification-email-template))
(common-lisp:progn
 (common-lisp:defun create-dedicated-ip-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name tags scaling-mode)
   (common-lisp:declare (common-lisp:ignorable pool-name tags scaling-mode))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-dedicated-ip-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/dedicated-ip-pools"
                                                        "CreateDedicatedIpPool"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-dedicated-ip-pool))
(common-lisp:progn
 (common-lisp:defun create-deliverability-test-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-name from-email-address content
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable report-name from-email-address content tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-deliverability-test-report-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/deliverability-dashboard/test"
                                                        "CreateDeliverabilityTestReport"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-deliverability-test-report))
(common-lisp:progn
 (common-lisp:defun create-email-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity tags
                     dkim-signing-attributes configuration-set-name)
   (common-lisp:declare
    (common-lisp:ignorable email-identity tags dkim-signing-attributes
     configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-email-identity-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/identities"
                                                        "CreateEmailIdentity"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-email-identity))
(common-lisp:progn
 (common-lisp:defun create-email-identity-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity policy-name policy)
   (common-lisp:declare
    (common-lisp:ignorable email-identity policy-name policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-email-identity-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/identities/~A/policies/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'policy-name))))
                                                        "CreateEmailIdentityPolicy"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-email-identity-policy))
(common-lisp:progn
 (common-lisp:defun create-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name template-content)
   (common-lisp:declare (common-lisp:ignorable template-name template-content))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-email-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/templates"
                                                        "CreateEmailTemplate"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-email-template))
(common-lisp:progn
 (common-lisp:defun create-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key import-destination import-data-source)
   (common-lisp:declare
    (common-lisp:ignorable import-destination import-data-source))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/import-jobs"
                                                        "CreateImportJob"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-import-job))
(common-lisp:progn
 (common-lisp:defun delete-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/configuration-sets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "DeleteConfigurationSet"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-configuration-set))
(common-lisp:progn
 (common-lisp:defun delete-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     event-destination-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/configuration-sets/~A/event-destinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'event-destination-name))))
                                                        "DeleteConfigurationSetEventDestination"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun delete-contact
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key contact-list-name email-address)
   (common-lisp:declare
    (common-lisp:ignorable contact-list-name email-address))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-contact-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/contact-lists/~A/contacts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'contact-list-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-address))))
                                                        "DeleteContact"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-contact))
(common-lisp:progn
 (common-lisp:defun delete-contact-list
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key contact-list-name)
   (common-lisp:declare (common-lisp:ignorable contact-list-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-contact-list-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/contact-lists/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'contact-list-name))))
                                                        "DeleteContactList"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-contact-list))
(common-lisp:progn
 (common-lisp:defun delete-custom-verification-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name)
   (common-lisp:declare (common-lisp:ignorable template-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-custom-verification-email-template-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/custom-verification-email-templates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "DeleteCustomVerificationEmailTemplate"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-custom-verification-email-template))
(common-lisp:progn
 (common-lisp:defun delete-dedicated-ip-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name)
   (common-lisp:declare (common-lisp:ignorable pool-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-dedicated-ip-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/dedicated-ip-pools/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'pool-name))))
                                                        "DeleteDedicatedIpPool"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-dedicated-ip-pool))
(common-lisp:progn
 (common-lisp:defun delete-email-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity)
   (common-lisp:declare (common-lisp:ignorable email-identity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-email-identity-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/identities/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "DeleteEmailIdentity"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-email-identity))
(common-lisp:progn
 (common-lisp:defun delete-email-identity-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity policy-name)
   (common-lisp:declare (common-lisp:ignorable email-identity policy-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-email-identity-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/identities/~A/policies/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'policy-name))))
                                                        "DeleteEmailIdentityPolicy"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-email-identity-policy))
(common-lisp:progn
 (common-lisp:defun delete-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name)
   (common-lisp:declare (common-lisp:ignorable template-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-email-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/templates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "DeleteEmailTemplate"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-email-template))
(common-lisp:progn
 (common-lisp:defun delete-suppressed-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-address)
   (common-lisp:declare (common-lisp:ignorable email-address))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-suppressed-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/suppression/addresses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-address))))
                                                        "DeleteSuppressedDestination"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-suppressed-destination))
(common-lisp:progn
 (common-lisp:defun get-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'sesv2-request :method "GET" :path
                                "/v2/email/account" :protocol :rest-json
                                :operation "GetAccount" :params
                                `(("Action" ,@"GetAccount")
                                  ("Version" ,@"2019-09-27"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-account))
(common-lisp:progn
 (common-lisp:defun get-blacklist-reports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key blacklist-item-names)
   (common-lisp:declare (common-lisp:ignorable blacklist-item-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-blacklist-reports-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/v2/email/deliverability-dashboard/blacklist-report"
                                                        "GetBlacklistReports"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-blacklist-reports))
(common-lisp:progn
 (common-lisp:defun get-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/configuration-sets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "GetConfigurationSet"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-configuration-set))
(common-lisp:progn
 (common-lisp:defun get-configuration-set-event-destinations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-configuration-set-event-destinations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/configuration-sets/~A/event-destinations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "GetConfigurationSetEventDestinations"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-configuration-set-event-destinations))
(common-lisp:progn
 (common-lisp:defun get-contact
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key contact-list-name email-address)
   (common-lisp:declare
    (common-lisp:ignorable contact-list-name email-address))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-contact-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/contact-lists/~A/contacts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'contact-list-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-address))))
                                                        "GetContact"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-contact))
(common-lisp:progn
 (common-lisp:defun get-contact-list
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key contact-list-name)
   (common-lisp:declare (common-lisp:ignorable contact-list-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-contact-list-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/contact-lists/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'contact-list-name))))
                                                        "GetContactList"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-contact-list))
(common-lisp:progn
 (common-lisp:defun get-custom-verification-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name)
   (common-lisp:declare (common-lisp:ignorable template-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-custom-verification-email-template-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/custom-verification-email-templates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "GetCustomVerificationEmailTemplate"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-custom-verification-email-template))
(common-lisp:progn
 (common-lisp:defun get-dedicated-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ip)
   (common-lisp:declare (common-lisp:ignorable ip))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-dedicated-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/dedicated-ips/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ip))))
                                                        "GetDedicatedIp"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-dedicated-ip))
(common-lisp:progn
 (common-lisp:defun get-dedicated-ip-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name)
   (common-lisp:declare (common-lisp:ignorable pool-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-dedicated-ip-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/dedicated-ip-pools/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'pool-name))))
                                                        "GetDedicatedIpPool"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-dedicated-ip-pool))
(common-lisp:progn
 (common-lisp:defun get-dedicated-ips
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name next-token page-size)
   (common-lisp:declare (common-lisp:ignorable pool-name next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-dedicated-ips-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/v2/email/dedicated-ips"
                                                        "GetDedicatedIps"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-dedicated-ips))
(common-lisp:progn
 (common-lisp:defun get-deliverability-dashboard-options ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'sesv2-request :method "GET" :path
                                "/v2/email/deliverability-dashboard" :protocol
                                :rest-json :operation
                                "GetDeliverabilityDashboardOptions" :params
                                `(("Action"
                                   ,@"GetDeliverabilityDashboardOptions")
                                  ("Version" ,@"2019-09-27"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-deliverability-dashboard-options))
(common-lisp:progn
 (common-lisp:defun get-deliverability-test-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-id)
   (common-lisp:declare (common-lisp:ignorable report-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-deliverability-test-report-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/deliverability-dashboard/test-reports/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'report-id))))
                                                        "GetDeliverabilityTestReport"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-deliverability-test-report))
(common-lisp:progn
 (common-lisp:defun get-domain-deliverability-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key campaign-id)
   (common-lisp:declare (common-lisp:ignorable campaign-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-domain-deliverability-campaign-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/deliverability-dashboard/campaigns/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "GetDomainDeliverabilityCampaign"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-domain-deliverability-campaign))
(common-lisp:progn
 (common-lisp:defun get-domain-statistics-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain start-date end-date)
   (common-lisp:declare (common-lisp:ignorable domain start-date end-date))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-domain-statistics-report-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/deliverability-dashboard/statistics-report/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain))))
                                                        "GetDomainStatisticsReport"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-domain-statistics-report))
(common-lisp:progn
 (common-lisp:defun get-email-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity)
   (common-lisp:declare (common-lisp:ignorable email-identity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-email-identity-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/identities/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "GetEmailIdentity"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-email-identity))
(common-lisp:progn
 (common-lisp:defun get-email-identity-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity)
   (common-lisp:declare (common-lisp:ignorable email-identity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-email-identity-policies-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/identities/~A/policies"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "GetEmailIdentityPolicies"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-email-identity-policies))
(common-lisp:progn
 (common-lisp:defun get-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name)
   (common-lisp:declare (common-lisp:ignorable template-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-email-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/templates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "GetEmailTemplate"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-email-template))
(common-lisp:progn
 (common-lisp:defun get-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/import-jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "GetImportJob"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-import-job))
(common-lisp:progn
 (common-lisp:defun get-suppressed-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-address)
   (common-lisp:declare (common-lisp:ignorable email-address))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-suppressed-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/suppression/addresses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-address))))
                                                        "GetSuppressedDestination"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-suppressed-destination))
(common-lisp:progn
 (common-lisp:defun list-configuration-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-configuration-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/v2/email/configuration-sets"
                                                        "ListConfigurationSets"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-configuration-sets))
(common-lisp:progn
 (common-lisp:defun list-contact-lists
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-size next-token)
   (common-lisp:declare (common-lisp:ignorable page-size next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-contact-lists-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/v2/email/contact-lists"
                                                        "ListContactLists"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-contact-lists))
(common-lisp:progn
 (common-lisp:defun list-contacts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key contact-list-name filter page-size
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable contact-list-name filter page-size next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-contacts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/contact-lists/~A/contacts"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'contact-list-name))))
                                                        "ListContacts"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-contacts))
(common-lisp:progn
 (common-lisp:defun list-custom-verification-email-templates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-custom-verification-email-templates-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/v2/email/custom-verification-email-templates"
                                                        "ListCustomVerificationEmailTemplates"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-custom-verification-email-templates))
(common-lisp:progn
 (common-lisp:defun list-dedicated-ip-pools
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-dedicated-ip-pools-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/v2/email/dedicated-ip-pools"
                                                        "ListDedicatedIpPools"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-dedicated-ip-pools))
(common-lisp:progn
 (common-lisp:defun list-deliverability-test-reports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-deliverability-test-reports-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/v2/email/deliverability-dashboard/test-reports"
                                                        "ListDeliverabilityTestReports"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-deliverability-test-reports))
(common-lisp:progn
 (common-lisp:defun list-domain-deliverability-campaigns
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key start-date end-date subscribed-domain
                     next-token page-size)
   (common-lisp:declare
    (common-lisp:ignorable start-date end-date subscribed-domain next-token
     page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-domain-deliverability-campaigns-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/deliverability-dashboard/domains/~A/campaigns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'subscribed-domain))))
                                                        "ListDomainDeliverabilityCampaigns"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-domain-deliverability-campaigns))
(common-lisp:progn
 (common-lisp:defun list-email-identities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-email-identities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/v2/email/identities"
                                                        "ListEmailIdentities"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-email-identities))
(common-lisp:progn
 (common-lisp:defun list-email-templates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-email-templates-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/v2/email/templates"
                                                        "ListEmailTemplates"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-email-templates))
(common-lisp:progn
 (common-lisp:defun list-import-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key import-destination-type next-token
                     page-size)
   (common-lisp:declare
    (common-lisp:ignorable import-destination-type next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-import-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/v2/email/import-jobs"
                                                        "ListImportJobs"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-import-jobs))
(common-lisp:progn
 (common-lisp:defun list-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token page-size)
   (common-lisp:declare (common-lisp:ignorable filter next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-recommendations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/vdm/recommendations"
                                                        "ListRecommendations"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-recommendations))
(common-lisp:progn
 (common-lisp:defun list-suppressed-destinations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key reasons start-date end-date next-token
                     page-size)
   (common-lisp:declare
    (common-lisp:ignorable reasons start-date end-date next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-suppressed-destinations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/v2/email/suppression/addresses"
                                                        "ListSuppressedDestinations"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-suppressed-destinations))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/v2/email/tags"
                                                        "ListTagsForResource"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-account-dedicated-ip-warmup-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-warmup-enabled)
   (common-lisp:declare (common-lisp:ignorable auto-warmup-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-account-dedicated-ip-warmup-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        "/v2/email/account/dedicated-ips/warmup"
                                                        "PutAccountDedicatedIpWarmupAttributes"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-account-dedicated-ip-warmup-attributes))
(common-lisp:progn
 (common-lisp:defun put-account-details
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key mail-type website-url contact-language
                     use-case-description additional-contact-email-addresses
                     production-access-enabled)
   (common-lisp:declare
    (common-lisp:ignorable mail-type website-url contact-language
     use-case-description additional-contact-email-addresses
     production-access-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-account-details-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/account/details"
                                                        "PutAccountDetails"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-account-details))
(common-lisp:progn
 (common-lisp:defun put-account-sending-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sending-enabled)
   (common-lisp:declare (common-lisp:ignorable sending-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-account-sending-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        "/v2/email/account/sending"
                                                        "PutAccountSendingAttributes"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-account-sending-attributes))
(common-lisp:progn
 (common-lisp:defun put-account-suppression-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suppressed-reasons)
   (common-lisp:declare (common-lisp:ignorable suppressed-reasons))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-account-suppression-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        "/v2/email/account/suppression"
                                                        "PutAccountSuppressionAttributes"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-account-suppression-attributes))
(common-lisp:progn
 (common-lisp:defun put-account-vdm-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vdm-attributes)
   (common-lisp:declare (common-lisp:ignorable vdm-attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-account-vdm-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        "/v2/email/account/vdm"
                                                        "PutAccountVdmAttributes"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-account-vdm-attributes))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-delivery-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name tls-policy
                     sending-pool-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name tls-policy
     sending-pool-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-delivery-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/configuration-sets/~A/delivery-options"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetDeliveryOptions"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-configuration-set-delivery-options))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-reputation-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     reputation-metrics-enabled)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name reputation-metrics-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-reputation-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/configuration-sets/~A/reputation-options"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetReputationOptions"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-configuration-set-reputation-options))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-sending-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name sending-enabled)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name sending-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-sending-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/configuration-sets/~A/sending"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetSendingOptions"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-configuration-set-sending-options))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-suppression-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     suppressed-reasons)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name suppressed-reasons))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-suppression-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/configuration-sets/~A/suppression-options"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetSuppressionOptions"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-configuration-set-suppression-options))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-tracking-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     custom-redirect-domain)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name custom-redirect-domain))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-tracking-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/configuration-sets/~A/tracking-options"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetTrackingOptions"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-configuration-set-tracking-options))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-vdm-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name vdm-options)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name vdm-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-vdm-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/configuration-sets/~A/vdm-options"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetVdmOptions"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-configuration-set-vdm-options))
(common-lisp:progn
 (common-lisp:defun put-dedicated-ip-in-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ip destination-pool-name)
   (common-lisp:declare (common-lisp:ignorable ip destination-pool-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-dedicated-ip-in-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/dedicated-ips/~A/pool"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ip))))
                                                        "PutDedicatedIpInPool"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-dedicated-ip-in-pool))
(common-lisp:progn
 (common-lisp:defun put-dedicated-ip-warmup-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ip warmup-percentage)
   (common-lisp:declare (common-lisp:ignorable ip warmup-percentage))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-dedicated-ip-warmup-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/dedicated-ips/~A/warmup"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ip))))
                                                        "PutDedicatedIpWarmupAttributes"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-dedicated-ip-warmup-attributes))
(common-lisp:progn
 (common-lisp:defun put-deliverability-dashboard-option
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dashboard-enabled subscribed-domains)
   (common-lisp:declare
    (common-lisp:ignorable dashboard-enabled subscribed-domains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-deliverability-dashboard-option-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        "/v2/email/deliverability-dashboard"
                                                        "PutDeliverabilityDashboardOption"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-deliverability-dashboard-option))
(common-lisp:progn
 (common-lisp:defun put-email-identity-configuration-set-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity configuration-set-name)
   (common-lisp:declare
    (common-lisp:ignorable email-identity configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-email-identity-configuration-set-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/identities/~A/configuration-set"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "PutEmailIdentityConfigurationSetAttributes"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-email-identity-configuration-set-attributes))
(common-lisp:progn
 (common-lisp:defun put-email-identity-dkim-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity signing-enabled)
   (common-lisp:declare (common-lisp:ignorable email-identity signing-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-email-identity-dkim-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/identities/~A/dkim"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "PutEmailIdentityDkimAttributes"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-email-identity-dkim-attributes))
(common-lisp:progn
 (common-lisp:defun put-email-identity-dkim-signing-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity signing-attributes-origin
                     signing-attributes)
   (common-lisp:declare
    (common-lisp:ignorable email-identity signing-attributes-origin
     signing-attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-email-identity-dkim-signing-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/identities/~A/dkim/signing"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "PutEmailIdentityDkimSigningAttributes"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-email-identity-dkim-signing-attributes))
(common-lisp:progn
 (common-lisp:defun put-email-identity-feedback-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity email-forwarding-enabled)
   (common-lisp:declare
    (common-lisp:ignorable email-identity email-forwarding-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-email-identity-feedback-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/identities/~A/feedback"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "PutEmailIdentityFeedbackAttributes"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-email-identity-feedback-attributes))
(common-lisp:progn
 (common-lisp:defun put-email-identity-mail-from-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity mail-from-domain
                     behavior-on-mx-failure)
   (common-lisp:declare
    (common-lisp:ignorable email-identity mail-from-domain
     behavior-on-mx-failure))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-email-identity-mail-from-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/identities/~A/mail-from"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "PutEmailIdentityMailFromAttributes"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-email-identity-mail-from-attributes))
(common-lisp:progn
 (common-lisp:defun put-suppressed-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-address reason)
   (common-lisp:declare (common-lisp:ignorable email-address reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-suppressed-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        "/v2/email/suppression/addresses"
                                                        "PutSuppressedDestination"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-suppressed-destination))
(common-lisp:progn
 (common-lisp:defun send-bulk-email
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key from-email-address
                     from-email-address-identity-arn reply-to-addresses
                     feedback-forwarding-email-address
                     feedback-forwarding-email-address-identity-arn
                     default-email-tags default-content bulk-email-entries
                     configuration-set-name)
   (common-lisp:declare
    (common-lisp:ignorable from-email-address from-email-address-identity-arn
     reply-to-addresses feedback-forwarding-email-address
     feedback-forwarding-email-address-identity-arn default-email-tags
     default-content bulk-email-entries configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-bulk-email-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/outbound-bulk-emails"
                                                        "SendBulkEmail"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'send-bulk-email))
(common-lisp:progn
 (common-lisp:defun send-custom-verification-email
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-address template-name
                     configuration-set-name)
   (common-lisp:declare
    (common-lisp:ignorable email-address template-name configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-send-custom-verification-email-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/outbound-custom-verification-emails"
                                                        "SendCustomVerificationEmail"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'send-custom-verification-email))
(common-lisp:progn
 (common-lisp:defun send-email
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key from-email-address
                     from-email-address-identity-arn destination
                     reply-to-addresses feedback-forwarding-email-address
                     feedback-forwarding-email-address-identity-arn content
                     email-tags configuration-set-name list-management-options)
   (common-lisp:declare
    (common-lisp:ignorable from-email-address from-email-address-identity-arn
     destination reply-to-addresses feedback-forwarding-email-address
     feedback-forwarding-email-address-identity-arn content email-tags
     configuration-set-name list-management-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-email-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/outbound-emails"
                                                        "SendEmail"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'send-email))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/v2/email/tags"
                                                        "TagResource"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun test-render-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name template-data)
   (common-lisp:declare (common-lisp:ignorable template-name template-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-test-render-email-template-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/templates/~A/render"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "TestRenderEmailTemplate"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'test-render-email-template))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        "/v2/email/tags"
                                                        "UntagResource"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     event-destination-name event-destination)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination-name
     event-destination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/configuration-sets/~A/event-destinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'event-destination-name))))
                                                        "UpdateConfigurationSetEventDestination"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun update-contact
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key contact-list-name email-address
                     topic-preferences unsubscribe-all attributes-data)
   (common-lisp:declare
    (common-lisp:ignorable contact-list-name email-address topic-preferences
     unsubscribe-all attributes-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-contact-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/contact-lists/~A/contacts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'contact-list-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-address))))
                                                        "UpdateContact"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-contact))
(common-lisp:progn
 (common-lisp:defun update-contact-list
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key contact-list-name topics description)
   (common-lisp:declare
    (common-lisp:ignorable contact-list-name topics description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-contact-list-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/contact-lists/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'contact-list-name))))
                                                        "UpdateContactList"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-contact-list))
(common-lisp:progn
 (common-lisp:defun update-custom-verification-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name from-email-address
                     template-subject template-content success-redirection-url
                     failure-redirection-url)
   (common-lisp:declare
    (common-lisp:ignorable template-name from-email-address template-subject
     template-content success-redirection-url failure-redirection-url))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-custom-verification-email-template-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/custom-verification-email-templates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "UpdateCustomVerificationEmailTemplate"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-custom-verification-email-template))
(common-lisp:progn
 (common-lisp:defun update-email-identity-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity policy-name policy)
   (common-lisp:declare
    (common-lisp:ignorable email-identity policy-name policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-email-identity-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/identities/~A/policies/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'policy-name))))
                                                        "UpdateEmailIdentityPolicy"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-email-identity-policy))
(common-lisp:progn
 (common-lisp:defun update-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name template-content)
   (common-lisp:declare (common-lisp:ignorable template-name template-content))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-email-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sesv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/email/templates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "UpdateEmailTemplate"
                                                        "2019-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-email-template))
