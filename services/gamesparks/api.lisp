;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/gamesparks/api
  (:use)
  (:nicknames #:aws/gamesparks)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/gamesparks/api)
(common-lisp:progn
 (common-lisp:defclass gamesparks-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "gamesparks"))
 (common-lisp:export 'gamesparks-request))
(common-lisp:progn
 (common-lisp:define-condition gamesparks-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'gamesparks-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype byte-size () 'common-lisp:integer)
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (connection (:copier common-lisp:nil)
      (:conc-name "struct-shape-connection-"))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or connection-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'connection 'make-connection))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input connection))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input connection))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input connection))
   common-lisp:nil))
(common-lisp:deftype connection-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype connection-id-list ()
   '(trivial-types:proper-list connection-id))
 (common-lisp:defun |make-connection-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list connection-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype connection-list ()
   '(trivial-types:proper-list connection))
 (common-lisp:defun |make-connection-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list connection))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (create-game-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-game-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or game-description common-lisp:null))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-game-request 'make-create-game-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-game-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-game-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-name))
      (common-lisp:list
       (common-lisp:cons "GameName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-game-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-game-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-game-result-"))
   (game common-lisp:nil :type (common-lisp:or game-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-game-result 'make-create-game-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-game-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-game-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game))
      (common-lisp:list
       (common-lisp:cons "Game"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-game-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-snapshot-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-snapshot-request-"))
   (description common-lisp:nil :type
    (common-lisp:or snapshot-description common-lisp:null))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-request 'make-create-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-snapshot-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-snapshot-result-"))
   (snapshot common-lisp:nil :type
    (common-lisp:or snapshot-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-result 'make-create-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot))
      (common-lisp:list
       (common-lisp:cons "Snapshot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-stage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-stage-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or stage-description common-lisp:null))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (role (common-lisp:error ":role is required") :type
    (common-lisp:or role-arn common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or stage-name common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-stage-request 'make-create-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-stage-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-stage-result-"))
   (stage common-lisp:nil :type
    (common-lisp:or stage-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-stage-result 'make-create-stage-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stage-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stage-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stage-result))
   common-lisp:nil))
(common-lisp:deftype date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-game-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-game-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-game-request 'make-delete-game-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-game-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-game-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-game-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-game-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-game-result-")))
 (common-lisp:export
  (common-lisp:list 'delete-game-result 'make-delete-game-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-game-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-game-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-game-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-stage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-stage-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or stage-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-stage-request 'make-delete-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-stage-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-stage-result-")))
 (common-lisp:export
  (common-lisp:list 'delete-stage-result 'make-delete-stage-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-stage-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-stage-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-stage-result))
   common-lisp:nil))
(common-lisp:deftype deployment-action () 'common-lisp:string)
(common-lisp:deftype deployment-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-deployment-result-"))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (result-code common-lisp:nil :type
    (common-lisp:or result-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deployment-result 'make-deployment-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-code))
      (common-lisp:list
       (common-lisp:cons "ResultCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment-result))
   common-lisp:nil))
(common-lisp:deftype deployment-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (disconnect-player-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-disconnect-player-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (player-id (common-lisp:error ":player-id is required") :type
    (common-lisp:or player-id common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or stage-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disconnect-player-request
                    'make-disconnect-player-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-player-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-player-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-player-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disconnect-player-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-disconnect-player-result-"))
   (disconnect-failures common-lisp:nil :type
    (common-lisp:or connection-id-list common-lisp:null))
   (disconnect-successes common-lisp:nil :type
    (common-lisp:or connection-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disconnect-player-result 'make-disconnect-player-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-player-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-player-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disconnect-failures))
      (common-lisp:list
       (common-lisp:cons "DisconnectFailures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disconnect-successes))
      (common-lisp:list
       (common-lisp:cons "DisconnectSuccesses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-player-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (document (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-")))
 (common-lisp:export (common-lisp:list 'document 'make-document))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input document))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input document))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input document))
   common-lisp:nil))
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (export-snapshot-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-snapshot-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (snapshot-id (common-lisp:error ":snapshot-id is required") :type
    (common-lisp:or snapshot-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-snapshot-request 'make-export-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-snapshot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-snapshot-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-snapshot-result-"))
   (s3url common-lisp:nil :type
    (common-lisp:or s3presigned-url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-snapshot-result 'make-export-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-snapshot-result))
   common-lisp:nil))
(common-lisp:deftype extension-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (extension-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-extension-details-"))
   (description common-lisp:nil :type
    (common-lisp:or extension-description common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or extension-name common-lisp:null))
   (namespace common-lisp:nil :type
    (common-lisp:or extension-namespace common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'extension-details 'make-extension-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input extension-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input extension-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input extension-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype extension-details-list ()
   '(trivial-types:proper-list extension-details))
 (common-lisp:defun |make-extension-details-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list extension-details))
   aws-sdk/generator/shape::members))
(common-lisp:deftype extension-name () 'common-lisp:string)
(common-lisp:deftype extension-namespace () 'common-lisp:string)
(common-lisp:deftype extension-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (extension-version-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-extension-version-details-"))
   (name common-lisp:nil :type
    (common-lisp:or extension-name common-lisp:null))
   (namespace common-lisp:nil :type
    (common-lisp:or extension-namespace common-lisp:null))
   (schema common-lisp:nil :type
    (common-lisp:or extension-version-schema common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or extension-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'extension-version-details
                    'make-extension-version-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          extension-version-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          extension-version-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          extension-version-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype extension-version-details-list ()
   '(trivial-types:proper-list extension-version-details))
 (common-lisp:defun |make-extension-version-details-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            extension-version-details))
   aws-sdk/generator/shape::members))
(common-lisp:deftype extension-version-schema () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (game-configuration-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-game-configuration-details-"))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (last-updated common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (sections common-lisp:nil :type (common-lisp:or sections common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'game-configuration-details
                    'make-game-configuration-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          game-configuration-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          game-configuration-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sections))
      (common-lisp:list
       (common-lisp:cons "Sections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          game-configuration-details))
   common-lisp:nil))
(common-lisp:deftype game-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (game-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-game-details-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or game-description common-lisp:null))
   (enable-termination-protection common-lisp:nil :type
    (common-lisp:or game-termination-protection common-lisp:null))
   (last-updated common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or game-name common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or game-state common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'game-details 'make-game-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input game-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input game-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-termination-protection))
      (common-lisp:list
       (common-lisp:cons "EnableTerminationProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input game-details))
   common-lisp:nil))
(common-lisp:deftype game-key () 'common-lisp:string)
(common-lisp:deftype game-name () 'common-lisp:string)
(common-lisp:deftype game-sdk-version () 'common-lisp:string)
(common-lisp:deftype game-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (game-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-game-summary-"))
   (description common-lisp:nil :type
    (common-lisp:or game-description common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or game-name common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or game-state common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'game-summary 'make-game-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input game-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input game-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input game-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype game-summary-list ()
   '(trivial-types:proper-list game-summary))
 (common-lisp:defun |make-game-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list game-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype game-termination-protection () 'common-lisp:boolean)
(common-lisp:deftype generated-code-job-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (generated-code-job-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-generated-code-job-details-"))
   (description common-lisp:nil :type
    (common-lisp:or generated-code-job-description common-lisp:null))
   (expiration-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (generated-code-job-id common-lisp:nil :type
    (common-lisp:or generated-code-job-id common-lisp:null))
   (s3url common-lisp:nil :type
    (common-lisp:or s3presigned-url common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or generated-code-job-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generated-code-job-details
                    'make-generated-code-job-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generated-code-job-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generated-code-job-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-time))
      (common-lisp:list
       (common-lisp:cons "ExpirationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generated-code-job-id))
      (common-lisp:list
       (common-lisp:cons "GeneratedCodeJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generated-code-job-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype generated-code-job-details-list ()
   '(trivial-types:proper-list generated-code-job-details))
 (common-lisp:defun |make-generated-code-job-details-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            generated-code-job-details))
   aws-sdk/generator/shape::members))
(common-lisp:deftype generated-code-job-id () 'common-lisp:string)
(common-lisp:deftype generated-code-job-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (generator (:copier common-lisp:nil)
      (:conc-name "struct-shape-generator-"))
   (game-sdk-version common-lisp:nil :type
    (common-lisp:or game-sdk-version common-lisp:null))
   (language common-lisp:nil :type (common-lisp:or language common-lisp:null))
   (target-platform common-lisp:nil :type
    (common-lisp:or target-platform common-lisp:null)))
 (common-lisp:export (common-lisp:list 'generator 'make-generator))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input generator))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input generator))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-sdk-version))
      (common-lisp:list
       (common-lisp:cons "GameSdkVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language))
      (common-lisp:list
       (common-lisp:cons "Language"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-platform))
      (common-lisp:list
       (common-lisp:cons "TargetPlatform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input generator))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-extension-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-extension-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or extension-name common-lisp:null))
   (namespace (common-lisp:error ":namespace is required") :type
    (common-lisp:or extension-namespace common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-extension-request 'make-get-extension-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-extension-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-extension-result-"))
   (extension common-lisp:nil :type
    (common-lisp:or extension-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-extension-result 'make-get-extension-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-extension-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-extension-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extension))
      (common-lisp:list
       (common-lisp:cons "Extension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-extension-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-extension-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-extension-version-request-"))
   (extension-version (common-lisp:error ":extension-version is required")
    :type (common-lisp:or extension-version common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or extension-name common-lisp:null))
   (namespace (common-lisp:error ":namespace is required") :type
    (common-lisp:or extension-namespace common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-extension-version-request
                    'make-get-extension-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-extension-version-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-extension-version-result-"))
   (extension-version common-lisp:nil :type
    (common-lisp:or extension-version-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-extension-version-result
                    'make-get-extension-version-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-version-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-version-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extension-version))
      (common-lisp:list
       (common-lisp:cons "ExtensionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-version-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-game-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-game-configuration-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (sections common-lisp:nil :type
    (common-lisp:or section-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-game-configuration-request
                    'make-get-game-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-game-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-game-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-game-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-game-configuration-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-game-configuration-result-"))
   (game-configuration common-lisp:nil :type
    (common-lisp:or game-configuration-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-game-configuration-result
                    'make-get-game-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-game-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-game-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-configuration))
      (common-lisp:list
       (common-lisp:cons "GameConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-game-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-game-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-game-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-game-request 'make-get-game-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-game-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-game-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-game-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-game-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-game-result-"))
   (game common-lisp:nil :type (common-lisp:or game-details common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-game-result 'make-get-game-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-game-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-game-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game))
      (common-lisp:list
       (common-lisp:cons "Game"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-game-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-generated-code-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-generated-code-job-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or generated-code-job-id common-lisp:null))
   (snapshot-id (common-lisp:error ":snapshot-id is required") :type
    (common-lisp:or snapshot-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-generated-code-job-request
                    'make-get-generated-code-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-generated-code-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-generated-code-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-generated-code-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-generated-code-job-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-generated-code-job-result-"))
   (generated-code-job common-lisp:nil :type
    (common-lisp:or generated-code-job-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-generated-code-job-result
                    'make-get-generated-code-job-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-generated-code-job-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-generated-code-job-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'generated-code-job))
      (common-lisp:list
       (common-lisp:cons "GeneratedCodeJob"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-generated-code-job-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-player-connection-status-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-player-connection-status-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (player-id (common-lisp:error ":player-id is required") :type
    (common-lisp:or player-id common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or stage-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-player-connection-status-request
                    'make-get-player-connection-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-player-connection-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-player-connection-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-player-connection-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-player-connection-status-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-player-connection-status-result-"))
   (connections common-lisp:nil :type
    (common-lisp:or connection-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-player-connection-status-result
                    'make-get-player-connection-status-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-player-connection-status-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-player-connection-status-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connections))
      (common-lisp:list
       (common-lisp:cons "Connections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-player-connection-status-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-snapshot-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-snapshot-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (sections common-lisp:nil :type
    (common-lisp:or section-list common-lisp:null))
   (snapshot-id (common-lisp:error ":snapshot-id is required") :type
    (common-lisp:or snapshot-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-snapshot-request 'make-get-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-snapshot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-snapshot-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-snapshot-result-"))
   (snapshot common-lisp:nil :type
    (common-lisp:or snapshot-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-snapshot-result 'make-get-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot))
      (common-lisp:list
       (common-lisp:cons "Snapshot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-stage-deployment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-stage-deployment-request-"))
   (deployment-id common-lisp:nil :type
    (common-lisp:or deployment-id common-lisp:null))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or stage-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-stage-deployment-request
                    'make-get-stage-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-stage-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-stage-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-stage-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-stage-deployment-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-stage-deployment-result-"))
   (stage-deployment common-lisp:nil :type
    (common-lisp:or stage-deployment-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-stage-deployment-result
                    'make-get-stage-deployment-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-stage-deployment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-stage-deployment-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-deployment))
      (common-lisp:list
       (common-lisp:cons "StageDeployment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-stage-deployment-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-stage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-stage-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or stage-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-stage-request 'make-get-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-stage-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-stage-result-"))
   (stage common-lisp:nil :type
    (common-lisp:or stage-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-stage-result 'make-get-stage-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-game-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-game-configuration-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (import-source (common-lisp:error ":import-source is required") :type
    (common-lisp:or import-game-configuration-source common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-game-configuration-request
                    'make-import-game-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-source))
      (common-lisp:list
       (common-lisp:cons "ImportSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-game-configuration-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-game-configuration-result-"))
   (game-configuration common-lisp:nil :type
    (common-lisp:or game-configuration-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-game-configuration-result
                    'make-import-game-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-configuration))
      (common-lisp:list
       (common-lisp:cons "GameConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-game-configuration-source (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-game-configuration-source-"))
   (file (common-lisp:error ":file is required") :type
    (common-lisp:or raw-game-configuration-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-game-configuration-source
                    'make-import-game-configuration-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file))
      (common-lisp:list
       (common-lisp:cons "File"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype language () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-extension-versions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-extension-versions-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or extension-name common-lisp:null))
   (namespace (common-lisp:error ":namespace is required") :type
    (common-lisp:or extension-namespace common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-extension-versions-request
                    'make-list-extension-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-extension-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-extension-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-extension-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-extension-versions-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-extension-versions-result-"))
   (extension-versions common-lisp:nil :type
    (common-lisp:or extension-version-details-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-extension-versions-result
                    'make-list-extension-versions-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-extension-versions-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-extension-versions-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extension-versions))
      (common-lisp:list
       (common-lisp:cons "ExtensionVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-extension-versions-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-extensions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-extensions-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-extensions-request 'make-list-extensions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-extensions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-extensions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-extensions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-extensions-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-extensions-result-"))
   (extensions common-lisp:nil :type
    (common-lisp:or extension-details-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-extensions-result 'make-list-extensions-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-extensions-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-extensions-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extensions))
      (common-lisp:list
       (common-lisp:cons "Extensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-extensions-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-games-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-games-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-games-request 'make-list-games-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-games-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-games-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-games-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-games-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-games-result-"))
   (games common-lisp:nil :type
    (common-lisp:or game-summary-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-games-result 'make-list-games-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-games-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-games-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'games))
      (common-lisp:list
       (common-lisp:cons "Games"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-games-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-generated-code-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-generated-code-jobs-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (snapshot-id (common-lisp:error ":snapshot-id is required") :type
    (common-lisp:or snapshot-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-generated-code-jobs-request
                    'make-list-generated-code-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-generated-code-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-generated-code-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-generated-code-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-generated-code-jobs-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-generated-code-jobs-result-"))
   (generated-code-jobs common-lisp:nil :type
    (common-lisp:or generated-code-job-details-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-generated-code-jobs-result
                    'make-list-generated-code-jobs-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-generated-code-jobs-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-generated-code-jobs-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'generated-code-jobs))
      (common-lisp:list
       (common-lisp:cons "GeneratedCodeJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-generated-code-jobs-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-snapshots-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-snapshots-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-snapshots-request 'make-list-snapshots-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-snapshots-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-snapshots-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-snapshots-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-snapshots-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-snapshots-result-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (snapshots common-lisp:nil :type
    (common-lisp:or snapshot-summary-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-snapshots-result 'make-list-snapshots-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-snapshots-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-snapshots-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshots))
      (common-lisp:list
       (common-lisp:cons "Snapshots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-snapshots-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-stage-deployments-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-stage-deployments-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or stage-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-stage-deployments-request
                    'make-list-stage-deployments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-stage-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-stage-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-stage-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-stage-deployments-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-stage-deployments-result-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (stage-deployments common-lisp:nil :type
    (common-lisp:or stage-deployment-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-stage-deployments-result
                    'make-list-stage-deployments-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-stage-deployments-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-stage-deployments-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-deployments))
      (common-lisp:list
       (common-lisp:cons "StageDeployments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-stage-deployments-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-stages-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-stages-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-stages-request 'make-list-stages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-stages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-stages-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-stages-result-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (stages common-lisp:nil :type
    (common-lisp:or stage-summary-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-stages-result 'make-list-stages-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-stages-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-stages-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stages))
      (common-lisp:list
       (common-lisp:cons "Stages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-stages-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-result-"))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-result
                    'make-list-tags-for-resource-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-result))
   common-lisp:nil))
(common-lisp:deftype log-group-name () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype operation () 'common-lisp:string)
(common-lisp:deftype path () 'common-lisp:string)
(common-lisp:deftype player-id () 'common-lisp:string)
(common-lisp:deftype raw-game-configuration-data ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype result-code () 'common-lisp:string)
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:deftype s3presigned-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (section (:copier common-lisp:nil) (:conc-name "struct-shape-section-"))
   (attributes common-lisp:nil :type
    (common-lisp:or document common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or section-name common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or byte-size common-lisp:null)))
 (common-lisp:export (common-lisp:list 'section 'make-section))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input section))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input section))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input section))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype section-list ()
   '(trivial-types:proper-list section-name))
 (common-lisp:defun |make-section-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list section-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (section-modification (:copier common-lisp:nil)
      (:conc-name "struct-shape-section-modification-"))
   (operation (common-lisp:error ":operation is required") :type
    (common-lisp:or operation common-lisp:null))
   (path (common-lisp:error ":path is required") :type
    (common-lisp:or path common-lisp:null))
   (section (common-lisp:error ":section is required") :type
    (common-lisp:or section-name common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or document common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'section-modification 'make-section-modification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input section-modification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input section-modification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'section))
      (common-lisp:list
       (common-lisp:cons "Section"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input section-modification))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype section-modification-list ()
   '(trivial-types:proper-list section-modification))
 (common-lisp:defun |make-section-modification-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list section-modification))
   aws-sdk/generator/shape::members))
(common-lisp:deftype section-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype sections () 'common-lisp:hash-table)
 (common-lisp:defun |make-sections| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:deftype snapshot-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (snapshot-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-snapshot-details-"))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or snapshot-description common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or snapshot-id common-lisp:null))
   (last-updated common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (sections common-lisp:nil :type (common-lisp:or sections common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'snapshot-details 'make-snapshot-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input snapshot-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input snapshot-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sections))
      (common-lisp:list
       (common-lisp:cons "Sections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input snapshot-details))
   common-lisp:nil))
(common-lisp:deftype snapshot-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (snapshot-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-snapshot-summary-"))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or snapshot-description common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or snapshot-id common-lisp:null))
   (last-updated common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'snapshot-summary 'make-snapshot-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input snapshot-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input snapshot-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input snapshot-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype snapshot-summary-list ()
   '(trivial-types:proper-list snapshot-summary))
 (common-lisp:defun |make-snapshot-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list snapshot-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (stage-deployment-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-stage-deployment-details-"))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (deployment-action common-lisp:nil :type
    (common-lisp:or deployment-action common-lisp:null))
   (deployment-id common-lisp:nil :type
    (common-lisp:or deployment-id common-lisp:null))
   (deployment-result common-lisp:nil :type
    (common-lisp:or deployment-result common-lisp:null))
   (deployment-state common-lisp:nil :type
    (common-lisp:or deployment-state common-lisp:null))
   (last-updated common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (snapshot-id common-lisp:nil :type
    (common-lisp:or snapshot-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stage-deployment-details 'make-stage-deployment-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stage-deployment-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stage-deployment-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-action))
      (common-lisp:list
       (common-lisp:cons "DeploymentAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-result))
      (common-lisp:list
       (common-lisp:cons "DeploymentResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-state))
      (common-lisp:list
       (common-lisp:cons "DeploymentState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stage-deployment-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype stage-deployment-list ()
   '(trivial-types:proper-list stage-deployment-summary))
 (common-lisp:defun |make-stage-deployment-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            stage-deployment-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (stage-deployment-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-stage-deployment-summary-"))
   (deployment-action common-lisp:nil :type
    (common-lisp:or deployment-action common-lisp:null))
   (deployment-id common-lisp:nil :type
    (common-lisp:or deployment-id common-lisp:null))
   (deployment-result common-lisp:nil :type
    (common-lisp:or deployment-result common-lisp:null))
   (deployment-state common-lisp:nil :type
    (common-lisp:or deployment-state common-lisp:null))
   (last-updated common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (snapshot-id common-lisp:nil :type
    (common-lisp:or snapshot-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stage-deployment-summary 'make-stage-deployment-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stage-deployment-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stage-deployment-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-action))
      (common-lisp:list
       (common-lisp:cons "DeploymentAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-result))
      (common-lisp:list
       (common-lisp:cons "DeploymentResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-state))
      (common-lisp:list
       (common-lisp:cons "DeploymentState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stage-deployment-summary))
   common-lisp:nil))
(common-lisp:deftype stage-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (stage-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-stage-details-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (created common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or stage-description common-lisp:null))
   (game-key common-lisp:nil :type (common-lisp:or game-key common-lisp:null))
   (last-updated common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (log-group common-lisp:nil :type
    (common-lisp:or log-group-name common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or stage-name common-lisp:null))
   (role common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or stage-state common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stage-details 'make-stage-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-key))
      (common-lisp:list
       (common-lisp:cons "GameKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group))
      (common-lisp:list
       (common-lisp:cons "LogGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage-details))
   common-lisp:nil))
(common-lisp:deftype stage-name () 'common-lisp:string)
(common-lisp:deftype stage-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (stage-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-stage-summary-"))
   (description common-lisp:nil :type
    (common-lisp:or stage-description common-lisp:null))
   (game-key common-lisp:nil :type (common-lisp:or game-key common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or stage-name common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or stage-state common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stage-summary 'make-stage-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-key))
      (common-lisp:list
       (common-lisp:cons "GameKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype stage-summary-list ()
   '(trivial-types:proper-list stage-summary))
 (common-lisp:defun |make-stage-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (start-generated-code-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-generated-code-job-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (generator (common-lisp:error ":generator is required") :type
    (common-lisp:or generator common-lisp:null))
   (snapshot-id (common-lisp:error ":snapshot-id is required") :type
    (common-lisp:or snapshot-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-generated-code-job-request
                    'make-start-generated-code-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-generated-code-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-generated-code-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'generator))
      (common-lisp:list
       (common-lisp:cons "Generator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-generated-code-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-generated-code-job-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-generated-code-job-result-"))
   (generated-code-job-id common-lisp:nil :type
    (common-lisp:or generated-code-job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-generated-code-job-result
                    'make-start-generated-code-job-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-generated-code-job-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-generated-code-job-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generated-code-job-id))
      (common-lisp:list
       (common-lisp:cons "GeneratedCodeJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-generated-code-job-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-stage-deployment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-stage-deployment-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (snapshot-id (common-lisp:error ":snapshot-id is required") :type
    (common-lisp:or snapshot-id common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or stage-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-stage-deployment-request
                    'make-start-stage-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-stage-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-stage-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-stage-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-stage-deployment-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-stage-deployment-result-"))
   (stage-deployment common-lisp:nil :type
    (common-lisp:or stage-deployment-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-stage-deployment-result
                    'make-start-stage-deployment-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-stage-deployment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-stage-deployment-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-deployment))
      (common-lisp:list
       (common-lisp:cons "StageDeployment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-stage-deployment-result))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-result-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-result 'make-tag-resource-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-result))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype target-platform () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (tag-keys (common-lisp:error ":tagkeys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-result-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-result 'make-untag-resource-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-game-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-game-configuration-request-"))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (modifications (common-lisp:error ":modifications is required") :type
    (common-lisp:or section-modification-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-game-configuration-request
                    'make-update-game-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-game-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-game-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modifications))
      (common-lisp:list
       (common-lisp:cons "Modifications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-game-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-game-configuration-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-game-configuration-result-"))
   (game-configuration common-lisp:nil :type
    (common-lisp:or game-configuration-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-game-configuration-result
                    'make-update-game-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-game-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-game-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-configuration))
      (common-lisp:list
       (common-lisp:cons "GameConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-game-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-game-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-game-request-"))
   (description common-lisp:nil :type
    (common-lisp:or game-description common-lisp:null))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-game-request 'make-update-game-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-game-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-game-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-game-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-game-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-game-result-"))
   (game common-lisp:nil :type (common-lisp:or game-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-game-result 'make-update-game-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-game-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-game-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game))
      (common-lisp:list
       (common-lisp:cons "Game"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-game-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-snapshot-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-snapshot-request-"))
   (description common-lisp:nil :type
    (common-lisp:or snapshot-description common-lisp:null))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (snapshot-id (common-lisp:error ":snapshot-id is required") :type
    (common-lisp:or snapshot-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-snapshot-request 'make-update-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-snapshot-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-snapshot-result-"))
   (snapshot common-lisp:nil :type
    (common-lisp:or snapshot-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-snapshot-result 'make-update-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot))
      (common-lisp:list
       (common-lisp:cons "Snapshot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-stage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-stage-request-"))
   (description common-lisp:nil :type
    (common-lisp:or stage-description common-lisp:null))
   (game-name (common-lisp:error ":game-name is required") :type
    (common-lisp:or game-name common-lisp:null))
   (role common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or stage-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-stage-request 'make-update-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-stage-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-stage-result-"))
   (stage common-lisp:nil :type
    (common-lisp:or stage-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-stage-result 'make-update-stage-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stage-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stage-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stage-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defun create-game
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description game-name tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token description game-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-game-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/game"
                                                        "CreateGame"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-game))
(common-lisp:progn
 (common-lisp:defun create-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description game-name)
   (common-lisp:declare (common-lisp:ignorable description game-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "CreateSnapshot"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-snapshot))
(common-lisp:progn
 (common-lisp:defun create-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description game-name role
                     stage-name tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token description game-name role stage-name
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "CreateStage"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-stage))
(common-lisp:progn
 (common-lisp:defun delete-game
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name)
   (common-lisp:declare (common-lisp:ignorable game-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-game-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "DeleteGame"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-game))
(common-lisp:progn
 (common-lisp:defun delete-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name stage-name)
   (common-lisp:declare (common-lisp:ignorable game-name stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "DeleteStage"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-stage))
(common-lisp:progn
 (common-lisp:defun disconnect-player
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name player-id stage-name)
   (common-lisp:declare (common-lisp:ignorable game-name player-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disconnect-player-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/runtime/game/~A/stage/~A/player/~A/disconnect"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'player-id))))
                                                        "DisconnectPlayer"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disconnect-player))
(common-lisp:progn
 (common-lisp:defun export-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name snapshot-id)
   (common-lisp:declare (common-lisp:ignorable game-name snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-export-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot/~A/export"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'snapshot-id))))
                                                        "ExportSnapshot"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-snapshot))
(common-lisp:progn
 (common-lisp:defun get-extension
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name namespace)
   (common-lisp:declare (common-lisp:ignorable name namespace))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-extension-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/extension/~A/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'namespace))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetExtension"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-extension))
(common-lisp:progn
 (common-lisp:defun get-extension-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key extension-version name namespace)
   (common-lisp:declare
    (common-lisp:ignorable extension-version name namespace))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-extension-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/extension/~A/~A/version/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'namespace))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'extension-version))))
                                                        "GetExtensionVersion"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-extension-version))
(common-lisp:progn
 (common-lisp:defun get-game
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name)
   (common-lisp:declare (common-lisp:ignorable game-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-game-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "GetGame"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-game))
(common-lisp:progn
 (common-lisp:defun get-game-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name sections)
   (common-lisp:declare (common-lisp:ignorable game-name sections))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-game-configuration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "GetGameConfiguration"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-game-configuration))
(common-lisp:progn
 (common-lisp:defun get-generated-code-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name job-id snapshot-id)
   (common-lisp:declare (common-lisp:ignorable game-name job-id snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-generated-code-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot/~A/generated-sdk-code-job/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'snapshot-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "GetGeneratedCodeJob"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-generated-code-job))
(common-lisp:progn
 (common-lisp:defun get-player-connection-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name player-id stage-name)
   (common-lisp:declare (common-lisp:ignorable game-name player-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-player-connection-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/runtime/game/~A/stage/~A/player/~A/connection"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'player-id))))
                                                        "GetPlayerConnectionStatus"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-player-connection-status))
(common-lisp:progn
 (common-lisp:defun get-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name sections snapshot-id)
   (common-lisp:declare (common-lisp:ignorable game-name sections snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'snapshot-id))))
                                                        "GetSnapshot"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-snapshot))
(common-lisp:progn
 (common-lisp:defun get-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name stage-name)
   (common-lisp:declare (common-lisp:ignorable game-name stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "GetStage"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-stage))
(common-lisp:progn
 (common-lisp:defun get-stage-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id game-name stage-name)
   (common-lisp:declare
    (common-lisp:ignorable deployment-id game-name stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stage-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage/~A/deployment"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "GetStageDeployment"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-stage-deployment))
(common-lisp:progn
 (common-lisp:defun import-game-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name import-source)
   (common-lisp:declare (common-lisp:ignorable game-name import-source))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-import-game-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "ImportGameConfiguration"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-game-configuration))
(common-lisp:progn
 (common-lisp:defun list-extension-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results name namespace next-token)
   (common-lisp:declare
    (common-lisp:ignorable max-results name namespace next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-extension-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/extension/~A/~A/version"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'namespace))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "ListExtensionVersions"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-extension-versions))
(common-lisp:progn
 (common-lisp:defun list-extensions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-extensions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/extension"
                                                        "ListExtensions"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-extensions))
(common-lisp:progn
 (common-lisp:defun list-games
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-games-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/game"
                                                        "ListGames"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-games))
(common-lisp:progn
 (common-lisp:defun list-generated-code-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name max-results next-token
                     snapshot-id)
   (common-lisp:declare
    (common-lisp:ignorable game-name max-results next-token snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-generated-code-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot/~A/generated-sdk-code-jobs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'snapshot-id))))
                                                        "ListGeneratedCodeJobs"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-generated-code-jobs))
(common-lisp:progn
 (common-lisp:defun list-snapshots
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable game-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-snapshots-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "ListSnapshots"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-snapshots))
(common-lisp:progn
 (common-lisp:defun list-stage-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name max-results next-token
                     stage-name)
   (common-lisp:declare
    (common-lisp:ignorable game-name max-results next-token stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-stage-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "ListStageDeployments"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-stage-deployments))
(common-lisp:progn
 (common-lisp:defun list-stages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable game-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-stages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "ListStages"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-stages))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun start-generated-code-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name generator snapshot-id)
   (common-lisp:declare
    (common-lisp:ignorable game-name generator snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-generated-code-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot/~A/generated-sdk-code-job"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'snapshot-id))))
                                                        "StartGeneratedCodeJob"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-generated-code-job))
(common-lisp:progn
 (common-lisp:defun start-stage-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token game-name snapshot-id
                     stage-name)
   (common-lisp:declare
    (common-lisp:ignorable client-token game-name snapshot-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-stage-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage/~A/deployment"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "StartStageDeployment"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-stage-deployment))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-game
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description game-name)
   (common-lisp:declare (common-lisp:ignorable description game-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-game-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "UpdateGame"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-game))
(common-lisp:progn
 (common-lisp:defun update-game-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name modifications)
   (common-lisp:declare (common-lisp:ignorable game-name modifications))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-game-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "UpdateGameConfiguration"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-game-configuration))
(common-lisp:progn
 (common-lisp:defun update-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description game-name snapshot-id)
   (common-lisp:declare
    (common-lisp:ignorable description game-name snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'snapshot-id))))
                                                        "UpdateSnapshot"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-snapshot))
(common-lisp:progn
 (common-lisp:defun update-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description game-name role stage-name)
   (common-lisp:declare
    (common-lisp:ignorable description game-name role stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "UpdateStage"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-stage))
