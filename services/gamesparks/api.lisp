;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/gamesparks/api
  (:use)
  (:nicknames #:aws/gamesparks)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/gamesparks/api)
(common-lisp:progn
 (common-lisp:defclass gamesparks-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "gamesparks" :protocol
                        :rest-json))
 (common-lisp:export 'gamesparks-request))
(common-lisp:progn
 (common-lisp:define-condition gamesparks-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'gamesparks-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype byte-size () 'common-lisp:integer)
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass connection common-lisp:nil
                       ((id :initarg :id :type
                         (common-lisp:or connection-id common-lisp:null)
                         :accessor %connection-id :initform common-lisp:nil)
                        (created :initarg :created :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %connection-created :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'connection 'make-connection))
 (common-lisp:defun make-connection
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key id created)
   (common-lisp:apply #'common-lisp:make-instance 'connection
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input connection))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input connection))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input connection))
   common-lisp:nil))
(common-lisp:deftype connection-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype connection-id-list ()
   '(trivial-types:proper-list connection-id))
 (common-lisp:defun |make-connection-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list connection-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype connection-list ()
   '(trivial-types:proper-list connection))
 (common-lisp:defun |make-connection-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list connection))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass create-game-request common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-game-request-tags :initform common-lisp:nil)
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %create-game-request-game-name :initform
                         (common-lisp:error ":game-name is required"))
                        (description :initarg :description :type
                         (common-lisp:or game-description common-lisp:null)
                         :accessor %create-game-request-description :initform
                         common-lisp:nil)
                        (client-token :initarg :client-token :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-game-request-client-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-game-request 'make-create-game-request))
 (common-lisp:defun make-create-game-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags game-name description client-token)
   (common-lisp:apply #'common-lisp:make-instance 'create-game-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-game-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-game-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-name))
      (common-lisp:list
       (common-lisp:cons "GameName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-game-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-game-result common-lisp:nil
                       ((game :initarg :game :type
                         (common-lisp:or game-details common-lisp:null)
                         :accessor %create-game-result-game :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-game-result 'make-create-game-result))
 (common-lisp:defun make-create-game-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key game)
   (common-lisp:apply #'common-lisp:make-instance 'create-game-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-game-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-game-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game))
      (common-lisp:list
       (common-lisp:cons "Game"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-game-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-snapshot-request common-lisp:nil
                       ((game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %create-snapshot-request-game-name :initform
                         (common-lisp:error ":game-name is required"))
                        (description :initarg :description :type
                         (common-lisp:or snapshot-description common-lisp:null)
                         :accessor %create-snapshot-request-description
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-request 'make-create-snapshot-request))
 (common-lisp:defun make-create-snapshot-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key game-name description)
   (common-lisp:apply #'common-lisp:make-instance 'create-snapshot-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-snapshot-result common-lisp:nil
                       ((snapshot :initarg :snapshot :type
                         (common-lisp:or snapshot-details common-lisp:null)
                         :accessor %create-snapshot-result-snapshot :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-result 'make-create-snapshot-result))
 (common-lisp:defun make-create-snapshot-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key snapshot)
   (common-lisp:apply #'common-lisp:make-instance 'create-snapshot-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot))
      (common-lisp:list
       (common-lisp:cons "Snapshot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stage-request common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-stage-request-tags :initform common-lisp:nil)
                        (stage-name :initarg :stage-name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %create-stage-request-stage-name :initform
                         (common-lisp:error ":stage-name is required"))
                        (role :initarg :role :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %create-stage-request-role :initform
                         (common-lisp:error ":role is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %create-stage-request-game-name :initform
                         (common-lisp:error ":game-name is required"))
                        (description :initarg :description :type
                         (common-lisp:or stage-description common-lisp:null)
                         :accessor %create-stage-request-description :initform
                         common-lisp:nil)
                        (client-token :initarg :client-token :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-stage-request-client-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-stage-request 'make-create-stage-request))
 (common-lisp:defun make-create-stage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags stage-name role game-name
                     description client-token)
   (common-lisp:apply #'common-lisp:make-instance 'create-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stage-result common-lisp:nil
                       ((stage :initarg :stage :type
                         (common-lisp:or stage-details common-lisp:null)
                         :accessor %create-stage-result-stage :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-stage-result 'make-create-stage-result))
 (common-lisp:defun make-create-stage-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage)
   (common-lisp:apply #'common-lisp:make-instance 'create-stage-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stage-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stage-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stage-result))
   common-lisp:nil))
(common-lisp:deftype date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-game-request common-lisp:nil
                       ((game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %delete-game-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-game-request 'make-delete-game-request))
 (common-lisp:defun make-delete-game-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key game-name)
   (common-lisp:apply #'common-lisp:make-instance 'delete-game-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-game-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-game-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-game-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-game-result common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-game-result 'make-delete-game-result))
 (common-lisp:defun make-delete-game-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-game-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-game-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-game-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-game-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-stage-request common-lisp:nil
                       ((stage-name :initarg :stage-name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %delete-stage-request-stage-name :initform
                         (common-lisp:error ":stage-name is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %delete-stage-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-stage-request 'make-delete-stage-request))
 (common-lisp:defun make-delete-stage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name game-name)
   (common-lisp:apply #'common-lisp:make-instance 'delete-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-stage-result common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-stage-result 'make-delete-stage-result))
 (common-lisp:defun make-delete-stage-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-stage-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-stage-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-stage-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-stage-result))
   common-lisp:nil))
(common-lisp:deftype deployment-action () 'common-lisp:string)
(common-lisp:deftype deployment-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass deployment-result common-lisp:nil
                       ((result-code :initarg :result-code :type
                         (common-lisp:or result-code common-lisp:null)
                         :accessor %deployment-result-result-code :initform
                         common-lisp:nil)
                        (message :initarg :message :type
                         (common-lisp:or message common-lisp:null) :accessor
                         %deployment-result-message :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-result 'make-deployment-result))
 (common-lisp:defun make-deployment-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key result-code message)
   (common-lisp:apply #'common-lisp:make-instance 'deployment-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-code))
      (common-lisp:list
       (common-lisp:cons "ResultCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment-result))
   common-lisp:nil))
(common-lisp:deftype deployment-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass disconnect-player-request common-lisp:nil
                       ((stage-name :initarg :stage-name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %disconnect-player-request-stage-name :initform
                         (common-lisp:error ":stage-name is required"))
                        (player-id :initarg :player-id :type
                         (common-lisp:or player-id common-lisp:null) :accessor
                         %disconnect-player-request-player-id :initform
                         (common-lisp:error ":player-id is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %disconnect-player-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'disconnect-player-request
                    'make-disconnect-player-request))
 (common-lisp:defun make-disconnect-player-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name player-id game-name)
   (common-lisp:apply #'common-lisp:make-instance 'disconnect-player-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-player-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-player-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-player-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disconnect-player-result common-lisp:nil
                       ((disconnect-successes :initarg :disconnect-successes
                         :type
                         (common-lisp:or connection-id-list common-lisp:null)
                         :accessor
                         %disconnect-player-result-disconnect-successes
                         :initform common-lisp:nil)
                        (disconnect-failures :initarg :disconnect-failures
                         :type
                         (common-lisp:or connection-id-list common-lisp:null)
                         :accessor
                         %disconnect-player-result-disconnect-failures
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disconnect-player-result 'make-disconnect-player-result))
 (common-lisp:defun make-disconnect-player-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key disconnect-successes disconnect-failures)
   (common-lisp:apply #'common-lisp:make-instance 'disconnect-player-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-player-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-player-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disconnect-failures))
      (common-lisp:list
       (common-lisp:cons "DisconnectFailures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disconnect-successes))
      (common-lisp:list
       (common-lisp:cons "DisconnectSuccesses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-player-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass document common-lisp:nil common-lisp:nil)
 (common-lisp:export (common-lisp:list 'document 'make-document))
 (common-lisp:defun make-document
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'document
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input document))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input document))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input document))
   common-lisp:nil))
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass export-snapshot-request common-lisp:nil
                       ((snapshot-id :initarg :snapshot-id :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor %export-snapshot-request-snapshot-id
                         :initform
                         (common-lisp:error ":snapshot-id is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %export-snapshot-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'export-snapshot-request 'make-export-snapshot-request))
 (common-lisp:defun make-export-snapshot-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key snapshot-id game-name)
   (common-lisp:apply #'common-lisp:make-instance 'export-snapshot-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-snapshot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-snapshot-result common-lisp:nil
                       ((s3url :initarg :s3url :type
                         (common-lisp:or s3presigned-url common-lisp:null)
                         :accessor %export-snapshot-result-s3url :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'export-snapshot-result 'make-export-snapshot-result))
 (common-lisp:defun make-export-snapshot-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3url)
   (common-lisp:apply #'common-lisp:make-instance 'export-snapshot-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-snapshot-result))
   common-lisp:nil))
(common-lisp:deftype extension-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass extension-details common-lisp:nil
                       ((namespace :initarg :namespace :type
                         (common-lisp:or extension-namespace common-lisp:null)
                         :accessor %extension-details-namespace :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or extension-name common-lisp:null)
                         :accessor %extension-details-name :initform
                         common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or extension-description
                                         common-lisp:null)
                         :accessor %extension-details-description :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'extension-details 'make-extension-details))
 (common-lisp:defun make-extension-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key namespace name description)
   (common-lisp:apply #'common-lisp:make-instance 'extension-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input extension-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input extension-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input extension-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype extension-details-list ()
   '(trivial-types:proper-list extension-details))
 (common-lisp:defun |make-extension-details-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list extension-details))
   aws-sdk/generator/shape::members))
(common-lisp:deftype extension-name () 'common-lisp:string)
(common-lisp:deftype extension-namespace () 'common-lisp:string)
(common-lisp:deftype extension-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass extension-version-details common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or extension-version common-lisp:null)
                         :accessor %extension-version-details-version :initform
                         common-lisp:nil)
                        (schema :initarg :schema :type
                         (common-lisp:or extension-version-schema
                                         common-lisp:null)
                         :accessor %extension-version-details-schema :initform
                         common-lisp:nil)
                        (namespace :initarg :namespace :type
                         (common-lisp:or extension-namespace common-lisp:null)
                         :accessor %extension-version-details-namespace
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or extension-name common-lisp:null)
                         :accessor %extension-version-details-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'extension-version-details
                    'make-extension-version-details))
 (common-lisp:defun make-extension-version-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version schema namespace name)
   (common-lisp:apply #'common-lisp:make-instance 'extension-version-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          extension-version-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          extension-version-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          extension-version-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype extension-version-details-list ()
   '(trivial-types:proper-list extension-version-details))
 (common-lisp:defun |make-extension-version-details-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            extension-version-details))
   aws-sdk/generator/shape::members))
(common-lisp:deftype extension-version-schema () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass game-configuration-details common-lisp:nil
                       ((sections :initarg :sections :type
                         (common-lisp:or sections common-lisp:null) :accessor
                         %game-configuration-details-sections :initform
                         common-lisp:nil)
                        (last-updated :initarg :last-updated :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %game-configuration-details-last-updated :initform
                         common-lisp:nil)
                        (created :initarg :created :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %game-configuration-details-created :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'game-configuration-details
                    'make-game-configuration-details))
 (common-lisp:defun make-game-configuration-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key sections last-updated created)
   (common-lisp:apply #'common-lisp:make-instance 'game-configuration-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          game-configuration-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          game-configuration-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sections))
      (common-lisp:list
       (common-lisp:cons "Sections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          game-configuration-details))
   common-lisp:nil))
(common-lisp:deftype game-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass game-details common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %game-details-tags :initform common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or game-state common-lisp:null) :accessor
                         %game-details-state :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %game-details-name :initform common-lisp:nil)
                        (last-updated :initarg :last-updated :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %game-details-last-updated :initform common-lisp:nil)
                        (enable-termination-protection :initarg
                         :enable-termination-protection :type
                         (common-lisp:or game-termination-protection
                                         common-lisp:null)
                         :accessor %game-details-enable-termination-protection
                         :initform common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or game-description common-lisp:null)
                         :accessor %game-details-description :initform
                         common-lisp:nil)
                        (created :initarg :created :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %game-details-created :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %game-details-arn :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'game-details 'make-game-details))
 (common-lisp:defun make-game-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags state name last-updated
                     enable-termination-protection description created arn)
   (common-lisp:apply #'common-lisp:make-instance 'game-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input game-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input game-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-termination-protection))
      (common-lisp:list
       (common-lisp:cons "EnableTerminationProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input game-details))
   common-lisp:nil))
(common-lisp:deftype game-key () 'common-lisp:string)
(common-lisp:deftype game-name () 'common-lisp:string)
(common-lisp:deftype game-sdk-version () 'common-lisp:string)
(common-lisp:deftype game-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass game-summary common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %game-summary-tags :initform common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or game-state common-lisp:null) :accessor
                         %game-summary-state :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %game-summary-name :initform common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or game-description common-lisp:null)
                         :accessor %game-summary-description :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'game-summary 'make-game-summary))
 (common-lisp:defun make-game-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags state name description)
   (common-lisp:apply #'common-lisp:make-instance 'game-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input game-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input game-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input game-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype game-summary-list ()
   '(trivial-types:proper-list game-summary))
 (common-lisp:defun |make-game-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list game-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype game-termination-protection () 'common-lisp:boolean)
(common-lisp:deftype generated-code-job-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass generated-code-job-details common-lisp:nil
                       ((status :initarg :status :type
                         (common-lisp:or generated-code-job-state
                                         common-lisp:null)
                         :accessor %generated-code-job-details-status :initform
                         common-lisp:nil)
                        (s3url :initarg :s3url :type
                         (common-lisp:or s3presigned-url common-lisp:null)
                         :accessor %generated-code-job-details-s3url :initform
                         common-lisp:nil)
                        (generated-code-job-id :initarg :generated-code-job-id
                         :type
                         (common-lisp:or generated-code-job-id
                                         common-lisp:null)
                         :accessor
                         %generated-code-job-details-generated-code-job-id
                         :initform common-lisp:nil)
                        (expiration-time :initarg :expiration-time :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %generated-code-job-details-expiration-time :initform
                         common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or generated-code-job-description
                                         common-lisp:null)
                         :accessor %generated-code-job-details-description
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'generated-code-job-details
                    'make-generated-code-job-details))
 (common-lisp:defun make-generated-code-job-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status s3url generated-code-job-id
                     expiration-time description)
   (common-lisp:apply #'common-lisp:make-instance 'generated-code-job-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generated-code-job-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generated-code-job-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-time))
      (common-lisp:list
       (common-lisp:cons "ExpirationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generated-code-job-id))
      (common-lisp:list
       (common-lisp:cons "GeneratedCodeJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generated-code-job-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype generated-code-job-details-list ()
   '(trivial-types:proper-list generated-code-job-details))
 (common-lisp:defun |make-generated-code-job-details-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            generated-code-job-details))
   aws-sdk/generator/shape::members))
(common-lisp:deftype generated-code-job-id () 'common-lisp:string)
(common-lisp:deftype generated-code-job-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass generator common-lisp:nil
                       ((target-platform :initarg :target-platform :type
                         (common-lisp:or target-platform common-lisp:null)
                         :accessor %generator-target-platform :initform
                         common-lisp:nil)
                        (language :initarg :language :type
                         (common-lisp:or language common-lisp:null) :accessor
                         %generator-language :initform common-lisp:nil)
                        (game-sdk-version :initarg :game-sdk-version :type
                         (common-lisp:or game-sdk-version common-lisp:null)
                         :accessor %generator-game-sdk-version :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'generator 'make-generator))
 (common-lisp:defun make-generator
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key target-platform language
                     game-sdk-version)
   (common-lisp:apply #'common-lisp:make-instance 'generator
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input generator))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input generator))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-sdk-version))
      (common-lisp:list
       (common-lisp:cons "GameSdkVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language))
      (common-lisp:list
       (common-lisp:cons "Language"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-platform))
      (common-lisp:list
       (common-lisp:cons "TargetPlatform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input generator))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-extension-request common-lisp:nil
                       ((namespace :initarg :namespace :type
                         (common-lisp:or extension-namespace common-lisp:null)
                         :accessor %get-extension-request-namespace :initform
                         (common-lisp:error ":namespace is required"))
                        (name :initarg :name :type
                         (common-lisp:or extension-name common-lisp:null)
                         :accessor %get-extension-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-extension-request 'make-get-extension-request))
 (common-lisp:defun make-get-extension-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key namespace name)
   (common-lisp:apply #'common-lisp:make-instance 'get-extension-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-extension-result common-lisp:nil
                       ((extension :initarg :extension :type
                         (common-lisp:or extension-details common-lisp:null)
                         :accessor %get-extension-result-extension :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-extension-result 'make-get-extension-result))
 (common-lisp:defun make-get-extension-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key extension)
   (common-lisp:apply #'common-lisp:make-instance 'get-extension-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-extension-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-extension-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extension))
      (common-lisp:list
       (common-lisp:cons "Extension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-extension-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-extension-version-request common-lisp:nil
                       ((namespace :initarg :namespace :type
                         (common-lisp:or extension-namespace common-lisp:null)
                         :accessor %get-extension-version-request-namespace
                         :initform
                         (common-lisp:error ":namespace is required"))
                        (name :initarg :name :type
                         (common-lisp:or extension-name common-lisp:null)
                         :accessor %get-extension-version-request-name
                         :initform (common-lisp:error ":name is required"))
                        (extension-version :initarg :extension-version :type
                         (common-lisp:or extension-version common-lisp:null)
                         :accessor
                         %get-extension-version-request-extension-version
                         :initform
                         (common-lisp:error
                          ":extension-version is required"))))
 (common-lisp:export
  (common-lisp:list 'get-extension-version-request
                    'make-get-extension-version-request))
 (common-lisp:defun make-get-extension-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key namespace name extension-version)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-extension-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-extension-version-result common-lisp:nil
                       ((extension-version :initarg :extension-version :type
                         (common-lisp:or extension-version-details
                                         common-lisp:null)
                         :accessor
                         %get-extension-version-result-extension-version
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-extension-version-result
                    'make-get-extension-version-result))
 (common-lisp:defun make-get-extension-version-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key extension-version)
   (common-lisp:apply #'common-lisp:make-instance 'get-extension-version-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-version-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-version-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extension-version))
      (common-lisp:list
       (common-lisp:cons "ExtensionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-extension-version-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-game-configuration-request common-lisp:nil
                       ((sections :initarg :sections :type
                         (common-lisp:or section-list common-lisp:null)
                         :accessor %get-game-configuration-request-sections
                         :initform common-lisp:nil)
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %get-game-configuration-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-game-configuration-request
                    'make-get-game-configuration-request))
 (common-lisp:defun make-get-game-configuration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key sections game-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-game-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-game-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-game-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-game-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-game-configuration-result common-lisp:nil
                       ((game-configuration :initarg :game-configuration :type
                         (common-lisp:or game-configuration-details
                                         common-lisp:null)
                         :accessor
                         %get-game-configuration-result-game-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-game-configuration-result
                    'make-get-game-configuration-result))
 (common-lisp:defun make-get-game-configuration-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key game-configuration)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-game-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-game-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-game-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-configuration))
      (common-lisp:list
       (common-lisp:cons "GameConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-game-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-game-request common-lisp:nil
                       ((game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %get-game-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-game-request 'make-get-game-request))
 (common-lisp:defun make-get-game-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key game-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-game-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-game-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-game-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-game-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-game-result common-lisp:nil
                       ((game :initarg :game :type
                         (common-lisp:or game-details common-lisp:null)
                         :accessor %get-game-result-game :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'get-game-result 'make-get-game-result))
 (common-lisp:defun make-get-game-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key game)
   (common-lisp:apply #'common-lisp:make-instance 'get-game-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-game-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-game-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game))
      (common-lisp:list
       (common-lisp:cons "Game"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-game-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-generated-code-job-request common-lisp:nil
                       ((snapshot-id :initarg :snapshot-id :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor %get-generated-code-job-request-snapshot-id
                         :initform
                         (common-lisp:error ":snapshot-id is required"))
                        (job-id :initarg :job-id :type
                         (common-lisp:or generated-code-job-id
                                         common-lisp:null)
                         :accessor %get-generated-code-job-request-job-id
                         :initform (common-lisp:error ":job-id is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %get-generated-code-job-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-generated-code-job-request
                    'make-get-generated-code-job-request))
 (common-lisp:defun make-get-generated-code-job-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key snapshot-id job-id game-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-generated-code-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-generated-code-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-generated-code-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-generated-code-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-generated-code-job-result common-lisp:nil
                       ((generated-code-job :initarg :generated-code-job :type
                         (common-lisp:or generated-code-job-details
                                         common-lisp:null)
                         :accessor
                         %get-generated-code-job-result-generated-code-job
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-generated-code-job-result
                    'make-get-generated-code-job-result))
 (common-lisp:defun make-get-generated-code-job-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key generated-code-job)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-generated-code-job-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-generated-code-job-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-generated-code-job-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'generated-code-job))
      (common-lisp:list
       (common-lisp:cons "GeneratedCodeJob"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-generated-code-job-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-player-connection-status-request common-lisp:nil
                       ((stage-name :initarg :stage-name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %get-player-connection-status-request-stage-name
                         :initform
                         (common-lisp:error ":stage-name is required"))
                        (player-id :initarg :player-id :type
                         (common-lisp:or player-id common-lisp:null) :accessor
                         %get-player-connection-status-request-player-id
                         :initform
                         (common-lisp:error ":player-id is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %get-player-connection-status-request-game-name
                         :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-player-connection-status-request
                    'make-get-player-connection-status-request))
 (common-lisp:defun make-get-player-connection-status-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name player-id game-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-player-connection-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-player-connection-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-player-connection-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-player-connection-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-player-connection-status-result common-lisp:nil
                       ((connections :initarg :connections :type
                         (common-lisp:or connection-list common-lisp:null)
                         :accessor
                         %get-player-connection-status-result-connections
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-player-connection-status-result
                    'make-get-player-connection-status-result))
 (common-lisp:defun make-get-player-connection-status-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key connections)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-player-connection-status-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-player-connection-status-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-player-connection-status-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connections))
      (common-lisp:list
       (common-lisp:cons "Connections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-player-connection-status-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-snapshot-request common-lisp:nil
                       ((snapshot-id :initarg :snapshot-id :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor %get-snapshot-request-snapshot-id :initform
                         (common-lisp:error ":snapshot-id is required"))
                        (sections :initarg :sections :type
                         (common-lisp:or section-list common-lisp:null)
                         :accessor %get-snapshot-request-sections :initform
                         common-lisp:nil)
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %get-snapshot-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-snapshot-request 'make-get-snapshot-request))
 (common-lisp:defun make-get-snapshot-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key snapshot-id sections game-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-snapshot-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-snapshot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-snapshot-result common-lisp:nil
                       ((snapshot :initarg :snapshot :type
                         (common-lisp:or snapshot-details common-lisp:null)
                         :accessor %get-snapshot-result-snapshot :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-snapshot-result 'make-get-snapshot-result))
 (common-lisp:defun make-get-snapshot-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key snapshot)
   (common-lisp:apply #'common-lisp:make-instance 'get-snapshot-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot))
      (common-lisp:list
       (common-lisp:cons "Snapshot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stage-deployment-request common-lisp:nil
                       ((stage-name :initarg :stage-name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %get-stage-deployment-request-stage-name :initform
                         (common-lisp:error ":stage-name is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %get-stage-deployment-request-game-name :initform
                         (common-lisp:error ":game-name is required"))
                        (deployment-id :initarg :deployment-id :type
                         (common-lisp:or deployment-id common-lisp:null)
                         :accessor %get-stage-deployment-request-deployment-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-stage-deployment-request
                    'make-get-stage-deployment-request))
 (common-lisp:defun make-get-stage-deployment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name game-name deployment-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-stage-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-stage-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-stage-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-stage-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stage-deployment-result common-lisp:nil
                       ((stage-deployment :initarg :stage-deployment :type
                         (common-lisp:or stage-deployment-details
                                         common-lisp:null)
                         :accessor
                         %get-stage-deployment-result-stage-deployment
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-stage-deployment-result
                    'make-get-stage-deployment-result))
 (common-lisp:defun make-get-stage-deployment-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-deployment)
   (common-lisp:apply #'common-lisp:make-instance 'get-stage-deployment-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-stage-deployment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-stage-deployment-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-deployment))
      (common-lisp:list
       (common-lisp:cons "StageDeployment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-stage-deployment-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stage-request common-lisp:nil
                       ((stage-name :initarg :stage-name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %get-stage-request-stage-name :initform
                         (common-lisp:error ":stage-name is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %get-stage-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-stage-request 'make-get-stage-request))
 (common-lisp:defun make-get-stage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name game-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stage-result common-lisp:nil
                       ((stage :initarg :stage :type
                         (common-lisp:or stage-details common-lisp:null)
                         :accessor %get-stage-result-stage :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-stage-result 'make-get-stage-result))
 (common-lisp:defun make-get-stage-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage)
   (common-lisp:apply #'common-lisp:make-instance 'get-stage-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-game-configuration-request common-lisp:nil
                       ((import-source :initarg :import-source :type
                         (common-lisp:or import-game-configuration-source
                                         common-lisp:null)
                         :accessor
                         %import-game-configuration-request-import-source
                         :initform
                         (common-lisp:error ":import-source is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %import-game-configuration-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'import-game-configuration-request
                    'make-import-game-configuration-request))
 (common-lisp:defun make-import-game-configuration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key import-source game-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'import-game-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-source))
      (common-lisp:list
       (common-lisp:cons "ImportSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-game-configuration-result common-lisp:nil
                       ((game-configuration :initarg :game-configuration :type
                         (common-lisp:or game-configuration-details
                                         common-lisp:null)
                         :accessor
                         %import-game-configuration-result-game-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'import-game-configuration-result
                    'make-import-game-configuration-result))
 (common-lisp:defun make-import-game-configuration-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key game-configuration)
   (common-lisp:apply #'common-lisp:make-instance
                      'import-game-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-configuration))
      (common-lisp:list
       (common-lisp:cons "GameConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-game-configuration-source common-lisp:nil
                       ((file :initarg :file :type
                         (common-lisp:or raw-game-configuration-data
                                         common-lisp:null)
                         :accessor %import-game-configuration-source-file
                         :initform (common-lisp:error ":file is required"))))
 (common-lisp:export
  (common-lisp:list 'import-game-configuration-source
                    'make-import-game-configuration-source))
 (common-lisp:defun make-import-game-configuration-source
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key file)
   (common-lisp:apply #'common-lisp:make-instance
                      'import-game-configuration-source
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file))
      (common-lisp:list
       (common-lisp:cons "File"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-game-configuration-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype language () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-extension-versions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-extension-versions-request-next-token :initform
                         common-lisp:nil)
                        (namespace :initarg :namespace :type
                         (common-lisp:or extension-namespace common-lisp:null)
                         :accessor %list-extension-versions-request-namespace
                         :initform
                         (common-lisp:error ":namespace is required"))
                        (name :initarg :name :type
                         (common-lisp:or extension-name common-lisp:null)
                         :accessor %list-extension-versions-request-name
                         :initform (common-lisp:error ":name is required"))
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-extension-versions-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-extension-versions-request
                    'make-list-extension-versions-request))
 (common-lisp:defun make-list-extension-versions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token namespace name max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-extension-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-extension-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-extension-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-extension-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-extension-versions-result common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-extension-versions-result-next-token :initform
                         common-lisp:nil)
                        (extension-versions :initarg :extension-versions :type
                         (common-lisp:or extension-version-details-list
                                         common-lisp:null)
                         :accessor
                         %list-extension-versions-result-extension-versions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-extension-versions-result
                    'make-list-extension-versions-result))
 (common-lisp:defun make-list-extension-versions-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token extension-versions)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-extension-versions-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-extension-versions-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-extension-versions-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extension-versions))
      (common-lisp:list
       (common-lisp:cons "ExtensionVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-extension-versions-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-extensions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-extensions-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-extensions-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-extensions-request 'make-list-extensions-request))
 (common-lisp:defun make-list-extensions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance 'list-extensions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-extensions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-extensions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-extensions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-extensions-result common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-extensions-result-next-token :initform
                         common-lisp:nil)
                        (extensions :initarg :extensions :type
                         (common-lisp:or extension-details-list
                                         common-lisp:null)
                         :accessor %list-extensions-result-extensions :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-extensions-result 'make-list-extensions-result))
 (common-lisp:defun make-list-extensions-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token extensions)
   (common-lisp:apply #'common-lisp:make-instance 'list-extensions-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-extensions-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-extensions-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extensions))
      (common-lisp:list
       (common-lisp:cons "Extensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-extensions-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-games-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-games-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-games-request-max-results :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-games-request 'make-list-games-request))
 (common-lisp:defun make-list-games-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance 'list-games-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-games-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-games-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-games-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-games-result common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-games-result-next-token :initform
                         common-lisp:nil)
                        (games :initarg :games :type
                         (common-lisp:or game-summary-list common-lisp:null)
                         :accessor %list-games-result-games :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-games-result 'make-list-games-result))
 (common-lisp:defun make-list-games-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token games)
   (common-lisp:apply #'common-lisp:make-instance 'list-games-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-games-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-games-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'games))
      (common-lisp:list
       (common-lisp:cons "Games"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-games-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-generated-code-jobs-request common-lisp:nil
                       ((snapshot-id :initarg :snapshot-id :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor
                         %list-generated-code-jobs-request-snapshot-id
                         :initform
                         (common-lisp:error ":snapshot-id is required"))
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-generated-code-jobs-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %list-generated-code-jobs-request-max-results
                         :initform common-lisp:nil)
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %list-generated-code-jobs-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'list-generated-code-jobs-request
                    'make-list-generated-code-jobs-request))
 (common-lisp:defun make-list-generated-code-jobs-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key snapshot-id next-token max-results
                     game-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-generated-code-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-generated-code-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-generated-code-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-generated-code-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-generated-code-jobs-result common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-generated-code-jobs-result-next-token :initform
                         common-lisp:nil)
                        (generated-code-jobs :initarg :generated-code-jobs
                         :type
                         (common-lisp:or generated-code-job-details-list
                                         common-lisp:null)
                         :accessor
                         %list-generated-code-jobs-result-generated-code-jobs
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-generated-code-jobs-result
                    'make-list-generated-code-jobs-result))
 (common-lisp:defun make-list-generated-code-jobs-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token generated-code-jobs)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-generated-code-jobs-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-generated-code-jobs-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-generated-code-jobs-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'generated-code-jobs))
      (common-lisp:list
       (common-lisp:cons "GeneratedCodeJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-generated-code-jobs-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-snapshots-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-snapshots-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-snapshots-request-max-results
                         :initform common-lisp:nil)
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %list-snapshots-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'list-snapshots-request 'make-list-snapshots-request))
 (common-lisp:defun make-list-snapshots-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results game-name)
   (common-lisp:apply #'common-lisp:make-instance 'list-snapshots-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-snapshots-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-snapshots-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-snapshots-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-snapshots-result common-lisp:nil
                       ((snapshots :initarg :snapshots :type
                         (common-lisp:or snapshot-summary-list
                                         common-lisp:null)
                         :accessor %list-snapshots-result-snapshots :initform
                         common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-snapshots-result-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-snapshots-result 'make-list-snapshots-result))
 (common-lisp:defun make-list-snapshots-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key snapshots next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-snapshots-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-snapshots-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-snapshots-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshots))
      (common-lisp:list
       (common-lisp:cons "Snapshots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-snapshots-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-stage-deployments-request common-lisp:nil
                       ((stage-name :initarg :stage-name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %list-stage-deployments-request-stage-name :initform
                         (common-lisp:error ":stage-name is required"))
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-stage-deployments-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-stage-deployments-request-max-results
                         :initform common-lisp:nil)
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %list-stage-deployments-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'list-stage-deployments-request
                    'make-list-stage-deployments-request))
 (common-lisp:defun make-list-stage-deployments-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name next-token max-results
                     game-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-stage-deployments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-stage-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-stage-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-stage-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-stage-deployments-result common-lisp:nil
                       ((stage-deployments :initarg :stage-deployments :type
                         (common-lisp:or stage-deployment-list
                                         common-lisp:null)
                         :accessor
                         %list-stage-deployments-result-stage-deployments
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-stage-deployments-result-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-stage-deployments-result
                    'make-list-stage-deployments-result))
 (common-lisp:defun make-list-stage-deployments-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-deployments next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-stage-deployments-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-stage-deployments-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-stage-deployments-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-deployments))
      (common-lisp:list
       (common-lisp:cons "StageDeployments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-stage-deployments-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-stages-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-stages-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-stages-request-max-results :initform
                         common-lisp:nil)
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %list-stages-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'list-stages-request 'make-list-stages-request))
 (common-lisp:defun make-list-stages-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results game-name)
   (common-lisp:apply #'common-lisp:make-instance 'list-stages-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-stages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-stages-result common-lisp:nil
                       ((stages :initarg :stages :type
                         (common-lisp:or stage-summary-list common-lisp:null)
                         :accessor %list-stages-result-stages :initform
                         common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-stages-result-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-stages-result 'make-list-stages-result))
 (common-lisp:defun make-list-stages-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stages next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-stages-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-stages-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-stages-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stages))
      (common-lisp:list
       (common-lisp:cons "Stages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-stages-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %list-tags-for-resource-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-result common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %list-tags-for-resource-result-tags :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-result
                    'make-list-tags-for-resource-result))
 (common-lisp:defun make-list-tags-for-resource-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-result))
   common-lisp:nil))
(common-lisp:deftype log-group-name () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype operation () 'common-lisp:string)
(common-lisp:deftype path () 'common-lisp:string)
(common-lisp:deftype player-id () 'common-lisp:string)
(common-lisp:deftype raw-game-configuration-data ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype result-code () 'common-lisp:string)
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:deftype s3presigned-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass section common-lisp:nil
                       ((size :initarg :size :type
                         (common-lisp:or byte-size common-lisp:null) :accessor
                         %section-size :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or section-name common-lisp:null)
                         :accessor %section-name :initform common-lisp:nil)
                        (attributes :initarg :attributes :type
                         (common-lisp:or document common-lisp:null) :accessor
                         %section-attributes :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'section 'make-section))
 (common-lisp:defun make-section
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key size name attributes)
   (common-lisp:apply #'common-lisp:make-instance 'section
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input section))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input section))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input section))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype section-list ()
   '(trivial-types:proper-list section-name))
 (common-lisp:defun |make-section-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list section-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass section-modification common-lisp:nil
                       ((value :initarg :value :type
                         (common-lisp:or document common-lisp:null) :accessor
                         %section-modification-value :initform common-lisp:nil)
                        (section :initarg :section :type
                         (common-lisp:or section-name common-lisp:null)
                         :accessor %section-modification-section :initform
                         (common-lisp:error ":section is required"))
                        (path :initarg :path :type
                         (common-lisp:or path common-lisp:null) :accessor
                         %section-modification-path :initform
                         (common-lisp:error ":path is required"))
                        (operation :initarg :operation :type
                         (common-lisp:or operation common-lisp:null) :accessor
                         %section-modification-operation :initform
                         (common-lisp:error ":operation is required"))))
 (common-lisp:export
  (common-lisp:list 'section-modification 'make-section-modification))
 (common-lisp:defun make-section-modification
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value section path operation)
   (common-lisp:apply #'common-lisp:make-instance 'section-modification
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input section-modification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input section-modification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'section))
      (common-lisp:list
       (common-lisp:cons "Section"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input section-modification))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype section-modification-list ()
   '(trivial-types:proper-list section-modification))
 (common-lisp:defun |make-section-modification-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list section-modification))
   aws-sdk/generator/shape::members))
(common-lisp:deftype section-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype sections () 'common-lisp:hash-table)
 (common-lisp:defun |make-sections| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:deftype snapshot-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass snapshot-details common-lisp:nil
                       ((sections :initarg :sections :type
                         (common-lisp:or sections common-lisp:null) :accessor
                         %snapshot-details-sections :initform common-lisp:nil)
                        (last-updated :initarg :last-updated :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %snapshot-details-last-updated :initform
                         common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor %snapshot-details-id :initform
                         common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or snapshot-description common-lisp:null)
                         :accessor %snapshot-details-description :initform
                         common-lisp:nil)
                        (created :initarg :created :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %snapshot-details-created :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'snapshot-details 'make-snapshot-details))
 (common-lisp:defun make-snapshot-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key sections last-updated id description
                     created)
   (common-lisp:apply #'common-lisp:make-instance 'snapshot-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input snapshot-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input snapshot-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sections))
      (common-lisp:list
       (common-lisp:cons "Sections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input snapshot-details))
   common-lisp:nil))
(common-lisp:deftype snapshot-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass snapshot-summary common-lisp:nil
                       ((last-updated :initarg :last-updated :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %snapshot-summary-last-updated :initform
                         common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor %snapshot-summary-id :initform
                         common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or snapshot-description common-lisp:null)
                         :accessor %snapshot-summary-description :initform
                         common-lisp:nil)
                        (created :initarg :created :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %snapshot-summary-created :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'snapshot-summary 'make-snapshot-summary))
 (common-lisp:defun make-snapshot-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key last-updated id description created)
   (common-lisp:apply #'common-lisp:make-instance 'snapshot-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input snapshot-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input snapshot-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input snapshot-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype snapshot-summary-list ()
   '(trivial-types:proper-list snapshot-summary))
 (common-lisp:defun |make-snapshot-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list snapshot-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass stage-deployment-details common-lisp:nil
                       ((snapshot-id :initarg :snapshot-id :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor %stage-deployment-details-snapshot-id
                         :initform common-lisp:nil)
                        (last-updated :initarg :last-updated :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %stage-deployment-details-last-updated :initform
                         common-lisp:nil)
                        (deployment-state :initarg :deployment-state :type
                         (common-lisp:or deployment-state common-lisp:null)
                         :accessor %stage-deployment-details-deployment-state
                         :initform common-lisp:nil)
                        (deployment-result :initarg :deployment-result :type
                         (common-lisp:or deployment-result common-lisp:null)
                         :accessor %stage-deployment-details-deployment-result
                         :initform common-lisp:nil)
                        (deployment-id :initarg :deployment-id :type
                         (common-lisp:or deployment-id common-lisp:null)
                         :accessor %stage-deployment-details-deployment-id
                         :initform common-lisp:nil)
                        (deployment-action :initarg :deployment-action :type
                         (common-lisp:or deployment-action common-lisp:null)
                         :accessor %stage-deployment-details-deployment-action
                         :initform common-lisp:nil)
                        (created :initarg :created :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %stage-deployment-details-created :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'stage-deployment-details 'make-stage-deployment-details))
 (common-lisp:defun make-stage-deployment-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key snapshot-id last-updated deployment-state
                     deployment-result deployment-id deployment-action created)
   (common-lisp:apply #'common-lisp:make-instance 'stage-deployment-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stage-deployment-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stage-deployment-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-action))
      (common-lisp:list
       (common-lisp:cons "DeploymentAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-result))
      (common-lisp:list
       (common-lisp:cons "DeploymentResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-state))
      (common-lisp:list
       (common-lisp:cons "DeploymentState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stage-deployment-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype stage-deployment-list ()
   '(trivial-types:proper-list stage-deployment-summary))
 (common-lisp:defun |make-stage-deployment-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            stage-deployment-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass stage-deployment-summary common-lisp:nil
                       ((snapshot-id :initarg :snapshot-id :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor %stage-deployment-summary-snapshot-id
                         :initform common-lisp:nil)
                        (last-updated :initarg :last-updated :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %stage-deployment-summary-last-updated :initform
                         common-lisp:nil)
                        (deployment-state :initarg :deployment-state :type
                         (common-lisp:or deployment-state common-lisp:null)
                         :accessor %stage-deployment-summary-deployment-state
                         :initform common-lisp:nil)
                        (deployment-result :initarg :deployment-result :type
                         (common-lisp:or deployment-result common-lisp:null)
                         :accessor %stage-deployment-summary-deployment-result
                         :initform common-lisp:nil)
                        (deployment-id :initarg :deployment-id :type
                         (common-lisp:or deployment-id common-lisp:null)
                         :accessor %stage-deployment-summary-deployment-id
                         :initform common-lisp:nil)
                        (deployment-action :initarg :deployment-action :type
                         (common-lisp:or deployment-action common-lisp:null)
                         :accessor %stage-deployment-summary-deployment-action
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'stage-deployment-summary 'make-stage-deployment-summary))
 (common-lisp:defun make-stage-deployment-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key snapshot-id last-updated deployment-state
                     deployment-result deployment-id deployment-action)
   (common-lisp:apply #'common-lisp:make-instance 'stage-deployment-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stage-deployment-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stage-deployment-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-action))
      (common-lisp:list
       (common-lisp:cons "DeploymentAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-result))
      (common-lisp:list
       (common-lisp:cons "DeploymentResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-state))
      (common-lisp:list
       (common-lisp:cons "DeploymentState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stage-deployment-summary))
   common-lisp:nil))
(common-lisp:deftype stage-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass stage-details common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %stage-details-tags :initform common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or stage-state common-lisp:null)
                         :accessor %stage-details-state :initform
                         common-lisp:nil)
                        (role :initarg :role :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %stage-details-role :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %stage-details-name :initform common-lisp:nil)
                        (log-group :initarg :log-group :type
                         (common-lisp:or log-group-name common-lisp:null)
                         :accessor %stage-details-log-group :initform
                         common-lisp:nil)
                        (last-updated :initarg :last-updated :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %stage-details-last-updated :initform common-lisp:nil)
                        (game-key :initarg :game-key :type
                         (common-lisp:or game-key common-lisp:null) :accessor
                         %stage-details-game-key :initform common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or stage-description common-lisp:null)
                         :accessor %stage-details-description :initform
                         common-lisp:nil)
                        (created :initarg :created :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         %stage-details-created :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %stage-details-arn :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'stage-details 'make-stage-details))
 (common-lisp:defun make-stage-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags state role name log-group
                     last-updated game-key description created arn)
   (common-lisp:apply #'common-lisp:make-instance 'stage-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-key))
      (common-lisp:list
       (common-lisp:cons "GameKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group))
      (common-lisp:list
       (common-lisp:cons "LogGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage-details))
   common-lisp:nil))
(common-lisp:deftype stage-name () 'common-lisp:string)
(common-lisp:deftype stage-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass stage-summary common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %stage-summary-tags :initform common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or stage-state common-lisp:null)
                         :accessor %stage-summary-state :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %stage-summary-name :initform common-lisp:nil)
                        (game-key :initarg :game-key :type
                         (common-lisp:or game-key common-lisp:null) :accessor
                         %stage-summary-game-key :initform common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or stage-description common-lisp:null)
                         :accessor %stage-summary-description :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'stage-summary 'make-stage-summary))
 (common-lisp:defun make-stage-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags state name game-key description)
   (common-lisp:apply #'common-lisp:make-instance 'stage-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-key))
      (common-lisp:list
       (common-lisp:cons "GameKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype stage-summary-list ()
   '(trivial-types:proper-list stage-summary))
 (common-lisp:defun |make-stage-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass start-generated-code-job-request common-lisp:nil
                       ((snapshot-id :initarg :snapshot-id :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor
                         %start-generated-code-job-request-snapshot-id
                         :initform
                         (common-lisp:error ":snapshot-id is required"))
                        (generator :initarg :generator :type
                         (common-lisp:or generator common-lisp:null) :accessor
                         %start-generated-code-job-request-generator :initform
                         (common-lisp:error ":generator is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %start-generated-code-job-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'start-generated-code-job-request
                    'make-start-generated-code-job-request))
 (common-lisp:defun make-start-generated-code-job-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key snapshot-id generator game-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-generated-code-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-generated-code-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-generated-code-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'generator))
      (common-lisp:list
       (common-lisp:cons "Generator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-generated-code-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-generated-code-job-result common-lisp:nil
                       ((generated-code-job-id :initarg :generated-code-job-id
                         :type
                         (common-lisp:or generated-code-job-id
                                         common-lisp:null)
                         :accessor
                         %start-generated-code-job-result-generated-code-job-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'start-generated-code-job-result
                    'make-start-generated-code-job-result))
 (common-lisp:defun make-start-generated-code-job-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key generated-code-job-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-generated-code-job-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-generated-code-job-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-generated-code-job-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generated-code-job-id))
      (common-lisp:list
       (common-lisp:cons "GeneratedCodeJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-generated-code-job-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-stage-deployment-request common-lisp:nil
                       ((stage-name :initarg :stage-name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %start-stage-deployment-request-stage-name :initform
                         (common-lisp:error ":stage-name is required"))
                        (snapshot-id :initarg :snapshot-id :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor %start-stage-deployment-request-snapshot-id
                         :initform
                         (common-lisp:error ":snapshot-id is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %start-stage-deployment-request-game-name :initform
                         (common-lisp:error ":game-name is required"))
                        (client-token :initarg :client-token :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %start-stage-deployment-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'start-stage-deployment-request
                    'make-start-stage-deployment-request))
 (common-lisp:defun make-start-stage-deployment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name snapshot-id game-name
                     client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-stage-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-stage-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-stage-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-stage-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-stage-deployment-result common-lisp:nil
                       ((stage-deployment :initarg :stage-deployment :type
                         (common-lisp:or stage-deployment-details
                                         common-lisp:null)
                         :accessor
                         %start-stage-deployment-result-stage-deployment
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'start-stage-deployment-result
                    'make-start-stage-deployment-result))
 (common-lisp:defun make-start-stage-deployment-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-deployment)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-stage-deployment-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-stage-deployment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-stage-deployment-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-deployment))
      (common-lisp:list
       (common-lisp:cons "StageDeployment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-stage-deployment-result))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %tag-resource-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-result common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'tag-resource-result 'make-tag-resource-result))
 (common-lisp:defun make-tag-resource-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-result))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype target-platform () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :|tagKeys| :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tagkeys is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %untag-resource-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-result common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'untag-resource-result 'make-untag-resource-result))
 (common-lisp:defun make-untag-resource-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-game-configuration-request common-lisp:nil
                       ((modifications :initarg :modifications :type
                         (common-lisp:or section-modification-list
                                         common-lisp:null)
                         :accessor
                         %update-game-configuration-request-modifications
                         :initform
                         (common-lisp:error ":modifications is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %update-game-configuration-request-game-name :initform
                         (common-lisp:error ":game-name is required"))))
 (common-lisp:export
  (common-lisp:list 'update-game-configuration-request
                    'make-update-game-configuration-request))
 (common-lisp:defun make-update-game-configuration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key modifications game-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-game-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-game-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-game-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modifications))
      (common-lisp:list
       (common-lisp:cons "Modifications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-game-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-game-configuration-result common-lisp:nil
                       ((game-configuration :initarg :game-configuration :type
                         (common-lisp:or game-configuration-details
                                         common-lisp:null)
                         :accessor
                         %update-game-configuration-result-game-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-game-configuration-result
                    'make-update-game-configuration-result))
 (common-lisp:defun make-update-game-configuration-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key game-configuration)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-game-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-game-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-game-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game-configuration))
      (common-lisp:list
       (common-lisp:cons "GameConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-game-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-game-request common-lisp:nil
                       ((game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %update-game-request-game-name :initform
                         (common-lisp:error ":game-name is required"))
                        (description :initarg :description :type
                         (common-lisp:or game-description common-lisp:null)
                         :accessor %update-game-request-description :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-game-request 'make-update-game-request))
 (common-lisp:defun make-update-game-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key game-name description)
   (common-lisp:apply #'common-lisp:make-instance 'update-game-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-game-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-game-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-game-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-game-result common-lisp:nil
                       ((game :initarg :game :type
                         (common-lisp:or game-details common-lisp:null)
                         :accessor %update-game-result-game :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-game-result 'make-update-game-result))
 (common-lisp:defun make-update-game-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key game)
   (common-lisp:apply #'common-lisp:make-instance 'update-game-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-game-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-game-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'game))
      (common-lisp:list
       (common-lisp:cons "Game"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-game-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-snapshot-request common-lisp:nil
                       ((snapshot-id :initarg :snapshot-id :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor %update-snapshot-request-snapshot-id
                         :initform
                         (common-lisp:error ":snapshot-id is required"))
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %update-snapshot-request-game-name :initform
                         (common-lisp:error ":game-name is required"))
                        (description :initarg :description :type
                         (common-lisp:or snapshot-description common-lisp:null)
                         :accessor %update-snapshot-request-description
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-snapshot-request 'make-update-snapshot-request))
 (common-lisp:defun make-update-snapshot-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key snapshot-id game-name description)
   (common-lisp:apply #'common-lisp:make-instance 'update-snapshot-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-snapshot-result common-lisp:nil
                       ((snapshot :initarg :snapshot :type
                         (common-lisp:or snapshot-details common-lisp:null)
                         :accessor %update-snapshot-result-snapshot :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-snapshot-result 'make-update-snapshot-result))
 (common-lisp:defun make-update-snapshot-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key snapshot)
   (common-lisp:apply #'common-lisp:make-instance 'update-snapshot-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot))
      (common-lisp:list
       (common-lisp:cons "Snapshot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-stage-request common-lisp:nil
                       ((stage-name :initarg :stage-name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %update-stage-request-stage-name :initform
                         (common-lisp:error ":stage-name is required"))
                        (role :initarg :role :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %update-stage-request-role :initform common-lisp:nil)
                        (game-name :initarg :game-name :type
                         (common-lisp:or game-name common-lisp:null) :accessor
                         %update-stage-request-game-name :initform
                         (common-lisp:error ":game-name is required"))
                        (description :initarg :description :type
                         (common-lisp:or stage-description common-lisp:null)
                         :accessor %update-stage-request-description :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-stage-request 'make-update-stage-request))
 (common-lisp:defun make-update-stage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name role game-name description)
   (common-lisp:apply #'common-lisp:make-instance 'update-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-stage-result common-lisp:nil
                       ((stage :initarg :stage :type
                         (common-lisp:or stage-details common-lisp:null)
                         :accessor %update-stage-result-stage :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-stage-result 'make-update-stage-result))
 (common-lisp:defun make-update-stage-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage)
   (common-lisp:apply #'common-lisp:make-instance 'update-stage-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stage-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stage-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stage-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (gamesparks-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defun create-game
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description game-name tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token description game-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-game-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/game" "CreateGame"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-game))
(common-lisp:progn
 (common-lisp:defun create-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description game-name)
   (common-lisp:declare (common-lisp:ignorable description game-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "CreateSnapshot"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-snapshot))
(common-lisp:progn
 (common-lisp:defun create-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description game-name role
                     stage-name tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token description game-name role stage-name
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "CreateStage"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-stage))
(common-lisp:progn
 (common-lisp:defun delete-game
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name)
   (common-lisp:declare (common-lisp:ignorable game-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-game-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "DeleteGame"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-game))
(common-lisp:progn
 (common-lisp:defun delete-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name stage-name)
   (common-lisp:declare (common-lisp:ignorable game-name stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "DeleteStage"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-stage))
(common-lisp:progn
 (common-lisp:defun disconnect-player
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name player-id stage-name)
   (common-lisp:declare (common-lisp:ignorable game-name player-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disconnect-player-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/runtime/game/~A/stage/~A/player/~A/disconnect"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'player-id))))
                                                        "DisconnectPlayer"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disconnect-player))
(common-lisp:progn
 (common-lisp:defun export-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name snapshot-id)
   (common-lisp:declare (common-lisp:ignorable game-name snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-export-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot/~A/export"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'snapshot-id))))
                                                        "ExportSnapshot"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-snapshot))
(common-lisp:progn
 (common-lisp:defun get-extension
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name namespace)
   (common-lisp:declare (common-lisp:ignorable name namespace))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-extension-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/extension/~A/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'namespace))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetExtension"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-extension))
(common-lisp:progn
 (common-lisp:defun get-extension-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key extension-version name namespace)
   (common-lisp:declare
    (common-lisp:ignorable extension-version name namespace))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-extension-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/extension/~A/~A/version/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'namespace))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'extension-version))))
                                                        "GetExtensionVersion"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-extension-version))
(common-lisp:progn
 (common-lisp:defun get-game
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name)
   (common-lisp:declare (common-lisp:ignorable game-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-game-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "GetGame"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-game))
(common-lisp:progn
 (common-lisp:defun get-game-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name sections)
   (common-lisp:declare (common-lisp:ignorable game-name sections))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-game-configuration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "GetGameConfiguration"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-game-configuration))
(common-lisp:progn
 (common-lisp:defun get-generated-code-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name job-id snapshot-id)
   (common-lisp:declare (common-lisp:ignorable game-name job-id snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-generated-code-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot/~A/generated-sdk-code-job/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'snapshot-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "GetGeneratedCodeJob"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-generated-code-job))
(common-lisp:progn
 (common-lisp:defun get-player-connection-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name player-id stage-name)
   (common-lisp:declare (common-lisp:ignorable game-name player-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-player-connection-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/runtime/game/~A/stage/~A/player/~A/connection"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'player-id))))
                                                        "GetPlayerConnectionStatus"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-player-connection-status))
(common-lisp:progn
 (common-lisp:defun get-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name sections snapshot-id)
   (common-lisp:declare (common-lisp:ignorable game-name sections snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'snapshot-id))))
                                                        "GetSnapshot"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-snapshot))
(common-lisp:progn
 (common-lisp:defun get-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name stage-name)
   (common-lisp:declare (common-lisp:ignorable game-name stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "GetStage"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-stage))
(common-lisp:progn
 (common-lisp:defun get-stage-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id game-name stage-name)
   (common-lisp:declare
    (common-lisp:ignorable deployment-id game-name stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stage-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage/~A/deployment"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "GetStageDeployment"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-stage-deployment))
(common-lisp:progn
 (common-lisp:defun import-game-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name import-source)
   (common-lisp:declare (common-lisp:ignorable game-name import-source))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-import-game-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "ImportGameConfiguration"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-game-configuration))
(common-lisp:progn
 (common-lisp:defun list-extension-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results name namespace next-token)
   (common-lisp:declare
    (common-lisp:ignorable max-results name namespace next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-extension-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/extension/~A/~A/version"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'namespace))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "ListExtensionVersions"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-extension-versions))
(common-lisp:progn
 (common-lisp:defun list-extensions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-extensions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/extension"
                                                        "ListExtensions"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-extensions))
(common-lisp:progn
 (common-lisp:defun list-games
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-games-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/game" "ListGames"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-games))
(common-lisp:progn
 (common-lisp:defun list-generated-code-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name max-results next-token
                     snapshot-id)
   (common-lisp:declare
    (common-lisp:ignorable game-name max-results next-token snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-generated-code-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot/~A/generated-sdk-code-jobs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'snapshot-id))))
                                                        "ListGeneratedCodeJobs"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-generated-code-jobs))
(common-lisp:progn
 (common-lisp:defun list-snapshots
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable game-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-snapshots-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "ListSnapshots"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-snapshots))
(common-lisp:progn
 (common-lisp:defun list-stage-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name max-results next-token
                     stage-name)
   (common-lisp:declare
    (common-lisp:ignorable game-name max-results next-token stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-stage-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "ListStageDeployments"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-stage-deployments))
(common-lisp:progn
 (common-lisp:defun list-stages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable game-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-stages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "ListStages"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-stages))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun start-generated-code-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name generator snapshot-id)
   (common-lisp:declare
    (common-lisp:ignorable game-name generator snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-generated-code-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot/~A/generated-sdk-code-job"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'snapshot-id))))
                                                        "StartGeneratedCodeJob"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-generated-code-job))
(common-lisp:progn
 (common-lisp:defun start-stage-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token game-name snapshot-id
                     stage-name)
   (common-lisp:declare
    (common-lisp:ignorable client-token game-name snapshot-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-stage-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage/~A/deployment"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "StartStageDeployment"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-stage-deployment))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-game
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description game-name)
   (common-lisp:declare (common-lisp:ignorable description game-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-game-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "UpdateGame"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-game))
(common-lisp:progn
 (common-lisp:defun update-game-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key game-name modifications)
   (common-lisp:declare (common-lisp:ignorable game-name modifications))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-game-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))))
                                                        "UpdateGameConfiguration"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-game-configuration))
(common-lisp:progn
 (common-lisp:defun update-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description game-name snapshot-id)
   (common-lisp:declare
    (common-lisp:ignorable description game-name snapshot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/snapshot/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'snapshot-id))))
                                                        "UpdateSnapshot"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-snapshot))
(common-lisp:progn
 (common-lisp:defun update-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description game-name role stage-name)
   (common-lisp:declare
    (common-lisp:ignorable description game-name role stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'gamesparks-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/game/~A/stage/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'game-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "UpdateStage"
                                                        "2021-08-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-stage))
