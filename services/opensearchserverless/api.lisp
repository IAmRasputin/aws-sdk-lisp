;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/opensearchserverless/api
  (:use)
  (:nicknames #:aws/opensearchserverless)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/opensearchserverless/api)
(common-lisp:progn
 (common-lisp:defclass opensearchserverless-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "opensearchserverless"
                        :protocol :json))
 (common-lisp:export 'opensearchserverless-request))
(common-lisp:progn
 (common-lisp:define-condition opensearchserverless-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'opensearchserverless-error))
(common-lisp:defvar *error-map*
  '(("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("OcuLimitExceededException" . ocu-limit-exceeded-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:defclass access-policy-detail common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or access-policy-type common-lisp:null)
                         :accessor %access-policy-detail-type :initform
                         common-lisp:nil)
                        (policy-version :initarg :|policyVersion| :type
                         (common-lisp:or policy-version common-lisp:null)
                         :accessor %access-policy-detail-policy-version
                         :initform common-lisp:nil)
                        (policy :initarg :|policy| :type
                         (common-lisp:or document common-lisp:null) :accessor
                         %access-policy-detail-policy :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or policy-name common-lisp:null)
                         :accessor %access-policy-detail-name :initform
                         common-lisp:nil)
                        (last-modified-date :initarg :|lastModifiedDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %access-policy-detail-last-modified-date :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or policy-description common-lisp:null)
                         :accessor %access-policy-detail-description :initform
                         common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %access-policy-detail-created-date :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'access-policy-detail 'make-access-policy-detail))
 (common-lisp:defun make-access-policy-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type policy-version policy name
                     last-modified-date description created-date)
   (common-lisp:apply #'common-lisp:make-instance 'access-policy-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input access-policy-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input access-policy-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input access-policy-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass access-policy-stats common-lisp:nil
                       ((data-policy-count :initarg :data-policy-count :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %access-policy-stats-data-policy-count :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'access-policy-stats 'make-access-policy-stats))
 (common-lisp:defun make-access-policy-stats
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key data-policy-count)
   (common-lisp:apply #'common-lisp:make-instance 'access-policy-stats
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input access-policy-stats))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input access-policy-stats))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-policy-count))
      (common-lisp:list
       (common-lisp:cons "DataPolicyCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input access-policy-stats))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype access-policy-summaries ()
   '(trivial-types:proper-list access-policy-summary))
 (common-lisp:defun |make-access-policy-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list access-policy-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass access-policy-summary common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or access-policy-type common-lisp:null)
                         :accessor %access-policy-summary-type :initform
                         common-lisp:nil)
                        (policy-version :initarg :|policyVersion| :type
                         (common-lisp:or policy-version common-lisp:null)
                         :accessor %access-policy-summary-policy-version
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or policy-name common-lisp:null)
                         :accessor %access-policy-summary-name :initform
                         common-lisp:nil)
                        (last-modified-date :initarg :|lastModifiedDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %access-policy-summary-last-modified-date :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or policy-description common-lisp:null)
                         :accessor %access-policy-summary-description :initform
                         common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %access-policy-summary-created-date :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'access-policy-summary 'make-access-policy-summary))
 (common-lisp:defun make-access-policy-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type policy-version name
                     last-modified-date description created-date)
   (common-lisp:apply #'common-lisp:make-instance 'access-policy-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          access-policy-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          access-policy-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          access-policy-summary))
   common-lisp:nil))
(common-lisp:deftype access-policy-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass account-settings-detail common-lisp:nil
                       ((capacity-limits :initarg :|capacityLimits| :type
                         (common-lisp:or capacity-limits common-lisp:null)
                         :accessor %account-settings-detail-capacity-limits
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'account-settings-detail 'make-account-settings-detail))
 (common-lisp:defun make-account-settings-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key capacity-limits)
   (common-lisp:apply #'common-lisp:make-instance 'account-settings-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-settings-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-settings-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity-limits))
      (common-lisp:list
       (common-lisp:cons "capacityLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-settings-detail))
   common-lisp:nil))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass batch-get-collection-request common-lisp:nil
                       ((names :initarg :|names| :type
                         (common-lisp:or collection-names common-lisp:null)
                         :accessor %batch-get-collection-request-names
                         :initform common-lisp:nil)
                        (ids :initarg :|ids| :type
                         (common-lisp:or collection-ids common-lisp:null)
                         :accessor %batch-get-collection-request-ids :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'batch-get-collection-request
                    'make-batch-get-collection-request))
 (common-lisp:defun make-batch-get-collection-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key names ids)
   (common-lisp:apply #'common-lisp:make-instance 'batch-get-collection-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-collection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-collection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'names))
      (common-lisp:list
       (common-lisp:cons "names"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-collection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-get-collection-response common-lisp:nil
                       ((collection-error-details :initarg
                         :|collectionErrorDetails| :type
                         (common-lisp:or collection-error-details
                                         common-lisp:null)
                         :accessor
                         %batch-get-collection-response-collection-error-details
                         :initform common-lisp:nil)
                        (collection-details :initarg :|collectionDetails| :type
                         (common-lisp:or collection-details common-lisp:null)
                         :accessor
                         %batch-get-collection-response-collection-details
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'batch-get-collection-response
                    'make-batch-get-collection-response))
 (common-lisp:defun make-batch-get-collection-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key collection-error-details
                     collection-details)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-get-collection-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-collection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-collection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'collection-details))
      (common-lisp:list
       (common-lisp:cons "collectionDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'collection-error-details))
      (common-lisp:list
       (common-lisp:cons "collectionErrorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-collection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-get-vpc-endpoint-request common-lisp:nil
                       ((ids :initarg :|ids| :type
                         (common-lisp:or vpc-endpoint-ids common-lisp:null)
                         :accessor %batch-get-vpc-endpoint-request-ids
                         :initform (common-lisp:error ":ids is required"))))
 (common-lisp:export
  (common-lisp:list 'batch-get-vpc-endpoint-request
                    'make-batch-get-vpc-endpoint-request))
 (common-lisp:defun make-batch-get-vpc-endpoint-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key ids)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-get-vpc-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-vpc-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-vpc-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-vpc-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-get-vpc-endpoint-response common-lisp:nil
                       ((vpc-endpoint-error-details :initarg
                         :|vpcEndpointErrorDetails| :type
                         (common-lisp:or vpc-endpoint-error-details
                                         common-lisp:null)
                         :accessor
                         %batch-get-vpc-endpoint-response-vpc-endpoint-error-details
                         :initform common-lisp:nil)
                        (vpc-endpoint-details :initarg :|vpcEndpointDetails|
                         :type
                         (common-lisp:or vpc-endpoint-details common-lisp:null)
                         :accessor
                         %batch-get-vpc-endpoint-response-vpc-endpoint-details
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'batch-get-vpc-endpoint-response
                    'make-batch-get-vpc-endpoint-response))
 (common-lisp:defun make-batch-get-vpc-endpoint-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-endpoint-error-details
                     vpc-endpoint-details)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-get-vpc-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-vpc-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-vpc-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-endpoint-details))
      (common-lisp:list
       (common-lisp:cons "vpcEndpointDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-endpoint-error-details))
      (common-lisp:list
       (common-lisp:cons "vpcEndpointErrorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-vpc-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass capacity-limits common-lisp:nil
                       ((max-search-capacity-in-ocu :initarg
                         :|maxSearchCapacityInOCU| :type
                         (common-lisp:or search-capacity-value
                                         common-lisp:null)
                         :accessor %capacity-limits-max-search-capacity-in-ocu
                         :initform common-lisp:nil)
                        (max-indexing-capacity-in-ocu :initarg
                         :|maxIndexingCapacityInOCU| :type
                         (common-lisp:or indexing-capacity-value
                                         common-lisp:null)
                         :accessor
                         %capacity-limits-max-indexing-capacity-in-ocu
                         :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'capacity-limits 'make-capacity-limits))
 (common-lisp:defun make-capacity-limits
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-search-capacity-in-ocu
                     max-indexing-capacity-in-ocu)
   (common-lisp:apply #'common-lisp:make-instance 'capacity-limits
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input capacity-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input capacity-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-indexing-capacity-in-ocu))
      (common-lisp:list
       (common-lisp:cons "maxIndexingCapacityInOCU"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-search-capacity-in-ocu))
      (common-lisp:list
       (common-lisp:cons "maxSearchCapacityInOCU"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input capacity-limits))
   common-lisp:nil))
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass collection-detail common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or collection-type common-lisp:null)
                         :accessor %collection-detail-type :initform
                         common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or collection-status common-lisp:null)
                         :accessor %collection-detail-status :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or collection-name common-lisp:null)
                         :accessor %collection-detail-name :initform
                         common-lisp:nil)
                        (last-modified-date :initarg :|lastModifiedDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %collection-detail-last-modified-date :initform
                         common-lisp:nil)
                        (kms-key-arn :initarg :|kmsKeyArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %collection-detail-kms-key-arn :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or collection-id common-lisp:null)
                         :accessor %collection-detail-id :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %collection-detail-description :initform
                         common-lisp:nil)
                        (dashboard-endpoint :initarg :|dashboardEndpoint| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %collection-detail-dashboard-endpoint :initform
                         common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %collection-detail-created-date :initform
                         common-lisp:nil)
                        (collection-endpoint :initarg :|collectionEndpoint|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %collection-detail-collection-endpoint
                         :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %collection-detail-arn :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'collection-detail 'make-collection-detail))
 (common-lisp:defun make-collection-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type status name last-modified-date
                     kms-key-arn id description dashboard-endpoint created-date
                     collection-endpoint arn)
   (common-lisp:apply #'common-lisp:make-instance 'collection-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input collection-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input collection-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'collection-endpoint))
      (common-lisp:list
       (common-lisp:cons "collectionEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-endpoint))
      (common-lisp:list
       (common-lisp:cons "dashboardEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "kmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input collection-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype collection-details ()
   '(trivial-types:proper-list collection-detail))
 (common-lisp:defun |make-collection-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list collection-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass collection-error-detail common-lisp:nil
                       ((name :initarg :|name| :type
                         (common-lisp:or collection-name common-lisp:null)
                         :accessor %collection-error-detail-name :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or collection-id common-lisp:null)
                         :accessor %collection-error-detail-id :initform
                         common-lisp:nil)
                        (error-message :initarg :|errorMessage| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %collection-error-detail-error-message :initform
                         common-lisp:nil)
                        (error-code :initarg :|errorCode| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %collection-error-detail-error-code :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'collection-error-detail 'make-collection-error-detail))
 (common-lisp:defun make-collection-error-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name id error-message error-code)
   (common-lisp:apply #'common-lisp:make-instance 'collection-error-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          collection-error-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          collection-error-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          collection-error-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype collection-error-details ()
   '(trivial-types:proper-list collection-error-detail))
 (common-lisp:defun |make-collection-error-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list collection-error-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass collection-filters common-lisp:nil
                       ((status :initarg :|status| :type
                         (common-lisp:or collection-status common-lisp:null)
                         :accessor %collection-filters-status :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or collection-name common-lisp:null)
                         :accessor %collection-filters-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'collection-filters 'make-collection-filters))
 (common-lisp:defun make-collection-filters
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status name)
   (common-lisp:apply #'common-lisp:make-instance 'collection-filters
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input collection-filters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input collection-filters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input collection-filters))
   common-lisp:nil))
(common-lisp:deftype collection-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype collection-ids ()
   '(trivial-types:proper-list collection-id))
 (common-lisp:defun |make-collection-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list collection-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype collection-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype collection-names ()
   '(trivial-types:proper-list collection-name))
 (common-lisp:defun |make-collection-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list collection-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype collection-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype collection-summaries ()
   '(trivial-types:proper-list collection-summary))
 (common-lisp:defun |make-collection-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list collection-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass collection-summary common-lisp:nil
                       ((status :initarg :|status| :type
                         (common-lisp:or collection-status common-lisp:null)
                         :accessor %collection-summary-status :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or collection-name common-lisp:null)
                         :accessor %collection-summary-name :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or collection-id common-lisp:null)
                         :accessor %collection-summary-id :initform
                         common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %collection-summary-arn :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'collection-summary 'make-collection-summary))
 (common-lisp:defun make-collection-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status name id arn)
   (common-lisp:apply #'common-lisp:make-instance 'collection-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input collection-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input collection-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input collection-summary))
   common-lisp:nil))
(common-lisp:deftype collection-type () 'common-lisp:string)
(common-lisp:deftype config-description () 'common-lisp:string)
(common-lisp:deftype config-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (opensearchserverless-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-access-policy-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or access-policy-type common-lisp:null)
                         :accessor %create-access-policy-request-type :initform
                         (common-lisp:error ":type is required"))
                        (policy :initarg :|policy| :type
                         (common-lisp:or policy-document common-lisp:null)
                         :accessor %create-access-policy-request-policy
                         :initform (common-lisp:error ":policy is required"))
                        (name :initarg :|name| :type
                         (common-lisp:or policy-name common-lisp:null)
                         :accessor %create-access-policy-request-name :initform
                         (common-lisp:error ":name is required"))
                        (description :initarg :|description| :type
                         (common-lisp:or policy-description common-lisp:null)
                         :accessor %create-access-policy-request-description
                         :initform common-lisp:nil)
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-access-policy-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-access-policy-request
                    'make-create-access-policy-request))
 (common-lisp:defun make-create-access-policy-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type policy name description
                     client-token)
   (common-lisp:apply #'common-lisp:make-instance 'create-access-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-access-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-access-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-access-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-access-policy-response common-lisp:nil
                       ((access-policy-detail :initarg :|accessPolicyDetail|
                         :type
                         (common-lisp:or access-policy-detail common-lisp:null)
                         :accessor
                         %create-access-policy-response-access-policy-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-access-policy-response
                    'make-create-access-policy-response))
 (common-lisp:defun make-create-access-policy-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key access-policy-detail)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-access-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-access-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-access-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-policy-detail))
      (common-lisp:list
       (common-lisp:cons "accessPolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-access-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-collection-detail common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or collection-type common-lisp:null)
                         :accessor %create-collection-detail-type :initform
                         common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or collection-status common-lisp:null)
                         :accessor %create-collection-detail-status :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or collection-name common-lisp:null)
                         :accessor %create-collection-detail-name :initform
                         common-lisp:nil)
                        (last-modified-date :initarg :|lastModifiedDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %create-collection-detail-last-modified-date :initform
                         common-lisp:nil)
                        (kms-key-arn :initarg :|kmsKeyArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-collection-detail-kms-key-arn :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or collection-id common-lisp:null)
                         :accessor %create-collection-detail-id :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-collection-detail-description :initform
                         common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %create-collection-detail-created-date :initform
                         common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-collection-detail-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-collection-detail 'make-create-collection-detail))
 (common-lisp:defun make-create-collection-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type status name last-modified-date
                     kms-key-arn id description created-date arn)
   (common-lisp:apply #'common-lisp:make-instance 'create-collection-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "kmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-collection-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or collection-type common-lisp:null)
                         :accessor %create-collection-request-type :initform
                         common-lisp:nil)
                        (tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-collection-request-tags :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or collection-name common-lisp:null)
                         :accessor %create-collection-request-name :initform
                         (common-lisp:error ":name is required"))
                        (description :initarg :|description| :type
                         (common-lisp:or
                          create-collection-request-description-string
                          common-lisp:null)
                         :accessor %create-collection-request-description
                         :initform common-lisp:nil)
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-collection-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-collection-request
                    'make-create-collection-request))
 (common-lisp:defun make-create-collection-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type tags name description client-token)
   (common-lisp:apply #'common-lisp:make-instance 'create-collection-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-request))
   common-lisp:nil))
(common-lisp:deftype create-collection-request-description-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-collection-response common-lisp:nil
                       ((create-collection-detail :initarg
                         :|createCollectionDetail| :type
                         (common-lisp:or create-collection-detail
                                         common-lisp:null)
                         :accessor
                         %create-collection-response-create-collection-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-collection-response
                    'make-create-collection-response))
 (common-lisp:defun make-create-collection-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key create-collection-detail)
   (common-lisp:apply #'common-lisp:make-instance 'create-collection-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-collection-detail))
      (common-lisp:list
       (common-lisp:cons "createCollectionDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-security-config-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or security-config-type common-lisp:null)
                         :accessor %create-security-config-request-type
                         :initform (common-lisp:error ":type is required"))
                        (saml-options :initarg :|samlOptions| :type
                         (common-lisp:or saml-config-options common-lisp:null)
                         :accessor %create-security-config-request-saml-options
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or config-name common-lisp:null)
                         :accessor %create-security-config-request-name
                         :initform (common-lisp:error ":name is required"))
                        (description :initarg :|description| :type
                         (common-lisp:or config-description common-lisp:null)
                         :accessor %create-security-config-request-description
                         :initform common-lisp:nil)
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-security-config-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-security-config-request
                    'make-create-security-config-request))
 (common-lisp:defun make-create-security-config-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type saml-options name description
                     client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-security-config-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-security-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-security-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'saml-options))
      (common-lisp:list
       (common-lisp:cons "samlOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-security-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-security-config-response common-lisp:nil
                       ((security-config-detail :initarg
                         :|securityConfigDetail| :type
                         (common-lisp:or security-config-detail
                                         common-lisp:null)
                         :accessor
                         %create-security-config-response-security-config-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-security-config-response
                    'make-create-security-config-response))
 (common-lisp:defun make-create-security-config-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key security-config-detail)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-security-config-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-security-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-security-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-config-detail))
      (common-lisp:list
       (common-lisp:cons "securityConfigDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-security-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-security-policy-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or security-policy-type common-lisp:null)
                         :accessor %create-security-policy-request-type
                         :initform (common-lisp:error ":type is required"))
                        (policy :initarg :|policy| :type
                         (common-lisp:or policy-document common-lisp:null)
                         :accessor %create-security-policy-request-policy
                         :initform (common-lisp:error ":policy is required"))
                        (name :initarg :|name| :type
                         (common-lisp:or policy-name common-lisp:null)
                         :accessor %create-security-policy-request-name
                         :initform (common-lisp:error ":name is required"))
                        (description :initarg :|description| :type
                         (common-lisp:or policy-description common-lisp:null)
                         :accessor %create-security-policy-request-description
                         :initform common-lisp:nil)
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-security-policy-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-security-policy-request
                    'make-create-security-policy-request))
 (common-lisp:defun make-create-security-policy-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type policy name description
                     client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-security-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-security-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-security-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-security-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-security-policy-response common-lisp:nil
                       ((security-policy-detail :initarg
                         :|securityPolicyDetail| :type
                         (common-lisp:or security-policy-detail
                                         common-lisp:null)
                         :accessor
                         %create-security-policy-response-security-policy-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-security-policy-response
                    'make-create-security-policy-response))
 (common-lisp:defun make-create-security-policy-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key security-policy-detail)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-security-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-security-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-security-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-policy-detail))
      (common-lisp:list
       (common-lisp:cons "securityPolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-security-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-vpc-endpoint-detail common-lisp:nil
                       ((status :initarg :|status| :type
                         (common-lisp:or vpc-endpoint-status common-lisp:null)
                         :accessor %create-vpc-endpoint-detail-status :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or vpc-endpoint-name common-lisp:null)
                         :accessor %create-vpc-endpoint-detail-name :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or vpc-endpoint-id common-lisp:null)
                         :accessor %create-vpc-endpoint-detail-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-vpc-endpoint-detail
                    'make-create-vpc-endpoint-detail))
 (common-lisp:defun make-create-vpc-endpoint-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status name id)
   (common-lisp:apply #'common-lisp:make-instance 'create-vpc-endpoint-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-vpc-endpoint-request common-lisp:nil
                       ((vpc-id :initarg :|vpcId| :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %create-vpc-endpoint-request-vpc-id :initform
                         (common-lisp:error ":vpcid is required"))
                        (subnet-ids :initarg :|subnetIds| :type
                         (common-lisp:or subnet-ids common-lisp:null) :accessor
                         %create-vpc-endpoint-request-subnet-ids :initform
                         (common-lisp:error ":subnetids is required"))
                        (security-group-ids :initarg :|securityGroupIds| :type
                         (common-lisp:or security-group-ids common-lisp:null)
                         :accessor
                         %create-vpc-endpoint-request-security-group-ids
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or vpc-endpoint-name common-lisp:null)
                         :accessor %create-vpc-endpoint-request-name :initform
                         (common-lisp:error ":name is required"))
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-vpc-endpoint-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-vpc-endpoint-request
                    'make-create-vpc-endpoint-request))
 (common-lisp:defun make-create-vpc-endpoint-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-id subnet-ids security-group-ids name
                     client-token)
   (common-lisp:apply #'common-lisp:make-instance 'create-vpc-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "securityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "subnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "vpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-vpc-endpoint-response common-lisp:nil
                       ((create-vpc-endpoint-detail :initarg
                         :|createVpcEndpointDetail| :type
                         (common-lisp:or create-vpc-endpoint-detail
                                         common-lisp:null)
                         :accessor
                         %create-vpc-endpoint-response-create-vpc-endpoint-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-vpc-endpoint-response
                    'make-create-vpc-endpoint-response))
 (common-lisp:defun make-create-vpc-endpoint-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key create-vpc-endpoint-detail)
   (common-lisp:apply #'common-lisp:make-instance 'create-vpc-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-vpc-endpoint-detail))
      (common-lisp:list
       (common-lisp:cons "createVpcEndpointDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-access-policy-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or access-policy-type common-lisp:null)
                         :accessor %delete-access-policy-request-type :initform
                         (common-lisp:error ":type is required"))
                        (name :initarg :|name| :type
                         (common-lisp:or policy-name common-lisp:null)
                         :accessor %delete-access-policy-request-name :initform
                         (common-lisp:error ":name is required"))
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %delete-access-policy-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-access-policy-request
                    'make-delete-access-policy-request))
 (common-lisp:defun make-delete-access-policy-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type name client-token)
   (common-lisp:apply #'common-lisp:make-instance 'delete-access-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-access-policy-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-access-policy-response
                    'make-delete-access-policy-response))
 (common-lisp:defun make-delete-access-policy-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-access-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-collection-detail common-lisp:nil
                       ((status :initarg :|status| :type
                         (common-lisp:or collection-status common-lisp:null)
                         :accessor %delete-collection-detail-status :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or collection-name common-lisp:null)
                         :accessor %delete-collection-detail-name :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or collection-id common-lisp:null)
                         :accessor %delete-collection-detail-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-collection-detail 'make-delete-collection-detail))
 (common-lisp:defun make-delete-collection-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status name id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-collection-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-collection-request common-lisp:nil
                       ((id :initarg :|id| :type
                         (common-lisp:or collection-id common-lisp:null)
                         :accessor %delete-collection-request-id :initform
                         (common-lisp:error ":id is required"))
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %delete-collection-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-collection-request
                    'make-delete-collection-request))
 (common-lisp:defun make-delete-collection-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key id client-token)
   (common-lisp:apply #'common-lisp:make-instance 'delete-collection-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-collection-response common-lisp:nil
                       ((delete-collection-detail :initarg
                         :|deleteCollectionDetail| :type
                         (common-lisp:or delete-collection-detail
                                         common-lisp:null)
                         :accessor
                         %delete-collection-response-delete-collection-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-collection-response
                    'make-delete-collection-response))
 (common-lisp:defun make-delete-collection-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key delete-collection-detail)
   (common-lisp:apply #'common-lisp:make-instance 'delete-collection-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'delete-collection-detail))
      (common-lisp:list
       (common-lisp:cons "deleteCollectionDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-security-config-request common-lisp:nil
                       ((id :initarg :|id| :type
                         (common-lisp:or security-config-id common-lisp:null)
                         :accessor %delete-security-config-request-id :initform
                         (common-lisp:error ":id is required"))
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %delete-security-config-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-security-config-request
                    'make-delete-security-config-request))
 (common-lisp:defun make-delete-security-config-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key id client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-security-config-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-security-config-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-security-config-response
                    'make-delete-security-config-response))
 (common-lisp:defun make-delete-security-config-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-security-config-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-security-policy-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or security-policy-type common-lisp:null)
                         :accessor %delete-security-policy-request-type
                         :initform (common-lisp:error ":type is required"))
                        (name :initarg :|name| :type
                         (common-lisp:or policy-name common-lisp:null)
                         :accessor %delete-security-policy-request-name
                         :initform (common-lisp:error ":name is required"))
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %delete-security-policy-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-security-policy-request
                    'make-delete-security-policy-request))
 (common-lisp:defun make-delete-security-policy-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type name client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-security-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-security-policy-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-security-policy-response
                    'make-delete-security-policy-response))
 (common-lisp:defun make-delete-security-policy-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-security-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-vpc-endpoint-detail common-lisp:nil
                       ((status :initarg :|status| :type
                         (common-lisp:or vpc-endpoint-status common-lisp:null)
                         :accessor %delete-vpc-endpoint-detail-status :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or vpc-endpoint-name common-lisp:null)
                         :accessor %delete-vpc-endpoint-detail-name :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or vpc-endpoint-id common-lisp:null)
                         :accessor %delete-vpc-endpoint-detail-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-endpoint-detail
                    'make-delete-vpc-endpoint-detail))
 (common-lisp:defun make-delete-vpc-endpoint-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status name id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-vpc-endpoint-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-vpc-endpoint-request common-lisp:nil
                       ((id :initarg :|id| :type
                         (common-lisp:or vpc-endpoint-id common-lisp:null)
                         :accessor %delete-vpc-endpoint-request-id :initform
                         (common-lisp:error ":id is required"))
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %delete-vpc-endpoint-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-endpoint-request
                    'make-delete-vpc-endpoint-request))
 (common-lisp:defun make-delete-vpc-endpoint-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key id client-token)
   (common-lisp:apply #'common-lisp:make-instance 'delete-vpc-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-vpc-endpoint-response common-lisp:nil
                       ((delete-vpc-endpoint-detail :initarg
                         :|deleteVpcEndpointDetail| :type
                         (common-lisp:or delete-vpc-endpoint-detail
                                         common-lisp:null)
                         :accessor
                         %delete-vpc-endpoint-response-delete-vpc-endpoint-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-endpoint-response
                    'make-delete-vpc-endpoint-response))
 (common-lisp:defun make-delete-vpc-endpoint-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key delete-vpc-endpoint-detail)
   (common-lisp:apply #'common-lisp:make-instance 'delete-vpc-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'delete-vpc-endpoint-detail))
      (common-lisp:list
       (common-lisp:cons "deleteVpcEndpointDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass document common-lisp:nil common-lisp:nil)
 (common-lisp:export (common-lisp:list 'document 'make-document))
 (common-lisp:defun make-document
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'document
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input document))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input document))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input document))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-access-policy-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or access-policy-type common-lisp:null)
                         :accessor %get-access-policy-request-type :initform
                         (common-lisp:error ":type is required"))
                        (name :initarg :|name| :type
                         (common-lisp:or policy-name common-lisp:null)
                         :accessor %get-access-policy-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-access-policy-request
                    'make-get-access-policy-request))
 (common-lisp:defun make-get-access-policy-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type name)
   (common-lisp:apply #'common-lisp:make-instance 'get-access-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-access-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-access-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-access-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-access-policy-response common-lisp:nil
                       ((access-policy-detail :initarg :|accessPolicyDetail|
                         :type
                         (common-lisp:or access-policy-detail common-lisp:null)
                         :accessor
                         %get-access-policy-response-access-policy-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-access-policy-response
                    'make-get-access-policy-response))
 (common-lisp:defun make-get-access-policy-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key access-policy-detail)
   (common-lisp:apply #'common-lisp:make-instance 'get-access-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-access-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-access-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-policy-detail))
      (common-lisp:list
       (common-lisp:cons "accessPolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-access-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-account-settings-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'get-account-settings-request
                    'make-get-account-settings-request))
 (common-lisp:defun make-get-account-settings-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'get-account-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-account-settings-response common-lisp:nil
                       ((account-settings-detail :initarg
                         :|accountSettingsDetail| :type
                         (common-lisp:or account-settings-detail
                                         common-lisp:null)
                         :accessor
                         %get-account-settings-response-account-settings-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-account-settings-response
                    'make-get-account-settings-response))
 (common-lisp:defun make-get-account-settings-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key account-settings-detail)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-account-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-settings-detail))
      (common-lisp:list
       (common-lisp:cons "accountSettingsDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-policies-stats-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'get-policies-stats-request
                    'make-get-policies-stats-request))
 (common-lisp:defun make-get-policies-stats-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'get-policies-stats-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-policies-stats-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-policies-stats-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-policies-stats-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-policies-stats-response common-lisp:nil
                       ((total-policy-count :initarg :total-policy-count :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %get-policies-stats-response-total-policy-count
                         :initform common-lisp:nil)
                        (security-policy-stats :initarg :security-policy-stats
                         :type
                         (common-lisp:or security-policy-stats
                                         common-lisp:null)
                         :accessor
                         %get-policies-stats-response-security-policy-stats
                         :initform common-lisp:nil)
                        (security-config-stats :initarg :security-config-stats
                         :type
                         (common-lisp:or security-config-stats
                                         common-lisp:null)
                         :accessor
                         %get-policies-stats-response-security-config-stats
                         :initform common-lisp:nil)
                        (access-policy-stats :initarg :access-policy-stats
                         :type
                         (common-lisp:or access-policy-stats common-lisp:null)
                         :accessor
                         %get-policies-stats-response-access-policy-stats
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-policies-stats-response
                    'make-get-policies-stats-response))
 (common-lisp:defun make-get-policies-stats-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key total-policy-count security-policy-stats
                     security-config-stats access-policy-stats)
   (common-lisp:apply #'common-lisp:make-instance 'get-policies-stats-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-policies-stats-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-policies-stats-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-policy-stats))
      (common-lisp:list
       (common-lisp:cons "AccessPolicyStats"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-config-stats))
      (common-lisp:list
       (common-lisp:cons "SecurityConfigStats"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-policy-stats))
      (common-lisp:list
       (common-lisp:cons "SecurityPolicyStats"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-policy-count))
      (common-lisp:list
       (common-lisp:cons "TotalPolicyCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-policies-stats-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-security-config-request common-lisp:nil
                       ((id :initarg :|id| :type
                         (common-lisp:or security-config-id common-lisp:null)
                         :accessor %get-security-config-request-id :initform
                         (common-lisp:error ":id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-security-config-request
                    'make-get-security-config-request))
 (common-lisp:defun make-get-security-config-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key id)
   (common-lisp:apply #'common-lisp:make-instance 'get-security-config-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-security-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-security-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-security-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-security-config-response common-lisp:nil
                       ((security-config-detail :initarg
                         :|securityConfigDetail| :type
                         (common-lisp:or security-config-detail
                                         common-lisp:null)
                         :accessor
                         %get-security-config-response-security-config-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-security-config-response
                    'make-get-security-config-response))
 (common-lisp:defun make-get-security-config-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key security-config-detail)
   (common-lisp:apply #'common-lisp:make-instance 'get-security-config-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-security-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-security-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-config-detail))
      (common-lisp:list
       (common-lisp:cons "securityConfigDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-security-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-security-policy-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or security-policy-type common-lisp:null)
                         :accessor %get-security-policy-request-type :initform
                         (common-lisp:error ":type is required"))
                        (name :initarg :|name| :type
                         (common-lisp:or policy-name common-lisp:null)
                         :accessor %get-security-policy-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-security-policy-request
                    'make-get-security-policy-request))
 (common-lisp:defun make-get-security-policy-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type name)
   (common-lisp:apply #'common-lisp:make-instance 'get-security-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-security-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-security-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-security-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-security-policy-response common-lisp:nil
                       ((security-policy-detail :initarg
                         :|securityPolicyDetail| :type
                         (common-lisp:or security-policy-detail
                                         common-lisp:null)
                         :accessor
                         %get-security-policy-response-security-policy-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-security-policy-response
                    'make-get-security-policy-response))
 (common-lisp:defun make-get-security-policy-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key security-policy-detail)
   (common-lisp:apply #'common-lisp:make-instance 'get-security-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-security-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-security-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-policy-detail))
      (common-lisp:list
       (common-lisp:cons "securityPolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-security-policy-response))
   common-lisp:nil))
(common-lisp:deftype indexing-capacity-value () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (opensearchserverless-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-access-policies-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or access-policy-type common-lisp:null)
                         :accessor %list-access-policies-request-type :initform
                         (common-lisp:error ":type is required"))
                        (resource :initarg :|resource| :type
                         (common-lisp:or
                          list-access-policies-request-resource-list
                          common-lisp:null)
                         :accessor %list-access-policies-request-resource
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-access-policies-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or
                          list-access-policies-request-max-results-integer
                          common-lisp:null)
                         :accessor %list-access-policies-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-access-policies-request
                    'make-list-access-policies-request))
 (common-lisp:defun make-list-access-policies-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type resource next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance 'list-access-policies-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-access-policies-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-access-policies-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource))
      (common-lisp:list
       (common-lisp:cons "resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-access-policies-request))
   common-lisp:nil))
(common-lisp:deftype list-access-policies-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype list-access-policies-request-resource-list ()
   '(trivial-types:proper-list resource))
 (common-lisp:defun |make-list-access-policies-request-resource-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-access-policies-response common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-access-policies-response-next-token :initform
                         common-lisp:nil)
                        (access-policy-summaries :initarg
                         :|accessPolicySummaries| :type
                         (common-lisp:or access-policy-summaries
                                         common-lisp:null)
                         :accessor
                         %list-access-policies-response-access-policy-summaries
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-access-policies-response
                    'make-list-access-policies-response))
 (common-lisp:defun make-list-access-policies-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token access-policy-summaries)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-access-policies-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-access-policies-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-access-policies-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-policy-summaries))
      (common-lisp:list
       (common-lisp:cons "accessPolicySummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-access-policies-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-collections-request common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-collections-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or
                          list-collections-request-max-results-integer
                          common-lisp:null)
                         :accessor %list-collections-request-max-results
                         :initform common-lisp:nil)
                        (collection-filters :initarg :|collectionFilters| :type
                         (common-lisp:or collection-filters common-lisp:null)
                         :accessor %list-collections-request-collection-filters
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-collections-request 'make-list-collections-request))
 (common-lisp:defun make-list-collections-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results
                     collection-filters)
   (common-lisp:apply #'common-lisp:make-instance 'list-collections-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-collections-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-collections-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'collection-filters))
      (common-lisp:list
       (common-lisp:cons "collectionFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-collections-request))
   common-lisp:nil))
(common-lisp:deftype list-collections-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-collections-response common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-collections-response-next-token :initform
                         common-lisp:nil)
                        (collection-summaries :initarg :|collectionSummaries|
                         :type
                         (common-lisp:or collection-summaries common-lisp:null)
                         :accessor
                         %list-collections-response-collection-summaries
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-collections-response
                    'make-list-collections-response))
 (common-lisp:defun make-list-collections-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token collection-summaries)
   (common-lisp:apply #'common-lisp:make-instance 'list-collections-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-collections-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-collections-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'collection-summaries))
      (common-lisp:list
       (common-lisp:cons "collectionSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-collections-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-security-configs-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or security-config-type common-lisp:null)
                         :accessor %list-security-configs-request-type
                         :initform (common-lisp:error ":type is required"))
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-security-configs-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or
                          list-security-configs-request-max-results-integer
                          common-lisp:null)
                         :accessor %list-security-configs-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-security-configs-request
                    'make-list-security-configs-request))
 (common-lisp:defun make-list-security-configs-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-security-configs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-security-configs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-security-configs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-security-configs-request))
   common-lisp:nil))
(common-lisp:deftype list-security-configs-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-security-configs-response common-lisp:nil
                       ((security-config-summaries :initarg
                         :|securityConfigSummaries| :type
                         (common-lisp:or security-config-summaries
                                         common-lisp:null)
                         :accessor
                         %list-security-configs-response-security-config-summaries
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-security-configs-response-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-security-configs-response
                    'make-list-security-configs-response))
 (common-lisp:defun make-list-security-configs-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key security-config-summaries next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-security-configs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-security-configs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-security-configs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-config-summaries))
      (common-lisp:list
       (common-lisp:cons "securityConfigSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-security-configs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-security-policies-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or security-policy-type common-lisp:null)
                         :accessor %list-security-policies-request-type
                         :initform (common-lisp:error ":type is required"))
                        (resource :initarg :|resource| :type
                         (common-lisp:or
                          list-security-policies-request-resource-list
                          common-lisp:null)
                         :accessor %list-security-policies-request-resource
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-security-policies-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or
                          list-security-policies-request-max-results-integer
                          common-lisp:null)
                         :accessor %list-security-policies-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-security-policies-request
                    'make-list-security-policies-request))
 (common-lisp:defun make-list-security-policies-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type resource next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-security-policies-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-security-policies-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-security-policies-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource))
      (common-lisp:list
       (common-lisp:cons "resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-security-policies-request))
   common-lisp:nil))
(common-lisp:deftype list-security-policies-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype list-security-policies-request-resource-list ()
   '(trivial-types:proper-list resource))
 (common-lisp:defun |make-list-security-policies-request-resource-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-security-policies-response common-lisp:nil
                       ((security-policy-summaries :initarg
                         :|securityPolicySummaries| :type
                         (common-lisp:or security-policy-summaries
                                         common-lisp:null)
                         :accessor
                         %list-security-policies-response-security-policy-summaries
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-security-policies-response-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-security-policies-response
                    'make-list-security-policies-response))
 (common-lisp:defun make-list-security-policies-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key security-policy-summaries next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-security-policies-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-security-policies-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-security-policies-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-policy-summaries))
      (common-lisp:list
       (common-lisp:cons "securityPolicySummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-security-policies-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %list-tags-for-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %list-tags-for-resource-response-tags :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defun make-list-tags-for-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-vpc-endpoints-request common-lisp:nil
                       ((vpc-endpoint-filters :initarg :|vpcEndpointFilters|
                         :type
                         (common-lisp:or vpc-endpoint-filters common-lisp:null)
                         :accessor
                         %list-vpc-endpoints-request-vpc-endpoint-filters
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-vpc-endpoints-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or
                          list-vpc-endpoints-request-max-results-integer
                          common-lisp:null)
                         :accessor %list-vpc-endpoints-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-vpc-endpoints-request
                    'make-list-vpc-endpoints-request))
 (common-lisp:defun make-list-vpc-endpoints-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-endpoint-filters next-token
                     max-results)
   (common-lisp:apply #'common-lisp:make-instance 'list-vpc-endpoints-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-vpc-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-vpc-endpoints-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-endpoint-filters))
      (common-lisp:list
       (common-lisp:cons "vpcEndpointFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-vpc-endpoints-request))
   common-lisp:nil))
(common-lisp:deftype list-vpc-endpoints-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-vpc-endpoints-response common-lisp:nil
                       ((vpc-endpoint-summaries :initarg
                         :|vpcEndpointSummaries| :type
                         (common-lisp:or vpc-endpoint-summaries
                                         common-lisp:null)
                         :accessor
                         %list-vpc-endpoints-response-vpc-endpoint-summaries
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-vpc-endpoints-response-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-vpc-endpoints-response
                    'make-list-vpc-endpoints-response))
 (common-lisp:defun make-list-vpc-endpoints-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-endpoint-summaries next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-vpc-endpoints-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-vpc-endpoints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-vpc-endpoints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-endpoint-summaries))
      (common-lisp:list
       (common-lisp:cons "vpcEndpointSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-vpc-endpoints-response))
   common-lisp:nil))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition ocu-limit-exceeded-exception
     (opensearchserverless-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       ocu-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'ocu-limit-exceeded-exception
                    'ocu-limit-exceeded-exception-message)))
(common-lisp:deftype policy-description () 'common-lisp:string)
(common-lisp:deftype policy-document () 'common-lisp:string)
(common-lisp:deftype policy-name () 'common-lisp:string)
(common-lisp:deftype policy-version () 'common-lisp:string)
(common-lisp:deftype resource () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (opensearchserverless-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass saml-config-options common-lisp:nil
                       ((user-attribute :initarg :|userAttribute| :type
                         (common-lisp:or |samlUserAttribute| common-lisp:null)
                         :accessor %saml-config-options-user-attribute
                         :initform common-lisp:nil)
                        (session-timeout :initarg :|sessionTimeout| :type
                         (common-lisp:or
                          saml-config-options-session-timeout-integer
                          common-lisp:null)
                         :accessor %saml-config-options-session-timeout
                         :initform common-lisp:nil)
                        (metadata :initarg :|metadata| :type
                         (common-lisp:or |samlMetadata| common-lisp:null)
                         :accessor %saml-config-options-metadata :initform
                         (common-lisp:error ":metadata is required"))
                        (group-attribute :initarg :|groupAttribute| :type
                         (common-lisp:or |samlGroupAttribute| common-lisp:null)
                         :accessor %saml-config-options-group-attribute
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'saml-config-options 'make-saml-config-options))
 (common-lisp:defun make-saml-config-options
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key user-attribute session-timeout metadata
                     group-attribute)
   (common-lisp:apply #'common-lisp:make-instance 'saml-config-options
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input saml-config-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input saml-config-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-attribute))
      (common-lisp:list
       (common-lisp:cons "groupAttribute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-timeout))
      (common-lisp:list
       (common-lisp:cons "sessionTimeout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-attribute))
      (common-lisp:list
       (common-lisp:cons "userAttribute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input saml-config-options))
   common-lisp:nil))
(common-lisp:deftype saml-config-options-session-timeout-integer ()
  'common-lisp:integer)
(common-lisp:deftype search-capacity-value () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass security-config-detail common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or security-config-type common-lisp:null)
                         :accessor %security-config-detail-type :initform
                         common-lisp:nil)
                        (saml-options :initarg :|samlOptions| :type
                         (common-lisp:or saml-config-options common-lisp:null)
                         :accessor %security-config-detail-saml-options
                         :initform common-lisp:nil)
                        (last-modified-date :initarg :|lastModifiedDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %security-config-detail-last-modified-date :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or security-config-id common-lisp:null)
                         :accessor %security-config-detail-id :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or config-description common-lisp:null)
                         :accessor %security-config-detail-description
                         :initform common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %security-config-detail-created-date :initform
                         common-lisp:nil)
                        (config-version :initarg :|configVersion| :type
                         (common-lisp:or policy-version common-lisp:null)
                         :accessor %security-config-detail-config-version
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'security-config-detail 'make-security-config-detail))
 (common-lisp:defun make-security-config-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type saml-options last-modified-date id
                     description created-date config-version)
   (common-lisp:apply #'common-lisp:make-instance 'security-config-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-config-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-config-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config-version))
      (common-lisp:list
       (common-lisp:cons "configVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'saml-options))
      (common-lisp:list
       (common-lisp:cons "samlOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-config-detail))
   common-lisp:nil))
(common-lisp:deftype security-config-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass security-config-stats common-lisp:nil
                       ((saml-config-count :initarg :saml-config-count :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %security-config-stats-saml-config-count :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'security-config-stats 'make-security-config-stats))
 (common-lisp:defun make-security-config-stats
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key saml-config-count)
   (common-lisp:apply #'common-lisp:make-instance 'security-config-stats
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-config-stats))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-config-stats))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'saml-config-count))
      (common-lisp:list
       (common-lisp:cons "SamlConfigCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-config-stats))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype security-config-summaries ()
   '(trivial-types:proper-list security-config-summary))
 (common-lisp:defun |make-security-config-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-config-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass security-config-summary common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or security-config-type common-lisp:null)
                         :accessor %security-config-summary-type :initform
                         common-lisp:nil)
                        (last-modified-date :initarg :|lastModifiedDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %security-config-summary-last-modified-date :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or security-config-id common-lisp:null)
                         :accessor %security-config-summary-id :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or config-description common-lisp:null)
                         :accessor %security-config-summary-description
                         :initform common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %security-config-summary-created-date :initform
                         common-lisp:nil)
                        (config-version :initarg :|configVersion| :type
                         (common-lisp:or policy-version common-lisp:null)
                         :accessor %security-config-summary-config-version
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'security-config-summary 'make-security-config-summary))
 (common-lisp:defun make-security-config-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type last-modified-date id description
                     created-date config-version)
   (common-lisp:apply #'common-lisp:make-instance 'security-config-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-config-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-config-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config-version))
      (common-lisp:list
       (common-lisp:cons "configVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-config-summary))
   common-lisp:nil))
(common-lisp:deftype security-config-type () 'common-lisp:string)
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-group-ids ()
   '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-security-group-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass security-policy-detail common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or security-policy-type common-lisp:null)
                         :accessor %security-policy-detail-type :initform
                         common-lisp:nil)
                        (policy-version :initarg :|policyVersion| :type
                         (common-lisp:or policy-version common-lisp:null)
                         :accessor %security-policy-detail-policy-version
                         :initform common-lisp:nil)
                        (policy :initarg :|policy| :type
                         (common-lisp:or document common-lisp:null) :accessor
                         %security-policy-detail-policy :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or policy-name common-lisp:null)
                         :accessor %security-policy-detail-name :initform
                         common-lisp:nil)
                        (last-modified-date :initarg :|lastModifiedDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %security-policy-detail-last-modified-date :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or policy-description common-lisp:null)
                         :accessor %security-policy-detail-description
                         :initform common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %security-policy-detail-created-date :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'security-policy-detail 'make-security-policy-detail))
 (common-lisp:defun make-security-policy-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type policy-version policy name
                     last-modified-date description created-date)
   (common-lisp:apply #'common-lisp:make-instance 'security-policy-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass security-policy-stats common-lisp:nil
                       ((network-policy-count :initarg :network-policy-count
                         :type (common-lisp:or long common-lisp:null) :accessor
                         %security-policy-stats-network-policy-count :initform
                         common-lisp:nil)
                        (encryption-policy-count :initarg
                         :encryption-policy-count :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %security-policy-stats-encryption-policy-count
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'security-policy-stats 'make-security-policy-stats))
 (common-lisp:defun make-security-policy-stats
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key network-policy-count
                     encryption-policy-count)
   (common-lisp:apply #'common-lisp:make-instance 'security-policy-stats
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-stats))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-stats))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-policy-count))
      (common-lisp:list
       (common-lisp:cons "EncryptionPolicyCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-policy-count))
      (common-lisp:list
       (common-lisp:cons "NetworkPolicyCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-stats))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype security-policy-summaries ()
   '(trivial-types:proper-list security-policy-summary))
 (common-lisp:defun |make-security-policy-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-policy-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass security-policy-summary common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or security-policy-type common-lisp:null)
                         :accessor %security-policy-summary-type :initform
                         common-lisp:nil)
                        (policy-version :initarg :|policyVersion| :type
                         (common-lisp:or policy-version common-lisp:null)
                         :accessor %security-policy-summary-policy-version
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or policy-name common-lisp:null)
                         :accessor %security-policy-summary-name :initform
                         common-lisp:nil)
                        (last-modified-date :initarg :|lastModifiedDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %security-policy-summary-last-modified-date :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or policy-description common-lisp:null)
                         :accessor %security-policy-summary-description
                         :initform common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %security-policy-summary-created-date :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'security-policy-summary 'make-security-policy-summary))
 (common-lisp:defun make-security-policy-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type policy-version name
                     last-modified-date description created-date)
   (common-lisp:apply #'common-lisp:make-instance 'security-policy-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-summary))
   common-lisp:nil))
(common-lisp:deftype security-policy-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (opensearchserverless-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)
      (quota-code :initarg :|quotaCode| :initform common-lisp:nil :reader
       service-quota-exceeded-exception-quota-code)
      (resource-id :initarg :|resourceId| :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-id)
      (resource-type :initarg :|resourceType| :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-type)
      (service-code :initarg :|serviceCode| :initform common-lisp:nil :reader
       service-quota-exceeded-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message
                    'service-quota-exceeded-exception-quota-code
                    'service-quota-exceeded-exception-resource-id
                    'service-quota-exceeded-exception-resource-type
                    'service-quota-exceeded-exception-service-code)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnet-ids () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun |make-subnet-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((value :initarg :|value| :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         %tag-value :initform
                         (common-lisp:error ":value is required"))
                        (key :initarg :|key| :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         %tag-key :initform
                         (common-lisp:error ":key is required"))))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defun make-tag
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value key)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %tag-resource-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defun make-tag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :|tagKeys| :type
                         (common-lisp:or tag-keys common-lisp:null) :accessor
                         %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tagkeys is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %untag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "tagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defun make-untag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-access-policy-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or access-policy-type common-lisp:null)
                         :accessor %update-access-policy-request-type :initform
                         (common-lisp:error ":type is required"))
                        (policy-version :initarg :|policyVersion| :type
                         (common-lisp:or policy-version common-lisp:null)
                         :accessor %update-access-policy-request-policy-version
                         :initform
                         (common-lisp:error ":policyversion is required"))
                        (policy :initarg :|policy| :type
                         (common-lisp:or policy-document common-lisp:null)
                         :accessor %update-access-policy-request-policy
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or policy-name common-lisp:null)
                         :accessor %update-access-policy-request-name :initform
                         (common-lisp:error ":name is required"))
                        (description :initarg :|description| :type
                         (common-lisp:or policy-description common-lisp:null)
                         :accessor %update-access-policy-request-description
                         :initform common-lisp:nil)
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %update-access-policy-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-access-policy-request
                    'make-update-access-policy-request))
 (common-lisp:defun make-update-access-policy-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type policy-version policy name
                     description client-token)
   (common-lisp:apply #'common-lisp:make-instance 'update-access-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-access-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-access-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-access-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-access-policy-response common-lisp:nil
                       ((access-policy-detail :initarg :|accessPolicyDetail|
                         :type
                         (common-lisp:or access-policy-detail common-lisp:null)
                         :accessor
                         %update-access-policy-response-access-policy-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-access-policy-response
                    'make-update-access-policy-response))
 (common-lisp:defun make-update-access-policy-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key access-policy-detail)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-access-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-access-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-access-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-policy-detail))
      (common-lisp:list
       (common-lisp:cons "accessPolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-access-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-account-settings-request common-lisp:nil
                       ((capacity-limits :initarg :|capacityLimits| :type
                         (common-lisp:or capacity-limits common-lisp:null)
                         :accessor
                         %update-account-settings-request-capacity-limits
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-account-settings-request
                    'make-update-account-settings-request))
 (common-lisp:defun make-update-account-settings-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key capacity-limits)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-account-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity-limits))
      (common-lisp:list
       (common-lisp:cons "capacityLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-account-settings-response common-lisp:nil
                       ((account-settings-detail :initarg
                         :|accountSettingsDetail| :type
                         (common-lisp:or account-settings-detail
                                         common-lisp:null)
                         :accessor
                         %update-account-settings-response-account-settings-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-account-settings-response
                    'make-update-account-settings-response))
 (common-lisp:defun make-update-account-settings-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key account-settings-detail)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-account-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-settings-detail))
      (common-lisp:list
       (common-lisp:cons "accountSettingsDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-collection-detail common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or collection-type common-lisp:null)
                         :accessor %update-collection-detail-type :initform
                         common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or collection-status common-lisp:null)
                         :accessor %update-collection-detail-status :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or collection-name common-lisp:null)
                         :accessor %update-collection-detail-name :initform
                         common-lisp:nil)
                        (last-modified-date :initarg :|lastModifiedDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %update-collection-detail-last-modified-date :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or collection-id common-lisp:null)
                         :accessor %update-collection-detail-id :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-collection-detail-description :initform
                         common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %update-collection-detail-created-date :initform
                         common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-collection-detail-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-collection-detail 'make-update-collection-detail))
 (common-lisp:defun make-update-collection-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type status name last-modified-date id
                     description created-date arn)
   (common-lisp:apply #'common-lisp:make-instance 'update-collection-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-collection-request common-lisp:nil
                       ((id :initarg :|id| :type
                         (common-lisp:or collection-id common-lisp:null)
                         :accessor %update-collection-request-id :initform
                         (common-lisp:error ":id is required"))
                        (description :initarg :|description| :type
                         (common-lisp:or
                          update-collection-request-description-string
                          common-lisp:null)
                         :accessor %update-collection-request-description
                         :initform common-lisp:nil)
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %update-collection-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-collection-request
                    'make-update-collection-request))
 (common-lisp:defun make-update-collection-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key id description client-token)
   (common-lisp:apply #'common-lisp:make-instance 'update-collection-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-request))
   common-lisp:nil))
(common-lisp:deftype update-collection-request-description-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass update-collection-response common-lisp:nil
                       ((update-collection-detail :initarg
                         :|updateCollectionDetail| :type
                         (common-lisp:or update-collection-detail
                                         common-lisp:null)
                         :accessor
                         %update-collection-response-update-collection-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-collection-response
                    'make-update-collection-response))
 (common-lisp:defun make-update-collection-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key update-collection-detail)
   (common-lisp:apply #'common-lisp:make-instance 'update-collection-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-collection-detail))
      (common-lisp:list
       (common-lisp:cons "updateCollectionDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-security-config-request common-lisp:nil
                       ((saml-options :initarg :|samlOptions| :type
                         (common-lisp:or saml-config-options common-lisp:null)
                         :accessor %update-security-config-request-saml-options
                         :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or security-config-id common-lisp:null)
                         :accessor %update-security-config-request-id :initform
                         (common-lisp:error ":id is required"))
                        (description :initarg :|description| :type
                         (common-lisp:or config-description common-lisp:null)
                         :accessor %update-security-config-request-description
                         :initform common-lisp:nil)
                        (config-version :initarg :|configVersion| :type
                         (common-lisp:or policy-version common-lisp:null)
                         :accessor
                         %update-security-config-request-config-version
                         :initform
                         (common-lisp:error ":configversion is required"))
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %update-security-config-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-security-config-request
                    'make-update-security-config-request))
 (common-lisp:defun make-update-security-config-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key saml-options id description
                     config-version client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-security-config-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-security-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-security-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config-version))
      (common-lisp:list
       (common-lisp:cons "configVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'saml-options))
      (common-lisp:list
       (common-lisp:cons "samlOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-security-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-security-config-response common-lisp:nil
                       ((security-config-detail :initarg
                         :|securityConfigDetail| :type
                         (common-lisp:or security-config-detail
                                         common-lisp:null)
                         :accessor
                         %update-security-config-response-security-config-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-security-config-response
                    'make-update-security-config-response))
 (common-lisp:defun make-update-security-config-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key security-config-detail)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-security-config-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-security-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-security-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-config-detail))
      (common-lisp:list
       (common-lisp:cons "securityConfigDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-security-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-security-policy-request common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or security-policy-type common-lisp:null)
                         :accessor %update-security-policy-request-type
                         :initform (common-lisp:error ":type is required"))
                        (policy-version :initarg :|policyVersion| :type
                         (common-lisp:or policy-version common-lisp:null)
                         :accessor
                         %update-security-policy-request-policy-version
                         :initform
                         (common-lisp:error ":policyversion is required"))
                        (policy :initarg :|policy| :type
                         (common-lisp:or policy-document common-lisp:null)
                         :accessor %update-security-policy-request-policy
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or policy-name common-lisp:null)
                         :accessor %update-security-policy-request-name
                         :initform (common-lisp:error ":name is required"))
                        (description :initarg :|description| :type
                         (common-lisp:or policy-description common-lisp:null)
                         :accessor %update-security-policy-request-description
                         :initform common-lisp:nil)
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %update-security-policy-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-security-policy-request
                    'make-update-security-policy-request))
 (common-lisp:defun make-update-security-policy-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type policy-version policy name
                     description client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-security-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-security-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-security-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-security-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-security-policy-response common-lisp:nil
                       ((security-policy-detail :initarg
                         :|securityPolicyDetail| :type
                         (common-lisp:or security-policy-detail
                                         common-lisp:null)
                         :accessor
                         %update-security-policy-response-security-policy-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-security-policy-response
                    'make-update-security-policy-response))
 (common-lisp:defun make-update-security-policy-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key security-policy-detail)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-security-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-security-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-security-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-policy-detail))
      (common-lisp:list
       (common-lisp:cons "securityPolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-security-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-vpc-endpoint-detail common-lisp:nil
                       ((subnet-ids :initarg :|subnetIds| :type
                         (common-lisp:or subnet-ids common-lisp:null) :accessor
                         %update-vpc-endpoint-detail-subnet-ids :initform
                         common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or vpc-endpoint-status common-lisp:null)
                         :accessor %update-vpc-endpoint-detail-status :initform
                         common-lisp:nil)
                        (security-group-ids :initarg :|securityGroupIds| :type
                         (common-lisp:or security-group-ids common-lisp:null)
                         :accessor
                         %update-vpc-endpoint-detail-security-group-ids
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or vpc-endpoint-name common-lisp:null)
                         :accessor %update-vpc-endpoint-detail-name :initform
                         common-lisp:nil)
                        (last-modified-date :initarg :|lastModifiedDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %update-vpc-endpoint-detail-last-modified-date
                         :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or vpc-endpoint-id common-lisp:null)
                         :accessor %update-vpc-endpoint-detail-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-vpc-endpoint-detail
                    'make-update-vpc-endpoint-detail))
 (common-lisp:defun make-update-vpc-endpoint-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subnet-ids status security-group-ids name
                     last-modified-date id)
   (common-lisp:apply #'common-lisp:make-instance 'update-vpc-endpoint-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "securityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "subnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-vpc-endpoint-request common-lisp:nil
                       ((remove-subnet-ids :initarg :|removeSubnetIds| :type
                         (common-lisp:or subnet-ids common-lisp:null) :accessor
                         %update-vpc-endpoint-request-remove-subnet-ids
                         :initform common-lisp:nil)
                        (remove-security-group-ids :initarg
                         :|removeSecurityGroupIds| :type
                         (common-lisp:or security-group-ids common-lisp:null)
                         :accessor
                         %update-vpc-endpoint-request-remove-security-group-ids
                         :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or vpc-endpoint-id common-lisp:null)
                         :accessor %update-vpc-endpoint-request-id :initform
                         (common-lisp:error ":id is required"))
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %update-vpc-endpoint-request-client-token
                         :initform common-lisp:nil)
                        (add-subnet-ids :initarg :|addSubnetIds| :type
                         (common-lisp:or subnet-ids common-lisp:null) :accessor
                         %update-vpc-endpoint-request-add-subnet-ids :initform
                         common-lisp:nil)
                        (add-security-group-ids :initarg :|addSecurityGroupIds|
                         :type
                         (common-lisp:or security-group-ids common-lisp:null)
                         :accessor
                         %update-vpc-endpoint-request-add-security-group-ids
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-vpc-endpoint-request
                    'make-update-vpc-endpoint-request))
 (common-lisp:defun make-update-vpc-endpoint-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key remove-subnet-ids
                     remove-security-group-ids id client-token add-subnet-ids
                     add-security-group-ids)
   (common-lisp:apply #'common-lisp:make-instance 'update-vpc-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'add-security-group-ids))
      (common-lisp:list
       (common-lisp:cons "addSecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'add-subnet-ids))
      (common-lisp:list
       (common-lisp:cons "addSubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'remove-security-group-ids))
      (common-lisp:list
       (common-lisp:cons "removeSecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'remove-subnet-ids))
      (common-lisp:list
       (common-lisp:cons "removeSubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-vpc-endpoint-response common-lisp:nil
                       ((update-vpc-endpoint-detail :initarg
                         :update-vpc-endpoint-detail :type
                         (common-lisp:or update-vpc-endpoint-detail
                                         common-lisp:null)
                         :accessor
                         %update-vpc-endpoint-response-update-vpc-endpoint-detail
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-vpc-endpoint-response
                    'make-update-vpc-endpoint-response))
 (common-lisp:defun make-update-vpc-endpoint-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key update-vpc-endpoint-detail)
   (common-lisp:apply #'common-lisp:make-instance 'update-vpc-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-vpc-endpoint-detail))
      (common-lisp:list
       (common-lisp:cons "UpdateVpcEndpointDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (opensearchserverless-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defclass vpc-endpoint-detail common-lisp:nil
                       ((vpc-id :initarg :|vpcId| :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %vpc-endpoint-detail-vpc-id :initform common-lisp:nil)
                        (subnet-ids :initarg :|subnetIds| :type
                         (common-lisp:or subnet-ids common-lisp:null) :accessor
                         %vpc-endpoint-detail-subnet-ids :initform
                         common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or vpc-endpoint-status common-lisp:null)
                         :accessor %vpc-endpoint-detail-status :initform
                         common-lisp:nil)
                        (security-group-ids :initarg :|securityGroupIds| :type
                         (common-lisp:or security-group-ids common-lisp:null)
                         :accessor %vpc-endpoint-detail-security-group-ids
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or vpc-endpoint-name common-lisp:null)
                         :accessor %vpc-endpoint-detail-name :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or vpc-endpoint-id common-lisp:null)
                         :accessor %vpc-endpoint-detail-id :initform
                         common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %vpc-endpoint-detail-created-date :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'vpc-endpoint-detail 'make-vpc-endpoint-detail))
 (common-lisp:defun make-vpc-endpoint-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-id subnet-ids status
                     security-group-ids name id created-date)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-endpoint-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-endpoint-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-endpoint-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "securityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "subnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "vpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-endpoint-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-details ()
   '(trivial-types:proper-list vpc-endpoint-detail))
 (common-lisp:defun |make-vpc-endpoint-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-endpoint-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass vpc-endpoint-error-detail common-lisp:nil
                       ((id :initarg :|id| :type
                         (common-lisp:or vpc-endpoint-id common-lisp:null)
                         :accessor %vpc-endpoint-error-detail-id :initform
                         common-lisp:nil)
                        (error-message :initarg :|errorMessage| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %vpc-endpoint-error-detail-error-message :initform
                         common-lisp:nil)
                        (error-code :initarg :|errorCode| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %vpc-endpoint-error-detail-error-code :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'vpc-endpoint-error-detail
                    'make-vpc-endpoint-error-detail))
 (common-lisp:defun make-vpc-endpoint-error-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key id error-message error-code)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-endpoint-error-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          vpc-endpoint-error-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          vpc-endpoint-error-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          vpc-endpoint-error-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-error-details ()
   '(trivial-types:proper-list vpc-endpoint-error-detail))
 (common-lisp:defun |make-vpc-endpoint-error-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            vpc-endpoint-error-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass vpc-endpoint-filters common-lisp:nil
                       ((status :initarg :|status| :type
                         (common-lisp:or vpc-endpoint-status common-lisp:null)
                         :accessor %vpc-endpoint-filters-status :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'vpc-endpoint-filters 'make-vpc-endpoint-filters))
 (common-lisp:defun make-vpc-endpoint-filters
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-endpoint-filters
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-endpoint-filters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-endpoint-filters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-endpoint-filters))
   common-lisp:nil))
(common-lisp:deftype vpc-endpoint-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-ids ()
   '(trivial-types:proper-list vpc-endpoint-id))
 (common-lisp:defun |make-vpc-endpoint-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-endpoint-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vpc-endpoint-name () 'common-lisp:string)
(common-lisp:deftype vpc-endpoint-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-summaries ()
   '(trivial-types:proper-list vpc-endpoint-summary))
 (common-lisp:defun |make-vpc-endpoint-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-endpoint-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass vpc-endpoint-summary common-lisp:nil
                       ((status :initarg :|status| :type
                         (common-lisp:or vpc-endpoint-status common-lisp:null)
                         :accessor %vpc-endpoint-summary-status :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or vpc-endpoint-name common-lisp:null)
                         :accessor %vpc-endpoint-summary-name :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or vpc-endpoint-id common-lisp:null)
                         :accessor %vpc-endpoint-summary-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'vpc-endpoint-summary 'make-vpc-endpoint-summary))
 (common-lisp:defun make-vpc-endpoint-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status name id)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-endpoint-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-endpoint-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-endpoint-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-endpoint-summary))
   common-lisp:nil))
(common-lisp:deftype vpc-id () 'common-lisp:string)
(common-lisp:deftype |samlGroupAttribute| () 'common-lisp:string)
(common-lisp:deftype |samlMetadata| () 'common-lisp:string)
(common-lisp:deftype |samlUserAttribute| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun batch-get-collection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ids names)
   (common-lisp:declare (common-lisp:ignorable ids names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-collection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "BatchGetCollection" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-get-collection))
(common-lisp:progn
 (common-lisp:defun batch-get-vpc-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ids)
   (common-lisp:declare (common-lisp:ignorable ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-vpc-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "BatchGetVpcEndpoint" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-get-vpc-endpoint))
(common-lisp:progn
 (common-lisp:defun create-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name policy
                     type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name policy type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-access-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "CreateAccessPolicy" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-access-policy))
(common-lisp:progn
 (common-lisp:defun create-collection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name tags type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name tags type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-collection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "CreateCollection" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-collection))
(common-lisp:progn
 (common-lisp:defun create-security-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name
                     saml-options type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name saml-options type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-security-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "CreateSecurityConfig" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-security-config))
(common-lisp:progn
 (common-lisp:defun create-security-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name policy
                     type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name policy type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-security-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "CreateSecurityPolicy" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-security-policy))
(common-lisp:progn
 (common-lisp:defun create-vpc-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name security-group-ids
                     subnet-ids vpc-id)
   (common-lisp:declare
    (common-lisp:ignorable client-token name security-group-ids subnet-ids
     vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-vpc-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "CreateVpcEndpoint" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-vpc-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name type)
   (common-lisp:declare (common-lisp:ignorable client-token name type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-access-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "DeleteAccessPolicy" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-access-policy))
(common-lisp:progn
 (common-lisp:defun delete-collection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token id)
   (common-lisp:declare (common-lisp:ignorable client-token id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-collection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "DeleteCollection" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-collection))
(common-lisp:progn
 (common-lisp:defun delete-security-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token id)
   (common-lisp:declare (common-lisp:ignorable client-token id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-security-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "DeleteSecurityConfig" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-security-config))
(common-lisp:progn
 (common-lisp:defun delete-security-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name type)
   (common-lisp:declare (common-lisp:ignorable client-token name type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-security-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "DeleteSecurityPolicy" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-security-policy))
(common-lisp:progn
 (common-lisp:defun delete-vpc-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token id)
   (common-lisp:declare (common-lisp:ignorable client-token id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vpc-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "DeleteVpcEndpoint" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-vpc-endpoint))
(common-lisp:progn
 (common-lisp:defun get-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name type)
   (common-lisp:declare (common-lisp:ignorable name type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-access-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetAccessPolicy" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-access-policy))
(common-lisp:progn
 (common-lisp:defun get-account-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'opensearchserverless-request :method "POST"
                                :path "/" :protocol :json :operation
                                "GetAccountSettings" :params
                                `(("Action" ,@"GetAccountSettings")
                                  ("Version" ,@"2021-11-01"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-account-settings))
(common-lisp:progn
 (common-lisp:defun get-policies-stats ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'opensearchserverless-request :method "POST"
                                :path "/" :protocol :json :operation
                                "GetPoliciesStats" :params
                                `(("Action" ,@"GetPoliciesStats")
                                  ("Version" ,@"2021-11-01"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-policies-stats))
(common-lisp:progn
 (common-lisp:defun get-security-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-security-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetSecurityConfig" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-security-config))
(common-lisp:progn
 (common-lisp:defun get-security-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name type)
   (common-lisp:declare (common-lisp:ignorable name type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-security-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetSecurityPolicy" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-security-policy))
(common-lisp:progn
 (common-lisp:defun list-access-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token resource type)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-access-policies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "ListAccessPolicies" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-access-policies))
(common-lisp:progn
 (common-lisp:defun list-collections
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key collection-filters max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable collection-filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-collections-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "ListCollections" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-collections))
(common-lisp:progn
 (common-lisp:defun list-security-configs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token type)
   (common-lisp:declare (common-lisp:ignorable max-results next-token type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-security-configs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "ListSecurityConfigs" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-security-configs))
(common-lisp:progn
 (common-lisp:defun list-security-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token resource type)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-security-policies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "ListSecurityPolicies" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-security-policies))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "ListTagsForResource" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-vpc-endpoints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     vpc-endpoint-filters)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token vpc-endpoint-filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-vpc-endpoints-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "ListVpcEndpoints" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-vpc-endpoints))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "TagResource" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "UntagResource" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name policy
                     policy-version type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name policy policy-version
     type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-access-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "UpdateAccessPolicy" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-access-policy))
(common-lisp:progn
 (common-lisp:defun update-account-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key capacity-limits)
   (common-lisp:declare (common-lisp:ignorable capacity-limits))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-account-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "UpdateAccountSettings" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-account-settings))
(common-lisp:progn
 (common-lisp:defun update-collection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description id)
   (common-lisp:declare (common-lisp:ignorable client-token description id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-collection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "UpdateCollection" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-collection))
(common-lisp:progn
 (common-lisp:defun update-security-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token config-version description
                     id saml-options)
   (common-lisp:declare
    (common-lisp:ignorable client-token config-version description id
     saml-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-security-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "UpdateSecurityConfig" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-security-config))
(common-lisp:progn
 (common-lisp:defun update-security-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name policy
                     policy-version type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name policy policy-version
     type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-security-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "UpdateSecurityPolicy" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-security-policy))
(common-lisp:progn
 (common-lisp:defun update-vpc-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key add-security-group-ids add-subnet-ids
                     client-token id remove-security-group-ids
                     remove-subnet-ids)
   (common-lisp:declare
    (common-lisp:ignorable add-security-group-ids add-subnet-ids client-token
     id remove-security-group-ids remove-subnet-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-vpc-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        :json "/" "UpdateVpcEndpoint" "2021-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-vpc-endpoint))
