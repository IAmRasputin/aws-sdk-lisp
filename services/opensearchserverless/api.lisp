;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/opensearchserverless/api
  (:use)
  (:nicknames #:aws/opensearchserverless)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/opensearchserverless/api)
(common-lisp:progn
 (common-lisp:define-condition opensearchserverless-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'opensearchserverless-error))
(common-lisp:progn
 (common-lisp:defclass opensearchserverless-request
                       (aws-sdk/json-request:json-request) common-lisp:nil
                       (:default-initargs :service "opensearchserverless"
                        :api-version "2021-11-01" :host-prefix "aoss"
                        :signing-name "aoss" :global-host common-lisp:nil
                        :target-prefix "OpenSearchServerless" :json-version
                        "1.0"))
 (common-lisp:export 'opensearchserverless-request))
(common-lisp:defvar *error-map*
  '(("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("OcuLimitExceededException" . ocu-limit-exceeded-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (access-policy-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-access-policy-detail-"))
   (created-date common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or policy-name common-lisp:null))
   (policy-version common-lisp:nil :type
    (common-lisp:or policy-version common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or access-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-policy-detail 'make-access-policy-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input access-policy-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input access-policy-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input access-policy-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (access-policy-stats (:copier common-lisp:nil)
      (:conc-name "struct-shape-access-policy-stats-"))
   (data-policy-count common-lisp:nil :type
    (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-policy-stats 'make-access-policy-stats))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input access-policy-stats))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input access-policy-stats))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-policy-count))
      (common-lisp:list
       (common-lisp:cons "DataPolicyCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input access-policy-stats))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype access-policy-summaries ()
   '(trivial-types:proper-list access-policy-summary))
 (common-lisp:defun make-access-policy-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list access-policy-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (access-policy-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-access-policy-summary-"))
   (created-date common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or policy-name common-lisp:null))
   (policy-version common-lisp:nil :type
    (common-lisp:or policy-version common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or access-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-policy-summary 'make-access-policy-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          access-policy-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          access-policy-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          access-policy-summary))
   common-lisp:nil))
(common-lisp:deftype access-policy-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (account-settings-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-account-settings-detail-"))
   (capacity-limits common-lisp:nil :type
    (common-lisp:or capacity-limits common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'account-settings-detail 'make-account-settings-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-settings-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-settings-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity-limits))
      (common-lisp:list
       (common-lisp:cons "capacityLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-settings-detail))
   common-lisp:nil))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-collection-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-collection-request-"))
   (ids common-lisp:nil :type (common-lisp:or collection-ids common-lisp:null))
   (names common-lisp:nil :type
    (common-lisp:or collection-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-collection-request
                    'make-batch-get-collection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-collection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-collection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'names))
      (common-lisp:list
       (common-lisp:cons "names"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-collection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-collection-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-collection-response-"))
   (collection-details common-lisp:nil :type
    (common-lisp:or collection-details common-lisp:null))
   (collection-error-details common-lisp:nil :type
    (common-lisp:or collection-error-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-collection-response
                    'make-batch-get-collection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-collection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-collection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'collection-details))
      (common-lisp:list
       (common-lisp:cons "collectionDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'collection-error-details))
      (common-lisp:list
       (common-lisp:cons "collectionErrorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-collection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-effective-lifecycle-policy-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-batch-get-effective-lifecycle-policy-request-"))
   (resource-identifiers (common-lisp:error ":resourceidentifiers is required")
    :type
    (common-lisp:or lifecycle-policy-resource-identifiers common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-effective-lifecycle-policy-request
                    'make-batch-get-effective-lifecycle-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-effective-lifecycle-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-effective-lifecycle-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-identifiers))
      (common-lisp:list
       (common-lisp:cons "resourceIdentifiers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-effective-lifecycle-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-effective-lifecycle-policy-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-batch-get-effective-lifecycle-policy-response-"))
   (effective-lifecycle-policy-details common-lisp:nil :type
    (common-lisp:or effective-lifecycle-policy-details common-lisp:null))
   (effective-lifecycle-policy-error-details common-lisp:nil :type
    (common-lisp:or effective-lifecycle-policy-error-details
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-effective-lifecycle-policy-response
                    'make-batch-get-effective-lifecycle-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-effective-lifecycle-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-effective-lifecycle-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-lifecycle-policy-details))
      (common-lisp:list
       (common-lisp:cons "effectiveLifecyclePolicyDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-lifecycle-policy-error-details))
      (common-lisp:list
       (common-lisp:cons "effectiveLifecyclePolicyErrorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-effective-lifecycle-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-lifecycle-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-lifecycle-policy-request-"))
   (identifiers (common-lisp:error ":identifiers is required") :type
    (common-lisp:or lifecycle-policy-identifiers common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-lifecycle-policy-request
                    'make-batch-get-lifecycle-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-lifecycle-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-lifecycle-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifiers))
      (common-lisp:list
       (common-lisp:cons "identifiers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-lifecycle-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-lifecycle-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-lifecycle-policy-response-"))
   (lifecycle-policy-details common-lisp:nil :type
    (common-lisp:or lifecycle-policy-details common-lisp:null))
   (lifecycle-policy-error-details common-lisp:nil :type
    (common-lisp:or lifecycle-policy-error-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-lifecycle-policy-response
                    'make-batch-get-lifecycle-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-lifecycle-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-lifecycle-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lifecycle-policy-details))
      (common-lisp:list
       (common-lisp:cons "lifecyclePolicyDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lifecycle-policy-error-details))
      (common-lisp:list
       (common-lisp:cons "lifecyclePolicyErrorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-lifecycle-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-vpc-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-vpc-endpoint-request-"))
   (ids (common-lisp:error ":ids is required") :type
    (common-lisp:or vpc-endpoint-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-vpc-endpoint-request
                    'make-batch-get-vpc-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-vpc-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-vpc-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-vpc-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-vpc-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-vpc-endpoint-response-"))
   (vpc-endpoint-details common-lisp:nil :type
    (common-lisp:or vpc-endpoint-details common-lisp:null))
   (vpc-endpoint-error-details common-lisp:nil :type
    (common-lisp:or vpc-endpoint-error-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-vpc-endpoint-response
                    'make-batch-get-vpc-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-vpc-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-vpc-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-endpoint-details))
      (common-lisp:list
       (common-lisp:cons "vpcEndpointDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-endpoint-error-details))
      (common-lisp:list
       (common-lisp:cons "vpcEndpointErrorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-vpc-endpoint-response))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (capacity-limits (:copier common-lisp:nil)
      (:conc-name "struct-shape-capacity-limits-"))
   (max-indexing-capacity-in-ocu common-lisp:nil :type
    (common-lisp:or indexing-capacity-value common-lisp:null))
   (max-search-capacity-in-ocu common-lisp:nil :type
    (common-lisp:or search-capacity-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'capacity-limits 'make-capacity-limits))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input capacity-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input capacity-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-indexing-capacity-in-ocu))
      (common-lisp:list
       (common-lisp:cons "maxIndexingCapacityInOCU"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-search-capacity-in-ocu))
      (common-lisp:list
       (common-lisp:cons "maxSearchCapacityInOCU"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input capacity-limits))
   common-lisp:nil))
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (collection-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-collection-detail-"))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (collection-endpoint common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (created-date common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (dashboard-endpoint common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or collection-id common-lisp:null))
   (kms-key-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or collection-name common-lisp:null))
   (standby-replicas common-lisp:nil :type
    (common-lisp:or standby-replicas common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or collection-status common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or collection-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'collection-detail 'make-collection-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input collection-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input collection-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'collection-endpoint))
      (common-lisp:list
       (common-lisp:cons "collectionEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-endpoint))
      (common-lisp:list
       (common-lisp:cons "dashboardEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "kmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'standby-replicas))
      (common-lisp:list
       (common-lisp:cons "standbyReplicas"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input collection-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype collection-details ()
   '(trivial-types:proper-list collection-detail))
 (common-lisp:defun make-collection-details
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list collection-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (collection-error-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-collection-error-detail-"))
   (error-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or collection-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or collection-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'collection-error-detail 'make-collection-error-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          collection-error-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          collection-error-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          collection-error-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype collection-error-details ()
   '(trivial-types:proper-list collection-error-detail))
 (common-lisp:defun make-collection-error-details
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list collection-error-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (collection-filters (:copier common-lisp:nil)
      (:conc-name "struct-shape-collection-filters-"))
   (name common-lisp:nil :type
    (common-lisp:or collection-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or collection-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'collection-filters 'make-collection-filters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input collection-filters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input collection-filters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input collection-filters))
   common-lisp:nil))
(common-lisp:deftype collection-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype collection-ids ()
   '(trivial-types:proper-list collection-id))
 (common-lisp:defun make-collection-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list collection-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype collection-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype collection-names ()
   '(trivial-types:proper-list collection-name))
 (common-lisp:defun make-collection-names
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list collection-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype collection-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype collection-summaries ()
   '(trivial-types:proper-list collection-summary))
 (common-lisp:defun make-collection-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list collection-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (collection-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-collection-summary-"))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or collection-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or collection-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or collection-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'collection-summary 'make-collection-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input collection-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input collection-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input collection-summary))
   common-lisp:nil))
(common-lisp:deftype collection-type () 'common-lisp:string)
(common-lisp:deftype config-description () 'common-lisp:string)
(common-lisp:deftype config-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (opensearchserverless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-access-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-access-policy-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (policy (common-lisp:error ":policy is required") :type
    (common-lisp:or policy-document common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or access-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-access-policy-request
                    'make-create-access-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-access-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-access-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-access-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-access-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-access-policy-response-"))
   (access-policy-detail common-lisp:nil :type
    (common-lisp:or access-policy-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-access-policy-response
                    'make-create-access-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-access-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-access-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-policy-detail))
      (common-lisp:list
       (common-lisp:cons "accessPolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-access-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-collection-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-collection-detail-"))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (created-date common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or collection-id common-lisp:null))
   (kms-key-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or collection-name common-lisp:null))
   (standby-replicas common-lisp:nil :type
    (common-lisp:or standby-replicas common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or collection-status common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or collection-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-collection-detail 'make-create-collection-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "kmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'standby-replicas))
      (common-lisp:list
       (common-lisp:cons "standbyReplicas"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-collection-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-collection-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or create-collection-request-description-string
                    common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or collection-name common-lisp:null))
   (standby-replicas common-lisp:nil :type
    (common-lisp:or standby-replicas common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or collection-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-collection-request
                    'make-create-collection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'standby-replicas))
      (common-lisp:list
       (common-lisp:cons "standbyReplicas"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-request))
   common-lisp:nil))
(common-lisp:deftype create-collection-request-description-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-collection-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-collection-response-"))
   (create-collection-detail common-lisp:nil :type
    (common-lisp:or create-collection-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-collection-response
                    'make-create-collection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-collection-detail))
      (common-lisp:list
       (common-lisp:cons "createCollectionDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-collection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-lifecycle-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-lifecycle-policy-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (policy (common-lisp:error ":policy is required") :type
    (common-lisp:or policy-document common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or lifecycle-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-lifecycle-policy-request
                    'make-create-lifecycle-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-lifecycle-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-lifecycle-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-lifecycle-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-lifecycle-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-lifecycle-policy-response-"))
   (lifecycle-policy-detail common-lisp:nil :type
    (common-lisp:or lifecycle-policy-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-lifecycle-policy-response
                    'make-create-lifecycle-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-lifecycle-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-lifecycle-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lifecycle-policy-detail))
      (common-lisp:list
       (common-lisp:cons "lifecyclePolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-lifecycle-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-security-config-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-security-config-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or config-description common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or config-name common-lisp:null))
   (saml-options common-lisp:nil :type
    (common-lisp:or saml-config-options common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or security-config-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-security-config-request
                    'make-create-security-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-security-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-security-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'saml-options))
      (common-lisp:list
       (common-lisp:cons "samlOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-security-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-security-config-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-security-config-response-"))
   (security-config-detail common-lisp:nil :type
    (common-lisp:or security-config-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-security-config-response
                    'make-create-security-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-security-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-security-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-config-detail))
      (common-lisp:list
       (common-lisp:cons "securityConfigDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-security-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-security-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-security-policy-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (policy (common-lisp:error ":policy is required") :type
    (common-lisp:or policy-document common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or security-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-security-policy-request
                    'make-create-security-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-security-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-security-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-security-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-security-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-security-policy-response-"))
   (security-policy-detail common-lisp:nil :type
    (common-lisp:or security-policy-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-security-policy-response
                    'make-create-security-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-security-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-security-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-policy-detail))
      (common-lisp:list
       (common-lisp:cons "securityPolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-security-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-vpc-endpoint-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-vpc-endpoint-detail-"))
   (id common-lisp:nil :type (common-lisp:or vpc-endpoint-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or vpc-endpoint-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or vpc-endpoint-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vpc-endpoint-detail
                    'make-create-vpc-endpoint-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-vpc-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-vpc-endpoint-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or vpc-endpoint-name common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids common-lisp:null))
   (subnet-ids (common-lisp:error ":subnetids is required") :type
    (common-lisp:or subnet-ids common-lisp:null))
   (vpc-id (common-lisp:error ":vpcid is required") :type
    (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vpc-endpoint-request
                    'make-create-vpc-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "securityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "subnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "vpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-vpc-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-vpc-endpoint-response-"))
   (create-vpc-endpoint-detail common-lisp:nil :type
    (common-lisp:or create-vpc-endpoint-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vpc-endpoint-response
                    'make-create-vpc-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-vpc-endpoint-detail))
      (common-lisp:list
       (common-lisp:cons "createVpcEndpointDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-access-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-access-policy-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or access-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-access-policy-request
                    'make-delete-access-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-access-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-access-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-access-policy-response
                    'make-delete-access-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-collection-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-collection-detail-"))
   (id common-lisp:nil :type (common-lisp:or collection-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or collection-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or collection-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-collection-detail 'make-delete-collection-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-collection-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-collection-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or collection-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-collection-request
                    'make-delete-collection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-collection-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-collection-response-"))
   (delete-collection-detail common-lisp:nil :type
    (common-lisp:or delete-collection-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-collection-response
                    'make-delete-collection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'delete-collection-detail))
      (common-lisp:list
       (common-lisp:cons "deleteCollectionDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-collection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-lifecycle-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-lifecycle-policy-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or lifecycle-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-lifecycle-policy-request
                    'make-delete-lifecycle-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-lifecycle-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-lifecycle-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-lifecycle-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-lifecycle-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-lifecycle-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-lifecycle-policy-response
                    'make-delete-lifecycle-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-lifecycle-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-lifecycle-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-lifecycle-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-security-config-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-security-config-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or security-config-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-security-config-request
                    'make-delete-security-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-security-config-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-security-config-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-security-config-response
                    'make-delete-security-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-security-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-security-policy-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or security-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-security-policy-request
                    'make-delete-security-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-security-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-security-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-security-policy-response
                    'make-delete-security-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-security-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vpc-endpoint-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-vpc-endpoint-detail-"))
   (id common-lisp:nil :type (common-lisp:or vpc-endpoint-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or vpc-endpoint-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or vpc-endpoint-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-endpoint-detail
                    'make-delete-vpc-endpoint-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vpc-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-vpc-endpoint-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or vpc-endpoint-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-endpoint-request
                    'make-delete-vpc-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vpc-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-vpc-endpoint-response-"))
   (delete-vpc-endpoint-detail common-lisp:nil :type
    (common-lisp:or delete-vpc-endpoint-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-endpoint-response
                    'make-delete-vpc-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'delete-vpc-endpoint-detail))
      (common-lisp:list
       (common-lisp:cons "deleteVpcEndpointDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (effective-lifecycle-policy-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-effective-lifecycle-policy-detail-"))
   (no-min-retention-period common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (policy-name common-lisp:nil :type
    (common-lisp:or policy-name common-lisp:null))
   (resource common-lisp:nil :type (common-lisp:or resource common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (retention-period common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or lifecycle-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'effective-lifecycle-policy-detail
                    'make-effective-lifecycle-policy-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          effective-lifecycle-policy-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          effective-lifecycle-policy-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'no-min-retention-period))
      (common-lisp:list
       (common-lisp:cons "noMinRetentionPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-name))
      (common-lisp:list
       (common-lisp:cons "policyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource))
      (common-lisp:list
       (common-lisp:cons "resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-period))
      (common-lisp:list
       (common-lisp:cons "retentionPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          effective-lifecycle-policy-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype effective-lifecycle-policy-details ()
   '(trivial-types:proper-list effective-lifecycle-policy-detail))
 (common-lisp:defun make-effective-lifecycle-policy-details
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            effective-lifecycle-policy-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (effective-lifecycle-policy-error-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-effective-lifecycle-policy-error-detail-"))
   (error-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (resource common-lisp:nil :type (common-lisp:or resource common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or lifecycle-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'effective-lifecycle-policy-error-detail
                    'make-effective-lifecycle-policy-error-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          effective-lifecycle-policy-error-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          effective-lifecycle-policy-error-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource))
      (common-lisp:list
       (common-lisp:cons "resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          effective-lifecycle-policy-error-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype effective-lifecycle-policy-error-details ()
   '(trivial-types:proper-list effective-lifecycle-policy-error-detail))
 (common-lisp:defun make-effective-lifecycle-policy-error-details
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            effective-lifecycle-policy-error-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (get-access-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-access-policy-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or access-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-access-policy-request
                    'make-get-access-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-access-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-access-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-access-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-access-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-access-policy-response-"))
   (access-policy-detail common-lisp:nil :type
    (common-lisp:or access-policy-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-access-policy-response
                    'make-get-access-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-access-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-access-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-policy-detail))
      (common-lisp:list
       (common-lisp:cons "accessPolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-access-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-settings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-account-settings-request-")))
 (common-lisp:export
  (common-lisp:list 'get-account-settings-request
                    'make-get-account-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-settings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-account-settings-response-"))
   (account-settings-detail common-lisp:nil :type
    (common-lisp:or account-settings-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-account-settings-response
                    'make-get-account-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-settings-detail))
      (common-lisp:list
       (common-lisp:cons "accountSettingsDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-policies-stats-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-policies-stats-request-")))
 (common-lisp:export
  (common-lisp:list 'get-policies-stats-request
                    'make-get-policies-stats-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-policies-stats-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-policies-stats-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-policies-stats-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-policies-stats-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-policies-stats-response-"))
   (access-policy-stats common-lisp:nil :type
    (common-lisp:or access-policy-stats common-lisp:null))
   (lifecycle-policy-stats common-lisp:nil :type
    (common-lisp:or lifecycle-policy-stats common-lisp:null))
   (security-config-stats common-lisp:nil :type
    (common-lisp:or security-config-stats common-lisp:null))
   (security-policy-stats common-lisp:nil :type
    (common-lisp:or security-policy-stats common-lisp:null))
   (total-policy-count common-lisp:nil :type
    (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-policies-stats-response
                    'make-get-policies-stats-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-policies-stats-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-policies-stats-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-policy-stats))
      (common-lisp:list
       (common-lisp:cons "AccessPolicyStats"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lifecycle-policy-stats))
      (common-lisp:list
       (common-lisp:cons "LifecyclePolicyStats"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-config-stats))
      (common-lisp:list
       (common-lisp:cons "SecurityConfigStats"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-policy-stats))
      (common-lisp:list
       (common-lisp:cons "SecurityPolicyStats"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-policy-count))
      (common-lisp:list
       (common-lisp:cons "TotalPolicyCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-policies-stats-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-security-config-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-security-config-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or security-config-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-security-config-request
                    'make-get-security-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-security-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-security-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-security-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-security-config-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-security-config-response-"))
   (security-config-detail common-lisp:nil :type
    (common-lisp:or security-config-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-security-config-response
                    'make-get-security-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-security-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-security-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-config-detail))
      (common-lisp:list
       (common-lisp:cons "securityConfigDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-security-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-security-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-security-policy-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or security-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-security-policy-request
                    'make-get-security-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-security-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-security-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-security-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-security-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-security-policy-response-"))
   (security-policy-detail common-lisp:nil :type
    (common-lisp:or security-policy-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-security-policy-response
                    'make-get-security-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-security-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-security-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-policy-detail))
      (common-lisp:list
       (common-lisp:cons "securityPolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-security-policy-response))
   common-lisp:nil))
(common-lisp:deftype indexing-capacity-value () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (opensearchserverless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (lifecycle-policy-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-lifecycle-policy-detail-"))
   (created-date common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or policy-name common-lisp:null))
   (policy-version common-lisp:nil :type
    (common-lisp:or policy-version common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or lifecycle-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lifecycle-policy-detail 'make-lifecycle-policy-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lifecycle-policy-details ()
   '(trivial-types:proper-list lifecycle-policy-detail))
 (common-lisp:defun make-lifecycle-policy-details
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lifecycle-policy-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lifecycle-policy-error-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-lifecycle-policy-error-detail-"))
   (error-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or policy-name common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or lifecycle-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lifecycle-policy-error-detail
                    'make-lifecycle-policy-error-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-error-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-error-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-error-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lifecycle-policy-error-details ()
   '(trivial-types:proper-list lifecycle-policy-error-detail))
 (common-lisp:defun make-lifecycle-policy-error-details
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lifecycle-policy-error-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lifecycle-policy-identifier (:copier common-lisp:nil)
      (:conc-name "struct-shape-lifecycle-policy-identifier-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or lifecycle-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lifecycle-policy-identifier
                    'make-lifecycle-policy-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-identifier))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lifecycle-policy-identifiers ()
   '(trivial-types:proper-list lifecycle-policy-identifier))
 (common-lisp:defun make-lifecycle-policy-identifiers
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lifecycle-policy-identifier))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lifecycle-policy-resource-identifier (:copier common-lisp:nil)
      (:conc-name "struct-shape-lifecycle-policy-resource-identifier-"))
   (resource (common-lisp:error ":resource is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or lifecycle-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lifecycle-policy-resource-identifier
                    'make-lifecycle-policy-resource-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-resource-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-resource-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource))
      (common-lisp:list
       (common-lisp:cons "resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-resource-identifier))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lifecycle-policy-resource-identifiers ()
   '(trivial-types:proper-list lifecycle-policy-resource-identifier))
 (common-lisp:defun make-lifecycle-policy-resource-identifiers
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lifecycle-policy-resource-identifier))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lifecycle-policy-stats (:copier common-lisp:nil)
      (:conc-name "struct-shape-lifecycle-policy-stats-"))
   (retention-policy-count common-lisp:nil :type
    (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lifecycle-policy-stats 'make-lifecycle-policy-stats))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-stats))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-stats))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retention-policy-count))
      (common-lisp:list
       (common-lisp:cons "RetentionPolicyCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-stats))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lifecycle-policy-summaries ()
   '(trivial-types:proper-list lifecycle-policy-summary))
 (common-lisp:defun make-lifecycle-policy-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lifecycle-policy-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lifecycle-policy-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-lifecycle-policy-summary-"))
   (created-date common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or policy-name common-lisp:null))
   (policy-version common-lisp:nil :type
    (common-lisp:or policy-version common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or lifecycle-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lifecycle-policy-summary 'make-lifecycle-policy-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lifecycle-policy-summary))
   common-lisp:nil))
(common-lisp:deftype lifecycle-policy-type () 'common-lisp:string)
(common-lisp:deftype lifecycle-resource () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-access-policies-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-access-policies-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or list-access-policies-request-max-results-integer
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource common-lisp:nil :type
    (common-lisp:or list-access-policies-request-resource-list
                    common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or access-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-access-policies-request
                    'make-list-access-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-access-policies-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-access-policies-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource))
      (common-lisp:list
       (common-lisp:cons "resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-access-policies-request))
   common-lisp:nil))
(common-lisp:deftype list-access-policies-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype list-access-policies-request-resource-list ()
   '(trivial-types:proper-list resource))
 (common-lisp:defun make-list-access-policies-request-resource-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-access-policies-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-access-policies-response-"))
   (access-policy-summaries common-lisp:nil :type
    (common-lisp:or access-policy-summaries common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-access-policies-response
                    'make-list-access-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-access-policies-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-access-policies-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-policy-summaries))
      (common-lisp:list
       (common-lisp:cons "accessPolicySummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-access-policies-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-collections-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-collections-request-"))
   (collection-filters common-lisp:nil :type
    (common-lisp:or collection-filters common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-collections-request-max-results-integer
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-collections-request 'make-list-collections-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-collections-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-collections-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'collection-filters))
      (common-lisp:list
       (common-lisp:cons "collectionFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-collections-request))
   common-lisp:nil))
(common-lisp:deftype list-collections-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (list-collections-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-collections-response-"))
   (collection-summaries common-lisp:nil :type
    (common-lisp:or collection-summaries common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-collections-response
                    'make-list-collections-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-collections-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-collections-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'collection-summaries))
      (common-lisp:list
       (common-lisp:cons "collectionSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-collections-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-lifecycle-policies-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-lifecycle-policies-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or list-lifecycle-policies-request-max-results-integer
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or list-lifecycle-policies-request-resources-list
                    common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or lifecycle-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-lifecycle-policies-request
                    'make-list-lifecycle-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-lifecycle-policies-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-lifecycle-policies-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-lifecycle-policies-request))
   common-lisp:nil))
(common-lisp:deftype list-lifecycle-policies-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype list-lifecycle-policies-request-resources-list ()
   '(trivial-types:proper-list lifecycle-resource))
 (common-lisp:defun make-list-lifecycle-policies-request-resources-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lifecycle-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-lifecycle-policies-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-lifecycle-policies-response-"))
   (lifecycle-policy-summaries common-lisp:nil :type
    (common-lisp:or lifecycle-policy-summaries common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-lifecycle-policies-response
                    'make-list-lifecycle-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-lifecycle-policies-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-lifecycle-policies-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lifecycle-policy-summaries))
      (common-lisp:list
       (common-lisp:cons "lifecyclePolicySummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-lifecycle-policies-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-security-configs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-security-configs-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or list-security-configs-request-max-results-integer
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or security-config-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-security-configs-request
                    'make-list-security-configs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-security-configs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-security-configs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-security-configs-request))
   common-lisp:nil))
(common-lisp:deftype list-security-configs-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (list-security-configs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-security-configs-response-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (security-config-summaries common-lisp:nil :type
    (common-lisp:or security-config-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-security-configs-response
                    'make-list-security-configs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-security-configs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-security-configs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-config-summaries))
      (common-lisp:list
       (common-lisp:cons "securityConfigSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-security-configs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-security-policies-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-security-policies-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or list-security-policies-request-max-results-integer
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource common-lisp:nil :type
    (common-lisp:or list-security-policies-request-resource-list
                    common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or security-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-security-policies-request
                    'make-list-security-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-security-policies-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-security-policies-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource))
      (common-lisp:list
       (common-lisp:cons "resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-security-policies-request))
   common-lisp:nil))
(common-lisp:deftype list-security-policies-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype list-security-policies-request-resource-list ()
   '(trivial-types:proper-list resource))
 (common-lisp:defun make-list-security-policies-request-resource-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-security-policies-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-security-policies-response-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (security-policy-summaries common-lisp:nil :type
    (common-lisp:or security-policy-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-security-policies-response
                    'make-list-security-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-security-policies-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-security-policies-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-policy-summaries))
      (common-lisp:list
       (common-lisp:cons "securityPolicySummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-security-policies-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-vpc-endpoints-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-vpc-endpoints-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or list-vpc-endpoints-request-max-results-integer
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-endpoint-filters common-lisp:nil :type
    (common-lisp:or vpc-endpoint-filters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-vpc-endpoints-request
                    'make-list-vpc-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-vpc-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-vpc-endpoints-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-endpoint-filters))
      (common-lisp:list
       (common-lisp:cons "vpcEndpointFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-vpc-endpoints-request))
   common-lisp:nil))
(common-lisp:deftype list-vpc-endpoints-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (list-vpc-endpoints-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-vpc-endpoints-response-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-endpoint-summaries common-lisp:nil :type
    (common-lisp:or vpc-endpoint-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-vpc-endpoints-response
                    'make-list-vpc-endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-vpc-endpoints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-vpc-endpoints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-endpoint-summaries))
      (common-lisp:list
       (common-lisp:cons "vpcEndpointSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-vpc-endpoints-response))
   common-lisp:nil))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition ocu-limit-exceeded-exception
     (opensearchserverless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       ocu-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'ocu-limit-exceeded-exception
                    'ocu-limit-exceeded-exception-message)))
(common-lisp:deftype policy-description () 'common-lisp:string)
(common-lisp:deftype policy-document () 'common-lisp:string)
(common-lisp:deftype policy-name () 'common-lisp:string)
(common-lisp:deftype policy-version () 'common-lisp:string)
(common-lisp:deftype resource () 'common-lisp:string)
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (opensearchserverless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (saml-config-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-saml-config-options-"))
   (group-attribute common-lisp:nil :type
    (common-lisp:or |samlGroupAttribute| common-lisp:null))
   (metadata (common-lisp:error ":metadata is required") :type
    (common-lisp:or |samlMetadata| common-lisp:null))
   (session-timeout common-lisp:nil :type
    (common-lisp:or saml-config-options-session-timeout-integer
                    common-lisp:null))
   (user-attribute common-lisp:nil :type
    (common-lisp:or |samlUserAttribute| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'saml-config-options 'make-saml-config-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input saml-config-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input saml-config-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-attribute))
      (common-lisp:list
       (common-lisp:cons "groupAttribute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-timeout))
      (common-lisp:list
       (common-lisp:cons "sessionTimeout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-attribute))
      (common-lisp:list
       (common-lisp:cons "userAttribute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input saml-config-options))
   common-lisp:nil))
(common-lisp:deftype saml-config-options-session-timeout-integer ()
  'common-lisp:integer)
(common-lisp:deftype search-capacity-value () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (security-config-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-security-config-detail-"))
   (config-version common-lisp:nil :type
    (common-lisp:or policy-version common-lisp:null))
   (created-date common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or config-description common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or security-config-id common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (saml-options common-lisp:nil :type
    (common-lisp:or saml-config-options common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or security-config-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'security-config-detail 'make-security-config-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-config-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-config-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config-version))
      (common-lisp:list
       (common-lisp:cons "configVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'saml-options))
      (common-lisp:list
       (common-lisp:cons "samlOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-config-detail))
   common-lisp:nil))
(common-lisp:deftype security-config-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (security-config-stats (:copier common-lisp:nil)
      (:conc-name "struct-shape-security-config-stats-"))
   (saml-config-count common-lisp:nil :type
    (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'security-config-stats 'make-security-config-stats))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-config-stats))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-config-stats))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'saml-config-count))
      (common-lisp:list
       (common-lisp:cons "SamlConfigCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-config-stats))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype security-config-summaries ()
   '(trivial-types:proper-list security-config-summary))
 (common-lisp:defun make-security-config-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-config-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (security-config-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-security-config-summary-"))
   (config-version common-lisp:nil :type
    (common-lisp:or policy-version common-lisp:null))
   (created-date common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or config-description common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or security-config-id common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or security-config-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'security-config-summary 'make-security-config-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-config-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-config-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config-version))
      (common-lisp:list
       (common-lisp:cons "configVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-config-summary))
   common-lisp:nil))
(common-lisp:deftype security-config-type () 'common-lisp:string)
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-group-ids ()
   '(trivial-types:proper-list security-group-id))
 (common-lisp:defun make-security-group-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (security-policy-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-security-policy-detail-"))
   (created-date common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or policy-name common-lisp:null))
   (policy-version common-lisp:nil :type
    (common-lisp:or policy-version common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or security-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'security-policy-detail 'make-security-policy-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (security-policy-stats (:copier common-lisp:nil)
      (:conc-name "struct-shape-security-policy-stats-"))
   (encryption-policy-count common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (network-policy-count common-lisp:nil :type
    (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'security-policy-stats 'make-security-policy-stats))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-stats))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-stats))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-policy-count))
      (common-lisp:list
       (common-lisp:cons "EncryptionPolicyCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-policy-count))
      (common-lisp:list
       (common-lisp:cons "NetworkPolicyCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-stats))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype security-policy-summaries ()
   '(trivial-types:proper-list security-policy-summary))
 (common-lisp:defun make-security-policy-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-policy-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (security-policy-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-security-policy-summary-"))
   (created-date common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or policy-name common-lisp:null))
   (policy-version common-lisp:nil :type
    (common-lisp:or policy-version common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or security-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'security-policy-summary 'make-security-policy-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-policy-summary))
   common-lisp:nil))
(common-lisp:deftype security-policy-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (opensearchserverless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)
      (quota-code :initarg :quota-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-quota-code)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-type)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message
                    'service-quota-exceeded-exception-quota-code
                    'service-quota-exceeded-exception-resource-id
                    'service-quota-exceeded-exception-resource-type
                    'service-quota-exceeded-exception-service-code)))
(common-lisp:deftype standby-replicas () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnet-ids () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun make-subnet-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-keys
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tags
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or arn common-lisp:null))
   (tag-keys (common-lisp:error ":tagkeys is required") :type
    (common-lisp:or tag-keys common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "tagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-access-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-access-policy-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or policy-document common-lisp:null))
   (policy-version (common-lisp:error ":policyversion is required") :type
    (common-lisp:or policy-version common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or access-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-access-policy-request
                    'make-update-access-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-access-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-access-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-access-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-access-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-access-policy-response-"))
   (access-policy-detail common-lisp:nil :type
    (common-lisp:or access-policy-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-access-policy-response
                    'make-update-access-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-access-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-access-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-policy-detail))
      (common-lisp:list
       (common-lisp:cons "accessPolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-access-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-account-settings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-account-settings-request-"))
   (capacity-limits common-lisp:nil :type
    (common-lisp:or capacity-limits common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-account-settings-request
                    'make-update-account-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity-limits))
      (common-lisp:list
       (common-lisp:cons "capacityLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-account-settings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-account-settings-response-"))
   (account-settings-detail common-lisp:nil :type
    (common-lisp:or account-settings-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-account-settings-response
                    'make-update-account-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-settings-detail))
      (common-lisp:list
       (common-lisp:cons "accountSettingsDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-collection-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-collection-detail-"))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (created-date common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or collection-id common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or collection-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or collection-status common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or collection-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-collection-detail 'make-update-collection-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-collection-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-collection-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or update-collection-request-description-string
                    common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or collection-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-collection-request
                    'make-update-collection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-request))
   common-lisp:nil))
(common-lisp:deftype update-collection-request-description-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-collection-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-collection-response-"))
   (update-collection-detail common-lisp:nil :type
    (common-lisp:or update-collection-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-collection-response
                    'make-update-collection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-collection-detail))
      (common-lisp:list
       (common-lisp:cons "updateCollectionDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-collection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-lifecycle-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-lifecycle-policy-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or policy-document common-lisp:null))
   (policy-version (common-lisp:error ":policyversion is required") :type
    (common-lisp:or policy-version common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or lifecycle-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-lifecycle-policy-request
                    'make-update-lifecycle-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-lifecycle-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-lifecycle-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-lifecycle-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-lifecycle-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-lifecycle-policy-response-"))
   (lifecycle-policy-detail common-lisp:nil :type
    (common-lisp:or lifecycle-policy-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-lifecycle-policy-response
                    'make-update-lifecycle-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-lifecycle-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-lifecycle-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lifecycle-policy-detail))
      (common-lisp:list
       (common-lisp:cons "lifecyclePolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-lifecycle-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-security-config-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-security-config-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (config-version (common-lisp:error ":configversion is required") :type
    (common-lisp:or policy-version common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or config-description common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or security-config-id common-lisp:null))
   (saml-options common-lisp:nil :type
    (common-lisp:or saml-config-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-security-config-request
                    'make-update-security-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-security-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-security-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config-version))
      (common-lisp:list
       (common-lisp:cons "configVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'saml-options))
      (common-lisp:list
       (common-lisp:cons "samlOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-security-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-security-config-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-security-config-response-"))
   (security-config-detail common-lisp:nil :type
    (common-lisp:or security-config-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-security-config-response
                    'make-update-security-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-security-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-security-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-config-detail))
      (common-lisp:list
       (common-lisp:cons "securityConfigDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-security-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-security-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-security-policy-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or policy-description common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or policy-document common-lisp:null))
   (policy-version (common-lisp:error ":policyversion is required") :type
    (common-lisp:or policy-version common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or security-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-security-policy-request
                    'make-update-security-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-security-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-security-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-version))
      (common-lisp:list
       (common-lisp:cons "policyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-security-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-security-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-security-policy-response-"))
   (security-policy-detail common-lisp:nil :type
    (common-lisp:or security-policy-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-security-policy-response
                    'make-update-security-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-security-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-security-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-policy-detail))
      (common-lisp:list
       (common-lisp:cons "securityPolicyDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-security-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-vpc-endpoint-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-vpc-endpoint-detail-"))
   (id common-lisp:nil :type (common-lisp:or vpc-endpoint-id common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or vpc-endpoint-name common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or vpc-endpoint-status common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-vpc-endpoint-detail
                    'make-update-vpc-endpoint-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "lastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "securityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "subnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-vpc-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-vpc-endpoint-request-"))
   (add-security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids common-lisp:null))
   (add-subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-ids common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or vpc-endpoint-id common-lisp:null))
   (remove-security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids common-lisp:null))
   (remove-subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-vpc-endpoint-request
                    'make-update-vpc-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'add-security-group-ids))
      (common-lisp:list
       (common-lisp:cons "addSecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'add-subnet-ids))
      (common-lisp:list
       (common-lisp:cons "addSubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'remove-security-group-ids))
      (common-lisp:list
       (common-lisp:cons "removeSecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'remove-subnet-ids))
      (common-lisp:list
       (common-lisp:cons "removeSubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-vpc-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-vpc-endpoint-response-"))
   (update-vpc-endpoint-detail common-lisp:nil :type
    (common-lisp:or update-vpc-endpoint-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-vpc-endpoint-response
                    'make-update-vpc-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-vpc-endpoint-detail))
      (common-lisp:list
       (common-lisp:cons "UpdateVpcEndpointDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (opensearchserverless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-endpoint-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-endpoint-detail-"))
   (created-date common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or vpc-endpoint-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or vpc-endpoint-name common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or vpc-endpoint-status common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-ids common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vpc-endpoint-detail 'make-vpc-endpoint-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-endpoint-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-endpoint-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "securityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "subnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "vpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-endpoint-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-details ()
   '(trivial-types:proper-list vpc-endpoint-detail))
 (common-lisp:defun make-vpc-endpoint-details
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-endpoint-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-endpoint-error-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-endpoint-error-detail-"))
   (error-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or vpc-endpoint-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vpc-endpoint-error-detail
                    'make-vpc-endpoint-error-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          vpc-endpoint-error-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          vpc-endpoint-error-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          vpc-endpoint-error-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-error-details ()
   '(trivial-types:proper-list vpc-endpoint-error-detail))
 (common-lisp:defun make-vpc-endpoint-error-details
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            vpc-endpoint-error-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-endpoint-filters (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-endpoint-filters-"))
   (status common-lisp:nil :type
    (common-lisp:or vpc-endpoint-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vpc-endpoint-filters 'make-vpc-endpoint-filters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-endpoint-filters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-endpoint-filters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-endpoint-filters))
   common-lisp:nil))
(common-lisp:deftype vpc-endpoint-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-ids ()
   '(trivial-types:proper-list vpc-endpoint-id))
 (common-lisp:defun make-vpc-endpoint-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-endpoint-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vpc-endpoint-name () 'common-lisp:string)
(common-lisp:deftype vpc-endpoint-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vpc-endpoint-summaries ()
   '(trivial-types:proper-list vpc-endpoint-summary))
 (common-lisp:defun make-vpc-endpoint-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-endpoint-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-endpoint-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-endpoint-summary-"))
   (id common-lisp:nil :type (common-lisp:or vpc-endpoint-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or vpc-endpoint-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or vpc-endpoint-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vpc-endpoint-summary 'make-vpc-endpoint-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-endpoint-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-endpoint-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-endpoint-summary))
   common-lisp:nil))
(common-lisp:deftype vpc-id () 'common-lisp:string)
(common-lisp:deftype |samlGroupAttribute| () 'common-lisp:string)
(common-lisp:deftype |samlMetadata| () 'common-lisp:string)
(common-lisp:deftype |samlUserAttribute| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun batch-get-collection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ids names)
   (common-lisp:declare (common-lisp:ignorable ids names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-collection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "BatchGetCollection"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-get-collection))
(common-lisp:progn
 (common-lisp:defun batch-get-effective-lifecycle-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifiers)
   (common-lisp:declare (common-lisp:ignorable resource-identifiers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-get-effective-lifecycle-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "BatchGetEffectiveLifecyclePolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-get-effective-lifecycle-policy))
(common-lisp:progn
 (common-lisp:defun batch-get-lifecycle-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifiers)
   (common-lisp:declare (common-lisp:ignorable identifiers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-get-lifecycle-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "BatchGetLifecyclePolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-get-lifecycle-policy))
(common-lisp:progn
 (common-lisp:defun batch-get-vpc-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ids)
   (common-lisp:declare (common-lisp:ignorable ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-vpc-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "BatchGetVpcEndpoint"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-get-vpc-endpoint))
(common-lisp:progn
 (common-lisp:defun create-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name policy
                     type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name policy type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-access-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "CreateAccessPolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-access-policy))
(common-lisp:progn
 (common-lisp:defun create-collection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name
                     standby-replicas tags type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name standby-replicas tags
     type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-collection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "CreateCollection"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-collection))
(common-lisp:progn
 (common-lisp:defun create-lifecycle-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name policy
                     type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name policy type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-lifecycle-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "CreateLifecyclePolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-lifecycle-policy))
(common-lisp:progn
 (common-lisp:defun create-security-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name
                     saml-options type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name saml-options type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-security-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "CreateSecurityConfig"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-security-config))
(common-lisp:progn
 (common-lisp:defun create-security-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name policy
                     type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name policy type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-security-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "CreateSecurityPolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-security-policy))
(common-lisp:progn
 (common-lisp:defun create-vpc-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name security-group-ids
                     subnet-ids vpc-id)
   (common-lisp:declare
    (common-lisp:ignorable client-token name security-group-ids subnet-ids
     vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-vpc-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "CreateVpcEndpoint"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-vpc-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name type)
   (common-lisp:declare (common-lisp:ignorable client-token name type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-access-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "DeleteAccessPolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-access-policy))
(common-lisp:progn
 (common-lisp:defun delete-collection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token id)
   (common-lisp:declare (common-lisp:ignorable client-token id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-collection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "DeleteCollection"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-collection))
(common-lisp:progn
 (common-lisp:defun delete-lifecycle-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name type)
   (common-lisp:declare (common-lisp:ignorable client-token name type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-lifecycle-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "DeleteLifecyclePolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-lifecycle-policy))
(common-lisp:progn
 (common-lisp:defun delete-security-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token id)
   (common-lisp:declare (common-lisp:ignorable client-token id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-security-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "DeleteSecurityConfig"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-security-config))
(common-lisp:progn
 (common-lisp:defun delete-security-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name type)
   (common-lisp:declare (common-lisp:ignorable client-token name type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-security-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "DeleteSecurityPolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-security-policy))
(common-lisp:progn
 (common-lisp:defun delete-vpc-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token id)
   (common-lisp:declare (common-lisp:ignorable client-token id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vpc-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "DeleteVpcEndpoint"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-vpc-endpoint))
(common-lisp:progn
 (common-lisp:defun get-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name type)
   (common-lisp:declare (common-lisp:ignorable name type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-access-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "GetAccessPolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-access-policy))
(common-lisp:progn
 (common-lisp:defun get-account-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'opensearchserverless-request :method "POST"
                                :path "/" :operation "GetAccountSettings"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-account-settings))
(common-lisp:progn
 (common-lisp:defun get-policies-stats ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'opensearchserverless-request :method "POST"
                                :path "/" :operation "GetPoliciesStats"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-policies-stats))
(common-lisp:progn
 (common-lisp:defun get-security-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-security-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "GetSecurityConfig"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-security-config))
(common-lisp:progn
 (common-lisp:defun get-security-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name type)
   (common-lisp:declare (common-lisp:ignorable name type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-security-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "GetSecurityPolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-security-policy))
(common-lisp:progn
 (common-lisp:defun list-access-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token resource type)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-access-policies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "ListAccessPolicies"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-access-policies))
(common-lisp:progn
 (common-lisp:defun list-collections
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key collection-filters max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable collection-filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-collections-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "ListCollections"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-collections))
(common-lisp:progn
 (common-lisp:defun list-lifecycle-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token resources type)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resources type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-lifecycle-policies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "ListLifecyclePolicies"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-lifecycle-policies))
(common-lisp:progn
 (common-lisp:defun list-security-configs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token type)
   (common-lisp:declare (common-lisp:ignorable max-results next-token type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-security-configs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "ListSecurityConfigs"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-security-configs))
(common-lisp:progn
 (common-lisp:defun list-security-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token resource type)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-security-policies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "ListSecurityPolicies"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-security-policies))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-vpc-endpoints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     vpc-endpoint-filters)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token vpc-endpoint-filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-vpc-endpoints-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "ListVpcEndpoints"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-vpc-endpoints))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "TagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name policy
                     policy-version type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name policy policy-version
     type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-access-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "UpdateAccessPolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-access-policy))
(common-lisp:progn
 (common-lisp:defun update-account-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key capacity-limits)
   (common-lisp:declare (common-lisp:ignorable capacity-limits))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-account-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "UpdateAccountSettings"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-account-settings))
(common-lisp:progn
 (common-lisp:defun update-collection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description id)
   (common-lisp:declare (common-lisp:ignorable client-token description id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-collection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "UpdateCollection"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-collection))
(common-lisp:progn
 (common-lisp:defun update-lifecycle-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name policy
                     policy-version type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name policy policy-version
     type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-lifecycle-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "UpdateLifecyclePolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-lifecycle-policy))
(common-lisp:progn
 (common-lisp:defun update-security-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token config-version description
                     id saml-options)
   (common-lisp:declare
    (common-lisp:ignorable client-token config-version description id
     saml-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-security-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "UpdateSecurityConfig"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-security-config))
(common-lisp:progn
 (common-lisp:defun update-security-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name policy
                     policy-version type)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name policy policy-version
     type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-security-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "UpdateSecurityPolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-security-policy))
(common-lisp:progn
 (common-lisp:defun update-vpc-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key add-security-group-ids add-subnet-ids
                     client-token id remove-security-group-ids
                     remove-subnet-ids)
   (common-lisp:declare
    (common-lisp:ignorable add-security-group-ids add-subnet-ids client-token
     id remove-security-group-ids remove-subnet-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-vpc-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'opensearchserverless-request aws-sdk/generator/operation::input "POST"
        "/" "UpdateVpcEndpoint"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-vpc-endpoint))
