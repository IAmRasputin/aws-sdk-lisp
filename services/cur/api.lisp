;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cur/api
  (:use)
  (:nicknames #:aws/cur)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/cur/api)
(common-lisp:progn
 (common-lisp:define-condition cur-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'cur-error))
(common-lisp:progn
 (common-lisp:defclass cur-request (aws-sdk/json-request:json-request)
                       common-lisp:nil
                       (:default-initargs :service "cur" :api-version
                        "2017-01-06" :host-prefix "cur" :signing-name "cur"
                        :global-host common-lisp:nil :target-prefix
                        "AWSOrigamiServiceGatewayService" :json-version "1.1"))
 (common-lisp:export 'cur-request))
(common-lisp:defvar *error-map*
  '(("DuplicateReportNameException" . duplicate-report-name-exception)
    ("InternalErrorException" . internal-error-exception)
    ("ReportLimitReachedException" . report-limit-reached-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:deftype awsregion () 'common-lisp:string)
(common-lisp:deftype additional-artifact () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype additional-artifact-list ()
   '(trivial-types:proper-list additional-artifact))
 (common-lisp:defun make-additional-artifact-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list additional-artifact))
   aws-sdk/generator/shape::members))
(common-lisp:deftype billing-view-arn () 'common-lisp:string)
(common-lisp:deftype compression-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-report-definition-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-report-definition-request-"))
   (report-name (common-lisp:error ":report-name is required") :type
    (common-lisp:or report-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-report-definition-request
                    'make-delete-report-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-report-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-report-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-name))
      (common-lisp:list
       (common-lisp:cons "ReportName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-report-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-report-definition-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-report-definition-response-"))
   (response-message common-lisp:nil :type
    (common-lisp:or delete-response-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-report-definition-response
                    'make-delete-report-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-report-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-report-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-message))
      (common-lisp:list
       (common-lisp:cons "ResponseMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-report-definition-response))
   common-lisp:nil))
(common-lisp:deftype delete-response-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (describe-report-definitions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-report-definitions-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or generic-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-report-definitions-request
                    'make-describe-report-definitions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-definitions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-definitions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-report-definitions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-report-definitions-response-"))
   (report-definitions common-lisp:nil :type
    (common-lisp:or report-definition-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or generic-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-report-definitions-response
                    'make-describe-report-definitions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-definitions))
      (common-lisp:list
       (common-lisp:cons "ReportDefinitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition duplicate-report-name-exception
     (cur-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       duplicate-report-name-exception-message)))
 (common-lisp:export
  (common-lisp:list 'duplicate-report-name-exception
                    'duplicate-report-name-exception-message)))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype generic-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-error-exception
     (cur-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-error-exception
                    'internal-error-exception-message)))
(common-lisp:deftype last-delivery () 'common-lisp:string)
(common-lisp:deftype last-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (report-name (common-lisp:error ":report-name is required") :type
    (common-lisp:or report-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-name))
      (common-lisp:list
       (common-lisp:cons "ReportName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (modify-report-definition-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-report-definition-request-"))
   (report-name (common-lisp:error ":report-name is required") :type
    (common-lisp:or report-name common-lisp:null))
   (report-definition (common-lisp:error ":report-definition is required")
    :type (common-lisp:or report-definition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-report-definition-request
                    'make-modify-report-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-report-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-report-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-name))
      (common-lisp:list
       (common-lisp:cons "ReportName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-definition))
      (common-lisp:list
       (common-lisp:cons "ReportDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-report-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-report-definition-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-report-definition-response-")))
 (common-lisp:export
  (common-lisp:list 'modify-report-definition-response
                    'make-modify-report-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-report-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-report-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-report-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-report-definition-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-report-definition-request-"))
   (report-definition (common-lisp:error ":report-definition is required")
    :type (common-lisp:or report-definition common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-report-definition-request
                    'make-put-report-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-report-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-report-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-definition))
      (common-lisp:list
       (common-lisp:cons "ReportDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-report-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-report-definition-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-report-definition-response-")))
 (common-lisp:export
  (common-lisp:list 'put-report-definition-response
                    'make-put-report-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-report-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-report-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-report-definition-response))
   common-lisp:nil))
(common-lisp:deftype refresh-closed-reports () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (report-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-report-definition-"))
   (report-name (common-lisp:error ":report-name is required") :type
    (common-lisp:or report-name common-lisp:null))
   (time-unit (common-lisp:error ":time-unit is required") :type
    (common-lisp:or time-unit common-lisp:null))
   (format (common-lisp:error ":format is required") :type
    (common-lisp:or report-format common-lisp:null))
   (compression (common-lisp:error ":compression is required") :type
    (common-lisp:or compression-format common-lisp:null))
   (additional-schema-elements
    (common-lisp:error ":additional-schema-elements is required") :type
    (common-lisp:or schema-element-list common-lisp:null))
   (s3bucket (common-lisp:error ":s3bucket is required") :type
    (common-lisp:or s3bucket common-lisp:null))
   (s3prefix (common-lisp:error ":s3prefix is required") :type
    (common-lisp:or s3prefix common-lisp:null))
   (s3region (common-lisp:error ":s3region is required") :type
    (common-lisp:or awsregion common-lisp:null))
   (additional-artifacts common-lisp:nil :type
    (common-lisp:or additional-artifact-list common-lisp:null))
   (refresh-closed-reports common-lisp:nil :type
    (common-lisp:or refresh-closed-reports common-lisp:null))
   (report-versioning common-lisp:nil :type
    (common-lisp:or report-versioning common-lisp:null))
   (billing-view-arn common-lisp:nil :type
    (common-lisp:or billing-view-arn common-lisp:null))
   (report-status common-lisp:nil :type
    (common-lisp:or report-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'report-definition 'make-report-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input report-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input report-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-name))
      (common-lisp:list
       (common-lisp:cons "ReportName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-unit))
      (common-lisp:list
       (common-lisp:cons "TimeUnit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'compression))
      (common-lisp:list
       (common-lisp:cons "Compression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-schema-elements))
      (common-lisp:list
       (common-lisp:cons "AdditionalSchemaElements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket))
      (common-lisp:list
       (common-lisp:cons "S3Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3prefix))
      (common-lisp:list
       (common-lisp:cons "S3Prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3region))
      (common-lisp:list
       (common-lisp:cons "S3Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-artifacts))
      (common-lisp:list
       (common-lisp:cons "AdditionalArtifacts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'refresh-closed-reports))
      (common-lisp:list
       (common-lisp:cons "RefreshClosedReports"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-versioning))
      (common-lisp:list
       (common-lisp:cons "ReportVersioning"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-view-arn))
      (common-lisp:list
       (common-lisp:cons "BillingViewArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-status))
      (common-lisp:list
       (common-lisp:cons "ReportStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input report-definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype report-definition-list ()
   '(trivial-types:proper-list report-definition))
 (common-lisp:defun make-report-definition-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list report-definition))
   aws-sdk/generator/shape::members))
(common-lisp:deftype report-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition report-limit-reached-exception
     (cur-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       report-limit-reached-exception-message)))
 (common-lisp:export
  (common-lisp:list 'report-limit-reached-exception
                    'report-limit-reached-exception-message)))
(common-lisp:deftype report-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (report-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-report-status-"))
   (last-delivery common-lisp:nil :type
    (common-lisp:or last-delivery common-lisp:null))
   (last-status common-lisp:nil :type
    (common-lisp:or last-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'report-status 'make-report-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input report-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input report-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-delivery))
      (common-lisp:list
       (common-lisp:cons "lastDelivery"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-status))
      (common-lisp:list
       (common-lisp:cons "lastStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input report-status))
   common-lisp:nil))
(common-lisp:deftype report-versioning () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (cur-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype s3bucket () 'common-lisp:string)
(common-lisp:deftype s3prefix () 'common-lisp:string)
(common-lisp:deftype schema-element () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype schema-element-list ()
   '(trivial-types:proper-list schema-element))
 (common-lisp:defun make-schema-element-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list schema-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (report-name (common-lisp:error ":report-name is required") :type
    (common-lisp:or report-name common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-name))
      (common-lisp:list
       (common-lisp:cons "ReportName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype time-unit () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (report-name (common-lisp:error ":report-name is required") :type
    (common-lisp:or report-name common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-name))
      (common-lisp:list
       (common-lisp:cons "ReportName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (cur-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defun delete-report-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-name)
   (common-lisp:declare (common-lisp:ignorable report-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-report-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cur-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteReportDefinition"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-report-definition))
(common-lisp:progn
 (common-lisp:defun describe-report-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-report-definitions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cur-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeReportDefinitions"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-report-definitions))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-name)
   (common-lisp:declare (common-lisp:ignorable report-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cur-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun modify-report-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-name report-definition)
   (common-lisp:declare (common-lisp:ignorable report-name report-definition))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-report-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cur-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ModifyReportDefinition"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'modify-report-definition))
(common-lisp:progn
 (common-lisp:defun put-report-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-definition tags)
   (common-lisp:declare (common-lisp:ignorable report-definition tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-report-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cur-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutReportDefinition"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-report-definition))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-name tags)
   (common-lisp:declare (common-lisp:ignorable report-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cur-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-name tag-keys)
   (common-lisp:declare (common-lisp:ignorable report-name tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cur-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
