;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/glacier/api
  (:use)
  (:nicknames #:aws/glacier)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/glacier/api)
(common-lisp:progn
 (common-lisp:define-condition glacier-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'glacier-error))
(common-lisp:progn
 (common-lisp:defclass glacier-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "glacier" :api-version
                        "2012-06-01" :host-prefix "glacier" :signing-name
                        common-lisp:nil :global-host common-lisp:nil))
 (common-lisp:export 'glacier-request))
(common-lisp:defvar *error-map*
  '(("InsufficientCapacityException" . insufficient-capacity-exception)
    ("InvalidParameterValueException" . invalid-parameter-value-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("MissingParameterValueException" . missing-parameter-value-exception)
    ("PolicyEnforcedException" . policy-enforced-exception)
    ("RequestTimeoutException" . request-timeout-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (abort-multipart-upload-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-abort-multipart-upload-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (upload-id (common-lisp:error ":uploadid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'abort-multipart-upload-input
                    'make-abort-multipart-upload-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          abort-multipart-upload-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          abort-multipart-upload-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          abort-multipart-upload-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (abort-vault-lock-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-abort-vault-lock-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'abort-vault-lock-input 'make-abort-vault-lock-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          abort-vault-lock-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          abort-vault-lock-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          abort-vault-lock-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype access-control-policy-list ()
   '(trivial-types:proper-list grant))
 (common-lisp:defun make-access-control-policy-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list grant))
   aws-sdk/generator/shape::members))
(common-lisp:deftype action-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (add-tags-to-vault-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-tags-to-vault-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-vault-input 'make-add-tags-to-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-vault-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-vault-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (archive-creation-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-archive-creation-output-"))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (checksum common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'archive-creation-output 'make-archive-creation-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          archive-creation-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:cons "Location" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:cons "x-amz-sha256-tree-hash"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-id))
      (common-lisp:cons "x-amz-archive-id" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          archive-creation-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          archive-creation-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (csvinput (:copier common-lisp:nil) (:conc-name "struct-shape-csvinput-"))
   (file-header-info common-lisp:nil :type
    (common-lisp:or file-header-info common-lisp:null))
   (comments common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (quote-escape-character common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (record-delimiter common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (field-delimiter common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (quote-character common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'csvinput 'make-csvinput))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input csvinput))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input csvinput))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-header-info))
      (common-lisp:list
       (common-lisp:cons "FileHeaderInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comments))
      (common-lisp:list
       (common-lisp:cons "Comments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'quote-escape-character))
      (common-lisp:list
       (common-lisp:cons "QuoteEscapeCharacter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'record-delimiter))
      (common-lisp:list
       (common-lisp:cons "RecordDelimiter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'field-delimiter))
      (common-lisp:list
       (common-lisp:cons "FieldDelimiter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quote-character))
      (common-lisp:list
       (common-lisp:cons "QuoteCharacter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input csvinput))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (csvoutput (:copier common-lisp:nil)
      (:conc-name "struct-shape-csvoutput-"))
   (quote-fields common-lisp:nil :type
    (common-lisp:or quote-fields common-lisp:null))
   (quote-escape-character common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (record-delimiter common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (field-delimiter common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (quote-character common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'csvoutput 'make-csvoutput))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input csvoutput))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input csvoutput))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quote-fields))
      (common-lisp:list
       (common-lisp:cons "QuoteFields"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'quote-escape-character))
      (common-lisp:list
       (common-lisp:cons "QuoteEscapeCharacter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'record-delimiter))
      (common-lisp:list
       (common-lisp:cons "RecordDelimiter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'field-delimiter))
      (common-lisp:list
       (common-lisp:cons "FieldDelimiter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quote-character))
      (common-lisp:list
       (common-lisp:cons "QuoteCharacter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input csvoutput))
   common-lisp:nil))
(common-lisp:deftype canned-acl () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (complete-multipart-upload-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-complete-multipart-upload-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (upload-id (common-lisp:error ":uploadid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-size common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (checksum common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'complete-multipart-upload-input
                    'make-complete-multipart-upload-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          complete-multipart-upload-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-size))
      (common-lisp:cons "x-amz-archive-size" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:cons "x-amz-sha256-tree-hash"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          complete-multipart-upload-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          complete-multipart-upload-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (complete-vault-lock-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-complete-vault-lock-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (lock-id (common-lisp:error ":lockid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'complete-vault-lock-input
                    'make-complete-vault-lock-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          complete-vault-lock-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          complete-vault-lock-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          complete-vault-lock-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-vault-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-vault-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vault-input 'make-create-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-vault-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-vault-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-vault-output-"))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vault-output 'make-create-vault-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-vault-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:cons "Location" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-vault-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-vault-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (data-retrieval-policy (:copier common-lisp:nil)
      (:conc-name "struct-shape-data-retrieval-policy-"))
   (rules common-lisp:nil :type
    (common-lisp:or data-retrieval-rules-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'data-retrieval-policy 'make-data-retrieval-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          data-retrieval-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          data-retrieval-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules))
      (common-lisp:list
       (common-lisp:cons "Rules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          data-retrieval-policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (data-retrieval-rule (:copier common-lisp:nil)
      (:conc-name "struct-shape-data-retrieval-rule-"))
   (strategy common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (bytes-per-hour common-lisp:nil :type
    (common-lisp:or nullable-long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'data-retrieval-rule 'make-data-retrieval-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input data-retrieval-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input data-retrieval-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'strategy))
      (common-lisp:list
       (common-lisp:cons "Strategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes-per-hour))
      (common-lisp:list
       (common-lisp:cons "BytesPerHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input data-retrieval-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype data-retrieval-rules-list ()
   '(trivial-types:proper-list data-retrieval-rule))
 (common-lisp:defun make-data-retrieval-rules-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list data-retrieval-rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-archive-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-archive-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-id (common-lisp:error ":archiveid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-archive-input 'make-delete-archive-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-archive-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-archive-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-archive-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vault-access-policy-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-vault-access-policy-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-vault-access-policy-input
                    'make-delete-vault-access-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vault-access-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vault-access-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vault-access-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vault-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-vault-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-vault-input 'make-delete-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-vault-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vault-notifications-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-vault-notifications-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-vault-notifications-input
                    'make-delete-vault-notifications-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vault-notifications-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vault-notifications-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vault-notifications-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-job-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-job-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (job-id (common-lisp:error ":jobid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-job-input 'make-describe-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input describe-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input describe-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input describe-job-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-vault-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-vault-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-vault-input 'make-describe-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input describe-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input describe-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input describe-vault-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-vault-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-vault-output-"))
   (vault-arn common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (last-inventory-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (number-of-archives common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (size-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-vault-output 'make-describe-vault-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-vault-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-vault-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vault-arn))
      (common-lisp:list
       (common-lisp:cons "VaultARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vault-name))
      (common-lisp:list
       (common-lisp:cons "VaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-inventory-date))
      (common-lisp:list
       (common-lisp:cons "LastInventoryDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-archives))
      (common-lisp:list
       (common-lisp:cons "NumberOfArchives"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "SizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-vault-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (encryption (:copier common-lisp:nil)
      (:conc-name "struct-shape-encryption-"))
   (encryption-type common-lisp:nil :type
    (common-lisp:or encryption-type common-lisp:null))
   (kmskey-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (kmscontext common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'encryption 'make-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-type))
      (common-lisp:list
       (common-lisp:cons "EncryptionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey-id))
      (common-lisp:list
       (common-lisp:cons "KMSKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmscontext))
      (common-lisp:list
       (common-lisp:cons "KMSContext"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input encryption))
   common-lisp:nil))
(common-lisp:deftype encryption-type () 'common-lisp:string)
(common-lisp:deftype expression-type () 'common-lisp:string)
(common-lisp:deftype file-header-info () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-data-retrieval-policy-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-data-retrieval-policy-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-data-retrieval-policy-input
                    'make-get-data-retrieval-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-retrieval-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-retrieval-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-retrieval-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-data-retrieval-policy-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-data-retrieval-policy-output-"))
   (policy common-lisp:nil :type
    (common-lisp:or data-retrieval-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-data-retrieval-policy-output
                    'make-get-data-retrieval-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-retrieval-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-retrieval-policy-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-retrieval-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-job-output-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-job-output-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (job-id (common-lisp:error ":jobid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (range common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-job-output-input 'make-get-job-output-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-job-output-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'range))
      (common-lisp:cons "Range" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-job-output-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-job-output-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-job-output-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-job-output-output-"))
   (body common-lisp:nil :type (common-lisp:or stream common-lisp:null))
   (checksum common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or |httpstatus| common-lisp:null))
   (content-range common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (accept-ranges common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-job-output-output 'make-get-job-output-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-job-output-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:cons "x-amz-sha256-tree-hash"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-range))
      (common-lisp:cons "Content-Range" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accept-ranges))
      (common-lisp:cons "Accept-Ranges" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "Content-Type" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-description))
      (common-lisp:cons "x-amz-archive-description"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-job-output-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-job-output-output))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vault-access-policy-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-vault-access-policy-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vault-access-policy-input
                    'make-get-vault-access-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-access-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-access-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-access-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vault-access-policy-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-vault-access-policy-output-"))
   (policy common-lisp:nil :type
    (common-lisp:or vault-access-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vault-access-policy-output
                    'make-get-vault-access-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-access-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-access-policy-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-access-policy-output))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'policy)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vault-lock-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-vault-lock-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vault-lock-input 'make-get-vault-lock-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-vault-lock-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-vault-lock-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-vault-lock-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vault-lock-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-vault-lock-output-"))
   (policy common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (expiration-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vault-lock-output 'make-get-vault-lock-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-lock-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-lock-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-date))
      (common-lisp:list
       (common-lisp:cons "ExpirationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-lock-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vault-notifications-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-vault-notifications-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vault-notifications-input
                    'make-get-vault-notifications-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-notifications-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-notifications-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-notifications-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vault-notifications-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-vault-notifications-output-"))
   (vault-notification-config common-lisp:nil :type
    (common-lisp:or vault-notification-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vault-notifications-output
                    'make-get-vault-notifications-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-notifications-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-notifications-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vault-notification-config))
      (common-lisp:list
       (common-lisp:cons "vaultNotificationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vault-notifications-output))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'vault-notification-config)))
(common-lisp:progn
 (common-lisp:defstruct
     (glacier-job-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-glacier-job-description-"))
   (job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (job-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (action common-lisp:nil :type (common-lisp:or action-code common-lisp:null))
   (archive-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-arn common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completed common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or status-code common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-size-in-bytes common-lisp:nil :type
    (common-lisp:or size common-lisp:null))
   (inventory-size-in-bytes common-lisp:nil :type
    (common-lisp:or size common-lisp:null))
   (snstopic common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (sha256tree-hash common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-sha256tree-hash common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (retrieval-byte-range common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tier common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (inventory-retrieval-parameters common-lisp:nil :type
    (common-lisp:or inventory-retrieval-job-description common-lisp:null))
   (job-output-path common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (select-parameters common-lisp:nil :type
    (common-lisp:or select-parameters common-lisp:null))
   (output-location common-lisp:nil :type
    (common-lisp:or output-location common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'glacier-job-description 'make-glacier-job-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          glacier-job-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          glacier-job-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-description))
      (common-lisp:list
       (common-lisp:cons "JobDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-id))
      (common-lisp:list
       (common-lisp:cons "ArchiveId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vault-arn))
      (common-lisp:list
       (common-lisp:cons "VaultARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completed))
      (common-lisp:list
       (common-lisp:cons "Completed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "StatusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'archive-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "ArchiveSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inventory-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "InventorySizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snstopic))
      (common-lisp:list
       (common-lisp:cons "SNSTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-date))
      (common-lisp:list
       (common-lisp:cons "CompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sha256tree-hash))
      (common-lisp:list
       (common-lisp:cons "SHA256TreeHash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'archive-sha256tree-hash))
      (common-lisp:list
       (common-lisp:cons "ArchiveSHA256TreeHash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retrieval-byte-range))
      (common-lisp:list
       (common-lisp:cons "RetrievalByteRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tier))
      (common-lisp:list
       (common-lisp:cons "Tier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inventory-retrieval-parameters))
      (common-lisp:list
       (common-lisp:cons "InventoryRetrievalParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-output-path))
      (common-lisp:list
       (common-lisp:cons "JobOutputPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'select-parameters))
      (common-lisp:list
       (common-lisp:cons "SelectParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-location))
      (common-lisp:list
       (common-lisp:cons "OutputLocation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          glacier-job-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (grant (:copier common-lisp:nil) (:conc-name "struct-shape-grant-"))
   (grantee common-lisp:nil :type (common-lisp:or grantee common-lisp:null))
   (permission common-lisp:nil :type
    (common-lisp:or permission common-lisp:null)))
 (common-lisp:export (common-lisp:list 'grant 'make-grant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input grant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grantee))
      (common-lisp:list
       (common-lisp:cons "Grantee"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission))
      (common-lisp:list
       (common-lisp:cons "Permission"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input grant))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (grantee (:copier common-lisp:nil) (:conc-name "struct-shape-grantee-"))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or type common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (uri common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'grantee 'make-grantee))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input grantee))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input grantee))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "DisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uri))
      (common-lisp:list
       (common-lisp:cons "URI"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "ID"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "EmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input grantee))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-job-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-initiate-job-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (job-parameters common-lisp:nil :type
    (common-lisp:or job-parameters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-job-input 'make-initiate-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input initiate-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input initiate-job-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-parameters))
      (common-lisp:list
       (common-lisp:cons "jobParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input initiate-job-input))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'job-parameters)))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-job-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-initiate-job-output-"))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (job-output-path common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-job-output 'make-initiate-job-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input initiate-job-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:cons "Location" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:cons "x-amz-job-id" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-output-path))
      (common-lisp:cons "x-amz-job-output-path"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input initiate-job-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input initiate-job-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-multipart-upload-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-initiate-multipart-upload-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (part-size common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-multipart-upload-input
                    'make-initiate-multipart-upload-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          initiate-multipart-upload-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-description))
      (common-lisp:cons "x-amz-archive-description"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'part-size))
      (common-lisp:cons "x-amz-part-size" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          initiate-multipart-upload-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          initiate-multipart-upload-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-multipart-upload-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-initiate-multipart-upload-output-"))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (upload-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-multipart-upload-output
                    'make-initiate-multipart-upload-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          initiate-multipart-upload-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:cons "Location" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'upload-id))
      (common-lisp:cons "x-amz-multipart-upload-id"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          initiate-multipart-upload-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          initiate-multipart-upload-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-vault-lock-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-initiate-vault-lock-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or vault-lock-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-vault-lock-input
                    'make-initiate-vault-lock-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          initiate-vault-lock-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          initiate-vault-lock-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          initiate-vault-lock-input))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'policy)))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-vault-lock-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-initiate-vault-lock-output-"))
   (lock-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-vault-lock-output
                    'make-initiate-vault-lock-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          initiate-vault-lock-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-id))
      (common-lisp:cons "x-amz-lock-id" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          initiate-vault-lock-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          initiate-vault-lock-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (input-serialization (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-serialization-"))
   (csv common-lisp:nil :type (common-lisp:or csvinput common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-serialization 'make-input-serialization))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-serialization))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-serialization))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'csv))
      (common-lisp:list
       (common-lisp:cons "csv"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-serialization))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition insufficient-capacity-exception
     (glacier-error)
     ((type :initarg :type :initform common-lisp:nil :reader
       insufficient-capacity-exception-type)
      (code :initarg :code :initform common-lisp:nil :reader
       insufficient-capacity-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       insufficient-capacity-exception-message)))
 (common-lisp:export
  (common-lisp:list 'insufficient-capacity-exception
                    'insufficient-capacity-exception-type
                    'insufficient-capacity-exception-code
                    'insufficient-capacity-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-value-exception
     (glacier-error)
     ((type :initarg :type :initform common-lisp:nil :reader
       invalid-parameter-value-exception-type)
      (code :initarg :code :initform common-lisp:nil :reader
       invalid-parameter-value-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-value-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'invalid-parameter-value-exception-type
                    'invalid-parameter-value-exception-code
                    'invalid-parameter-value-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (inventory-retrieval-job-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-inventory-retrieval-job-description-"))
   (format common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (start-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (end-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-retrieval-job-description
                    'make-inventory-retrieval-job-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          inventory-retrieval-job-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          inventory-retrieval-job-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date))
      (common-lisp:list
       (common-lisp:cons "StartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-date))
      (common-lisp:list
       (common-lisp:cons "EndDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          inventory-retrieval-job-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (inventory-retrieval-job-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-inventory-retrieval-job-input-"))
   (start-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (end-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-retrieval-job-input
                    'make-inventory-retrieval-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          inventory-retrieval-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          inventory-retrieval-job-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date))
      (common-lisp:list
       (common-lisp:cons "StartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-date))
      (common-lisp:list
       (common-lisp:cons "EndDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          inventory-retrieval-job-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype job-list ()
   '(trivial-types:proper-list glacier-job-description))
 (common-lisp:defun make-job-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list glacier-job-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (job-parameters (:copier common-lisp:nil)
      (:conc-name "struct-shape-job-parameters-"))
   (format common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (snstopic common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (retrieval-byte-range common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tier common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (inventory-retrieval-parameters common-lisp:nil :type
    (common-lisp:or inventory-retrieval-job-input common-lisp:null))
   (select-parameters common-lisp:nil :type
    (common-lisp:or select-parameters common-lisp:null))
   (output-location common-lisp:nil :type
    (common-lisp:or output-location common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-parameters 'make-job-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-id))
      (common-lisp:list
       (common-lisp:cons "ArchiveId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snstopic))
      (common-lisp:list
       (common-lisp:cons "SNSTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retrieval-byte-range))
      (common-lisp:list
       (common-lisp:cons "RetrievalByteRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tier))
      (common-lisp:list
       (common-lisp:cons "Tier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inventory-retrieval-parameters))
      (common-lisp:list
       (common-lisp:cons "InventoryRetrievalParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'select-parameters))
      (common-lisp:list
       (common-lisp:cons "SelectParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-location))
      (common-lisp:list
       (common-lisp:cons "OutputLocation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (glacier-error)
     ((type :initarg :type :initform common-lisp:nil :reader
       limit-exceeded-exception-type)
      (code :initarg :code :initform common-lisp:nil :reader
       limit-exceeded-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'limit-exceeded-exception-type
                    'limit-exceeded-exception-code
                    'limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-jobs-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-jobs-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (statuscode common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completed common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'list-jobs-input 'make-list-jobs-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-jobs-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-jobs-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-jobs-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-jobs-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-jobs-output-"))
   (job-list common-lisp:nil :type (common-lisp:or job-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-output 'make-list-jobs-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-jobs-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-jobs-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-list))
      (common-lisp:list
       (common-lisp:cons "JobList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-jobs-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-multipart-uploads-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-multipart-uploads-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-multipart-uploads-input
                    'make-list-multipart-uploads-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-multipart-uploads-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-multipart-uploads-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-multipart-uploads-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-multipart-uploads-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-multipart-uploads-output-"))
   (uploads-list common-lisp:nil :type
    (common-lisp:or uploads-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-multipart-uploads-output
                    'make-list-multipart-uploads-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-multipart-uploads-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-multipart-uploads-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uploads-list))
      (common-lisp:list
       (common-lisp:cons "UploadsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-multipart-uploads-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-parts-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-parts-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (upload-id (common-lisp:error ":uploadid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-parts-input 'make-list-parts-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-parts-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-parts-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-parts-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-parts-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-parts-output-"))
   (multipart-upload-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-arn common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (part-size-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (parts common-lisp:nil :type (common-lisp:or part-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-parts-output 'make-list-parts-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-parts-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-parts-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multipart-upload-id))
      (common-lisp:list
       (common-lisp:cons "MultipartUploadId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vault-arn))
      (common-lisp:list
       (common-lisp:cons "VaultARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-description))
      (common-lisp:list
       (common-lisp:cons "ArchiveDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'part-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "PartSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parts))
      (common-lisp:list
       (common-lisp:cons "Parts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-parts-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-provisioned-capacity-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-provisioned-capacity-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-provisioned-capacity-input
                    'make-list-provisioned-capacity-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-provisioned-capacity-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-provisioned-capacity-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-provisioned-capacity-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-provisioned-capacity-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-provisioned-capacity-output-"))
   (provisioned-capacity-list common-lisp:nil :type
    (common-lisp:or provisioned-capacity-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-provisioned-capacity-output
                    'make-list-provisioned-capacity-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-provisioned-capacity-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-provisioned-capacity-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'provisioned-capacity-list))
      (common-lisp:list
       (common-lisp:cons "ProvisionedCapacityList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-provisioned-capacity-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-vault-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-vault-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-vault-input
                    'make-list-tags-for-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-vault-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-vault-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-vault-output-"))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-vault-output
                    'make-list-tags-for-vault-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-vault-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-vault-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-vault-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-vaults-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-vaults-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-vaults-input 'make-list-vaults-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-vaults-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-vaults-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-vaults-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-vaults-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-vaults-output-"))
   (vault-list common-lisp:nil :type
    (common-lisp:or vault-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-vaults-output 'make-list-vaults-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-vaults-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-vaults-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vault-list))
      (common-lisp:list
       (common-lisp:cons "VaultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-vaults-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition missing-parameter-value-exception
     (glacier-error)
     ((type :initarg :type :initform common-lisp:nil :reader
       missing-parameter-value-exception-type)
      (code :initarg :code :initform common-lisp:nil :reader
       missing-parameter-value-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       missing-parameter-value-exception-message)))
 (common-lisp:export
  (common-lisp:list 'missing-parameter-value-exception
                    'missing-parameter-value-exception-type
                    'missing-parameter-value-exception-code
                    'missing-parameter-value-exception-message)))
(common-lisp:progn
 (common-lisp:deftype notification-event-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun make-notification-event-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype nullable-long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (output-location (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-location-"))
   (s3 common-lisp:nil :type (common-lisp:or s3location common-lisp:null)))
 (common-lisp:export (common-lisp:list 'output-location 'make-output-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3))
      (common-lisp:list
       (common-lisp:cons "S3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output-location))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (output-serialization (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-serialization-"))
   (csv common-lisp:nil :type (common-lisp:or csvoutput common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'output-serialization 'make-output-serialization))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output-serialization))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output-serialization))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'csv))
      (common-lisp:list
       (common-lisp:cons "csv"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output-serialization))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype part-list ()
   '(trivial-types:proper-list part-list-element))
 (common-lisp:defun make-part-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list part-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (part-list-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-part-list-element-"))
   (range-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (sha256tree-hash common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'part-list-element 'make-part-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input part-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input part-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'range-in-bytes))
      (common-lisp:list
       (common-lisp:cons "RangeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sha256tree-hash))
      (common-lisp:list
       (common-lisp:cons "SHA256TreeHash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input part-list-element))
   common-lisp:nil))
(common-lisp:deftype permission () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition policy-enforced-exception
     (glacier-error)
     ((type :initarg :type :initform common-lisp:nil :reader
       policy-enforced-exception-type)
      (code :initarg :code :initform common-lisp:nil :reader
       policy-enforced-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       policy-enforced-exception-message)))
 (common-lisp:export
  (common-lisp:list 'policy-enforced-exception 'policy-enforced-exception-type
                    'policy-enforced-exception-code
                    'policy-enforced-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (provisioned-capacity-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-provisioned-capacity-description-"))
   (capacity-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (start-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (expiration-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioned-capacity-description
                    'make-provisioned-capacity-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          provisioned-capacity-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          provisioned-capacity-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity-id))
      (common-lisp:list
       (common-lisp:cons "CapacityId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date))
      (common-lisp:list
       (common-lisp:cons "StartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-date))
      (common-lisp:list
       (common-lisp:cons "ExpirationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          provisioned-capacity-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype provisioned-capacity-list ()
   '(trivial-types:proper-list provisioned-capacity-description))
 (common-lisp:defun make-provisioned-capacity-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            provisioned-capacity-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (purchase-provisioned-capacity-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-purchase-provisioned-capacity-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'purchase-provisioned-capacity-input
                    'make-purchase-provisioned-capacity-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          purchase-provisioned-capacity-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          purchase-provisioned-capacity-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          purchase-provisioned-capacity-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (purchase-provisioned-capacity-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-purchase-provisioned-capacity-output-"))
   (capacity-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'purchase-provisioned-capacity-output
                    'make-purchase-provisioned-capacity-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          purchase-provisioned-capacity-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity-id))
      (common-lisp:cons "x-amz-capacity-id" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          purchase-provisioned-capacity-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          purchase-provisioned-capacity-output))
   common-lisp:nil))
(common-lisp:deftype quote-fields () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (remove-tags-from-vault-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-tags-from-vault-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tag-keys common-lisp:nil :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-vault-input
                    'make-remove-tags-from-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-vault-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-vault-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition request-timeout-exception
     (glacier-error)
     ((type :initarg :type :initform common-lisp:nil :reader
       request-timeout-exception-type)
      (code :initarg :code :initform common-lisp:nil :reader
       request-timeout-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       request-timeout-exception-message)))
 (common-lisp:export
  (common-lisp:list 'request-timeout-exception 'request-timeout-exception-type
                    'request-timeout-exception-code
                    'request-timeout-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (glacier-error)
     ((type :initarg :type :initform common-lisp:nil :reader
       resource-not-found-exception-type)
      (code :initarg :code :initform common-lisp:nil :reader
       resource-not-found-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-type
                    'resource-not-found-exception-code
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (s3location (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3location-"))
   (bucket-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (prefix common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null))
   (canned-acl common-lisp:nil :type
    (common-lisp:or canned-acl common-lisp:null))
   (access-control-list common-lisp:nil :type
    (common-lisp:or access-control-policy-list common-lisp:null))
   (tagging common-lisp:nil :type (common-lisp:or |hashmap| common-lisp:null))
   (user-metadata common-lisp:nil :type
    (common-lisp:or |hashmap| common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3location 'make-s3location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prefix))
      (common-lisp:list
       (common-lisp:cons "Prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canned-acl))
      (common-lisp:list
       (common-lisp:cons "CannedACL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-control-list))
      (common-lisp:list
       (common-lisp:cons "AccessControlList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tagging))
      (common-lisp:list
       (common-lisp:cons "Tagging"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-metadata))
      (common-lisp:list
       (common-lisp:cons "UserMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-class))
      (common-lisp:list
       (common-lisp:cons "StorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3location))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (select-parameters (:copier common-lisp:nil)
      (:conc-name "struct-shape-select-parameters-"))
   (input-serialization common-lisp:nil :type
    (common-lisp:or input-serialization common-lisp:null))
   (expression-type common-lisp:nil :type
    (common-lisp:or expression-type common-lisp:null))
   (expression common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (output-serialization common-lisp:nil :type
    (common-lisp:or output-serialization common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'select-parameters 'make-select-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input select-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input select-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-serialization))
      (common-lisp:list
       (common-lisp:cons "InputSerialization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression-type))
      (common-lisp:list
       (common-lisp:cons "ExpressionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'output-serialization))
      (common-lisp:list
       (common-lisp:cons "OutputSerialization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input select-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (glacier-error)
     ((type :initarg :type :initform common-lisp:nil :reader
       service-unavailable-exception-type)
      (code :initarg :code :initform common-lisp:nil :reader
       service-unavailable-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-type
                    'service-unavailable-exception-code
                    'service-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-data-retrieval-policy-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-data-retrieval-policy-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or data-retrieval-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-data-retrieval-policy-input
                    'make-set-data-retrieval-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-data-retrieval-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-data-retrieval-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-data-retrieval-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (set-vault-access-policy-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-vault-access-policy-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or vault-access-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-vault-access-policy-input
                    'make-set-vault-access-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-vault-access-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-vault-access-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-vault-access-policy-input))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'policy)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-vault-notifications-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-vault-notifications-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-notification-config common-lisp:nil :type
    (common-lisp:or vault-notification-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-vault-notifications-input
                    'make-set-vault-notifications-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-vault-notifications-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-vault-notifications-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vault-notification-config))
      (common-lisp:list
       (common-lisp:cons "vaultNotificationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-vault-notifications-input))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'vault-notification-config)))
(common-lisp:deftype size () 'common-lisp:integer)
(common-lisp:deftype status-code () 'common-lisp:string)
(common-lisp:deftype storage-class () 'common-lisp:string)
(common-lisp:deftype stream ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun make-tag-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (upload-archive-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-upload-archive-input-"))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (checksum common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-archive-input 'make-upload-archive-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input upload-archive-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-description))
      (common-lisp:cons "x-amz-archive-description"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:cons "x-amz-sha256-tree-hash"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input upload-archive-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input upload-archive-input))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:progn
 (common-lisp:defstruct
     (upload-list-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-upload-list-element-"))
   (multipart-upload-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-arn common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (part-size-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-list-element 'make-upload-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input upload-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input upload-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multipart-upload-id))
      (common-lisp:list
       (common-lisp:cons "MultipartUploadId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vault-arn))
      (common-lisp:list
       (common-lisp:cons "VaultARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-description))
      (common-lisp:list
       (common-lisp:cons "ArchiveDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'part-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "PartSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input upload-list-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (upload-multipart-part-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-upload-multipart-part-input-"))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name (common-lisp:error ":vaultname is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (upload-id (common-lisp:error ":uploadid is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (checksum common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (range common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-multipart-part-input
                    'make-upload-multipart-part-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          upload-multipart-part-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:cons "x-amz-sha256-tree-hash"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'range))
      (common-lisp:cons "Content-Range" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          upload-multipart-part-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          upload-multipart-part-input))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:progn
 (common-lisp:defstruct
     (upload-multipart-part-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-upload-multipart-part-output-"))
   (checksum common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-multipart-part-output
                    'make-upload-multipart-part-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          upload-multipart-part-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:cons "x-amz-sha256-tree-hash"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          upload-multipart-part-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          upload-multipart-part-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype uploads-list ()
   '(trivial-types:proper-list upload-list-element))
 (common-lisp:defun make-uploads-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list upload-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (vault-access-policy (:copier common-lisp:nil)
      (:conc-name "struct-shape-vault-access-policy-"))
   (policy common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vault-access-policy 'make-vault-access-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vault-access-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vault-access-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vault-access-policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype vault-list ()
   '(trivial-types:proper-list describe-vault-output))
 (common-lisp:defun make-vault-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list describe-vault-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (vault-lock-policy (:copier common-lisp:nil)
      (:conc-name "struct-shape-vault-lock-policy-"))
   (policy common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vault-lock-policy 'make-vault-lock-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vault-lock-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vault-lock-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vault-lock-policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (vault-notification-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-vault-notification-config-"))
   (snstopic common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (events common-lisp:nil :type
    (common-lisp:or notification-event-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vault-notification-config
                    'make-vault-notification-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          vault-notification-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          vault-notification-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snstopic))
      (common-lisp:list
       (common-lisp:cons "SNSTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "Events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          vault-notification-config))
   common-lisp:nil))
common-lisp:nil
(common-lisp:progn
 (common-lisp:deftype |hashmap| () 'common-lisp:hash-table)
 (common-lisp:defun make-hashmap (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |httpstatus| () 'common-lisp:integer)
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun abort-multipart-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name upload-id)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name upload-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-abort-multipart-upload-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/multipart-uploads/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'upload-id))))
                                                        "AbortMultipartUpload"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'abort-multipart-upload))
(common-lisp:progn
 (common-lisp:defun abort-vault-lock
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-abort-vault-lock-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/lock-policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "AbortVaultLock"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'abort-vault-lock))
(common-lisp:progn
 (common-lisp:defun add-tags-to-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name tags)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-to-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/tags?operation=add"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "AddTagsToVault"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-tags-to-vault))
(common-lisp:progn
 (common-lisp:defun complete-multipart-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name upload-id
                     archive-size checksum)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name upload-id archive-size
     checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-complete-multipart-upload-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/multipart-uploads/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'upload-id))))
                                                        "CompleteMultipartUpload"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'complete-multipart-upload))
(common-lisp:progn
 (common-lisp:defun complete-vault-lock
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name lock-id)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name lock-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-complete-vault-lock-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/lock-policy/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'lock-id))))
                                                        "CompleteVaultLock"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'complete-vault-lock))
(common-lisp:progn
 (common-lisp:defun create-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "CreateVault"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-vault))
(common-lisp:progn
 (common-lisp:defun delete-archive
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name archive-id)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name archive-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-archive-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/archives/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'archive-id))))
                                                        "DeleteArchive"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-archive))
(common-lisp:progn
 (common-lisp:defun delete-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "DeleteVault"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-vault))
(common-lisp:progn
 (common-lisp:defun delete-vault-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vault-access-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/access-policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "DeleteVaultAccessPolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-vault-access-policy))
(common-lisp:progn
 (common-lisp:defun delete-vault-notifications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vault-notifications-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/notification-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "DeleteVaultNotifications"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-vault-notifications))
(common-lisp:progn
 (common-lisp:defun describe-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name job-id)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "DescribeJob"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-job))
(common-lisp:progn
 (common-lisp:defun describe-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "DescribeVault"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-vault))
(common-lisp:progn
 (common-lisp:defun get-data-retrieval-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-data-retrieval-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/policies/data-retrieval"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "GetDataRetrievalPolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-data-retrieval-policy))
(common-lisp:progn
 (common-lisp:defun get-job-output
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name job-id range)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name job-id range))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-job-output-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/jobs/~A/output"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "GetJobOutput")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'get-job-output))
(common-lisp:progn
 (common-lisp:defun get-vault-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vault-access-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/access-policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "GetVaultAccessPolicy"))
      "structure" common-lisp:nil *error-map*)))
 (common-lisp:export 'get-vault-access-policy))
(common-lisp:progn
 (common-lisp:defun get-vault-lock
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vault-lock-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/lock-policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "GetVaultLock"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-vault-lock))
(common-lisp:progn
 (common-lisp:defun get-vault-notifications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vault-notifications-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/notification-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "GetVaultNotifications"))
      "structure" common-lisp:nil *error-map*)))
 (common-lisp:export 'get-vault-notifications))
(common-lisp:progn
 (common-lisp:defun initiate-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name job-parameters)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name job-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-initiate-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/jobs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "InitiateJob"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'initiate-job))
(common-lisp:progn
 (common-lisp:defun initiate-multipart-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name archive-description
                     part-size)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name archive-description
     part-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-initiate-multipart-upload-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/multipart-uploads"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "InitiateMultipartUpload"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'initiate-multipart-upload))
(common-lisp:progn
 (common-lisp:defun initiate-vault-lock
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name policy)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-initiate-vault-lock-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/lock-policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "InitiateVaultLock"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'initiate-vault-lock))
(common-lisp:progn
 (common-lisp:defun list-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name limit marker
                     statuscode completed)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name limit marker statuscode
     completed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-jobs-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/jobs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "ListJobs"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-jobs))
(common-lisp:progn
 (common-lisp:defun list-multipart-uploads
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name marker limit)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-multipart-uploads-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/multipart-uploads"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "ListMultipartUploads"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-multipart-uploads))
(common-lisp:progn
 (common-lisp:defun list-parts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name upload-id marker
                     limit)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name upload-id marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-parts-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/multipart-uploads/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'upload-id))))
                                                        "ListParts"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-parts))
(common-lisp:progn
 (common-lisp:defun list-provisioned-capacity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-provisioned-capacity-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/provisioned-capacity"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "ListProvisionedCapacity"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-provisioned-capacity))
(common-lisp:progn
 (common-lisp:defun list-tags-for-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/tags"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "ListTagsForVault"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-vault))
(common-lisp:progn
 (common-lisp:defun list-vaults
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id marker limit)
   (common-lisp:declare (common-lisp:ignorable account-id marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-vaults-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "ListVaults"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-vaults))
(common-lisp:progn
 (common-lisp:defun purchase-provisioned-capacity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-purchase-provisioned-capacity-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/provisioned-capacity"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "PurchaseProvisionedCapacity"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'purchase-provisioned-capacity))
(common-lisp:progn
 (common-lisp:defun remove-tags-from-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name tag-keys)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-tags-from-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/tags?operation=remove"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "RemoveTagsFromVault"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-tags-from-vault))
(common-lisp:progn
 (common-lisp:defun set-data-retrieval-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id policy)
   (common-lisp:declare (common-lisp:ignorable account-id policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-data-retrieval-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/policies/data-retrieval"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "SetDataRetrievalPolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'set-data-retrieval-policy))
(common-lisp:progn
 (common-lisp:defun set-vault-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name policy)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-vault-access-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/access-policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "SetVaultAccessPolicy"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'set-vault-access-policy))
(common-lisp:progn
 (common-lisp:defun set-vault-notifications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name
                     vault-notification-config)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name vault-notification-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-vault-notifications-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/notification-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "SetVaultNotifications"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'set-vault-notifications))
(common-lisp:progn
 (common-lisp:defun upload-archive
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vault-name account-id archive-description
                     checksum body)
   (common-lisp:declare
    (common-lisp:ignorable vault-name account-id archive-description checksum
     body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-upload-archive-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/archives"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))))
                                                        "UploadArchive"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'upload-archive))
(common-lisp:progn
 (common-lisp:defun upload-multipart-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name upload-id checksum
                     range body)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name upload-id checksum range
     body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-upload-multipart-part-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'glacier-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/~A/vaults/~A/multipart-uploads/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'upload-id))))
                                                        "UploadMultipartPart"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'upload-multipart-part))
