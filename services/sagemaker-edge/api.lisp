;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/sagemaker-edge/api
  (:use)
  (:nicknames #:aws/sagemaker-edge)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/sagemaker-edge/api)
(common-lisp:progn
 (common-lisp:defclass sagemaker-edge-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "sagemaker-edge"))
 (common-lisp:export 'sagemaker-edge-request))
(common-lisp:progn
 (common-lisp:define-condition sagemaker-edge-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'sagemaker-edge-error))
(common-lisp:defvar *error-map*
  '(("InternalServiceException" . internal-service-exception)))
(common-lisp:deftype cache-ttlseconds () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (checksum (:copier common-lisp:nil) (:conc-name "struct-shape-checksum-"))
   (type common-lisp:nil :type (common-lisp:or checksum-type common-lisp:null))
   (sum common-lisp:nil :type
    (common-lisp:or checksum-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'checksum 'make-checksum))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input checksum))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input checksum))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sum))
      (common-lisp:list
       (common-lisp:cons "Sum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input checksum))
   common-lisp:nil))
(common-lisp:deftype checksum-string () 'common-lisp:string)
(common-lisp:deftype checksum-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-definition-"))
   (model-handle common-lisp:nil :type
    (common-lisp:or entity-name common-lisp:null))
   (s3url common-lisp:nil :type (common-lisp:or s3uri common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or checksum common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or model-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'definition 'make-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-handle))
      (common-lisp:list
       (common-lisp:cons "ModelHandle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "Checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype definitions () '(trivial-types:proper-list definition))
 (common-lisp:defun |make-definitions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list definition))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-model (:copier common-lisp:nil)
      (:conc-name "struct-shape-deployment-model-"))
   (model-handle common-lisp:nil :type
    (common-lisp:or entity-name common-lisp:null))
   (model-name common-lisp:nil :type
    (common-lisp:or model-name common-lisp:null))
   (model-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (desired-state common-lisp:nil :type
    (common-lisp:or model-state common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or model-state common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or deployment-status common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (rollback-failure-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deployment-model 'make-deployment-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment-model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment-model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-handle))
      (common-lisp:list
       (common-lisp:cons "ModelHandle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-name))
      (common-lisp:list
       (common-lisp:cons "ModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-version))
      (common-lisp:list
       (common-lisp:cons "ModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-state))
      (common-lisp:list
       (common-lisp:cons "DesiredState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'rollback-failure-reason))
      (common-lisp:list
       (common-lisp:cons "RollbackFailureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment-model))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype deployment-models ()
   '(trivial-types:proper-list deployment-model))
 (common-lisp:defun |make-deployment-models|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment-model))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-deployment-result-"))
   (deployment-name common-lisp:nil :type
    (common-lisp:or entity-name common-lisp:null))
   (deployment-status common-lisp:nil :type
    (common-lisp:or entity-name common-lisp:null))
   (deployment-status-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (deployment-start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (deployment-end-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (deployment-models common-lisp:nil :type
    (common-lisp:or deployment-models common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deployment-result 'make-deployment-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-name))
      (common-lisp:list
       (common-lisp:cons "DeploymentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-start-time))
      (common-lisp:list
       (common-lisp:cons "DeploymentStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-end-time))
      (common-lisp:list
       (common-lisp:cons "DeploymentEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-models))
      (common-lisp:list
       (common-lisp:cons "DeploymentModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment-result))
   common-lisp:nil))
(common-lisp:deftype deployment-status () 'common-lisp:string)
(common-lisp:deftype deployment-type () 'common-lisp:string)
(common-lisp:deftype device-fleet-name () 'common-lisp:string)
(common-lisp:deftype device-name () 'common-lisp:string)
(common-lisp:deftype device-registration () 'common-lisp:string)
(common-lisp:deftype dimension () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (edge-deployment (:copier common-lisp:nil)
      (:conc-name "struct-shape-edge-deployment-"))
   (deployment-name common-lisp:nil :type
    (common-lisp:or entity-name common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or deployment-type common-lisp:null))
   (failure-handling-policy common-lisp:nil :type
    (common-lisp:or failure-handling-policy common-lisp:null))
   (definitions common-lisp:nil :type
    (common-lisp:or definitions common-lisp:null)))
 (common-lisp:export (common-lisp:list 'edge-deployment 'make-edge-deployment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input edge-deployment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input edge-deployment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-name))
      (common-lisp:list
       (common-lisp:cons "DeploymentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-handling-policy))
      (common-lisp:list
       (common-lisp:cons "FailureHandlingPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definitions))
      (common-lisp:list
       (common-lisp:cons "Definitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input edge-deployment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype edge-deployments ()
   '(trivial-types:proper-list edge-deployment))
 (common-lisp:defun |make-edge-deployments|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list edge-deployment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (edge-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-edge-metric-"))
   (dimension common-lisp:nil :type
    (common-lisp:or dimension common-lisp:null))
   (metric-name common-lisp:nil :type (common-lisp:or metric common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or value common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'edge-metric 'make-edge-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input edge-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input edge-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension))
      (common-lisp:list
       (common-lisp:cons "Dimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input edge-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype edge-metrics () '(trivial-types:proper-list edge-metric))
 (common-lisp:defun |make-edge-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list edge-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype entity-name () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype failure-handling-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployments-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-deployments-request-"))
   (device-name (common-lisp:error ":device-name is required") :type
    (common-lisp:or device-name common-lisp:null))
   (device-fleet-name (common-lisp:error ":device-fleet-name is required")
    :type (common-lisp:or device-fleet-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployments-request 'make-get-deployments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-name))
      (common-lisp:list
       (common-lisp:cons "DeviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-fleet-name))
      (common-lisp:list
       (common-lisp:cons "DeviceFleetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployments-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-deployments-result-"))
   (deployments common-lisp:nil :type
    (common-lisp:or edge-deployments common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployments-result 'make-get-deployments-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployments))
      (common-lisp:list
       (common-lisp:cons "Deployments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-device-registration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-device-registration-request-"))
   (device-name (common-lisp:error ":device-name is required") :type
    (common-lisp:or device-name common-lisp:null))
   (device-fleet-name (common-lisp:error ":device-fleet-name is required")
    :type (common-lisp:or device-fleet-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-registration-request
                    'make-get-device-registration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-device-registration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-device-registration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-name))
      (common-lisp:list
       (common-lisp:cons "DeviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-fleet-name))
      (common-lisp:list
       (common-lisp:cons "DeviceFleetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-device-registration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-device-registration-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-device-registration-result-"))
   (device-registration common-lisp:nil :type
    (common-lisp:or device-registration common-lisp:null))
   (cache-ttl common-lisp:nil :type
    (common-lisp:or cache-ttlseconds common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-registration-result
                    'make-get-device-registration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-device-registration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-device-registration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-registration))
      (common-lisp:list
       (common-lisp:cons "DeviceRegistration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-ttl))
      (common-lisp:list
       (common-lisp:cons "CacheTTL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-device-registration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-service-exception
     (sagemaker-edge-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-service-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-service-exception
                    'internal-service-exception-message)))
(common-lisp:deftype metric () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (model (:copier common-lisp:nil) (:conc-name "struct-shape-model-"))
   (model-name common-lisp:nil :type
    (common-lisp:or model-name common-lisp:null))
   (model-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (latest-sample-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (latest-inference common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (model-metrics common-lisp:nil :type
    (common-lisp:or edge-metrics common-lisp:null)))
 (common-lisp:export (common-lisp:list 'model 'make-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-name))
      (common-lisp:list
       (common-lisp:cons "ModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-version))
      (common-lisp:list
       (common-lisp:cons "ModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-sample-time))
      (common-lisp:list
       (common-lisp:cons "LatestSampleTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-inference))
      (common-lisp:list
       (common-lisp:cons "LatestInference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-metrics))
      (common-lisp:list
       (common-lisp:cons "ModelMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input model))
   common-lisp:nil))
(common-lisp:deftype model-name () 'common-lisp:string)
(common-lisp:deftype model-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype models () '(trivial-types:proper-list model))
 (common-lisp:defun |make-models|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list model))
   aws-sdk/generator/shape::members))
(common-lisp:deftype s3uri () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (send-heartbeat-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-heartbeat-request-"))
   (agent-metrics common-lisp:nil :type
    (common-lisp:or edge-metrics common-lisp:null))
   (models common-lisp:nil :type (common-lisp:or models common-lisp:null))
   (agent-version (common-lisp:error ":agent-version is required") :type
    (common-lisp:or version common-lisp:null))
   (device-name (common-lisp:error ":device-name is required") :type
    (common-lisp:or device-name common-lisp:null))
   (device-fleet-name (common-lisp:error ":device-fleet-name is required")
    :type (common-lisp:or device-fleet-name common-lisp:null))
   (deployment-result common-lisp:nil :type
    (common-lisp:or deployment-result common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-heartbeat-request 'make-send-heartbeat-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-heartbeat-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-heartbeat-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-metrics))
      (common-lisp:list
       (common-lisp:cons "AgentMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'models))
      (common-lisp:list
       (common-lisp:cons "Models"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-version))
      (common-lisp:list
       (common-lisp:cons "AgentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-name))
      (common-lisp:list
       (common-lisp:cons "DeviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-fleet-name))
      (common-lisp:list
       (common-lisp:cons "DeviceFleetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-result))
      (common-lisp:list
       (common-lisp:cons "DeploymentResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-heartbeat-request))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype value () 'common-lisp:double-float)
(common-lisp:deftype version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun get-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-name device-fleet-name)
   (common-lisp:declare (common-lisp:ignorable device-name device-fleet-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sagemaker-edge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/GetDeployments"
                                                        "GetDeployments"
                                                        "2020-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-deployments))
(common-lisp:progn
 (common-lisp:defun get-device-registration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-name device-fleet-name)
   (common-lisp:declare (common-lisp:ignorable device-name device-fleet-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-device-registration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sagemaker-edge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/GetDeviceRegistration"
                                                        "GetDeviceRegistration"
                                                        "2020-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-device-registration))
(common-lisp:progn
 (common-lisp:defun send-heartbeat
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key agent-metrics models agent-version
                     device-name device-fleet-name deployment-result)
   (common-lisp:declare
    (common-lisp:ignorable agent-metrics models agent-version device-name
     device-fleet-name deployment-result))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-heartbeat-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sagemaker-edge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/SendHeartbeat"
                                                        "SendHeartbeat"
                                                        "2020-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'send-heartbeat))
