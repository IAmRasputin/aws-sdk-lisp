;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/resourcegroupstaggingapi/api
  (:use)
  (:nicknames #:aws/resourcegroupstaggingapi)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/resourcegroupstaggingapi/api)
(common-lisp:progn
 (common-lisp:defclass resourcegroupstaggingapi-request
                       (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "resourcegroupstaggingapi"
                        :protocol :json))
 (common-lisp:export 'resourcegroupstaggingapi-request))
(common-lisp:progn
 (common-lisp:define-condition resourcegroupstaggingapi-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'resourcegroupstaggingapi-error))
(common-lisp:defvar *error-map*
  '(("ConcurrentModificationException" . concurrent-modification-exception)
    ("ConstraintViolationException" . constraint-violation-exception)
    ("InternalServiceException" . internal-service-exception)
    ("InvalidParameterException" . invalid-parameter-exception)
    ("PaginationTokenExpiredException" . pagination-token-expired-exception)
    ("ThrottledException" . throttled-exception)))
(common-lisp:deftype amazon-resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass compliance-details common-lisp:nil
                       ((compliance-status :initarg :compliance-status :type
                         (common-lisp:or compliance-status common-lisp:null)
                         :accessor %compliance-details-compliance-status
                         :initform common-lisp:nil)
                        (keys-with-noncompliant-values :initarg
                         :keys-with-noncompliant-values :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor
                         %compliance-details-keys-with-noncompliant-values
                         :initform common-lisp:nil)
                        (noncompliant-keys :initarg :noncompliant-keys :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor %compliance-details-noncompliant-keys
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'compliance-details 'make-compliance-details))
 (common-lisp:defun make-compliance-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key compliance-status
                     keys-with-noncompliant-values noncompliant-keys)
   (common-lisp:apply #'common-lisp:make-instance 'compliance-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input compliance-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input compliance-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'noncompliant-keys))
      (common-lisp:list
       (common-lisp:cons "NoncompliantKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'keys-with-noncompliant-values))
      (common-lisp:list
       (common-lisp:cons "KeysWithNoncompliantValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'compliance-status))
      (common-lisp:list
       (common-lisp:cons "ComplianceStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input compliance-details))
   common-lisp:nil))
(common-lisp:deftype compliance-status () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:define-condition concurrent-modification-exception
     (resourcegroupstaggingapi-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       concurrent-modification-exception-message)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'concurrent-modification-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition constraint-violation-exception
     (resourcegroupstaggingapi-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       constraint-violation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'constraint-violation-exception
                    'constraint-violation-exception-message)))
(common-lisp:progn
 (common-lisp:defclass describe-report-creation-input common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'describe-report-creation-input
                    'make-describe-report-creation-input))
 (common-lisp:defun make-describe-report-creation-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-report-creation-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-creation-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-creation-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-creation-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-report-creation-output common-lisp:nil
                       ((error-message :initarg :error-message :type
                         (common-lisp:or error-message common-lisp:null)
                         :accessor
                         %describe-report-creation-output-error-message
                         :initform common-lisp:nil)
                        (s3location :initarg :s3location :type
                         (common-lisp:or s3location common-lisp:null) :accessor
                         %describe-report-creation-output-s3location :initform
                         common-lisp:nil)
                        (status :initarg :status :type
                         (common-lisp:or status common-lisp:null) :accessor
                         %describe-report-creation-output-status :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-report-creation-output
                    'make-describe-report-creation-output))
 (common-lisp:defun make-describe-report-creation-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key error-message s3location status)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-report-creation-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-creation-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-creation-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3location))
      (common-lisp:list
       (common-lisp:cons "S3Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-creation-output))
   common-lisp:nil))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:deftype exclude-compliant-resources () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:deftype failed-resources-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-failed-resources-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass failure-info common-lisp:nil
                       ((error-message :initarg :error-message :type
                         (common-lisp:or error-message common-lisp:null)
                         :accessor %failure-info-error-message :initform
                         common-lisp:nil)
                        (error-code :initarg :error-code :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         %failure-info-error-code :initform common-lisp:nil)
                        (status-code :initarg :status-code :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor %failure-info-status-code :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'failure-info 'make-failure-info))
 (common-lisp:defun make-failure-info
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key error-message error-code status-code)
   (common-lisp:apply #'common-lisp:make-instance 'failure-info
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input failure-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input failure-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "StatusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input failure-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-compliance-summary-input common-lisp:nil
                       ((pagination-token :initarg :pagination-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         %get-compliance-summary-input-pagination-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results-get-compliance-summary
                                         common-lisp:null)
                         :accessor %get-compliance-summary-input-max-results
                         :initform common-lisp:nil)
                        (group-by :initarg :group-by :type
                         (common-lisp:or group-by common-lisp:null) :accessor
                         %get-compliance-summary-input-group-by :initform
                         common-lisp:nil)
                        (tag-key-filters :initarg :tag-key-filters :type
                         (common-lisp:or tag-key-filter-list common-lisp:null)
                         :accessor
                         %get-compliance-summary-input-tag-key-filters
                         :initform common-lisp:nil)
                        (resource-type-filters :initarg :resource-type-filters
                         :type
                         (common-lisp:or resource-type-filter-list
                                         common-lisp:null)
                         :accessor
                         %get-compliance-summary-input-resource-type-filters
                         :initform common-lisp:nil)
                        (region-filters :initarg :region-filters :type
                         (common-lisp:or region-filter-list common-lisp:null)
                         :accessor %get-compliance-summary-input-region-filters
                         :initform common-lisp:nil)
                        (target-id-filters :initarg :target-id-filters :type
                         (common-lisp:or target-id-filter-list
                                         common-lisp:null)
                         :accessor
                         %get-compliance-summary-input-target-id-filters
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-compliance-summary-input
                    'make-get-compliance-summary-input))
 (common-lisp:defun make-get-compliance-summary-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key pagination-token max-results group-by
                     tag-key-filters resource-type-filters region-filters
                     target-id-filters)
   (common-lisp:apply #'common-lisp:make-instance 'get-compliance-summary-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-compliance-summary-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-compliance-summary-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id-filters))
      (common-lisp:list
       (common-lisp:cons "TargetIdFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region-filters))
      (common-lisp:list
       (common-lisp:cons "RegionFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-type-filters))
      (common-lisp:list
       (common-lisp:cons "ResourceTypeFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-key-filters))
      (common-lisp:list
       (common-lisp:cons "TagKeyFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-by))
      (common-lisp:list
       (common-lisp:cons "GroupBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-compliance-summary-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-compliance-summary-output common-lisp:nil
                       ((pagination-token :initarg :pagination-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         %get-compliance-summary-output-pagination-token
                         :initform common-lisp:nil)
                        (summary-list :initarg :summary-list :type
                         (common-lisp:or summary-list common-lisp:null)
                         :accessor %get-compliance-summary-output-summary-list
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-compliance-summary-output
                    'make-get-compliance-summary-output))
 (common-lisp:defun make-get-compliance-summary-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key pagination-token summary-list)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-compliance-summary-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-compliance-summary-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-compliance-summary-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'summary-list))
      (common-lisp:list
       (common-lisp:cons "SummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-compliance-summary-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resources-input common-lisp:nil
                       ((resource-arnlist :initarg :resource-arnlist :type
                         (common-lisp:or resource-arnlist-for-get
                                         common-lisp:null)
                         :accessor %get-resources-input-resource-arnlist
                         :initform common-lisp:nil)
                        (exclude-compliant-resources :initarg
                         :exclude-compliant-resources :type
                         (common-lisp:or exclude-compliant-resources
                                         common-lisp:null)
                         :accessor
                         %get-resources-input-exclude-compliant-resources
                         :initform common-lisp:nil)
                        (include-compliance-details :initarg
                         :include-compliance-details :type
                         (common-lisp:or include-compliance-details
                                         common-lisp:null)
                         :accessor
                         %get-resources-input-include-compliance-details
                         :initform common-lisp:nil)
                        (resource-type-filters :initarg :resource-type-filters
                         :type
                         (common-lisp:or resource-type-filter-list
                                         common-lisp:null)
                         :accessor %get-resources-input-resource-type-filters
                         :initform common-lisp:nil)
                        (tags-per-page :initarg :tags-per-page :type
                         (common-lisp:or tags-per-page common-lisp:null)
                         :accessor %get-resources-input-tags-per-page :initform
                         common-lisp:nil)
                        (resources-per-page :initarg :resources-per-page :type
                         (common-lisp:or resources-per-page common-lisp:null)
                         :accessor %get-resources-input-resources-per-page
                         :initform common-lisp:nil)
                        (tag-filters :initarg :tag-filters :type
                         (common-lisp:or tag-filter-list common-lisp:null)
                         :accessor %get-resources-input-tag-filters :initform
                         common-lisp:nil)
                        (pagination-token :initarg :pagination-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %get-resources-input-pagination-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-resources-input 'make-get-resources-input))
 (common-lisp:defun make-get-resources-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arnlist
                     exclude-compliant-resources include-compliance-details
                     resource-type-filters tags-per-page resources-per-page
                     tag-filters pagination-token)
   (common-lisp:apply #'common-lisp:make-instance 'get-resources-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-resources-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-resources-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-filters))
      (common-lisp:list
       (common-lisp:cons "TagFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources-per-page))
      (common-lisp:list
       (common-lisp:cons "ResourcesPerPage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags-per-page))
      (common-lisp:list
       (common-lisp:cons "TagsPerPage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-type-filters))
      (common-lisp:list
       (common-lisp:cons "ResourceTypeFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-compliance-details))
      (common-lisp:list
       (common-lisp:cons "IncludeComplianceDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'exclude-compliant-resources))
      (common-lisp:list
       (common-lisp:cons "ExcludeCompliantResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arnlist))
      (common-lisp:list
       (common-lisp:cons "ResourceARNList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-resources-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resources-output common-lisp:nil
                       ((resource-tag-mapping-list :initarg
                         :resource-tag-mapping-list :type
                         (common-lisp:or resource-tag-mapping-list
                                         common-lisp:null)
                         :accessor
                         %get-resources-output-resource-tag-mapping-list
                         :initform common-lisp:nil)
                        (pagination-token :initarg :pagination-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %get-resources-output-pagination-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-resources-output 'make-get-resources-output))
 (common-lisp:defun make-get-resources-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-tag-mapping-list
                     pagination-token)
   (common-lisp:apply #'common-lisp:make-instance 'get-resources-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-resources-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-resources-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-tag-mapping-list))
      (common-lisp:list
       (common-lisp:cons "ResourceTagMappingList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-resources-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-tag-keys-input common-lisp:nil
                       ((pagination-token :initarg :pagination-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %get-tag-keys-input-pagination-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-tag-keys-input 'make-get-tag-keys-input))
 (common-lisp:defun make-get-tag-keys-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key pagination-token)
   (common-lisp:apply #'common-lisp:make-instance 'get-tag-keys-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-tag-keys-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-tag-keys-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-tag-keys-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-tag-keys-output common-lisp:nil
                       ((tag-keys :initarg :tag-keys :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor %get-tag-keys-output-tag-keys :initform
                         common-lisp:nil)
                        (pagination-token :initarg :pagination-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %get-tag-keys-output-pagination-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-tag-keys-output 'make-get-tag-keys-output))
 (common-lisp:defun make-get-tag-keys-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys pagination-token)
   (common-lisp:apply #'common-lisp:make-instance 'get-tag-keys-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-tag-keys-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-tag-keys-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-tag-keys-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-tag-values-input common-lisp:nil
                       ((key :initarg :key :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         %get-tag-values-input-key :initform
                         (common-lisp:error ":key is required"))
                        (pagination-token :initarg :pagination-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %get-tag-values-input-pagination-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-tag-values-input 'make-get-tag-values-input))
 (common-lisp:defun make-get-tag-values-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key key pagination-token)
   (common-lisp:apply #'common-lisp:make-instance 'get-tag-values-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-tag-values-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-tag-values-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-tag-values-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-tag-values-output common-lisp:nil
                       ((tag-values :initarg :tag-values :type
                         (common-lisp:or tag-values-output-list
                                         common-lisp:null)
                         :accessor %get-tag-values-output-tag-values :initform
                         common-lisp:nil)
                        (pagination-token :initarg :pagination-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %get-tag-values-output-pagination-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-tag-values-output 'make-get-tag-values-output))
 (common-lisp:defun make-get-tag-values-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-values pagination-token)
   (common-lisp:apply #'common-lisp:make-instance 'get-tag-values-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-tag-values-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-tag-values-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-values))
      (common-lisp:list
       (common-lisp:cons "TagValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-tag-values-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype group-by ()
   '(trivial-types:proper-list group-by-attribute))
 (common-lisp:defun |make-group-by|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list group-by-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:deftype group-by-attribute () 'common-lisp:string)
(common-lisp:deftype include-compliance-details () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:define-condition internal-service-exception
     (resourcegroupstaggingapi-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-service-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-service-exception
                    'internal-service-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-exception
     (resourcegroupstaggingapi-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'invalid-parameter-exception-message)))
(common-lisp:deftype last-updated () 'common-lisp:string)
(common-lisp:deftype max-results-get-compliance-summary () 'common-lisp:integer)
(common-lisp:deftype non-compliant-resources () 'common-lisp:integer)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition pagination-token-expired-exception
     (resourcegroupstaggingapi-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       pagination-token-expired-exception-message)))
 (common-lisp:export
  (common-lisp:list 'pagination-token-expired-exception
                    'pagination-token-expired-exception-message)))
(common-lisp:deftype region () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype region-filter-list ()
   '(trivial-types:proper-list region))
 (common-lisp:defun |make-region-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list region))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-arnlist-for-get ()
   '(trivial-types:proper-list resource-arn))
 (common-lisp:defun |make-resource-arnlist-for-get|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype resource-arnlist-for-tag-untag ()
   '(trivial-types:proper-list resource-arn))
 (common-lisp:defun |make-resource-arnlist-for-tag-untag|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass resource-tag-mapping common-lisp:nil
                       ((compliance-details :initarg :compliance-details :type
                         (common-lisp:or compliance-details common-lisp:null)
                         :accessor %resource-tag-mapping-compliance-details
                         :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %resource-tag-mapping-tags :initform common-lisp:nil)
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %resource-tag-mapping-resource-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-tag-mapping 'make-resource-tag-mapping))
 (common-lisp:defun make-resource-tag-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key compliance-details tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'resource-tag-mapping
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-tag-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-tag-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'compliance-details))
      (common-lisp:list
       (common-lisp:cons "ComplianceDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-tag-mapping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-tag-mapping-list ()
   '(trivial-types:proper-list resource-tag-mapping))
 (common-lisp:defun |make-resource-tag-mapping-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-tag-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype resource-type-filter-list ()
   '(trivial-types:proper-list amazon-resource-type))
 (common-lisp:defun |make-resource-type-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list amazon-resource-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resources-per-page () 'common-lisp:integer)
(common-lisp:deftype s3bucket () 'common-lisp:string)
(common-lisp:deftype s3location () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass start-report-creation-input common-lisp:nil
                       ((s3bucket :initarg :s3bucket :type
                         (common-lisp:or s3bucket common-lisp:null) :accessor
                         %start-report-creation-input-s3bucket :initform
                         (common-lisp:error ":s3bucket is required"))))
 (common-lisp:export
  (common-lisp:list 'start-report-creation-input
                    'make-start-report-creation-input))
 (common-lisp:defun make-start-report-creation-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3bucket)
   (common-lisp:apply #'common-lisp:make-instance 'start-report-creation-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-report-creation-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-report-creation-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket))
      (common-lisp:list
       (common-lisp:cons "S3Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-report-creation-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-report-creation-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'start-report-creation-output
                    'make-start-report-creation-output))
 (common-lisp:defun make-start-report-creation-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'start-report-creation-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-report-creation-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-report-creation-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-report-creation-output))
   common-lisp:nil))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:deftype status-code () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass summary common-lisp:nil
                       ((non-compliant-resources :initarg
                         :non-compliant-resources :type
                         (common-lisp:or non-compliant-resources
                                         common-lisp:null)
                         :accessor %summary-non-compliant-resources :initform
                         common-lisp:nil)
                        (resource-type :initarg :resource-type :type
                         (common-lisp:or amazon-resource-type common-lisp:null)
                         :accessor %summary-resource-type :initform
                         common-lisp:nil)
                        (region :initarg :region :type
                         (common-lisp:or region common-lisp:null) :accessor
                         %summary-region :initform common-lisp:nil)
                        (target-id-type :initarg :target-id-type :type
                         (common-lisp:or target-id-type common-lisp:null)
                         :accessor %summary-target-id-type :initform
                         common-lisp:nil)
                        (target-id :initarg :target-id :type
                         (common-lisp:or target-id common-lisp:null) :accessor
                         %summary-target-id :initform common-lisp:nil)
                        (last-updated :initarg :last-updated :type
                         (common-lisp:or last-updated common-lisp:null)
                         :accessor %summary-last-updated :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'summary 'make-summary))
 (common-lisp:defun make-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key non-compliant-resources resource-type
                     region target-id-type target-id last-updated)
   (common-lisp:apply #'common-lisp:make-instance 'summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "TargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id-type))
      (common-lisp:list
       (common-lisp:cons "TargetIdType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'non-compliant-resources))
      (common-lisp:list
       (common-lisp:cons "NonCompliantResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype summary-list () '(trivial-types:proper-list summary))
 (common-lisp:defun |make-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((value :initarg :value :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         %tag-value :initform
                         (common-lisp:error ":value is required"))
                        (key :initarg :key :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         %tag-key :initform
                         (common-lisp:error ":key is required"))))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defun make-tag
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value key)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-filter common-lisp:nil
                       ((values :initarg :values :type
                         (common-lisp:or tag-value-list common-lisp:null)
                         :accessor %tag-filter-values :initform
                         common-lisp:nil)
                        (key :initarg :key :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         %tag-filter-key :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'tag-filter 'make-tag-filter))
 (common-lisp:defun make-tag-filter
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key values key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tag-filter-list ()
   '(trivial-types:proper-list tag-filter))
 (common-lisp:defun |make-tag-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-filter-list ()
   '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-key-list-for-untag ()
   '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list-for-untag|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resources-input common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %tag-resources-input-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arnlist :initarg :resource-arnlist :type
                         (common-lisp:or resource-arnlist-for-tag-untag
                                         common-lisp:null)
                         :accessor %tag-resources-input-resource-arnlist
                         :initform
                         (common-lisp:error ":resource-arnlist is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resources-input 'make-tag-resources-input))
 (common-lisp:defun make-tag-resources-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arnlist)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resources-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resources-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resources-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arnlist))
      (common-lisp:list
       (common-lisp:cons "ResourceARNList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resources-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resources-output common-lisp:nil
                       ((failed-resources-map :initarg :failed-resources-map
                         :type
                         (common-lisp:or failed-resources-map common-lisp:null)
                         :accessor %tag-resources-output-failed-resources-map
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'tag-resources-output 'make-tag-resources-output))
 (common-lisp:defun make-tag-resources-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key failed-resources-map)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resources-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resources-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resources-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-resources-map))
      (common-lisp:list
       (common-lisp:cons "FailedResourcesMap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resources-output))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-value-list () '(trivial-types:proper-list tag-value))
 (common-lisp:defun |make-tag-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-values-output-list ()
   '(trivial-types:proper-list tag-value))
 (common-lisp:defun |make-tag-values-output-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tags-per-page () 'common-lisp:integer)
(common-lisp:deftype target-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-id-filter-list ()
   '(trivial-types:proper-list target-id))
 (common-lisp:defun |make-target-id-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype target-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttled-exception
     (resourcegroupstaggingapi-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttled-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttled-exception 'throttled-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resources-input common-lisp:nil
                       ((tag-keys :initarg :tag-keys :type
                         (common-lisp:or tag-key-list-for-untag
                                         common-lisp:null)
                         :accessor %untag-resources-input-tag-keys :initform
                         (common-lisp:error ":tag-keys is required"))
                        (resource-arnlist :initarg :resource-arnlist :type
                         (common-lisp:or resource-arnlist-for-tag-untag
                                         common-lisp:null)
                         :accessor %untag-resources-input-resource-arnlist
                         :initform
                         (common-lisp:error ":resource-arnlist is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resources-input 'make-untag-resources-input))
 (common-lisp:defun make-untag-resources-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arnlist)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resources-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resources-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resources-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arnlist))
      (common-lisp:list
       (common-lisp:cons "ResourceARNList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resources-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resources-output common-lisp:nil
                       ((failed-resources-map :initarg :failed-resources-map
                         :type
                         (common-lisp:or failed-resources-map common-lisp:null)
                         :accessor %untag-resources-output-failed-resources-map
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'untag-resources-output 'make-untag-resources-output))
 (common-lisp:defun make-untag-resources-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key failed-resources-map)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resources-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resources-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resources-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-resources-map))
      (common-lisp:list
       (common-lisp:cons "FailedResourcesMap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resources-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun describe-report-creation ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'resourcegroupstaggingapi-request :method
                                "POST" :path "/" :protocol :json :operation
                                "DescribeReportCreation" :params
                                `(("Action" ,@"DescribeReportCreation")
                                  ("Version" ,@"2017-01-26"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'describe-report-creation))
(common-lisp:progn
 (common-lisp:defun get-compliance-summary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-id-filters region-filters
                     resource-type-filters tag-key-filters group-by max-results
                     pagination-token)
   (common-lisp:declare
    (common-lisp:ignorable target-id-filters region-filters
     resource-type-filters tag-key-filters group-by max-results
     pagination-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-compliance-summary-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resourcegroupstaggingapi-request aws-sdk/generator/operation::input
        "POST" :json "/" "GetComplianceSummary" "2017-01-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-compliance-summary))
(common-lisp:progn
 (common-lisp:defun get-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pagination-token tag-filters
                     resources-per-page tags-per-page resource-type-filters
                     include-compliance-details exclude-compliant-resources
                     resource-arnlist)
   (common-lisp:declare
    (common-lisp:ignorable pagination-token tag-filters resources-per-page
     tags-per-page resource-type-filters include-compliance-details
     exclude-compliant-resources resource-arnlist))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resources-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resourcegroupstaggingapi-request aws-sdk/generator/operation::input
        "POST" :json "/" "GetResources" "2017-01-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resources))
(common-lisp:progn
 (common-lisp:defun get-tag-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pagination-token)
   (common-lisp:declare (common-lisp:ignorable pagination-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-tag-keys-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resourcegroupstaggingapi-request aws-sdk/generator/operation::input
        "POST" :json "/" "GetTagKeys" "2017-01-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-tag-keys))
(common-lisp:progn
 (common-lisp:defun get-tag-values
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pagination-token key)
   (common-lisp:declare (common-lisp:ignorable pagination-token key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-tag-values-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resourcegroupstaggingapi-request aws-sdk/generator/operation::input
        "POST" :json "/" "GetTagValues" "2017-01-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-tag-values))
(common-lisp:progn
 (common-lisp:defun start-report-creation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key s3bucket)
   (common-lisp:declare (common-lisp:ignorable s3bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-report-creation-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resourcegroupstaggingapi-request aws-sdk/generator/operation::input
        "POST" :json "/" "StartReportCreation" "2017-01-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-report-creation))
(common-lisp:progn
 (common-lisp:defun tag-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arnlist tags)
   (common-lisp:declare (common-lisp:ignorable resource-arnlist tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resources-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resourcegroupstaggingapi-request aws-sdk/generator/operation::input
        "POST" :json "/" "TagResources" "2017-01-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resources))
(common-lisp:progn
 (common-lisp:defun untag-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arnlist tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arnlist tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resources-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resourcegroupstaggingapi-request aws-sdk/generator/operation::input
        "POST" :json "/" "UntagResources" "2017-01-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resources))
