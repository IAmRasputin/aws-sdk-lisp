;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/sso/api
  (:use)
  (:nicknames #:aws/sso)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/sso/api)
(common-lisp:progn
 (common-lisp:defclass sso-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "sso" :protocol :rest-json))
 (common-lisp:export 'sso-request))
(common-lisp:progn
 (common-lisp:define-condition sso-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'sso-error))
(common-lisp:defvar *error-map*
  '(("InvalidRequestException" . invalid-request-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("UnauthorizedException" . unauthorized-exception)))
(common-lisp:deftype access-key-type () 'common-lisp:string)
(common-lisp:deftype access-token-type () 'common-lisp:string)
(common-lisp:deftype account-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass account-info common-lisp:nil
                       ((email-address :initarg :|emailAddress| :type
                         (common-lisp:or email-address-type common-lisp:null)
                         :accessor %account-info-email-address :initform
                         common-lisp:nil)
                        (account-name :initarg :|accountName| :type
                         (common-lisp:or account-name-type common-lisp:null)
                         :accessor %account-info-account-name :initform
                         common-lisp:nil)
                        (account-id :initarg :|accountId| :type
                         (common-lisp:or account-id-type common-lisp:null)
                         :accessor %account-info-account-id :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'account-info 'make-account-info))
 (common-lisp:defun make-account-info
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key email-address account-name account-id)
   (common-lisp:apply #'common-lisp:make-instance 'account-info
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-name))
      (common-lisp:list
       (common-lisp:cons "accountName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "emailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype account-list-type ()
   '(trivial-types:proper-list account-info))
 (common-lisp:defun |make-account-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype account-name-type () 'common-lisp:string)
(common-lisp:deftype email-address-type () 'common-lisp:string)
(common-lisp:deftype error-description () 'common-lisp:string)
(common-lisp:deftype expiration-timestamp-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass get-role-credentials-request common-lisp:nil
                       ((access-token :initarg :|accessToken| :type
                         (common-lisp:or access-token-type common-lisp:null)
                         :accessor %get-role-credentials-request-access-token
                         :initform
                         (common-lisp:error ":accesstoken is required"))
                        (account-id :initarg :|accountId| :type
                         (common-lisp:or account-id-type common-lisp:null)
                         :accessor %get-role-credentials-request-account-id
                         :initform
                         (common-lisp:error ":accountid is required"))
                        (role-name :initarg :|roleName| :type
                         (common-lisp:or role-name-type common-lisp:null)
                         :accessor %get-role-credentials-request-role-name
                         :initform
                         (common-lisp:error ":rolename is required"))))
 (common-lisp:export
  (common-lisp:list 'get-role-credentials-request
                    'make-get-role-credentials-request))
 (common-lisp:defun make-get-role-credentials-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key access-token account-id role-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-role-credentials-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-role-credentials-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:cons "x-amz-sso_bearer_token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-role-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-role-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-role-credentials-response common-lisp:nil
                       ((role-credentials :initarg :|roleCredentials| :type
                         (common-lisp:or role-credentials common-lisp:null)
                         :accessor
                         %get-role-credentials-response-role-credentials
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-role-credentials-response
                    'make-get-role-credentials-response))
 (common-lisp:defun make-get-role-credentials-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key role-credentials)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-role-credentials-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-role-credentials-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-role-credentials-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-credentials))
      (common-lisp:list
       (common-lisp:cons "roleCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-role-credentials-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (sso-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-account-roles-request common-lisp:nil
                       ((account-id :initarg :|accountId| :type
                         (common-lisp:or account-id-type common-lisp:null)
                         :accessor %list-account-roles-request-account-id
                         :initform
                         (common-lisp:error ":accountid is required"))
                        (access-token :initarg :|accessToken| :type
                         (common-lisp:or access-token-type common-lisp:null)
                         :accessor %list-account-roles-request-access-token
                         :initform
                         (common-lisp:error ":accesstoken is required"))
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-result-type common-lisp:null)
                         :accessor %list-account-roles-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token-type common-lisp:null)
                         :accessor %list-account-roles-request-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-account-roles-request
                    'make-list-account-roles-request))
 (common-lisp:defun make-list-account-roles-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key account-id access-token max-results
                     next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-account-roles-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-roles-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:cons "x-amz-sso_bearer_token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-roles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-roles-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-account-roles-response common-lisp:nil
                       ((role-list :initarg :|roleList| :type
                         (common-lisp:or role-list-type common-lisp:null)
                         :accessor %list-account-roles-response-role-list
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token-type common-lisp:null)
                         :accessor %list-account-roles-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-account-roles-response
                    'make-list-account-roles-response))
 (common-lisp:defun make-list-account-roles-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key role-list next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-account-roles-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-roles-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-roles-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-list))
      (common-lisp:list
       (common-lisp:cons "roleList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-roles-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-accounts-request common-lisp:nil
                       ((access-token :initarg :|accessToken| :type
                         (common-lisp:or access-token-type common-lisp:null)
                         :accessor %list-accounts-request-access-token
                         :initform
                         (common-lisp:error ":accesstoken is required"))
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-result-type common-lisp:null)
                         :accessor %list-accounts-request-max-results :initform
                         common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token-type common-lisp:null)
                         :accessor %list-accounts-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-accounts-request 'make-list-accounts-request))
 (common-lisp:defun make-list-accounts-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key access-token max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-accounts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:cons "x-amz-sso_bearer_token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-accounts-response common-lisp:nil
                       ((account-list :initarg :|accountList| :type
                         (common-lisp:or account-list-type common-lisp:null)
                         :accessor %list-accounts-response-account-list
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token-type common-lisp:null)
                         :accessor %list-accounts-response-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-accounts-response 'make-list-accounts-response))
 (common-lisp:defun make-list-accounts-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key account-list next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-accounts-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-list))
      (common-lisp:list
       (common-lisp:cons "accountList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass logout-request common-lisp:nil
                       ((access-token :initarg :|accessToken| :type
                         (common-lisp:or access-token-type common-lisp:null)
                         :accessor %logout-request-access-token :initform
                         (common-lisp:error ":accesstoken is required"))))
 (common-lisp:export (common-lisp:list 'logout-request 'make-logout-request))
 (common-lisp:defun make-logout-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key access-token)
   (common-lisp:apply #'common-lisp:make-instance 'logout-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input logout-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:cons "x-amz-sso_bearer_token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input logout-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input logout-request))
   common-lisp:nil))
(common-lisp:deftype max-result-type () 'common-lisp:integer)
(common-lisp:deftype next-token-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (sso-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass role-credentials common-lisp:nil
                       ((expiration :initarg :|expiration| :type
                         (common-lisp:or expiration-timestamp-type
                                         common-lisp:null)
                         :accessor %role-credentials-expiration :initform
                         common-lisp:nil)
                        (session-token :initarg :|sessionToken| :type
                         (common-lisp:or session-token-type common-lisp:null)
                         :accessor %role-credentials-session-token :initform
                         common-lisp:nil)
                        (secret-access-key :initarg :|secretAccessKey| :type
                         (common-lisp:or secret-access-key-type
                                         common-lisp:null)
                         :accessor %role-credentials-secret-access-key
                         :initform common-lisp:nil)
                        (access-key-id :initarg :|accessKeyId| :type
                         (common-lisp:or access-key-type common-lisp:null)
                         :accessor %role-credentials-access-key-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'role-credentials 'make-role-credentials))
 (common-lisp:defun make-role-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key expiration session-token
                     secret-access-key access-key-id)
   (common-lisp:apply #'common-lisp:make-instance 'role-credentials
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input role-credentials))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input role-credentials))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-key-id))
      (common-lisp:list
       (common-lisp:cons "accessKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-access-key))
      (common-lisp:list
       (common-lisp:cons "secretAccessKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-token))
      (common-lisp:list
       (common-lisp:cons "sessionToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration))
      (common-lisp:list
       (common-lisp:cons "expiration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input role-credentials))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass role-info common-lisp:nil
                       ((account-id :initarg :|accountId| :type
                         (common-lisp:or account-id-type common-lisp:null)
                         :accessor %role-info-account-id :initform
                         common-lisp:nil)
                        (role-name :initarg :|roleName| :type
                         (common-lisp:or role-name-type common-lisp:null)
                         :accessor %role-info-role-name :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'role-info 'make-role-info))
 (common-lisp:defun make-role-info
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key account-id role-name)
   (common-lisp:apply #'common-lisp:make-instance 'role-info
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input role-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input role-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-name))
      (common-lisp:list
       (common-lisp:cons "roleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input role-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype role-list-type () '(trivial-types:proper-list role-info))
 (common-lisp:defun |make-role-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list role-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype role-name-type () 'common-lisp:string)
(common-lisp:deftype secret-access-key-type () 'common-lisp:string)
(common-lisp:deftype session-token-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (sso-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition unauthorized-exception
     (sso-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       unauthorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-exception 'unauthorized-exception-message)))
(common-lisp:progn
 (common-lisp:defun get-role-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key role-name account-id access-token)
   (common-lisp:declare
    (common-lisp:ignorable role-name account-id access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-role-credentials-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/federation/credentials"
                                                        "GetRoleCredentials"
                                                        "2019-06-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-role-credentials))
(common-lisp:progn
 (common-lisp:defun list-account-roles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results access-token
                     account-id)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results access-token account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-account-roles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/assignment/roles"
                                                        "ListAccountRoles"
                                                        "2019-06-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-account-roles))
(common-lisp:progn
 (common-lisp:defun list-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results access-token)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-accounts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/assignment/accounts"
                                                        "ListAccounts"
                                                        "2019-06-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-accounts))
(common-lisp:progn
 (common-lisp:defun logout
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token)
   (common-lisp:declare (common-lisp:ignorable access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-logout-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/logout" "Logout"
                                                        "2019-06-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'logout))
