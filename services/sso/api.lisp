;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/sso/api
  (:use)
  (:nicknames #:aws/sso)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/sso/api)
(common-lisp:progn
 (common-lisp:defclass sso-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "sso" :protocol :rest-json))
 (common-lisp:export 'sso-request))
(common-lisp:progn
 (common-lisp:define-condition sso-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'sso-error))
(common-lisp:defvar *error-map*
  '(("InvalidRequestException" . invalid-request-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("UnauthorizedException" . unauthorized-exception)))
(common-lisp:deftype access-key-type () 'common-lisp:string)
(common-lisp:deftype access-token-type () 'common-lisp:string)
(common-lisp:deftype account-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (account-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-account-info-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id-type common-lisp:null))
   (account-name common-lisp:nil :type
    (common-lisp:or account-name-type common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or email-address-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'account-info 'make-account-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-name))
      (common-lisp:list
       (common-lisp:cons "accountName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "emailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype account-list-type ()
   '(trivial-types:proper-list account-info))
 (common-lisp:defun |make-account-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype account-name-type () 'common-lisp:string)
(common-lisp:deftype email-address-type () 'common-lisp:string)
(common-lisp:deftype error-description () 'common-lisp:string)
(common-lisp:deftype expiration-timestamp-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (get-role-credentials-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-role-credentials-request-"))
   (role-name (common-lisp:error ":rolename is required") :type
    (common-lisp:or role-name-type common-lisp:null))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or account-id-type common-lisp:null))
   (access-token (common-lisp:error ":accesstoken is required") :type
    (common-lisp:or access-token-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-role-credentials-request
                    'make-get-role-credentials-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-role-credentials-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:cons "x-amz-sso_bearer_token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-role-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-role-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-role-credentials-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-role-credentials-response-"))
   (role-credentials common-lisp:nil :type
    (common-lisp:or role-credentials common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-role-credentials-response
                    'make-get-role-credentials-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-role-credentials-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-role-credentials-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-credentials))
      (common-lisp:list
       (common-lisp:cons "roleCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-role-credentials-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (sso-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-roles-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-account-roles-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token-type common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-result-type common-lisp:null))
   (access-token (common-lisp:error ":accesstoken is required") :type
    (common-lisp:or access-token-type common-lisp:null))
   (account-id (common-lisp:error ":accountid is required") :type
    (common-lisp:or account-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-roles-request
                    'make-list-account-roles-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-roles-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:cons "x-amz-sso_bearer_token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-roles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-roles-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-roles-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-account-roles-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token-type common-lisp:null))
   (role-list common-lisp:nil :type
    (common-lisp:or role-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-roles-response
                    'make-list-account-roles-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-roles-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-roles-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-list))
      (common-lisp:list
       (common-lisp:cons "roleList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-roles-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-accounts-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-accounts-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token-type common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-result-type common-lisp:null))
   (access-token (common-lisp:error ":accesstoken is required") :type
    (common-lisp:or access-token-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-accounts-request 'make-list-accounts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:cons "x-amz-sso_bearer_token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-accounts-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-accounts-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token-type common-lisp:null))
   (account-list common-lisp:nil :type
    (common-lisp:or account-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-accounts-response 'make-list-accounts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-list))
      (common-lisp:list
       (common-lisp:cons "accountList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (logout-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-logout-request-"))
   (access-token (common-lisp:error ":accesstoken is required") :type
    (common-lisp:or access-token-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'logout-request 'make-logout-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input logout-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:cons "x-amz-sso_bearer_token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input logout-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input logout-request))
   common-lisp:nil))
(common-lisp:deftype max-result-type () 'common-lisp:integer)
(common-lisp:deftype next-token-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (sso-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (role-credentials (:copier common-lisp:nil)
      (:conc-name "struct-shape-role-credentials-"))
   (access-key-id common-lisp:nil :type
    (common-lisp:or access-key-type common-lisp:null))
   (secret-access-key common-lisp:nil :type
    (common-lisp:or secret-access-key-type common-lisp:null))
   (session-token common-lisp:nil :type
    (common-lisp:or session-token-type common-lisp:null))
   (expiration common-lisp:nil :type
    (common-lisp:or expiration-timestamp-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'role-credentials 'make-role-credentials))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input role-credentials))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input role-credentials))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-key-id))
      (common-lisp:list
       (common-lisp:cons "accessKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-access-key))
      (common-lisp:list
       (common-lisp:cons "secretAccessKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-token))
      (common-lisp:list
       (common-lisp:cons "sessionToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration))
      (common-lisp:list
       (common-lisp:cons "expiration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input role-credentials))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (role-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-role-info-"))
   (role-name common-lisp:nil :type
    (common-lisp:or role-name-type common-lisp:null))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'role-info 'make-role-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input role-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input role-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-name))
      (common-lisp:list
       (common-lisp:cons "roleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input role-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype role-list-type () '(trivial-types:proper-list role-info))
 (common-lisp:defun |make-role-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list role-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype role-name-type () 'common-lisp:string)
(common-lisp:deftype secret-access-key-type () 'common-lisp:string)
(common-lisp:deftype session-token-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (sso-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition unauthorized-exception
     (sso-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unauthorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-exception 'unauthorized-exception-message)))
(common-lisp:progn
 (common-lisp:defun get-role-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key role-name account-id access-token)
   (common-lisp:declare
    (common-lisp:ignorable role-name account-id access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-role-credentials-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/federation/credentials"
                                                        "GetRoleCredentials"
                                                        "2019-06-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-role-credentials))
(common-lisp:progn
 (common-lisp:defun list-account-roles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results access-token
                     account-id)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results access-token account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-account-roles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/assignment/roles"
                                                        "ListAccountRoles"
                                                        "2019-06-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-account-roles))
(common-lisp:progn
 (common-lisp:defun list-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results access-token)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-accounts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/assignment/accounts"
                                                        "ListAccounts"
                                                        "2019-06-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-accounts))
(common-lisp:progn
 (common-lisp:defun logout
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token)
   (common-lisp:declare (common-lisp:ignorable access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-logout-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/logout" "Logout"
                                                        "2019-06-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'logout))
