;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/sagemaker-featurestore-runtime/api
  (:use)
  (:nicknames #:aws/sagemaker-featurestore-runtime)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/sagemaker-featurestore-runtime/api)
(common-lisp:progn
 (common-lisp:define-condition sagemaker-featurestore-runtime-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'sagemaker-featurestore-runtime-error))
(common-lisp:progn
 (common-lisp:defclass sagemaker-featurestore-runtime-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service
                        "sagemaker-featurestore-runtime" :api-version
                        "2020-07-01" :host-prefix
                        "featurestore-runtime.sagemaker" :signing-name
                        "sagemaker" :global-host common-lisp:nil))
 (common-lisp:export 'sagemaker-featurestore-runtime-request))
(common-lisp:defvar *error-map*
  '(("AccessForbidden" . access-forbidden)
    ("InternalFailure" . internal-failure)
    ("ResourceNotFound" . resource-not-found)
    ("ServiceUnavailable" . service-unavailable)
    ("ValidationError" . validation-error)))
(common-lisp:progn
 (common-lisp:define-condition access-forbidden
     (sagemaker-featurestore-runtime-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-forbidden-message)))
 (common-lisp:export
  (common-lisp:list 'access-forbidden 'access-forbidden-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-record-error (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-record-error-"))
   (feature-group-name (common-lisp:error ":feature-group-name is required")
    :type (common-lisp:or value-as-string common-lisp:null))
   (record-identifier-value-as-string
    (common-lisp:error ":record-identifier-value-as-string is required") :type
    (common-lisp:or value-as-string common-lisp:null))
   (error-code (common-lisp:error ":error-code is required") :type
    (common-lisp:or value-as-string common-lisp:null))
   (error-message (common-lisp:error ":error-message is required") :type
    (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-record-error 'make-batch-get-record-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'feature-group-name))
      (common-lisp:list
       (common-lisp:cons "FeatureGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'record-identifier-value-as-string))
      (common-lisp:list
       (common-lisp:cons "RecordIdentifierValueAsString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-get-record-errors ()
   '(trivial-types:proper-list batch-get-record-error))
 (common-lisp:defun make-batch-get-record-errors
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list batch-get-record-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-record-identifier (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-record-identifier-"))
   (feature-group-name (common-lisp:error ":feature-group-name is required")
    :type (common-lisp:or feature-group-name-or-arn common-lisp:null))
   (record-identifiers-value-as-string
    (common-lisp:error ":record-identifiers-value-as-string is required") :type
    (common-lisp:or record-identifiers common-lisp:null))
   (feature-names common-lisp:nil :type
    (common-lisp:or feature-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-record-identifier
                    'make-batch-get-record-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'feature-group-name))
      (common-lisp:list
       (common-lisp:cons "FeatureGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'record-identifiers-value-as-string))
      (common-lisp:list
       (common-lisp:cons "RecordIdentifiersValueAsString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'feature-names))
      (common-lisp:list
       (common-lisp:cons "FeatureNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-identifier))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-get-record-identifiers ()
   '(trivial-types:proper-list batch-get-record-identifier))
 (common-lisp:defun make-batch-get-record-identifiers
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-get-record-identifier))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-record-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-record-request-"))
   (identifiers (common-lisp:error ":identifiers is required") :type
    (common-lisp:or batch-get-record-identifiers common-lisp:null))
   (expiration-time-response common-lisp:nil :type
    (common-lisp:or expiration-time-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-record-request 'make-batch-get-record-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifiers))
      (common-lisp:list
       (common-lisp:cons "Identifiers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'expiration-time-response))
      (common-lisp:list
       (common-lisp:cons "ExpirationTimeResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-record-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-record-response-"))
   (records (common-lisp:error ":records is required") :type
    (common-lisp:or batch-get-record-result-details common-lisp:null))
   (errors (common-lisp:error ":errors is required") :type
    (common-lisp:or batch-get-record-errors common-lisp:null))
   (unprocessed-identifiers
    (common-lisp:error ":unprocessed-identifiers is required") :type
    (common-lisp:or unprocessed-identifiers common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-record-response
                    'make-batch-get-record-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'records))
      (common-lisp:list
       (common-lisp:cons "Records"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unprocessed-identifiers))
      (common-lisp:list
       (common-lisp:cons "UnprocessedIdentifiers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-record-result-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-get-record-result-detail-"))
   (feature-group-name (common-lisp:error ":feature-group-name is required")
    :type (common-lisp:or value-as-string common-lisp:null))
   (record-identifier-value-as-string
    (common-lisp:error ":record-identifier-value-as-string is required") :type
    (common-lisp:or value-as-string common-lisp:null))
   (record (common-lisp:error ":record is required") :type
    (common-lisp:or record common-lisp:null))
   (expires-at common-lisp:nil :type
    (common-lisp:or expires-at common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-record-result-detail
                    'make-batch-get-record-result-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-result-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-result-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'feature-group-name))
      (common-lisp:list
       (common-lisp:cons "FeatureGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'record-identifier-value-as-string))
      (common-lisp:list
       (common-lisp:cons "RecordIdentifierValueAsString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'record))
      (common-lisp:list
       (common-lisp:cons "Record"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expires-at))
      (common-lisp:list
       (common-lisp:cons "ExpiresAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-record-result-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-get-record-result-details ()
   '(trivial-types:proper-list batch-get-record-result-detail))
 (common-lisp:defun make-batch-get-record-result-details
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-get-record-result-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-record-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-record-request-"))
   (feature-group-name (common-lisp:error ":feature-group-name is required")
    :type (common-lisp:or feature-group-name-or-arn common-lisp:null))
   (record-identifier-value-as-string
    (common-lisp:error ":record-identifier-value-as-string is required") :type
    (common-lisp:or value-as-string common-lisp:null))
   (event-time (common-lisp:error ":event-time is required") :type
    (common-lisp:or value-as-string common-lisp:null))
   (target-stores common-lisp:nil :type
    (common-lisp:or target-stores common-lisp:null))
   (deletion-mode common-lisp:nil :type
    (common-lisp:or deletion-mode common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-record-request 'make-delete-record-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-record-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-record-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-record-request))
   common-lisp:nil))
(common-lisp:deftype deletion-mode () 'common-lisp:string)
(common-lisp:deftype expiration-time-response () 'common-lisp:string)
(common-lisp:deftype expires-at () 'common-lisp:string)
(common-lisp:deftype feature-group-name-or-arn () 'common-lisp:string)
(common-lisp:deftype feature-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype feature-names ()
   '(trivial-types:proper-list feature-name))
 (common-lisp:defun make-feature-names
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list feature-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (feature-value (:copier common-lisp:nil)
      (:conc-name "struct-shape-feature-value-"))
   (feature-name (common-lisp:error ":feature-name is required") :type
    (common-lisp:or feature-name common-lisp:null))
   (value-as-string common-lisp:nil :type
    (common-lisp:or value-as-string common-lisp:null))
   (value-as-string-list common-lisp:nil :type
    (common-lisp:or value-as-string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'feature-value 'make-feature-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input feature-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input feature-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'feature-name))
      (common-lisp:list
       (common-lisp:cons "FeatureName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value-as-string))
      (common-lisp:list
       (common-lisp:cons "ValueAsString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'value-as-string-list))
      (common-lisp:list
       (common-lisp:cons "ValueAsStringList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input feature-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-record-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-record-request-"))
   (feature-group-name (common-lisp:error ":feature-group-name is required")
    :type (common-lisp:or feature-group-name-or-arn common-lisp:null))
   (record-identifier-value-as-string
    (common-lisp:error ":record-identifier-value-as-string is required") :type
    (common-lisp:or value-as-string common-lisp:null))
   (feature-names common-lisp:nil :type
    (common-lisp:or feature-names common-lisp:null))
   (expiration-time-response common-lisp:nil :type
    (common-lisp:or expiration-time-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-record-request 'make-get-record-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-record-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-record-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-record-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-record-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-record-response-"))
   (record common-lisp:nil :type (common-lisp:or record common-lisp:null))
   (expires-at common-lisp:nil :type
    (common-lisp:or expires-at common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-record-response 'make-get-record-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-record-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-record-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'record))
      (common-lisp:list
       (common-lisp:cons "Record"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expires-at))
      (common-lisp:list
       (common-lisp:cons "ExpiresAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-record-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-failure
     (sagemaker-featurestore-runtime-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-failure-message)))
 (common-lisp:export
  (common-lisp:list 'internal-failure 'internal-failure-message)))
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-record-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-record-request-"))
   (feature-group-name (common-lisp:error ":feature-group-name is required")
    :type (common-lisp:or feature-group-name-or-arn common-lisp:null))
   (record (common-lisp:error ":record is required") :type
    (common-lisp:or record common-lisp:null))
   (target-stores common-lisp:nil :type
    (common-lisp:or target-stores common-lisp:null))
   (ttl-duration common-lisp:nil :type
    (common-lisp:or ttl-duration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-record-request 'make-put-record-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-record-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-record-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'record))
      (common-lisp:list
       (common-lisp:cons "Record"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-stores))
      (common-lisp:list
       (common-lisp:cons "TargetStores"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ttl-duration))
      (common-lisp:list
       (common-lisp:cons "TtlDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-record-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype record () '(trivial-types:proper-list feature-value))
 (common-lisp:defun make-record
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list feature-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype record-identifiers ()
   '(trivial-types:proper-list value-as-string))
 (common-lisp:defun make-record-identifiers
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list value-as-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found
     (sagemaker-featurestore-runtime-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found 'resource-not-found-message)))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable
     (sagemaker-featurestore-runtime-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable 'service-unavailable-message)))
(common-lisp:deftype target-store () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-stores ()
   '(trivial-types:proper-list target-store))
 (common-lisp:defun make-target-stores
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-store))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (ttl-duration (:copier common-lisp:nil)
      (:conc-name "struct-shape-ttl-duration-"))
   (unit (common-lisp:error ":unit is required") :type
    (common-lisp:or ttl-duration-unit common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or ttl-duration-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ttl-duration 'make-ttl-duration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ttl-duration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ttl-duration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ttl-duration))
   common-lisp:nil))
(common-lisp:deftype ttl-duration-unit () 'common-lisp:string)
(common-lisp:deftype ttl-duration-value () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype unprocessed-identifiers ()
   '(trivial-types:proper-list batch-get-record-identifier))
 (common-lisp:defun make-unprocessed-identifiers
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-get-record-identifier))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition validation-error
     (sagemaker-featurestore-runtime-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-error-message)))
 (common-lisp:export
  (common-lisp:list 'validation-error 'validation-error-message)))
(common-lisp:deftype value-as-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype value-as-string-list ()
   '(trivial-types:proper-list value-as-string))
 (common-lisp:defun make-value-as-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list value-as-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun batch-get-record
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifiers expiration-time-response)
   (common-lisp:declare
    (common-lisp:ignorable identifiers expiration-time-response))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-record-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'sagemaker-featurestore-runtime-request
        aws-sdk/generator/operation::input "POST" "/BatchGetRecord"
        "BatchGetRecord"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-get-record))
(common-lisp:progn
 (common-lisp:defun delete-record
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key feature-group-name
                     record-identifier-value-as-string event-time target-stores
                     deletion-mode)
   (common-lisp:declare
    (common-lisp:ignorable feature-group-name record-identifier-value-as-string
     event-time target-stores deletion-mode))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-record-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'sagemaker-featurestore-runtime-request
        aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/FeatureGroup/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'feature-group-name))))
        "DeleteRecord"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-record))
(common-lisp:progn
 (common-lisp:defun get-record
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key feature-group-name
                     record-identifier-value-as-string feature-names
                     expiration-time-response)
   (common-lisp:declare
    (common-lisp:ignorable feature-group-name record-identifier-value-as-string
     feature-names expiration-time-response))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-record-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'sagemaker-featurestore-runtime-request
        aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/FeatureGroup/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'feature-group-name))))
        "GetRecord"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-record))
(common-lisp:progn
 (common-lisp:defun put-record
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key feature-group-name record target-stores
                     ttl-duration)
   (common-lisp:declare
    (common-lisp:ignorable feature-group-name record target-stores
     ttl-duration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-record-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'sagemaker-featurestore-runtime-request
        aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/FeatureGroup/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'feature-group-name))))
        "PutRecord"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-record))
