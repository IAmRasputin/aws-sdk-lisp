;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/comprehend/api
  (:use)
  (:nicknames #:aws/comprehend)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/comprehend/api)
(common-lisp:progn
 (common-lisp:defclass comprehend-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "comprehend" :protocol
                        :json))
 (common-lisp:export 'comprehend-request))
(common-lisp:progn
 (common-lisp:define-condition comprehend-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'comprehend-error))
(common-lisp:defvar *error-map*
  '(("BatchSizeLimitExceededException" . batch-size-limit-exceeded-exception)
    ("ConcurrentModificationException" . concurrent-modification-exception)
    ("InternalServerException" . internal-server-exception)
    ("InvalidFilterException" . invalid-filter-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("JobNotFoundException" . job-not-found-exception)
    ("KmsKeyValidationException" . kms-key-validation-exception)
    ("ResourceInUseException" . resource-in-use-exception)
    ("ResourceLimitExceededException" . resource-limit-exceeded-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ResourceUnavailableException" . resource-unavailable-exception)
    ("TextSizeLimitExceededException" . text-size-limit-exceeded-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("TooManyTagKeysException" . too-many-tag-keys-exception)
    ("TooManyTagsException" . too-many-tags-exception)
    ("UnsupportedLanguageException" . unsupported-language-exception)))
(common-lisp:deftype any-length-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attribute-names-list ()
   '(trivial-types:proper-list attribute-names-list-item))
 (common-lisp:defun |make-attribute-names-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            attribute-names-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype attribute-names-list-item () 'common-lisp:string)
(common-lisp:deftype augmented-manifests-document-type-format ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (augmented-manifests-list-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-augmented-manifests-list-item-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null))
   (split common-lisp:nil :type (common-lisp:or split common-lisp:null))
   (attribute-names (common-lisp:error ":attribute-names is required") :type
    (common-lisp:or attribute-names-list common-lisp:null))
   (annotation-data-s3uri common-lisp:nil :type
    (common-lisp:or s3uri common-lisp:null))
   (source-documents-s3uri common-lisp:nil :type
    (common-lisp:or s3uri common-lisp:null))
   (document-type common-lisp:nil :type
    (common-lisp:or augmented-manifests-document-type-format
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'augmented-manifests-list-item
                    'make-augmented-manifests-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          augmented-manifests-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          augmented-manifests-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'split))
      (common-lisp:list
       (common-lisp:cons "Split"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-names))
      (common-lisp:list
       (common-lisp:cons "AttributeNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'annotation-data-s3uri))
      (common-lisp:list
       (common-lisp:cons "AnnotationDataS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-documents-s3uri))
      (common-lisp:list
       (common-lisp:cons "SourceDocumentsS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-type))
      (common-lisp:list
       (common-lisp:cons "DocumentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          augmented-manifests-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-dominant-language-item-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-dominant-language-item-result-"))
   (index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (languages common-lisp:nil :type
    (common-lisp:or list-of-dominant-languages common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-dominant-language-item-result
                    'make-batch-detect-dominant-language-item-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-item-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-item-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'languages))
      (common-lisp:list
       (common-lisp:cons "Languages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-item-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-dominant-language-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-dominant-language-request-"))
   (text-list (common-lisp:error ":text-list is required") :type
    (common-lisp:or customer-input-string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-dominant-language-request
                    'make-batch-detect-dominant-language-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-list))
      (common-lisp:list
       (common-lisp:cons "TextList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-dominant-language-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-dominant-language-response-"))
   (result-list (common-lisp:error ":result-list is required") :type
    (common-lisp:or list-of-detect-dominant-language-result common-lisp:null))
   (error-list (common-lisp:error ":error-list is required") :type
    (common-lisp:or batch-item-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-dominant-language-response
                    'make-batch-detect-dominant-language-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-list))
      (common-lisp:list
       (common-lisp:cons "ErrorList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-entities-item-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-entities-item-result-"))
   (index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (entities common-lisp:nil :type
    (common-lisp:or list-of-entities common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-entities-item-result
                    'make-batch-detect-entities-item-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-item-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-item-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entities))
      (common-lisp:list
       (common-lisp:cons "Entities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-item-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-entities-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-entities-request-"))
   (text-list (common-lisp:error ":text-list is required") :type
    (common-lisp:or customer-input-string-list common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-entities-request
                    'make-batch-detect-entities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-list))
      (common-lisp:list
       (common-lisp:cons "TextList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-entities-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-entities-response-"))
   (result-list (common-lisp:error ":result-list is required") :type
    (common-lisp:or list-of-detect-entities-result common-lisp:null))
   (error-list (common-lisp:error ":error-list is required") :type
    (common-lisp:or batch-item-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-entities-response
                    'make-batch-detect-entities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-list))
      (common-lisp:list
       (common-lisp:cons "ErrorList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-key-phrases-item-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-key-phrases-item-result-"))
   (index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (key-phrases common-lisp:nil :type
    (common-lisp:or list-of-key-phrases common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-key-phrases-item-result
                    'make-batch-detect-key-phrases-item-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-item-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-item-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-phrases))
      (common-lisp:list
       (common-lisp:cons "KeyPhrases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-item-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-key-phrases-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-key-phrases-request-"))
   (text-list (common-lisp:error ":text-list is required") :type
    (common-lisp:or customer-input-string-list common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-key-phrases-request
                    'make-batch-detect-key-phrases-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-list))
      (common-lisp:list
       (common-lisp:cons "TextList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-key-phrases-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-key-phrases-response-"))
   (result-list (common-lisp:error ":result-list is required") :type
    (common-lisp:or list-of-detect-key-phrases-result common-lisp:null))
   (error-list (common-lisp:error ":error-list is required") :type
    (common-lisp:or batch-item-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-key-phrases-response
                    'make-batch-detect-key-phrases-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-list))
      (common-lisp:list
       (common-lisp:cons "ErrorList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-sentiment-item-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-sentiment-item-result-"))
   (index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (sentiment common-lisp:nil :type
    (common-lisp:or sentiment-type common-lisp:null))
   (sentiment-score common-lisp:nil :type
    (common-lisp:or sentiment-score common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-sentiment-item-result
                    'make-batch-detect-sentiment-item-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-item-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-item-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sentiment))
      (common-lisp:list
       (common-lisp:cons "Sentiment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sentiment-score))
      (common-lisp:list
       (common-lisp:cons "SentimentScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-item-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-sentiment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-sentiment-request-"))
   (text-list (common-lisp:error ":text-list is required") :type
    (common-lisp:or customer-input-string-list common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-sentiment-request
                    'make-batch-detect-sentiment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-list))
      (common-lisp:list
       (common-lisp:cons "TextList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-sentiment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-sentiment-response-"))
   (result-list (common-lisp:error ":result-list is required") :type
    (common-lisp:or list-of-detect-sentiment-result common-lisp:null))
   (error-list (common-lisp:error ":error-list is required") :type
    (common-lisp:or batch-item-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-sentiment-response
                    'make-batch-detect-sentiment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-list))
      (common-lisp:list
       (common-lisp:cons "ErrorList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-syntax-item-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-syntax-item-result-"))
   (index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (syntax-tokens common-lisp:nil :type
    (common-lisp:or list-of-syntax-tokens common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-syntax-item-result
                    'make-batch-detect-syntax-item-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-item-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-item-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'syntax-tokens))
      (common-lisp:list
       (common-lisp:cons "SyntaxTokens"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-item-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-syntax-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-syntax-request-"))
   (text-list (common-lisp:error ":text-list is required") :type
    (common-lisp:or customer-input-string-list common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or syntax-language-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-syntax-request
                    'make-batch-detect-syntax-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-list))
      (common-lisp:list
       (common-lisp:cons "TextList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-syntax-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-syntax-response-"))
   (result-list (common-lisp:error ":result-list is required") :type
    (common-lisp:or list-of-detect-syntax-result common-lisp:null))
   (error-list (common-lisp:error ":error-list is required") :type
    (common-lisp:or batch-item-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-syntax-response
                    'make-batch-detect-syntax-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-list))
      (common-lisp:list
       (common-lisp:cons "ErrorList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-targeted-sentiment-item-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-targeted-sentiment-item-result-"))
   (index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (entities common-lisp:nil :type
    (common-lisp:or list-of-targeted-sentiment-entities common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-targeted-sentiment-item-result
                    'make-batch-detect-targeted-sentiment-item-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-item-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-item-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entities))
      (common-lisp:list
       (common-lisp:cons "Entities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-item-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-targeted-sentiment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-targeted-sentiment-request-"))
   (text-list (common-lisp:error ":text-list is required") :type
    (common-lisp:or customer-input-string-list common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-targeted-sentiment-request
                    'make-batch-detect-targeted-sentiment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-list))
      (common-lisp:list
       (common-lisp:cons "TextList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detect-targeted-sentiment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-detect-targeted-sentiment-response-"))
   (result-list (common-lisp:error ":result-list is required") :type
    (common-lisp:or list-of-detect-targeted-sentiment-result common-lisp:null))
   (error-list (common-lisp:error ":error-list is required") :type
    (common-lisp:or batch-item-error-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detect-targeted-sentiment-response
                    'make-batch-detect-targeted-sentiment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-list))
      (common-lisp:list
       (common-lisp:cons "ErrorList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-item-error (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-item-error-"))
   (index common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (error-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-item-error 'make-batch-item-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input batch-item-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input batch-item-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input batch-item-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-item-error-list ()
   '(trivial-types:proper-list batch-item-error))
 (common-lisp:defun |make-batch-item-error-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list batch-item-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition batch-size-limit-exceeded-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       batch-size-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'batch-size-limit-exceeded-exception
                    'batch-size-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (block (:copier common-lisp:nil) (:conc-name "struct-shape-block-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (block-type common-lisp:nil :type
    (common-lisp:or block-type common-lisp:null))
   (text common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (page common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (geometry common-lisp:nil :type (common-lisp:or geometry common-lisp:null))
   (relationships common-lisp:nil :type
    (common-lisp:or list-of-relationships common-lisp:null)))
 (common-lisp:export (common-lisp:list 'block 'make-block))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input block))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input block))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-type))
      (common-lisp:list
       (common-lisp:cons "BlockType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geometry))
      (common-lisp:list
       (common-lisp:cons "Geometry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relationships))
      (common-lisp:list
       (common-lisp:cons "Relationships"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input block))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (block-reference (:copier common-lisp:nil)
      (:conc-name "struct-shape-block-reference-"))
   (block-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (begin-offset common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (end-offset common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (child-blocks common-lisp:nil :type
    (common-lisp:or list-of-child-blocks common-lisp:null)))
 (common-lisp:export (common-lisp:list 'block-reference 'make-block-reference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input block-reference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input block-reference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-id))
      (common-lisp:list
       (common-lisp:cons "BlockId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-blocks))
      (common-lisp:list
       (common-lisp:cons "ChildBlocks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input block-reference))
   common-lisp:nil))
(common-lisp:deftype block-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (bounding-box (:copier common-lisp:nil)
      (:conc-name "struct-shape-bounding-box-"))
   (height common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (left common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (top common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (width common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bounding-box 'make-bounding-box))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bounding-box))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bounding-box))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'height))
      (common-lisp:list
       (common-lisp:cons "Height"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'left))
      (common-lisp:list
       (common-lisp:cons "Left"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'top))
      (common-lisp:list
       (common-lisp:cons "Top"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'width))
      (common-lisp:list
       (common-lisp:cons "Width"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bounding-box))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (child-block (:copier common-lisp:nil)
      (:conc-name "struct-shape-child-block-"))
   (child-block-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (begin-offset common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (end-offset common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'child-block 'make-child-block))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input child-block))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input child-block))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-block-id))
      (common-lisp:list
       (common-lisp:cons "ChildBlockId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input child-block))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (classifier-evaluation-metrics (:copier common-lisp:nil)
      (:conc-name "struct-shape-classifier-evaluation-metrics-"))
   (accuracy common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (precision common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (recall common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (f1score common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (micro-precision common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (micro-recall common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (micro-f1score common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (hamming-loss common-lisp:nil :type
    (common-lisp:or double common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'classifier-evaluation-metrics
                    'make-classifier-evaluation-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          classifier-evaluation-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          classifier-evaluation-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accuracy))
      (common-lisp:list
       (common-lisp:cons "Accuracy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'precision))
      (common-lisp:list
       (common-lisp:cons "Precision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recall))
      (common-lisp:list
       (common-lisp:cons "Recall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'f1score))
      (common-lisp:list
       (common-lisp:cons "F1Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'micro-precision))
      (common-lisp:list
       (common-lisp:cons "MicroPrecision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'micro-recall))
      (common-lisp:list
       (common-lisp:cons "MicroRecall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'micro-f1score))
      (common-lisp:list
       (common-lisp:cons "MicroF1Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hamming-loss))
      (common-lisp:list
       (common-lisp:cons "HammingLoss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          classifier-evaluation-metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (classifier-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-classifier-metadata-"))
   (number-of-labels common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (number-of-trained-documents common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (number-of-test-documents common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (evaluation-metrics common-lisp:nil :type
    (common-lisp:or classifier-evaluation-metrics common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'classifier-metadata 'make-classifier-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input classifier-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input classifier-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-labels))
      (common-lisp:list
       (common-lisp:cons "NumberOfLabels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-trained-documents))
      (common-lisp:list
       (common-lisp:cons "NumberOfTrainedDocuments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-test-documents))
      (common-lisp:list
       (common-lisp:cons "NumberOfTestDocuments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-metrics))
      (common-lisp:list
       (common-lisp:cons "EvaluationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input classifier-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (classify-document-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-classify-document-request-"))
   (text common-lisp:nil :type
    (common-lisp:or customer-input-string common-lisp:null))
   (endpoint-arn (common-lisp:error ":endpoint-arn is required") :type
    (common-lisp:or document-classifier-endpoint-arn common-lisp:null))
   (bytes common-lisp:nil :type
    (common-lisp:or semi-structured-document-blob common-lisp:null))
   (document-reader-config common-lisp:nil :type
    (common-lisp:or document-reader-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'classify-document-request
                    'make-classify-document-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          classify-document-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          classify-document-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes))
      (common-lisp:list
       (common-lisp:cons "Bytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-reader-config))
      (common-lisp:list
       (common-lisp:cons "DocumentReaderConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          classify-document-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (classify-document-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-classify-document-response-"))
   (classes common-lisp:nil :type
    (common-lisp:or list-of-classes common-lisp:null))
   (labels common-lisp:nil :type
    (common-lisp:or list-of-labels common-lisp:null))
   (document-metadata common-lisp:nil :type
    (common-lisp:or document-metadata common-lisp:null))
   (document-type common-lisp:nil :type
    (common-lisp:or list-of-document-type common-lisp:null))
   (errors common-lisp:nil :type
    (common-lisp:or list-of-errors common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or list-of-warnings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'classify-document-response
                    'make-classify-document-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          classify-document-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          classify-document-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'classes))
      (common-lisp:list
       (common-lisp:cons "Classes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'labels))
      (common-lisp:list
       (common-lisp:cons "Labels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-metadata))
      (common-lisp:list
       (common-lisp:cons "DocumentMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-type))
      (common-lisp:list
       (common-lisp:cons "DocumentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          classify-document-response))
   common-lisp:nil))
(common-lisp:deftype client-request-token-string () 'common-lisp:string)
(common-lisp:deftype comprehend-arn () 'common-lisp:string)
(common-lisp:deftype comprehend-arn-name () 'common-lisp:string)
(common-lisp:deftype comprehend-dataset-arn () 'common-lisp:string)
(common-lisp:deftype comprehend-endpoint-arn () 'common-lisp:string)
(common-lisp:deftype comprehend-endpoint-name () 'common-lisp:string)
(common-lisp:deftype comprehend-flywheel-arn () 'common-lisp:string)
(common-lisp:deftype comprehend-model-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition concurrent-modification-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       concurrent-modification-exception-message)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'concurrent-modification-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (contains-pii-entities-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-contains-pii-entities-request-"))
   (text (common-lisp:error ":text is required") :type
    (common-lisp:or string common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'contains-pii-entities-request
                    'make-contains-pii-entities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          contains-pii-entities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          contains-pii-entities-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          contains-pii-entities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (contains-pii-entities-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-contains-pii-entities-response-"))
   (labels common-lisp:nil :type
    (common-lisp:or list-of-entity-labels common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'contains-pii-entities-response
                    'make-contains-pii-entities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          contains-pii-entities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          contains-pii-entities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'labels))
      (common-lisp:list
       (common-lisp:cons "Labels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          contains-pii-entities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-dataset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-dataset-request-"))
   (flywheel-arn (common-lisp:error ":flywheel-arn is required") :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null))
   (dataset-name (common-lisp:error ":dataset-name is required") :type
    (common-lisp:or comprehend-arn-name common-lisp:null))
   (dataset-type common-lisp:nil :type
    (common-lisp:or dataset-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type (common-lisp:or dataset-input-data-config common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-dataset-request 'make-create-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-name))
      (common-lisp:list
       (common-lisp:cons "DatasetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-type))
      (common-lisp:list
       (common-lisp:cons "DatasetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-dataset-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-dataset-response-"))
   (dataset-arn common-lisp:nil :type
    (common-lisp:or comprehend-dataset-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-dataset-response 'make-create-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-arn))
      (common-lisp:list
       (common-lisp:cons "DatasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-document-classifier-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-document-classifier-request-"))
   (document-classifier-name
    (common-lisp:error ":document-classifier-name is required") :type
    (common-lisp:or comprehend-arn-name common-lisp:null))
   (version-name common-lisp:nil :type
    (common-lisp:or version-name common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type
    (common-lisp:or document-classifier-input-data-config common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or document-classifier-output-data-config common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (mode common-lisp:nil :type
    (common-lisp:or document-classifier-mode common-lisp:null))
   (model-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (model-policy common-lisp:nil :type
    (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-document-classifier-request
                    'make-create-document-classifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-document-classifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-document-classifier-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-name))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-name))
      (common-lisp:list
       (common-lisp:cons "VersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-policy))
      (common-lisp:list
       (common-lisp:cons "ModelPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-document-classifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-document-classifier-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-document-classifier-response-"))
   (document-classifier-arn common-lisp:nil :type
    (common-lisp:or document-classifier-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-document-classifier-response
                    'make-create-document-classifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-document-classifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-document-classifier-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-document-classifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-endpoint-request-"))
   (endpoint-name (common-lisp:error ":endpoint-name is required") :type
    (common-lisp:or comprehend-endpoint-name common-lisp:null))
   (model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (desired-inference-units
    (common-lisp:error ":desired-inference-units is required") :type
    (common-lisp:or inference-units-integer common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-endpoint-request 'make-create-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-name))
      (common-lisp:list
       (common-lisp:cons "EndpointName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'desired-inference-units))
      (common-lisp:list
       (common-lisp:cons "DesiredInferenceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-endpoint-response-"))
   (endpoint-arn common-lisp:nil :type
    (common-lisp:or comprehend-endpoint-arn common-lisp:null))
   (model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-endpoint-response 'make-create-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-entity-recognizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-entity-recognizer-request-"))
   (recognizer-name (common-lisp:error ":recognizer-name is required") :type
    (common-lisp:or comprehend-arn-name common-lisp:null))
   (version-name common-lisp:nil :type
    (common-lisp:or version-name common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type
    (common-lisp:or entity-recognizer-input-data-config common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (model-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (model-policy common-lisp:nil :type
    (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-entity-recognizer-request
                    'make-create-entity-recognizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-entity-recognizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-entity-recognizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recognizer-name))
      (common-lisp:list
       (common-lisp:cons "RecognizerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-name))
      (common-lisp:list
       (common-lisp:cons "VersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-policy))
      (common-lisp:list
       (common-lisp:cons "ModelPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-entity-recognizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-entity-recognizer-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-entity-recognizer-response-"))
   (entity-recognizer-arn common-lisp:nil :type
    (common-lisp:or entity-recognizer-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-entity-recognizer-response
                    'make-create-entity-recognizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-entity-recognizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-entity-recognizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-entity-recognizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-flywheel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-flywheel-request-"))
   (flywheel-name (common-lisp:error ":flywheel-name is required") :type
    (common-lisp:or comprehend-arn-name common-lisp:null))
   (active-model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (task-config common-lisp:nil :type
    (common-lisp:or task-config common-lisp:null))
   (model-type common-lisp:nil :type
    (common-lisp:or model-type common-lisp:null))
   (data-lake-s3uri (common-lisp:error ":data-lake-s3uri is required") :type
    (common-lisp:or flywheel-s3uri common-lisp:null))
   (data-security-config common-lisp:nil :type
    (common-lisp:or data-security-config common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-flywheel-request 'make-create-flywheel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-flywheel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-flywheel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-name))
      (common-lisp:list
       (common-lisp:cons "FlywheelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-model-arn))
      (common-lisp:list
       (common-lisp:cons "ActiveModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-config))
      (common-lisp:list
       (common-lisp:cons "TaskConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-type))
      (common-lisp:list
       (common-lisp:cons "ModelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-lake-s3uri))
      (common-lisp:list
       (common-lisp:cons "DataLakeS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-security-config))
      (common-lisp:list
       (common-lisp:cons "DataSecurityConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-flywheel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-flywheel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-flywheel-response-"))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null))
   (active-model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-flywheel-response 'make-create-flywheel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-flywheel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-flywheel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-model-arn))
      (common-lisp:list
       (common-lisp:cons "ActiveModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-flywheel-response))
   common-lisp:nil))
(common-lisp:deftype customer-input-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype customer-input-string-list ()
   '(trivial-types:proper-list customer-input-string))
 (common-lisp:defun |make-customer-input-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list customer-input-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (data-security-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-data-security-config-"))
   (model-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (data-lake-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'data-security-config 'make-data-security-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input data-security-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input data-security-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-lake-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "DataLakeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input data-security-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dataset-augmented-manifests-list ()
   '(trivial-types:proper-list dataset-augmented-manifests-list-item))
 (common-lisp:defun |make-dataset-augmented-manifests-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            dataset-augmented-manifests-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-augmented-manifests-list-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-augmented-manifests-list-item-"))
   (attribute-names (common-lisp:error ":attribute-names is required") :type
    (common-lisp:or attribute-names-list common-lisp:null))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null))
   (annotation-data-s3uri common-lisp:nil :type
    (common-lisp:or s3uri common-lisp:null))
   (source-documents-s3uri common-lisp:nil :type
    (common-lisp:or s3uri common-lisp:null))
   (document-type common-lisp:nil :type
    (common-lisp:or augmented-manifests-document-type-format
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dataset-augmented-manifests-list-item
                    'make-dataset-augmented-manifests-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-augmented-manifests-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-augmented-manifests-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-names))
      (common-lisp:list
       (common-lisp:cons "AttributeNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'annotation-data-s3uri))
      (common-lisp:list
       (common-lisp:cons "AnnotationDataS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-documents-s3uri))
      (common-lisp:list
       (common-lisp:cons "SourceDocumentsS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-type))
      (common-lisp:list
       (common-lisp:cons "DocumentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-augmented-manifests-list-item))
   common-lisp:nil))
(common-lisp:deftype dataset-data-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-document-classifier-input-data-config (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-dataset-document-classifier-input-data-config-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null))
   (label-delimiter common-lisp:nil :type
    (common-lisp:or label-delimiter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dataset-document-classifier-input-data-config
                    'make-dataset-document-classifier-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-document-classifier-input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-document-classifier-input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label-delimiter))
      (common-lisp:list
       (common-lisp:cons "LabelDelimiter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-document-classifier-input-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-entity-recognizer-annotations (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-entity-recognizer-annotations-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dataset-entity-recognizer-annotations
                    'make-dataset-entity-recognizer-annotations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-annotations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-annotations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-annotations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-entity-recognizer-documents (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-entity-recognizer-documents-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null))
   (input-format common-lisp:nil :type
    (common-lisp:or input-format common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dataset-entity-recognizer-documents
                    'make-dataset-entity-recognizer-documents))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-documents))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-documents))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-format))
      (common-lisp:list
       (common-lisp:cons "InputFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-documents))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-entity-recognizer-entity-list (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-entity-recognizer-entity-list-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dataset-entity-recognizer-entity-list
                    'make-dataset-entity-recognizer-entity-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-entity-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-entity-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-entity-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-entity-recognizer-input-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-entity-recognizer-input-data-config-"))
   (annotations common-lisp:nil :type
    (common-lisp:or dataset-entity-recognizer-annotations common-lisp:null))
   (documents (common-lisp:error ":documents is required") :type
    (common-lisp:or dataset-entity-recognizer-documents common-lisp:null))
   (entity-list common-lisp:nil :type
    (common-lisp:or dataset-entity-recognizer-entity-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dataset-entity-recognizer-input-data-config
                    'make-dataset-entity-recognizer-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'annotations))
      (common-lisp:list
       (common-lisp:cons "Annotations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'documents))
      (common-lisp:list
       (common-lisp:cons "Documents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-list))
      (common-lisp:list
       (common-lisp:cons "EntityList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-input-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-filter-"))
   (status common-lisp:nil :type
    (common-lisp:or dataset-status common-lisp:null))
   (dataset-type common-lisp:nil :type
    (common-lisp:or dataset-type common-lisp:null))
   (creation-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (creation-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dataset-filter 'make-dataset-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dataset-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dataset-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-type))
      (common-lisp:list
       (common-lisp:cons "DatasetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time-after))
      (common-lisp:list
       (common-lisp:cons "CreationTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'creation-time-before))
      (common-lisp:list
       (common-lisp:cons "CreationTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dataset-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-input-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-input-data-config-"))
   (augmented-manifests common-lisp:nil :type
    (common-lisp:or dataset-augmented-manifests-list common-lisp:null))
   (data-format common-lisp:nil :type
    (common-lisp:or dataset-data-format common-lisp:null))
   (document-classifier-input-data-config common-lisp:nil :type
    (common-lisp:or dataset-document-classifier-input-data-config
                    common-lisp:null))
   (entity-recognizer-input-data-config common-lisp:nil :type
    (common-lisp:or dataset-entity-recognizer-input-data-config
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dataset-input-data-config
                    'make-dataset-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'augmented-manifests))
      (common-lisp:list
       (common-lisp:cons "AugmentedManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-format))
      (common-lisp:list
       (common-lisp:cons "DataFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-input-data-config))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierInputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-input-data-config))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerInputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-input-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-properties-"))
   (dataset-arn common-lisp:nil :type
    (common-lisp:or comprehend-dataset-arn common-lisp:null))
   (dataset-name common-lisp:nil :type
    (common-lisp:or comprehend-arn-name common-lisp:null))
   (dataset-type common-lisp:nil :type
    (common-lisp:or dataset-type common-lisp:null))
   (dataset-s3uri common-lisp:nil :type
    (common-lisp:or s3uri common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or dataset-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (number-of-documents common-lisp:nil :type
    (common-lisp:or number-of-documents common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dataset-properties 'make-dataset-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dataset-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dataset-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-arn))
      (common-lisp:list
       (common-lisp:cons "DatasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-name))
      (common-lisp:list
       (common-lisp:cons "DatasetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-type))
      (common-lisp:list
       (common-lisp:cons "DatasetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-s3uri))
      (common-lisp:list
       (common-lisp:cons "DatasetS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-documents))
      (common-lisp:list
       (common-lisp:cons "NumberOfDocuments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dataset-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dataset-properties-list ()
   '(trivial-types:proper-list dataset-properties))
 (common-lisp:defun |make-dataset-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dataset-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype dataset-status () 'common-lisp:string)
(common-lisp:deftype dataset-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-document-classifier-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-document-classifier-request-"))
   (document-classifier-arn
    (common-lisp:error ":document-classifier-arn is required") :type
    (common-lisp:or document-classifier-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-document-classifier-request
                    'make-delete-document-classifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-document-classifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-document-classifier-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-document-classifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-document-classifier-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-document-classifier-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-document-classifier-response
                    'make-delete-document-classifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-document-classifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-document-classifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-document-classifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-endpoint-request-"))
   (endpoint-arn (common-lisp:error ":endpoint-arn is required") :type
    (common-lisp:or comprehend-endpoint-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-endpoint-request 'make-delete-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-endpoint-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-endpoint-response 'make-delete-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-entity-recognizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-entity-recognizer-request-"))
   (entity-recognizer-arn
    (common-lisp:error ":entity-recognizer-arn is required") :type
    (common-lisp:or entity-recognizer-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-entity-recognizer-request
                    'make-delete-entity-recognizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-entity-recognizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-entity-recognizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-entity-recognizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-entity-recognizer-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-entity-recognizer-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-entity-recognizer-response
                    'make-delete-entity-recognizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-entity-recognizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-entity-recognizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-entity-recognizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-flywheel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-flywheel-request-"))
   (flywheel-arn (common-lisp:error ":flywheel-arn is required") :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-flywheel-request 'make-delete-flywheel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-flywheel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-flywheel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-flywheel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-flywheel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-flywheel-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-flywheel-response 'make-delete-flywheel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-flywheel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-flywheel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-flywheel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-resource-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-resource-policy-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (policy-revision-id common-lisp:nil :type
    (common-lisp:or policy-revision-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-resource-policy-request
                    'make-delete-resource-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-revision-id))
      (common-lisp:list
       (common-lisp:cons "PolicyRevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-resource-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-resource-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-resource-policy-response
                    'make-delete-resource-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-dataset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-dataset-request-"))
   (dataset-arn (common-lisp:error ":dataset-arn is required") :type
    (common-lisp:or comprehend-dataset-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-dataset-request 'make-describe-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-arn))
      (common-lisp:list
       (common-lisp:cons "DatasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-dataset-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-dataset-response-"))
   (dataset-properties common-lisp:nil :type
    (common-lisp:or dataset-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-dataset-response
                    'make-describe-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-properties))
      (common-lisp:list
       (common-lisp:cons "DatasetProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-document-classification-job-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-document-classification-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-document-classification-job-request
                    'make-describe-document-classification-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classification-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classification-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classification-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-document-classification-job-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-document-classification-job-response-"))
   (document-classification-job-properties common-lisp:nil :type
    (common-lisp:or document-classification-job-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-document-classification-job-response
                    'make-describe-document-classification-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classification-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classification-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classification-job-properties))
      (common-lisp:list
       (common-lisp:cons "DocumentClassificationJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classification-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-document-classifier-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-document-classifier-request-"))
   (document-classifier-arn
    (common-lisp:error ":document-classifier-arn is required") :type
    (common-lisp:or document-classifier-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-document-classifier-request
                    'make-describe-document-classifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classifier-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-document-classifier-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-document-classifier-response-"))
   (document-classifier-properties common-lisp:nil :type
    (common-lisp:or document-classifier-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-document-classifier-response
                    'make-describe-document-classifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classifier-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-properties))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-dominant-language-detection-job-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-dominant-language-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-dominant-language-detection-job-request
                    'make-describe-dominant-language-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-dominant-language-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-dominant-language-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-dominant-language-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-dominant-language-detection-job-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-dominant-language-detection-job-response-"))
   (dominant-language-detection-job-properties common-lisp:nil :type
    (common-lisp:or dominant-language-detection-job-properties
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-dominant-language-detection-job-response
                    'make-describe-dominant-language-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-dominant-language-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-dominant-language-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dominant-language-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "DominantLanguageDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-dominant-language-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-endpoint-request-"))
   (endpoint-arn (common-lisp:error ":endpoint-arn is required") :type
    (common-lisp:or comprehend-endpoint-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-endpoint-request
                    'make-describe-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-endpoint-response-"))
   (endpoint-properties common-lisp:nil :type
    (common-lisp:or endpoint-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-endpoint-response
                    'make-describe-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-properties))
      (common-lisp:list
       (common-lisp:cons "EndpointProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-entities-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-entities-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-entities-detection-job-request
                    'make-describe-entities-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-entities-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-entities-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-entities-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-entities-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-entities-detection-job-response-"))
   (entities-detection-job-properties common-lisp:nil :type
    (common-lisp:or entities-detection-job-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-entities-detection-job-response
                    'make-describe-entities-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-entities-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-entities-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entities-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "EntitiesDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-entities-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-entity-recognizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-entity-recognizer-request-"))
   (entity-recognizer-arn
    (common-lisp:error ":entity-recognizer-arn is required") :type
    (common-lisp:or entity-recognizer-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-entity-recognizer-request
                    'make-describe-entity-recognizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-recognizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-recognizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-recognizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-entity-recognizer-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-entity-recognizer-response-"))
   (entity-recognizer-properties common-lisp:nil :type
    (common-lisp:or entity-recognizer-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-entity-recognizer-response
                    'make-describe-entity-recognizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-recognizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-recognizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-properties))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-recognizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-events-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-events-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-events-detection-job-request
                    'make-describe-events-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-events-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-events-detection-job-response-"))
   (events-detection-job-properties common-lisp:nil :type
    (common-lisp:or events-detection-job-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-events-detection-job-response
                    'make-describe-events-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'events-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "EventsDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-flywheel-iteration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-flywheel-iteration-request-"))
   (flywheel-arn (common-lisp:error ":flywheel-arn is required") :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null))
   (flywheel-iteration-id
    (common-lisp:error ":flywheel-iteration-id is required") :type
    (common-lisp:or flywheel-iteration-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-flywheel-iteration-request
                    'make-describe-flywheel-iteration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-iteration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-iteration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-iteration-id))
      (common-lisp:list
       (common-lisp:cons "FlywheelIterationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-iteration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-flywheel-iteration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-flywheel-iteration-response-"))
   (flywheel-iteration-properties common-lisp:nil :type
    (common-lisp:or flywheel-iteration-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-flywheel-iteration-response
                    'make-describe-flywheel-iteration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-iteration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-iteration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-iteration-properties))
      (common-lisp:list
       (common-lisp:cons "FlywheelIterationProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-iteration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-flywheel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-flywheel-request-"))
   (flywheel-arn (common-lisp:error ":flywheel-arn is required") :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-flywheel-request
                    'make-describe-flywheel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-flywheel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-flywheel-response-"))
   (flywheel-properties common-lisp:nil :type
    (common-lisp:or flywheel-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-flywheel-response
                    'make-describe-flywheel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-properties))
      (common-lisp:list
       (common-lisp:cons "FlywheelProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-key-phrases-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-key-phrases-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-key-phrases-detection-job-request
                    'make-describe-key-phrases-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-key-phrases-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-key-phrases-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-key-phrases-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-key-phrases-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-key-phrases-detection-job-response-"))
   (key-phrases-detection-job-properties common-lisp:nil :type
    (common-lisp:or key-phrases-detection-job-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-key-phrases-detection-job-response
                    'make-describe-key-phrases-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-key-phrases-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-key-phrases-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'key-phrases-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "KeyPhrasesDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-key-phrases-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-pii-entities-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-pii-entities-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-pii-entities-detection-job-request
                    'make-describe-pii-entities-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-pii-entities-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-pii-entities-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-pii-entities-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-pii-entities-detection-job-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-pii-entities-detection-job-response-"))
   (pii-entities-detection-job-properties common-lisp:nil :type
    (common-lisp:or pii-entities-detection-job-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-pii-entities-detection-job-response
                    'make-describe-pii-entities-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-pii-entities-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-pii-entities-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pii-entities-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "PiiEntitiesDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-pii-entities-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-resource-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-resource-policy-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or comprehend-model-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-resource-policy-request
                    'make-describe-resource-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-resource-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-resource-policy-response-"))
   (resource-policy common-lisp:nil :type
    (common-lisp:or policy common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (policy-revision-id common-lisp:nil :type
    (common-lisp:or policy-revision-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-resource-policy-response
                    'make-describe-resource-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-policy))
      (common-lisp:list
       (common-lisp:cons "ResourcePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-revision-id))
      (common-lisp:list
       (common-lisp:cons "PolicyRevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-sentiment-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-sentiment-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-sentiment-detection-job-request
                    'make-describe-sentiment-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-sentiment-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-sentiment-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-sentiment-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-sentiment-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-sentiment-detection-job-response-"))
   (sentiment-detection-job-properties common-lisp:nil :type
    (common-lisp:or sentiment-detection-job-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-sentiment-detection-job-response
                    'make-describe-sentiment-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-sentiment-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-sentiment-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sentiment-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "SentimentDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-sentiment-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-targeted-sentiment-detection-job-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-targeted-sentiment-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-targeted-sentiment-detection-job-request
                    'make-describe-targeted-sentiment-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-targeted-sentiment-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-targeted-sentiment-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-targeted-sentiment-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-targeted-sentiment-detection-job-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-targeted-sentiment-detection-job-response-"))
   (targeted-sentiment-detection-job-properties common-lisp:nil :type
    (common-lisp:or targeted-sentiment-detection-job-properties
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-targeted-sentiment-detection-job-response
                    'make-describe-targeted-sentiment-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-targeted-sentiment-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-targeted-sentiment-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'targeted-sentiment-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "TargetedSentimentDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-targeted-sentiment-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-topics-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-topics-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-topics-detection-job-request
                    'make-describe-topics-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-topics-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-topics-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-topics-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-topics-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-topics-detection-job-response-"))
   (topics-detection-job-properties common-lisp:nil :type
    (common-lisp:or topics-detection-job-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-topics-detection-job-response
                    'make-describe-topics-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-topics-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-topics-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'topics-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "TopicsDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-topics-detection-job-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (detect-dominant-language-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-dominant-language-request-"))
   (text (common-lisp:error ":text is required") :type
    (common-lisp:or customer-input-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-dominant-language-request
                    'make-detect-dominant-language-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-dominant-language-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-dominant-language-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-dominant-language-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-dominant-language-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-dominant-language-response-"))
   (languages common-lisp:nil :type
    (common-lisp:or list-of-dominant-languages common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-dominant-language-response
                    'make-detect-dominant-language-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-dominant-language-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-dominant-language-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'languages))
      (common-lisp:list
       (common-lisp:cons "Languages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-dominant-language-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-entities-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-entities-request-"))
   (text common-lisp:nil :type
    (common-lisp:or customer-input-string common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (endpoint-arn common-lisp:nil :type
    (common-lisp:or entity-recognizer-endpoint-arn common-lisp:null))
   (bytes common-lisp:nil :type
    (common-lisp:or semi-structured-document-blob common-lisp:null))
   (document-reader-config common-lisp:nil :type
    (common-lisp:or document-reader-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-entities-request 'make-detect-entities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-entities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-entities-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes))
      (common-lisp:list
       (common-lisp:cons "Bytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-reader-config))
      (common-lisp:list
       (common-lisp:cons "DocumentReaderConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-entities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-entities-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-entities-response-"))
   (entities common-lisp:nil :type
    (common-lisp:or list-of-entities common-lisp:null))
   (document-metadata common-lisp:nil :type
    (common-lisp:or document-metadata common-lisp:null))
   (document-type common-lisp:nil :type
    (common-lisp:or list-of-document-type common-lisp:null))
   (blocks common-lisp:nil :type
    (common-lisp:or list-of-blocks common-lisp:null))
   (errors common-lisp:nil :type
    (common-lisp:or list-of-errors common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-entities-response 'make-detect-entities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-entities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-entities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entities))
      (common-lisp:list
       (common-lisp:cons "Entities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-metadata))
      (common-lisp:list
       (common-lisp:cons "DocumentMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-type))
      (common-lisp:list
       (common-lisp:cons "DocumentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blocks))
      (common-lisp:list
       (common-lisp:cons "Blocks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-entities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-key-phrases-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-key-phrases-request-"))
   (text (common-lisp:error ":text is required") :type
    (common-lisp:or customer-input-string common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-key-phrases-request
                    'make-detect-key-phrases-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-key-phrases-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-key-phrases-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-key-phrases-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-key-phrases-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-key-phrases-response-"))
   (key-phrases common-lisp:nil :type
    (common-lisp:or list-of-key-phrases common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-key-phrases-response
                    'make-detect-key-phrases-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-key-phrases-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-key-phrases-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-phrases))
      (common-lisp:list
       (common-lisp:cons "KeyPhrases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-key-phrases-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-pii-entities-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-pii-entities-request-"))
   (text (common-lisp:error ":text is required") :type
    (common-lisp:or string common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-pii-entities-request
                    'make-detect-pii-entities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-pii-entities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-pii-entities-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-pii-entities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-pii-entities-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-pii-entities-response-"))
   (entities common-lisp:nil :type
    (common-lisp:or list-of-pii-entities common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-pii-entities-response
                    'make-detect-pii-entities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-pii-entities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-pii-entities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entities))
      (common-lisp:list
       (common-lisp:cons "Entities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-pii-entities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-sentiment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-sentiment-request-"))
   (text (common-lisp:error ":text is required") :type
    (common-lisp:or customer-input-string common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-sentiment-request 'make-detect-sentiment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-sentiment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-sentiment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-sentiment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-sentiment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-sentiment-response-"))
   (sentiment common-lisp:nil :type
    (common-lisp:or sentiment-type common-lisp:null))
   (sentiment-score common-lisp:nil :type
    (common-lisp:or sentiment-score common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-sentiment-response
                    'make-detect-sentiment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-sentiment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-sentiment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sentiment))
      (common-lisp:list
       (common-lisp:cons "Sentiment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sentiment-score))
      (common-lisp:list
       (common-lisp:cons "SentimentScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-sentiment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-syntax-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-syntax-request-"))
   (text (common-lisp:error ":text is required") :type
    (common-lisp:or customer-input-string common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or syntax-language-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-syntax-request 'make-detect-syntax-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-syntax-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-syntax-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-syntax-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-syntax-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-syntax-response-"))
   (syntax-tokens common-lisp:nil :type
    (common-lisp:or list-of-syntax-tokens common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-syntax-response 'make-detect-syntax-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-syntax-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-syntax-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'syntax-tokens))
      (common-lisp:list
       (common-lisp:cons "SyntaxTokens"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-syntax-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-targeted-sentiment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-targeted-sentiment-request-"))
   (text (common-lisp:error ":text is required") :type
    (common-lisp:or customer-input-string common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-targeted-sentiment-request
                    'make-detect-targeted-sentiment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-targeted-sentiment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-targeted-sentiment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-targeted-sentiment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-targeted-sentiment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-targeted-sentiment-response-"))
   (entities common-lisp:nil :type
    (common-lisp:or list-of-targeted-sentiment-entities common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-targeted-sentiment-response
                    'make-detect-targeted-sentiment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-targeted-sentiment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-targeted-sentiment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entities))
      (common-lisp:list
       (common-lisp:cons "Entities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-targeted-sentiment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (document-class (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-class-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (score common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (page common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'document-class 'make-document-class))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input document-class))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input document-class))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input document-class))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (document-classification-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-classification-config-"))
   (mode (common-lisp:error ":mode is required") :type
    (common-lisp:or document-classifier-mode common-lisp:null))
   (labels common-lisp:nil :type
    (common-lisp:or labels-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-classification-config
                    'make-document-classification-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'labels))
      (common-lisp:list
       (common-lisp:cons "Labels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (document-classification-job-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-classification-job-filter-"))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (submit-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-classification-job-filter
                    'make-document-classification-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (document-classification-job-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-classification-job-properties-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (document-classifier-arn common-lisp:nil :type
    (common-lisp:or document-classifier-arn common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or input-data-config common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or output-data-config common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-classification-job-properties
                    'make-document-classification-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype document-classification-job-properties-list ()
   '(trivial-types:proper-list document-classification-job-properties))
 (common-lisp:defun |make-document-classification-job-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            document-classification-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype document-classifier-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype document-classifier-augmented-manifests-list ()
   '(trivial-types:proper-list augmented-manifests-list-item))
 (common-lisp:defun |make-document-classifier-augmented-manifests-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            augmented-manifests-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype document-classifier-data-format () 'common-lisp:string)
(common-lisp:deftype document-classifier-document-type-format ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (document-classifier-documents (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-classifier-documents-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null))
   (test-s3uri common-lisp:nil :type (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-classifier-documents
                    'make-document-classifier-documents))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-documents))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-documents))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-s3uri))
      (common-lisp:list
       (common-lisp:cons "TestS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-documents))
   common-lisp:nil))
(common-lisp:deftype document-classifier-endpoint-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (document-classifier-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-classifier-filter-"))
   (status common-lisp:nil :type
    (common-lisp:or model-status common-lisp:null))
   (document-classifier-name common-lisp:nil :type
    (common-lisp:or comprehend-arn-name common-lisp:null))
   (submit-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-classifier-filter
                    'make-document-classifier-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-name))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (document-classifier-input-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-classifier-input-data-config-"))
   (data-format common-lisp:nil :type
    (common-lisp:or document-classifier-data-format common-lisp:null))
   (s3uri common-lisp:nil :type (common-lisp:or s3uri common-lisp:null))
   (test-s3uri common-lisp:nil :type (common-lisp:or s3uri common-lisp:null))
   (label-delimiter common-lisp:nil :type
    (common-lisp:or label-delimiter common-lisp:null))
   (augmented-manifests common-lisp:nil :type
    (common-lisp:or document-classifier-augmented-manifests-list
                    common-lisp:null))
   (document-type common-lisp:nil :type
    (common-lisp:or document-classifier-document-type-format common-lisp:null))
   (documents common-lisp:nil :type
    (common-lisp:or document-classifier-documents common-lisp:null))
   (document-reader-config common-lisp:nil :type
    (common-lisp:or document-reader-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-classifier-input-data-config
                    'make-document-classifier-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-format))
      (common-lisp:list
       (common-lisp:cons "DataFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-s3uri))
      (common-lisp:list
       (common-lisp:cons "TestS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label-delimiter))
      (common-lisp:list
       (common-lisp:cons "LabelDelimiter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'augmented-manifests))
      (common-lisp:list
       (common-lisp:cons "AugmentedManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-type))
      (common-lisp:list
       (common-lisp:cons "DocumentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'documents))
      (common-lisp:list
       (common-lisp:cons "Documents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-reader-config))
      (common-lisp:list
       (common-lisp:cons "DocumentReaderConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-input-data-config))
   common-lisp:nil))
(common-lisp:deftype document-classifier-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (document-classifier-output-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-classifier-output-data-config-"))
   (s3uri common-lisp:nil :type (common-lisp:or s3uri common-lisp:null))
   (kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (flywheel-stats-s3prefix common-lisp:nil :type
    (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-classifier-output-data-config
                    'make-document-classifier-output-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-output-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-output-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-stats-s3prefix))
      (common-lisp:list
       (common-lisp:cons "FlywheelStatsS3Prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-output-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (document-classifier-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-classifier-properties-"))
   (document-classifier-arn common-lisp:nil :type
    (common-lisp:or document-classifier-arn common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or model-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (training-start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (training-end-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or document-classifier-input-data-config common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or document-classifier-output-data-config common-lisp:null))
   (classifier-metadata common-lisp:nil :type
    (common-lisp:or classifier-metadata common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (mode common-lisp:nil :type
    (common-lisp:or document-classifier-mode common-lisp:null))
   (model-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (version-name common-lisp:nil :type
    (common-lisp:or version-name common-lisp:null))
   (source-model-arn common-lisp:nil :type
    (common-lisp:or document-classifier-arn common-lisp:null))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-classifier-properties
                    'make-document-classifier-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-start-time))
      (common-lisp:list
       (common-lisp:cons "TrainingStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-end-time))
      (common-lisp:list
       (common-lisp:cons "TrainingEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'classifier-metadata))
      (common-lisp:list
       (common-lisp:cons "ClassifierMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-name))
      (common-lisp:list
       (common-lisp:cons "VersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-model-arn))
      (common-lisp:list
       (common-lisp:cons "SourceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype document-classifier-properties-list ()
   '(trivial-types:proper-list document-classifier-properties))
 (common-lisp:defun |make-document-classifier-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            document-classifier-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype document-classifier-summaries-list ()
   '(trivial-types:proper-list document-classifier-summary))
 (common-lisp:defun |make-document-classifier-summaries-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            document-classifier-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (document-classifier-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-classifier-summary-"))
   (document-classifier-name common-lisp:nil :type
    (common-lisp:or comprehend-arn-name common-lisp:null))
   (number-of-versions common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (latest-version-created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (latest-version-name common-lisp:nil :type
    (common-lisp:or version-name common-lisp:null))
   (latest-version-status common-lisp:nil :type
    (common-lisp:or model-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-classifier-summary
                    'make-document-classifier-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-name))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-versions))
      (common-lisp:list
       (common-lisp:cons "NumberOfVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-version-created-at))
      (common-lisp:list
       (common-lisp:cons "LatestVersionCreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-name))
      (common-lisp:list
       (common-lisp:cons "LatestVersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-version-status))
      (common-lisp:list
       (common-lisp:cons "LatestVersionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (document-label (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-label-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (score common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (page common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'document-label 'make-document-label))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input document-label))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input document-label))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input document-label))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (document-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-metadata-"))
   (pages common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (extracted-characters common-lisp:nil :type
    (common-lisp:or list-of-extracted-characters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-metadata 'make-document-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input document-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input document-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pages))
      (common-lisp:list
       (common-lisp:cons "Pages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'extracted-characters))
      (common-lisp:list
       (common-lisp:cons "ExtractedCharacters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input document-metadata))
   common-lisp:nil))
(common-lisp:deftype document-read-action () 'common-lisp:string)
(common-lisp:deftype document-read-feature-types () 'common-lisp:string)
(common-lisp:deftype document-read-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (document-reader-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-reader-config-"))
   (document-read-action
    (common-lisp:error ":document-read-action is required") :type
    (common-lisp:or document-read-action common-lisp:null))
   (document-read-mode common-lisp:nil :type
    (common-lisp:or document-read-mode common-lisp:null))
   (feature-types common-lisp:nil :type
    (common-lisp:or list-of-document-read-feature-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-reader-config 'make-document-reader-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-reader-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-reader-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-read-action))
      (common-lisp:list
       (common-lisp:cons "DocumentReadAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-read-mode))
      (common-lisp:list
       (common-lisp:cons "DocumentReadMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'feature-types))
      (common-lisp:list
       (common-lisp:cons "FeatureTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-reader-config))
   common-lisp:nil))
(common-lisp:deftype document-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (document-type-list-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-document-type-list-item-"))
   (page common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or document-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'document-type-list-item 'make-document-type-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-type-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-type-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-type-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dominant-language (:copier common-lisp:nil)
      (:conc-name "struct-shape-dominant-language-"))
   (language-code common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (score common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dominant-language 'make-dominant-language))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dominant-language))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dominant-language))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dominant-language))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dominant-language-detection-job-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-dominant-language-detection-job-filter-"))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (submit-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dominant-language-detection-job-filter
                    'make-dominant-language-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dominant-language-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dominant-language-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dominant-language-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dominant-language-detection-job-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-dominant-language-detection-job-properties-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or input-data-config common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or output-data-config common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dominant-language-detection-job-properties
                    'make-dominant-language-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dominant-language-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dominant-language-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dominant-language-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dominant-language-detection-job-properties-list ()
   '(trivial-types:proper-list dominant-language-detection-job-properties))
 (common-lisp:defun |make-dominant-language-detection-job-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            dominant-language-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-endpoint-filter-"))
   (model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or endpoint-status common-lisp:null))
   (creation-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (creation-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'endpoint-filter 'make-endpoint-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'creation-time-before))
      (common-lisp:list
       (common-lisp:cons "CreationTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time-after))
      (common-lisp:list
       (common-lisp:cons "CreationTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-endpoint-properties-"))
   (endpoint-arn common-lisp:nil :type
    (common-lisp:or comprehend-endpoint-arn common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or endpoint-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (desired-model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (desired-inference-units common-lisp:nil :type
    (common-lisp:or inference-units-integer common-lisp:null))
   (current-inference-units common-lisp:nil :type
    (common-lisp:or inference-units-integer common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (desired-data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-properties 'make-endpoint-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-model-arn))
      (common-lisp:list
       (common-lisp:cons "DesiredModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'desired-inference-units))
      (common-lisp:list
       (common-lisp:cons "DesiredInferenceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-inference-units))
      (common-lisp:list
       (common-lisp:cons "CurrentInferenceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'desired-data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DesiredDataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype endpoint-properties-list ()
   '(trivial-types:proper-list endpoint-properties))
 (common-lisp:defun |make-endpoint-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype endpoint-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (entities-detection-job-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-entities-detection-job-filter-"))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (submit-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entities-detection-job-filter
                    'make-entities-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entities-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entities-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entities-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (entities-detection-job-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-entities-detection-job-properties-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (entity-recognizer-arn common-lisp:nil :type
    (common-lisp:or entity-recognizer-arn common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or input-data-config common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or output-data-config common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entities-detection-job-properties
                    'make-entities-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entities-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entities-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entities-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype entities-detection-job-properties-list ()
   '(trivial-types:proper-list entities-detection-job-properties))
 (common-lisp:defun |make-entities-detection-job-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            entities-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (entity (:copier common-lisp:nil) (:conc-name "struct-shape-entity-"))
   (score common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or entity-type common-lisp:null))
   (text common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (begin-offset common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (end-offset common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (block-references common-lisp:nil :type
    (common-lisp:or list-of-block-references common-lisp:null)))
 (common-lisp:export (common-lisp:list 'entity 'make-entity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input entity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input entity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-references))
      (common-lisp:list
       (common-lisp:cons "BlockReferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input entity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (entity-label (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-label-"))
   (name common-lisp:nil :type
    (common-lisp:or pii-entity-type common-lisp:null))
   (score common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export (common-lisp:list 'entity-label 'make-entity-label))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input entity-label))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input entity-label))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input entity-label))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (entity-recognition-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-recognition-config-"))
   (entity-types (common-lisp:error ":entity-types is required") :type
    (common-lisp:or entity-types-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-recognition-config
                    'make-entity-recognition-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognition-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognition-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-types))
      (common-lisp:list
       (common-lisp:cons "EntityTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognition-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (entity-recognizer-annotations (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-recognizer-annotations-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null))
   (test-s3uri common-lisp:nil :type (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-annotations
                    'make-entity-recognizer-annotations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-annotations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-annotations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-s3uri))
      (common-lisp:list
       (common-lisp:cons "TestS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-annotations))
   common-lisp:nil))
(common-lisp:deftype entity-recognizer-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype entity-recognizer-augmented-manifests-list ()
   '(trivial-types:proper-list augmented-manifests-list-item))
 (common-lisp:defun |make-entity-recognizer-augmented-manifests-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            augmented-manifests-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype entity-recognizer-data-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (entity-recognizer-documents (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-recognizer-documents-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null))
   (test-s3uri common-lisp:nil :type (common-lisp:or s3uri common-lisp:null))
   (input-format common-lisp:nil :type
    (common-lisp:or input-format common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-documents
                    'make-entity-recognizer-documents))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-documents))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-documents))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-s3uri))
      (common-lisp:list
       (common-lisp:cons "TestS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-format))
      (common-lisp:list
       (common-lisp:cons "InputFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-documents))
   common-lisp:nil))
(common-lisp:deftype entity-recognizer-endpoint-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (entity-recognizer-entity-list (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-recognizer-entity-list-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-entity-list
                    'make-entity-recognizer-entity-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-entity-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-entity-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-entity-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (entity-recognizer-evaluation-metrics (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-recognizer-evaluation-metrics-"))
   (precision common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (recall common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (f1score common-lisp:nil :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-evaluation-metrics
                    'make-entity-recognizer-evaluation-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-evaluation-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-evaluation-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'precision))
      (common-lisp:list
       (common-lisp:cons "Precision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recall))
      (common-lisp:list
       (common-lisp:cons "Recall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'f1score))
      (common-lisp:list
       (common-lisp:cons "F1Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-evaluation-metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (entity-recognizer-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-recognizer-filter-"))
   (status common-lisp:nil :type
    (common-lisp:or model-status common-lisp:null))
   (recognizer-name common-lisp:nil :type
    (common-lisp:or comprehend-arn-name common-lisp:null))
   (submit-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-filter 'make-entity-recognizer-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recognizer-name))
      (common-lisp:list
       (common-lisp:cons "RecognizerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (entity-recognizer-input-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-recognizer-input-data-config-"))
   (data-format common-lisp:nil :type
    (common-lisp:or entity-recognizer-data-format common-lisp:null))
   (entity-types (common-lisp:error ":entity-types is required") :type
    (common-lisp:or entity-types-list common-lisp:null))
   (documents common-lisp:nil :type
    (common-lisp:or entity-recognizer-documents common-lisp:null))
   (annotations common-lisp:nil :type
    (common-lisp:or entity-recognizer-annotations common-lisp:null))
   (entity-list common-lisp:nil :type
    (common-lisp:or entity-recognizer-entity-list common-lisp:null))
   (augmented-manifests common-lisp:nil :type
    (common-lisp:or entity-recognizer-augmented-manifests-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-input-data-config
                    'make-entity-recognizer-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-format))
      (common-lisp:list
       (common-lisp:cons "DataFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-types))
      (common-lisp:list
       (common-lisp:cons "EntityTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'documents))
      (common-lisp:list
       (common-lisp:cons "Documents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'annotations))
      (common-lisp:list
       (common-lisp:cons "Annotations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-list))
      (common-lisp:list
       (common-lisp:cons "EntityList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'augmented-manifests))
      (common-lisp:list
       (common-lisp:cons "AugmentedManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-input-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (entity-recognizer-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-recognizer-metadata-"))
   (number-of-trained-documents common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (number-of-test-documents common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (evaluation-metrics common-lisp:nil :type
    (common-lisp:or entity-recognizer-evaluation-metrics common-lisp:null))
   (entity-types common-lisp:nil :type
    (common-lisp:or entity-recognizer-metadata-entity-types-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-metadata
                    'make-entity-recognizer-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-trained-documents))
      (common-lisp:list
       (common-lisp:cons "NumberOfTrainedDocuments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-test-documents))
      (common-lisp:list
       (common-lisp:cons "NumberOfTestDocuments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-metrics))
      (common-lisp:list
       (common-lisp:cons "EvaluationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-types))
      (common-lisp:list
       (common-lisp:cons "EntityTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype entity-recognizer-metadata-entity-types-list ()
   '(trivial-types:proper-list
     entity-recognizer-metadata-entity-types-list-item))
 (common-lisp:defun |make-entity-recognizer-metadata-entity-types-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            entity-recognizer-metadata-entity-types-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (entity-recognizer-metadata-entity-types-list-item
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-entity-recognizer-metadata-entity-types-list-item-"))
   (type common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (evaluation-metrics common-lisp:nil :type
    (common-lisp:or entity-types-evaluation-metrics common-lisp:null))
   (number-of-train-mentions common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-metadata-entity-types-list-item
                    'make-entity-recognizer-metadata-entity-types-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-metadata-entity-types-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-metadata-entity-types-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-metrics))
      (common-lisp:list
       (common-lisp:cons "EvaluationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-train-mentions))
      (common-lisp:list
       (common-lisp:cons "NumberOfTrainMentions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-metadata-entity-types-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (entity-recognizer-output-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-recognizer-output-data-config-"))
   (flywheel-stats-s3prefix common-lisp:nil :type
    (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-output-data-config
                    'make-entity-recognizer-output-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-output-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-output-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-stats-s3prefix))
      (common-lisp:list
       (common-lisp:cons "FlywheelStatsS3Prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-output-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (entity-recognizer-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-recognizer-properties-"))
   (entity-recognizer-arn common-lisp:nil :type
    (common-lisp:or entity-recognizer-arn common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or model-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (training-start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (training-end-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or entity-recognizer-input-data-config common-lisp:null))
   (recognizer-metadata common-lisp:nil :type
    (common-lisp:or entity-recognizer-metadata common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (model-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (version-name common-lisp:nil :type
    (common-lisp:or version-name common-lisp:null))
   (source-model-arn common-lisp:nil :type
    (common-lisp:or entity-recognizer-arn common-lisp:null))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or entity-recognizer-output-data-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-properties
                    'make-entity-recognizer-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-start-time))
      (common-lisp:list
       (common-lisp:cons "TrainingStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-end-time))
      (common-lisp:list
       (common-lisp:cons "TrainingEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recognizer-metadata))
      (common-lisp:list
       (common-lisp:cons "RecognizerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-name))
      (common-lisp:list
       (common-lisp:cons "VersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-model-arn))
      (common-lisp:list
       (common-lisp:cons "SourceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype entity-recognizer-properties-list ()
   '(trivial-types:proper-list entity-recognizer-properties))
 (common-lisp:defun |make-entity-recognizer-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            entity-recognizer-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype entity-recognizer-summaries-list ()
   '(trivial-types:proper-list entity-recognizer-summary))
 (common-lisp:defun |make-entity-recognizer-summaries-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            entity-recognizer-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (entity-recognizer-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-recognizer-summary-"))
   (recognizer-name common-lisp:nil :type
    (common-lisp:or comprehend-arn-name common-lisp:null))
   (number-of-versions common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (latest-version-created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (latest-version-name common-lisp:nil :type
    (common-lisp:or version-name common-lisp:null))
   (latest-version-status common-lisp:nil :type
    (common-lisp:or model-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-summary
                    'make-entity-recognizer-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recognizer-name))
      (common-lisp:list
       (common-lisp:cons "RecognizerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-versions))
      (common-lisp:list
       (common-lisp:cons "NumberOfVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-version-created-at))
      (common-lisp:list
       (common-lisp:cons "LatestVersionCreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-name))
      (common-lisp:list
       (common-lisp:cons "LatestVersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-version-status))
      (common-lisp:list
       (common-lisp:cons "LatestVersionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-summary))
   common-lisp:nil))
(common-lisp:deftype entity-type () 'common-lisp:string)
(common-lisp:deftype entity-type-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (entity-types-evaluation-metrics (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-types-evaluation-metrics-"))
   (precision common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (recall common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (f1score common-lisp:nil :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-types-evaluation-metrics
                    'make-entity-types-evaluation-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-types-evaluation-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-types-evaluation-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'precision))
      (common-lisp:list
       (common-lisp:cons "Precision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recall))
      (common-lisp:list
       (common-lisp:cons "Recall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'f1score))
      (common-lisp:list
       (common-lisp:cons "F1Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-types-evaluation-metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype entity-types-list ()
   '(trivial-types:proper-list entity-types-list-item))
 (common-lisp:defun |make-entity-types-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list entity-types-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (entity-types-list-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-entity-types-list-item-"))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or entity-type-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'entity-types-list-item 'make-entity-types-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-types-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-types-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-types-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (errors-list-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-errors-list-item-"))
   (page common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or page-based-error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'errors-list-item 'make-errors-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input errors-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input errors-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input errors-list-item))
   common-lisp:nil))
(common-lisp:deftype event-type-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (events-detection-job-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-events-detection-job-filter-"))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (submit-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'events-detection-job-filter
                    'make-events-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          events-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          events-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          events-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (events-detection-job-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-events-detection-job-properties-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or input-data-config common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or output-data-config common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (target-event-types common-lisp:nil :type
    (common-lisp:or target-event-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'events-detection-job-properties
                    'make-events-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          events-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          events-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-event-types))
      (common-lisp:list
       (common-lisp:cons "TargetEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          events-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype events-detection-job-properties-list ()
   '(trivial-types:proper-list events-detection-job-properties))
 (common-lisp:defun |make-events-detection-job-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            events-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (extracted-characters-list-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-extracted-characters-list-item-"))
   (page common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'extracted-characters-list-item
                    'make-extracted-characters-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          extracted-characters-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          extracted-characters-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "Count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          extracted-characters-list-item))
   common-lisp:nil))
(common-lisp:deftype float () 'common-lisp:single-float)
(common-lisp:progn
 (common-lisp:defstruct
     (flywheel-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-flywheel-filter-"))
   (status common-lisp:nil :type
    (common-lisp:or flywheel-status common-lisp:null))
   (creation-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (creation-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'flywheel-filter 'make-flywheel-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input flywheel-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input flywheel-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time-after))
      (common-lisp:list
       (common-lisp:cons "CreationTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'creation-time-before))
      (common-lisp:list
       (common-lisp:cons "CreationTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input flywheel-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (flywheel-iteration-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-flywheel-iteration-filter-"))
   (creation-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (creation-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'flywheel-iteration-filter
                    'make-flywheel-iteration-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-iteration-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-iteration-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time-after))
      (common-lisp:list
       (common-lisp:cons "CreationTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'creation-time-before))
      (common-lisp:list
       (common-lisp:cons "CreationTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-iteration-filter))
   common-lisp:nil))
(common-lisp:deftype flywheel-iteration-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (flywheel-iteration-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-flywheel-iteration-properties-"))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null))
   (flywheel-iteration-id common-lisp:nil :type
    (common-lisp:or flywheel-iteration-id common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or flywheel-iteration-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (evaluated-model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (evaluated-model-metrics common-lisp:nil :type
    (common-lisp:or flywheel-model-evaluation-metrics common-lisp:null))
   (trained-model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (trained-model-metrics common-lisp:nil :type
    (common-lisp:or flywheel-model-evaluation-metrics common-lisp:null))
   (evaluation-manifest-s3prefix common-lisp:nil :type
    (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'flywheel-iteration-properties
                    'make-flywheel-iteration-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-iteration-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-iteration-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-iteration-id))
      (common-lisp:list
       (common-lisp:cons "FlywheelIterationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluated-model-arn))
      (common-lisp:list
       (common-lisp:cons "EvaluatedModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'evaluated-model-metrics))
      (common-lisp:list
       (common-lisp:cons "EvaluatedModelMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trained-model-arn))
      (common-lisp:list
       (common-lisp:cons "TrainedModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trained-model-metrics))
      (common-lisp:list
       (common-lisp:cons "TrainedModelMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'evaluation-manifest-s3prefix))
      (common-lisp:list
       (common-lisp:cons "EvaluationManifestS3Prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-iteration-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype flywheel-iteration-properties-list ()
   '(trivial-types:proper-list flywheel-iteration-properties))
 (common-lisp:defun |make-flywheel-iteration-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            flywheel-iteration-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype flywheel-iteration-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (flywheel-model-evaluation-metrics (:copier common-lisp:nil)
      (:conc-name "struct-shape-flywheel-model-evaluation-metrics-"))
   (average-f1score common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (average-precision common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (average-recall common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (average-accuracy common-lisp:nil :type
    (common-lisp:or double common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'flywheel-model-evaluation-metrics
                    'make-flywheel-model-evaluation-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-model-evaluation-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-model-evaluation-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'average-f1score))
      (common-lisp:list
       (common-lisp:cons "AverageF1Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'average-precision))
      (common-lisp:list
       (common-lisp:cons "AveragePrecision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'average-recall))
      (common-lisp:list
       (common-lisp:cons "AverageRecall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'average-accuracy))
      (common-lisp:list
       (common-lisp:cons "AverageAccuracy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-model-evaluation-metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (flywheel-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-flywheel-properties-"))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null))
   (active-model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (task-config common-lisp:nil :type
    (common-lisp:or task-config common-lisp:null))
   (data-lake-s3uri common-lisp:nil :type
    (common-lisp:or s3uri common-lisp:null))
   (data-security-config common-lisp:nil :type
    (common-lisp:or data-security-config common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or flywheel-status common-lisp:null))
   (model-type common-lisp:nil :type
    (common-lisp:or model-type common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (latest-flywheel-iteration common-lisp:nil :type
    (common-lisp:or flywheel-iteration-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'flywheel-properties 'make-flywheel-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input flywheel-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input flywheel-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-model-arn))
      (common-lisp:list
       (common-lisp:cons "ActiveModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-config))
      (common-lisp:list
       (common-lisp:cons "TaskConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-lake-s3uri))
      (common-lisp:list
       (common-lisp:cons "DataLakeS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-security-config))
      (common-lisp:list
       (common-lisp:cons "DataSecurityConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-type))
      (common-lisp:list
       (common-lisp:cons "ModelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-flywheel-iteration))
      (common-lisp:list
       (common-lisp:cons "LatestFlywheelIteration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input flywheel-properties))
   common-lisp:nil))
(common-lisp:deftype flywheel-s3uri () 'common-lisp:string)
(common-lisp:deftype flywheel-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (flywheel-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-flywheel-summary-"))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null))
   (active-model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (data-lake-s3uri common-lisp:nil :type
    (common-lisp:or s3uri common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or flywheel-status common-lisp:null))
   (model-type common-lisp:nil :type
    (common-lisp:or model-type common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (latest-flywheel-iteration common-lisp:nil :type
    (common-lisp:or flywheel-iteration-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'flywheel-summary 'make-flywheel-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input flywheel-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input flywheel-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-model-arn))
      (common-lisp:list
       (common-lisp:cons "ActiveModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-lake-s3uri))
      (common-lisp:list
       (common-lisp:cons "DataLakeS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-type))
      (common-lisp:list
       (common-lisp:cons "ModelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-flywheel-iteration))
      (common-lisp:list
       (common-lisp:cons "LatestFlywheelIteration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input flywheel-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype flywheel-summary-list ()
   '(trivial-types:proper-list flywheel-summary))
 (common-lisp:defun |make-flywheel-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list flywheel-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (geometry (:copier common-lisp:nil) (:conc-name "struct-shape-geometry-"))
   (bounding-box common-lisp:nil :type
    (common-lisp:or bounding-box common-lisp:null))
   (polygon common-lisp:nil :type (common-lisp:or polygon common-lisp:null)))
 (common-lisp:export (common-lisp:list 'geometry 'make-geometry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input geometry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input geometry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bounding-box))
      (common-lisp:list
       (common-lisp:cons "BoundingBox"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'polygon))
      (common-lisp:list
       (common-lisp:cons "Polygon"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input geometry))
   common-lisp:nil))
(common-lisp:deftype iam-role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (import-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-model-request-"))
   (source-model-arn (common-lisp:error ":source-model-arn is required") :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (model-name common-lisp:nil :type
    (common-lisp:or comprehend-arn-name common-lisp:null))
   (version-name common-lisp:nil :type
    (common-lisp:or version-name common-lisp:null))
   (model-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-model-request 'make-import-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-model-arn))
      (common-lisp:list
       (common-lisp:cons "SourceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-name))
      (common-lisp:list
       (common-lisp:cons "ModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-name))
      (common-lisp:list
       (common-lisp:cons "VersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-model-response-"))
   (model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-model-response 'make-import-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-model-response))
   common-lisp:nil))
(common-lisp:deftype inference-units-integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (input-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-data-config-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null))
   (input-format common-lisp:nil :type
    (common-lisp:or input-format common-lisp:null))
   (document-reader-config common-lisp:nil :type
    (common-lisp:or document-reader-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-data-config 'make-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-format))
      (common-lisp:list
       (common-lisp:cons "InputFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-reader-config))
      (common-lisp:list
       (common-lisp:cons "DocumentReaderConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-data-config))
   common-lisp:nil))
(common-lisp:deftype input-format () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-filter-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-filter-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-filter-exception
                    'invalid-filter-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-request-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-request-detail-"))
   (reason common-lisp:nil :type
    (common-lisp:or invalid-request-detail-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-detail 'make-invalid-request-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-request-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-request-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-request-detail))
   common-lisp:nil))
(common-lisp:deftype invalid-request-detail-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       invalid-request-exception-reason)
      (detail :initarg :detail :initform common-lisp:nil :reader
       invalid-request-exception-detail)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message
                    'invalid-request-exception-reason
                    'invalid-request-exception-detail)))
(common-lisp:deftype invalid-request-reason () 'common-lisp:string)
(common-lisp:deftype job-id () 'common-lisp:string)
(common-lisp:deftype job-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition job-not-found-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       job-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'job-not-found-exception 'job-not-found-exception-message)))
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (key-phrase (:copier common-lisp:nil)
      (:conc-name "struct-shape-key-phrase-"))
   (score common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (text common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (begin-offset common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (end-offset common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'key-phrase 'make-key-phrase))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input key-phrase))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input key-phrase))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input key-phrase))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (key-phrases-detection-job-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-key-phrases-detection-job-filter-"))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (submit-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'key-phrases-detection-job-filter
                    'make-key-phrases-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          key-phrases-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          key-phrases-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          key-phrases-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (key-phrases-detection-job-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-key-phrases-detection-job-properties-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or input-data-config common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or output-data-config common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'key-phrases-detection-job-properties
                    'make-key-phrases-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          key-phrases-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          key-phrases-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          key-phrases-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype key-phrases-detection-job-properties-list ()
   '(trivial-types:proper-list key-phrases-detection-job-properties))
 (common-lisp:defun |make-key-phrases-detection-job-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            key-phrases-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype kms-key-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition kms-key-validation-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       kms-key-validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'kms-key-validation-exception
                    'kms-key-validation-exception-message)))
(common-lisp:deftype label-delimiter () 'common-lisp:string)
(common-lisp:deftype label-list-item () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype labels-list ()
   '(trivial-types:proper-list label-list-item))
 (common-lisp:defun |make-labels-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list label-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype language-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-datasets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-datasets-request-"))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or dataset-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-datasets-request 'make-list-datasets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-datasets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-datasets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-datasets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-datasets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-datasets-response-"))
   (dataset-properties-list common-lisp:nil :type
    (common-lisp:or dataset-properties-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-datasets-response 'make-list-datasets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-datasets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-datasets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dataset-properties-list))
      (common-lisp:list
       (common-lisp:cons "DatasetPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-datasets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-document-classification-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-document-classification-jobs-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or document-classification-job-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-document-classification-jobs-request
                    'make-list-document-classification-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classification-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classification-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classification-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-document-classification-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-document-classification-jobs-response-"))
   (document-classification-job-properties-list common-lisp:nil :type
    (common-lisp:or document-classification-job-properties-list
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-document-classification-jobs-response
                    'make-list-document-classification-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classification-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classification-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classification-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "DocumentClassificationJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classification-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-document-classifier-summaries-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-document-classifier-summaries-request-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-document-classifier-summaries-request
                    'make-list-document-classifier-summaries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifier-summaries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifier-summaries-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifier-summaries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-document-classifier-summaries-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-document-classifier-summaries-response-"))
   (document-classifier-summaries-list common-lisp:nil :type
    (common-lisp:or document-classifier-summaries-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-document-classifier-summaries-response
                    'make-list-document-classifier-summaries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifier-summaries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifier-summaries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-summaries-list))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierSummariesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifier-summaries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-document-classifiers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-document-classifiers-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or document-classifier-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-document-classifiers-request
                    'make-list-document-classifiers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifiers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifiers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifiers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-document-classifiers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-document-classifiers-response-"))
   (document-classifier-properties-list common-lisp:nil :type
    (common-lisp:or document-classifier-properties-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-document-classifiers-response
                    'make-list-document-classifiers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifiers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifiers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-properties-list))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifiers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-dominant-language-detection-jobs-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-dominant-language-detection-jobs-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or dominant-language-detection-job-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-dominant-language-detection-jobs-request
                    'make-list-dominant-language-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dominant-language-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dominant-language-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dominant-language-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-dominant-language-detection-jobs-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-dominant-language-detection-jobs-response-"))
   (dominant-language-detection-job-properties-list common-lisp:nil :type
    (common-lisp:or dominant-language-detection-job-properties-list
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-dominant-language-detection-jobs-response
                    'make-list-dominant-language-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dominant-language-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dominant-language-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dominant-language-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "DominantLanguageDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dominant-language-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-endpoints-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-endpoints-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or endpoint-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-endpoints-request 'make-list-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-endpoints-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-endpoints-response-"))
   (endpoint-properties-list common-lisp:nil :type
    (common-lisp:or endpoint-properties-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-endpoints-response 'make-list-endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-properties-list))
      (common-lisp:list
       (common-lisp:cons "EndpointPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-entities-detection-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-entities-detection-jobs-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or entities-detection-job-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-entities-detection-jobs-request
                    'make-list-entities-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entities-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entities-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entities-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-entities-detection-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-entities-detection-jobs-response-"))
   (entities-detection-job-properties-list common-lisp:nil :type
    (common-lisp:or entities-detection-job-properties-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-entities-detection-jobs-response
                    'make-list-entities-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entities-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entities-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entities-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "EntitiesDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entities-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-entity-recognizer-summaries-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-entity-recognizer-summaries-request-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-entity-recognizer-summaries-request
                    'make-list-entity-recognizer-summaries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizer-summaries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizer-summaries-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizer-summaries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-entity-recognizer-summaries-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-entity-recognizer-summaries-response-"))
   (entity-recognizer-summaries-list common-lisp:nil :type
    (common-lisp:or entity-recognizer-summaries-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-entity-recognizer-summaries-response
                    'make-list-entity-recognizer-summaries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizer-summaries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizer-summaries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-summaries-list))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerSummariesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizer-summaries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-entity-recognizers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-entity-recognizers-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or entity-recognizer-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-entity-recognizers-request
                    'make-list-entity-recognizers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-entity-recognizers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-entity-recognizers-response-"))
   (entity-recognizer-properties-list common-lisp:nil :type
    (common-lisp:or entity-recognizer-properties-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-entity-recognizers-response
                    'make-list-entity-recognizers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-properties-list))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-events-detection-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-events-detection-jobs-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or events-detection-job-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-events-detection-jobs-request
                    'make-list-events-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-events-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-events-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-events-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-events-detection-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-events-detection-jobs-response-"))
   (events-detection-job-properties-list common-lisp:nil :type
    (common-lisp:or events-detection-job-properties-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-events-detection-jobs-response
                    'make-list-events-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-events-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-events-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'events-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "EventsDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-events-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-flywheel-iteration-history-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-flywheel-iteration-history-request-"))
   (flywheel-arn (common-lisp:error ":flywheel-arn is required") :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or flywheel-iteration-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-flywheel-iteration-history-request
                    'make-list-flywheel-iteration-history-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheel-iteration-history-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheel-iteration-history-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheel-iteration-history-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-flywheel-iteration-history-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-flywheel-iteration-history-response-"))
   (flywheel-iteration-properties-list common-lisp:nil :type
    (common-lisp:or flywheel-iteration-properties-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-flywheel-iteration-history-response
                    'make-list-flywheel-iteration-history-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheel-iteration-history-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheel-iteration-history-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-iteration-properties-list))
      (common-lisp:list
       (common-lisp:cons "FlywheelIterationPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheel-iteration-history-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-flywheels-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-flywheels-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or flywheel-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-flywheels-request 'make-list-flywheels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheels-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-flywheels-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-flywheels-response-"))
   (flywheel-summary-list common-lisp:nil :type
    (common-lisp:or flywheel-summary-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-flywheels-response 'make-list-flywheels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-summary-list))
      (common-lisp:list
       (common-lisp:cons "FlywheelSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-key-phrases-detection-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-key-phrases-detection-jobs-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or key-phrases-detection-job-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-key-phrases-detection-jobs-request
                    'make-list-key-phrases-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-key-phrases-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-key-phrases-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-key-phrases-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-key-phrases-detection-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-key-phrases-detection-jobs-response-"))
   (key-phrases-detection-job-properties-list common-lisp:nil :type
    (common-lisp:or key-phrases-detection-job-properties-list
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-key-phrases-detection-jobs-response
                    'make-list-key-phrases-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-key-phrases-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-key-phrases-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'key-phrases-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "KeyPhrasesDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-key-phrases-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-of-block-references ()
   '(trivial-types:proper-list block-reference))
 (common-lisp:defun |make-list-of-block-references|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list block-reference))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-blocks () '(trivial-types:proper-list block))
 (common-lisp:defun |make-list-of-blocks|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list block))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-child-blocks ()
   '(trivial-types:proper-list child-block))
 (common-lisp:defun |make-list-of-child-blocks|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list child-block))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-classes ()
   '(trivial-types:proper-list document-class))
 (common-lisp:defun |make-list-of-classes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list document-class))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-descriptive-mention-indices ()
   '(trivial-types:proper-list integer))
 (common-lisp:defun |make-list-of-descriptive-mention-indices|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list integer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-detect-dominant-language-result ()
   '(trivial-types:proper-list batch-detect-dominant-language-item-result))
 (common-lisp:defun |make-list-of-detect-dominant-language-result|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-detect-dominant-language-item-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-detect-entities-result ()
   '(trivial-types:proper-list batch-detect-entities-item-result))
 (common-lisp:defun |make-list-of-detect-entities-result|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-detect-entities-item-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-detect-key-phrases-result ()
   '(trivial-types:proper-list batch-detect-key-phrases-item-result))
 (common-lisp:defun |make-list-of-detect-key-phrases-result|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-detect-key-phrases-item-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-detect-sentiment-result ()
   '(trivial-types:proper-list batch-detect-sentiment-item-result))
 (common-lisp:defun |make-list-of-detect-sentiment-result|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-detect-sentiment-item-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-detect-syntax-result ()
   '(trivial-types:proper-list batch-detect-syntax-item-result))
 (common-lisp:defun |make-list-of-detect-syntax-result|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-detect-syntax-item-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-detect-targeted-sentiment-result ()
   '(trivial-types:proper-list batch-detect-targeted-sentiment-item-result))
 (common-lisp:defun |make-list-of-detect-targeted-sentiment-result|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-detect-targeted-sentiment-item-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-document-read-feature-types ()
   '(trivial-types:proper-list document-read-feature-types))
 (common-lisp:defun |make-list-of-document-read-feature-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            document-read-feature-types))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-document-type ()
   '(trivial-types:proper-list document-type-list-item))
 (common-lisp:defun |make-list-of-document-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list document-type-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-dominant-languages ()
   '(trivial-types:proper-list dominant-language))
 (common-lisp:defun |make-list-of-dominant-languages|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dominant-language))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-entities () '(trivial-types:proper-list entity))
 (common-lisp:defun |make-list-of-entities|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list entity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-entity-labels ()
   '(trivial-types:proper-list entity-label))
 (common-lisp:defun |make-list-of-entity-labels|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list entity-label))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-errors ()
   '(trivial-types:proper-list errors-list-item))
 (common-lisp:defun |make-list-of-errors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list errors-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-extracted-characters ()
   '(trivial-types:proper-list extracted-characters-list-item))
 (common-lisp:defun |make-list-of-extracted-characters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            extracted-characters-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-key-phrases ()
   '(trivial-types:proper-list key-phrase))
 (common-lisp:defun |make-list-of-key-phrases|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-phrase))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-labels ()
   '(trivial-types:proper-list document-label))
 (common-lisp:defun |make-list-of-labels|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list document-label))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-mentions ()
   '(trivial-types:proper-list targeted-sentiment-mention))
 (common-lisp:defun |make-list-of-mentions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            targeted-sentiment-mention))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-pii-entities ()
   '(trivial-types:proper-list pii-entity))
 (common-lisp:defun |make-list-of-pii-entities|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pii-entity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-pii-entity-types ()
   '(trivial-types:proper-list pii-entity-type))
 (common-lisp:defun |make-list-of-pii-entity-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pii-entity-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-relationships ()
   '(trivial-types:proper-list relationships-list-item))
 (common-lisp:defun |make-list-of-relationships|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list relationships-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-syntax-tokens ()
   '(trivial-types:proper-list syntax-token))
 (common-lisp:defun |make-list-of-syntax-tokens|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list syntax-token))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-targeted-sentiment-entities ()
   '(trivial-types:proper-list targeted-sentiment-entity))
 (common-lisp:defun |make-list-of-targeted-sentiment-entities|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            targeted-sentiment-entity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-warnings ()
   '(trivial-types:proper-list warnings-list-item))
 (common-lisp:defun |make-list-of-warnings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list warnings-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pii-entities-detection-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pii-entities-detection-jobs-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or pii-entities-detection-job-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pii-entities-detection-jobs-request
                    'make-list-pii-entities-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pii-entities-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pii-entities-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pii-entities-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pii-entities-detection-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pii-entities-detection-jobs-response-"))
   (pii-entities-detection-job-properties-list common-lisp:nil :type
    (common-lisp:or pii-entities-detection-job-properties-list
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pii-entities-detection-jobs-response
                    'make-list-pii-entities-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pii-entities-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pii-entities-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pii-entities-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "PiiEntitiesDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pii-entities-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-sentiment-detection-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-sentiment-detection-jobs-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or sentiment-detection-job-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-sentiment-detection-jobs-request
                    'make-list-sentiment-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sentiment-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sentiment-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sentiment-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-sentiment-detection-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-sentiment-detection-jobs-response-"))
   (sentiment-detection-job-properties-list common-lisp:nil :type
    (common-lisp:or sentiment-detection-job-properties-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-sentiment-detection-jobs-response
                    'make-list-sentiment-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sentiment-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sentiment-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sentiment-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "SentimentDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sentiment-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or comprehend-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (resource-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-targeted-sentiment-detection-jobs-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-targeted-sentiment-detection-jobs-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or targeted-sentiment-detection-job-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-targeted-sentiment-detection-jobs-request
                    'make-list-targeted-sentiment-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-targeted-sentiment-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-targeted-sentiment-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-targeted-sentiment-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-targeted-sentiment-detection-jobs-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-targeted-sentiment-detection-jobs-response-"))
   (targeted-sentiment-detection-job-properties-list common-lisp:nil :type
    (common-lisp:or targeted-sentiment-detection-job-properties-list
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-targeted-sentiment-detection-jobs-response
                    'make-list-targeted-sentiment-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-targeted-sentiment-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-targeted-sentiment-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'targeted-sentiment-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "TargetedSentimentDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-targeted-sentiment-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-topics-detection-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-topics-detection-jobs-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or topics-detection-job-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-topics-detection-jobs-request
                    'make-list-topics-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-topics-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-topics-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-topics-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-topics-detection-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-topics-detection-jobs-response-"))
   (topics-detection-job-properties-list common-lisp:nil :type
    (common-lisp:or topics-detection-job-properties-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-topics-detection-jobs-response
                    'make-list-topics-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-topics-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-topics-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'topics-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "TopicsDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-topics-detection-jobs-response))
   common-lisp:nil))
(common-lisp:deftype mask-character () 'common-lisp:string)
(common-lisp:deftype max-results-integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (mention-sentiment (:copier common-lisp:nil)
      (:conc-name "struct-shape-mention-sentiment-"))
   (sentiment common-lisp:nil :type
    (common-lisp:or sentiment-type common-lisp:null))
   (sentiment-score common-lisp:nil :type
    (common-lisp:or sentiment-score common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'mention-sentiment 'make-mention-sentiment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mention-sentiment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mention-sentiment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sentiment))
      (common-lisp:list
       (common-lisp:cons "Sentiment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sentiment-score))
      (common-lisp:list
       (common-lisp:cons "SentimentScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mention-sentiment))
   common-lisp:nil))
(common-lisp:deftype model-status () 'common-lisp:string)
(common-lisp:deftype model-type () 'common-lisp:string)
(common-lisp:deftype number-of-documents () 'common-lisp:integer)
(common-lisp:deftype number-of-topics-integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (output-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-data-config-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null))
   (kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'output-data-config 'make-output-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output-data-config))
   common-lisp:nil))
(common-lisp:deftype page-based-error-code () 'common-lisp:string)
(common-lisp:deftype page-based-warning-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (part-of-speech-tag (:copier common-lisp:nil)
      (:conc-name "struct-shape-part-of-speech-tag-"))
   (tag common-lisp:nil :type
    (common-lisp:or part-of-speech-tag-type common-lisp:null))
   (score common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'part-of-speech-tag 'make-part-of-speech-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input part-of-speech-tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input part-of-speech-tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag))
      (common-lisp:list
       (common-lisp:cons "Tag"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input part-of-speech-tag))
   common-lisp:nil))
(common-lisp:deftype part-of-speech-tag-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (pii-entities-detection-job-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-pii-entities-detection-job-filter-"))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (submit-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pii-entities-detection-job-filter
                    'make-pii-entities-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pii-entities-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pii-entities-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pii-entities-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (pii-entities-detection-job-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-pii-entities-detection-job-properties-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or input-data-config common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or pii-output-data-config common-lisp:null))
   (redaction-config common-lisp:nil :type
    (common-lisp:or redaction-config common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (mode common-lisp:nil :type
    (common-lisp:or pii-entities-detection-mode common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pii-entities-detection-job-properties
                    'make-pii-entities-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pii-entities-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pii-entities-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redaction-config))
      (common-lisp:list
       (common-lisp:cons "RedactionConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pii-entities-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype pii-entities-detection-job-properties-list ()
   '(trivial-types:proper-list pii-entities-detection-job-properties))
 (common-lisp:defun |make-pii-entities-detection-job-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            pii-entities-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pii-entities-detection-mask-mode () 'common-lisp:string)
(common-lisp:deftype pii-entities-detection-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (pii-entity (:copier common-lisp:nil)
      (:conc-name "struct-shape-pii-entity-"))
   (score common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or pii-entity-type common-lisp:null))
   (begin-offset common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (end-offset common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'pii-entity 'make-pii-entity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input pii-entity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input pii-entity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input pii-entity))
   common-lisp:nil))
(common-lisp:deftype pii-entity-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (pii-output-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-pii-output-data-config-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null))
   (kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pii-output-data-config 'make-pii-output-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pii-output-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pii-output-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pii-output-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (point (:copier common-lisp:nil) (:conc-name "struct-shape-point-"))
   (x common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (y common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export (common-lisp:list 'point 'make-point))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input point))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input point))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'x))
      (common-lisp:list
       (common-lisp:cons "X"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'y))
      (common-lisp:list
       (common-lisp:cons "Y"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input point))
   common-lisp:nil))
(common-lisp:deftype policy () 'common-lisp:string)
(common-lisp:deftype policy-revision-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype polygon () '(trivial-types:proper-list point))
 (common-lisp:defun |make-polygon|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list point))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (put-resource-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-resource-policy-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (resource-policy (common-lisp:error ":resource-policy is required") :type
    (common-lisp:or policy common-lisp:null))
   (policy-revision-id common-lisp:nil :type
    (common-lisp:or policy-revision-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-resource-policy-request
                    'make-put-resource-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-policy))
      (common-lisp:list
       (common-lisp:cons "ResourcePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-revision-id))
      (common-lisp:list
       (common-lisp:cons "PolicyRevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-resource-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-resource-policy-response-"))
   (policy-revision-id common-lisp:nil :type
    (common-lisp:or policy-revision-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-resource-policy-response
                    'make-put-resource-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-revision-id))
      (common-lisp:list
       (common-lisp:cons "PolicyRevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (redaction-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-redaction-config-"))
   (pii-entity-types common-lisp:nil :type
    (common-lisp:or list-of-pii-entity-types common-lisp:null))
   (mask-mode common-lisp:nil :type
    (common-lisp:or pii-entities-detection-mask-mode common-lisp:null))
   (mask-character common-lisp:nil :type
    (common-lisp:or mask-character common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'redaction-config 'make-redaction-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input redaction-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input redaction-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pii-entity-types))
      (common-lisp:list
       (common-lisp:cons "PiiEntityTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mask-mode))
      (common-lisp:list
       (common-lisp:cons "MaskMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mask-character))
      (common-lisp:list
       (common-lisp:cons "MaskCharacter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input redaction-config))
   common-lisp:nil))
(common-lisp:deftype relationship-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (relationships-list-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-relationships-list-item-"))
   (ids common-lisp:nil :type (common-lisp:or string-list common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or relationship-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'relationships-list-item 'make-relationships-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          relationships-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          relationships-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "Ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          relationships-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-in-use-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-in-use-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'resource-in-use-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-limit-exceeded-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-limit-exceeded-exception
                    'resource-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-unavailable-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-unavailable-exception
                    'resource-unavailable-exception-message)))
(common-lisp:deftype s3uri () 'common-lisp:string)
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-group-ids ()
   '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-security-group-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype semi-structured-document-blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defstruct
     (sentiment-detection-job-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-sentiment-detection-job-filter-"))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (submit-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sentiment-detection-job-filter
                    'make-sentiment-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sentiment-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sentiment-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sentiment-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sentiment-detection-job-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-sentiment-detection-job-properties-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or input-data-config common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or output-data-config common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sentiment-detection-job-properties
                    'make-sentiment-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sentiment-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sentiment-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sentiment-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sentiment-detection-job-properties-list ()
   '(trivial-types:proper-list sentiment-detection-job-properties))
 (common-lisp:defun |make-sentiment-detection-job-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sentiment-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (sentiment-score (:copier common-lisp:nil)
      (:conc-name "struct-shape-sentiment-score-"))
   (positive common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (negative common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (neutral common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (mixed common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sentiment-score 'make-sentiment-score))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sentiment-score))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sentiment-score))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'positive))
      (common-lisp:list
       (common-lisp:cons "Positive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'negative))
      (common-lisp:list
       (common-lisp:cons "Negative"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'neutral))
      (common-lisp:list
       (common-lisp:cons "Neutral"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mixed))
      (common-lisp:list
       (common-lisp:cons "Mixed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sentiment-score))
   common-lisp:nil))
(common-lisp:deftype sentiment-type () 'common-lisp:string)
(common-lisp:deftype split () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-document-classification-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-document-classification-job-request-"))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (document-classifier-arn common-lisp:nil :type
    (common-lisp:or document-classifier-arn common-lisp:null))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type (common-lisp:or input-data-config common-lisp:null))
   (output-data-config (common-lisp:error ":output-data-config is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-document-classification-job-request
                    'make-start-document-classification-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-document-classification-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-document-classification-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-document-classification-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-document-classification-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-document-classification-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (document-classifier-arn common-lisp:nil :type
    (common-lisp:or document-classifier-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-document-classification-job-response
                    'make-start-document-classification-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-document-classification-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-document-classification-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-document-classification-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-dominant-language-detection-job-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-start-dominant-language-detection-job-request-"))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type (common-lisp:or input-data-config common-lisp:null))
   (output-data-config (common-lisp:error ":output-data-config is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-dominant-language-detection-job-request
                    'make-start-dominant-language-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-dominant-language-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-dominant-language-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-dominant-language-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-dominant-language-detection-job-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-start-dominant-language-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-dominant-language-detection-job-response
                    'make-start-dominant-language-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-dominant-language-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-dominant-language-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-dominant-language-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-entities-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-entities-detection-job-request-"))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type (common-lisp:or input-data-config common-lisp:null))
   (output-data-config (common-lisp:error ":output-data-config is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (entity-recognizer-arn common-lisp:nil :type
    (common-lisp:or entity-recognizer-arn common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-entities-detection-job-request
                    'make-start-entities-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-entities-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-entities-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-entities-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-entities-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-entities-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (entity-recognizer-arn common-lisp:nil :type
    (common-lisp:or entity-recognizer-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-entities-detection-job-response
                    'make-start-entities-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-entities-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-entities-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-entities-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-events-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-events-detection-job-request-"))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type (common-lisp:or input-data-config common-lisp:null))
   (output-data-config (common-lisp:error ":output-data-config is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (target-event-types (common-lisp:error ":target-event-types is required")
    :type (common-lisp:or target-event-types common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-events-detection-job-request
                    'make-start-events-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-events-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-events-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-event-types))
      (common-lisp:list
       (common-lisp:cons "TargetEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-events-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-events-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-events-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-events-detection-job-response
                    'make-start-events-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-events-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-events-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-events-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-flywheel-iteration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-flywheel-iteration-request-"))
   (flywheel-arn (common-lisp:error ":flywheel-arn is required") :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-flywheel-iteration-request
                    'make-start-flywheel-iteration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-flywheel-iteration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-flywheel-iteration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-flywheel-iteration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-flywheel-iteration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-flywheel-iteration-response-"))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null))
   (flywheel-iteration-id common-lisp:nil :type
    (common-lisp:or flywheel-iteration-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-flywheel-iteration-response
                    'make-start-flywheel-iteration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-flywheel-iteration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-flywheel-iteration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-iteration-id))
      (common-lisp:list
       (common-lisp:cons "FlywheelIterationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-flywheel-iteration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-key-phrases-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-key-phrases-detection-job-request-"))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type (common-lisp:or input-data-config common-lisp:null))
   (output-data-config (common-lisp:error ":output-data-config is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-key-phrases-detection-job-request
                    'make-start-key-phrases-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-key-phrases-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-key-phrases-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-key-phrases-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-key-phrases-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-key-phrases-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-key-phrases-detection-job-response
                    'make-start-key-phrases-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-key-phrases-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-key-phrases-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-key-phrases-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-pii-entities-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-pii-entities-detection-job-request-"))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type (common-lisp:or input-data-config common-lisp:null))
   (output-data-config (common-lisp:error ":output-data-config is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (mode (common-lisp:error ":mode is required") :type
    (common-lisp:or pii-entities-detection-mode common-lisp:null))
   (redaction-config common-lisp:nil :type
    (common-lisp:or redaction-config common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-pii-entities-detection-job-request
                    'make-start-pii-entities-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-pii-entities-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-pii-entities-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redaction-config))
      (common-lisp:list
       (common-lisp:cons "RedactionConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-pii-entities-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-pii-entities-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-pii-entities-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-pii-entities-detection-job-response
                    'make-start-pii-entities-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-pii-entities-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-pii-entities-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-pii-entities-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-sentiment-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-sentiment-detection-job-request-"))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type (common-lisp:or input-data-config common-lisp:null))
   (output-data-config (common-lisp:error ":output-data-config is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-sentiment-detection-job-request
                    'make-start-sentiment-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-sentiment-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-sentiment-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-sentiment-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-sentiment-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-sentiment-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-sentiment-detection-job-response
                    'make-start-sentiment-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-sentiment-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-sentiment-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-sentiment-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-targeted-sentiment-detection-job-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-start-targeted-sentiment-detection-job-request-"))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type (common-lisp:or input-data-config common-lisp:null))
   (output-data-config (common-lisp:error ":output-data-config is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-targeted-sentiment-detection-job-request
                    'make-start-targeted-sentiment-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-targeted-sentiment-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-targeted-sentiment-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-targeted-sentiment-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-targeted-sentiment-detection-job-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-start-targeted-sentiment-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-targeted-sentiment-detection-job-response
                    'make-start-targeted-sentiment-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-targeted-sentiment-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-targeted-sentiment-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-targeted-sentiment-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-topics-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-topics-detection-job-request-"))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type (common-lisp:or input-data-config common-lisp:null))
   (output-data-config (common-lisp:error ":output-data-config is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (number-of-topics common-lisp:nil :type
    (common-lisp:or number-of-topics-integer common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token-string common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-topics-detection-job-request
                    'make-start-topics-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-topics-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-topics-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-topics))
      (common-lisp:list
       (common-lisp:cons "NumberOfTopics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-topics-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-topics-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-topics-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-topics-detection-job-response
                    'make-start-topics-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-topics-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-topics-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-topics-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-dominant-language-detection-job-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-stop-dominant-language-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-dominant-language-detection-job-request
                    'make-stop-dominant-language-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-dominant-language-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-dominant-language-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-dominant-language-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-dominant-language-detection-job-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-stop-dominant-language-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-dominant-language-detection-job-response
                    'make-stop-dominant-language-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-dominant-language-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-dominant-language-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-dominant-language-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-entities-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-entities-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-entities-detection-job-request
                    'make-stop-entities-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-entities-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-entities-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-entities-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-entities-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-entities-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-entities-detection-job-response
                    'make-stop-entities-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-entities-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-entities-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-entities-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-events-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-events-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-events-detection-job-request
                    'make-stop-events-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-events-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-events-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-events-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-events-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-events-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-events-detection-job-response
                    'make-stop-events-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-events-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-events-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-events-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-key-phrases-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-key-phrases-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-key-phrases-detection-job-request
                    'make-stop-key-phrases-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-key-phrases-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-key-phrases-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-key-phrases-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-key-phrases-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-key-phrases-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-key-phrases-detection-job-response
                    'make-stop-key-phrases-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-key-phrases-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-key-phrases-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-key-phrases-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-pii-entities-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-pii-entities-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-pii-entities-detection-job-request
                    'make-stop-pii-entities-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-pii-entities-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-pii-entities-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-pii-entities-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-pii-entities-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-pii-entities-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-pii-entities-detection-job-response
                    'make-stop-pii-entities-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-pii-entities-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-pii-entities-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-pii-entities-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-sentiment-detection-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-sentiment-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-sentiment-detection-job-request
                    'make-stop-sentiment-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-sentiment-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-sentiment-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-sentiment-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-sentiment-detection-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-sentiment-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-sentiment-detection-job-response
                    'make-stop-sentiment-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-sentiment-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-sentiment-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-sentiment-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-targeted-sentiment-detection-job-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-stop-targeted-sentiment-detection-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-targeted-sentiment-detection-job-request
                    'make-stop-targeted-sentiment-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-targeted-sentiment-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-targeted-sentiment-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-targeted-sentiment-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-targeted-sentiment-detection-job-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-stop-targeted-sentiment-detection-job-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-targeted-sentiment-detection-job-response
                    'make-stop-targeted-sentiment-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-targeted-sentiment-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-targeted-sentiment-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-targeted-sentiment-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-training-document-classifier-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-training-document-classifier-request-"))
   (document-classifier-arn
    (common-lisp:error ":document-classifier-arn is required") :type
    (common-lisp:or document-classifier-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-training-document-classifier-request
                    'make-stop-training-document-classifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-document-classifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-document-classifier-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-document-classifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-training-document-classifier-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-training-document-classifier-response-")))
 (common-lisp:export
  (common-lisp:list 'stop-training-document-classifier-response
                    'make-stop-training-document-classifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-document-classifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-document-classifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-document-classifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-training-entity-recognizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-training-entity-recognizer-request-"))
   (entity-recognizer-arn
    (common-lisp:error ":entity-recognizer-arn is required") :type
    (common-lisp:or entity-recognizer-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-training-entity-recognizer-request
                    'make-stop-training-entity-recognizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-entity-recognizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-entity-recognizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-entity-recognizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-training-entity-recognizer-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-training-entity-recognizer-response-")))
 (common-lisp:export
  (common-lisp:list 'stop-training-entity-recognizer-response
                    'make-stop-training-entity-recognizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-entity-recognizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-entity-recognizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-entity-recognizer-response))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnets () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun |make-subnets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype syntax-language-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (syntax-token (:copier common-lisp:nil)
      (:conc-name "struct-shape-syntax-token-"))
   (token-id common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (text common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (begin-offset common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (end-offset common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (part-of-speech common-lisp:nil :type
    (common-lisp:or part-of-speech-tag common-lisp:null)))
 (common-lisp:export (common-lisp:list 'syntax-token 'make-syntax-token))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input syntax-token))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input syntax-token))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-id))
      (common-lisp:list
       (common-lisp:cons "TokenId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'part-of-speech))
      (common-lisp:list
       (common-lisp:cons "PartOfSpeech"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input syntax-token))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-event-types ()
   '(trivial-types:proper-list event-type-string))
 (common-lisp:defun |make-target-event-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-type-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (targeted-sentiment-detection-job-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-targeted-sentiment-detection-job-filter-"))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (submit-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'targeted-sentiment-detection-job-filter
                    'make-targeted-sentiment-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (targeted-sentiment-detection-job-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-targeted-sentiment-detection-job-properties-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or input-data-config common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or output-data-config common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'targeted-sentiment-detection-job-properties
                    'make-targeted-sentiment-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype targeted-sentiment-detection-job-properties-list ()
   '(trivial-types:proper-list targeted-sentiment-detection-job-properties))
 (common-lisp:defun |make-targeted-sentiment-detection-job-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            targeted-sentiment-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (targeted-sentiment-entity (:copier common-lisp:nil)
      (:conc-name "struct-shape-targeted-sentiment-entity-"))
   (descriptive-mention-index common-lisp:nil :type
    (common-lisp:or list-of-descriptive-mention-indices common-lisp:null))
   (mentions common-lisp:nil :type
    (common-lisp:or list-of-mentions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'targeted-sentiment-entity
                    'make-targeted-sentiment-entity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-entity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-entity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'descriptive-mention-index))
      (common-lisp:list
       (common-lisp:cons "DescriptiveMentionIndex"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mentions))
      (common-lisp:list
       (common-lisp:cons "Mentions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-entity))
   common-lisp:nil))
(common-lisp:deftype targeted-sentiment-entity-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (targeted-sentiment-mention (:copier common-lisp:nil)
      (:conc-name "struct-shape-targeted-sentiment-mention-"))
   (score common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (group-score common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (text common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or targeted-sentiment-entity-type common-lisp:null))
   (mention-sentiment common-lisp:nil :type
    (common-lisp:or mention-sentiment common-lisp:null))
   (begin-offset common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (end-offset common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'targeted-sentiment-mention
                    'make-targeted-sentiment-mention))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-mention))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-mention))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-score))
      (common-lisp:list
       (common-lisp:cons "GroupScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mention-sentiment))
      (common-lisp:list
       (common-lisp:cons "MentionSentiment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-mention))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (task-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-task-config-"))
   (language-code (common-lisp:error ":language-code is required") :type
    (common-lisp:or language-code common-lisp:null))
   (document-classification-config common-lisp:nil :type
    (common-lisp:or document-classification-config common-lisp:null))
   (entity-recognition-config common-lisp:nil :type
    (common-lisp:or entity-recognition-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'task-config 'make-task-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classification-config))
      (common-lisp:list
       (common-lisp:cons "DocumentClassificationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognition-config))
      (common-lisp:list
       (common-lisp:cons "EntityRecognitionConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition text-size-limit-exceeded-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       text-size-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'text-size-limit-exceeded-exception
                    'text-size-limit-exceeded-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition too-many-tag-keys-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-tag-keys-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-tag-keys-exception
                    'too-many-tag-keys-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition too-many-tags-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-tags-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-tags-exception 'too-many-tags-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (topics-detection-job-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-topics-detection-job-filter-"))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (submit-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'topics-detection-job-filter
                    'make-topics-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          topics-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          topics-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          topics-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (topics-detection-job-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-topics-detection-job-properties-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-arn common-lisp:nil :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or any-length-string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or input-data-config common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or output-data-config common-lisp:null))
   (number-of-topics common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'topics-detection-job-properties
                    'make-topics-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          topics-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          topics-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-topics))
      (common-lisp:list
       (common-lisp:cons "NumberOfTopics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          topics-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype topics-detection-job-properties-list ()
   '(trivial-types:proper-list topics-detection-job-properties))
 (common-lisp:defun |make-topics-detection-job-properties-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            topics-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition unsupported-language-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unsupported-language-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-language-exception
                    'unsupported-language-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or comprehend-arn common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-data-security-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-data-security-config-"))
   (model-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (volume-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-data-security-config
                    'make-update-data-security-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-data-security-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-data-security-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-data-security-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-endpoint-request-"))
   (endpoint-arn (common-lisp:error ":endpoint-arn is required") :type
    (common-lisp:or comprehend-endpoint-arn common-lisp:null))
   (desired-model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (desired-inference-units common-lisp:nil :type
    (common-lisp:or inference-units-integer common-lisp:null))
   (desired-data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (flywheel-arn common-lisp:nil :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-endpoint-request 'make-update-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-model-arn))
      (common-lisp:list
       (common-lisp:cons "DesiredModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'desired-inference-units))
      (common-lisp:list
       (common-lisp:cons "DesiredInferenceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'desired-data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DesiredDataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-endpoint-response-"))
   (desired-model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-endpoint-response 'make-update-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-model-arn))
      (common-lisp:list
       (common-lisp:cons "DesiredModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-flywheel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-flywheel-request-"))
   (flywheel-arn (common-lisp:error ":flywheel-arn is required") :type
    (common-lisp:or comprehend-flywheel-arn common-lisp:null))
   (active-model-arn common-lisp:nil :type
    (common-lisp:or comprehend-model-arn common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (data-security-config common-lisp:nil :type
    (common-lisp:or update-data-security-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-flywheel-request 'make-update-flywheel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-flywheel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-flywheel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-model-arn))
      (common-lisp:list
       (common-lisp:cons "ActiveModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-security-config))
      (common-lisp:list
       (common-lisp:cons "DataSecurityConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-flywheel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-flywheel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-flywheel-response-"))
   (flywheel-properties common-lisp:nil :type
    (common-lisp:or flywheel-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-flywheel-response 'make-update-flywheel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-flywheel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-flywheel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-properties))
      (common-lisp:list
       (common-lisp:cons "FlywheelProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-flywheel-response))
   common-lisp:nil))
(common-lisp:deftype version-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-config-"))
   (security-group-ids (common-lisp:error ":security-group-ids is required")
    :type (common-lisp:or security-group-ids common-lisp:null))
   (subnets (common-lisp:error ":subnets is required") :type
    (common-lisp:or subnets common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-config 'make-vpc-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnets))
      (common-lisp:list
       (common-lisp:cons "Subnets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (warnings-list-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-warnings-list-item-"))
   (page common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (warn-code common-lisp:nil :type
    (common-lisp:or page-based-warning-code common-lisp:null))
   (warn-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'warnings-list-item 'make-warnings-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input warnings-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input warnings-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warn-code))
      (common-lisp:list
       (common-lisp:cons "WarnCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warn-message))
      (common-lisp:list
       (common-lisp:cons "WarnMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input warnings-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun batch-detect-dominant-language
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-list)
   (common-lisp:declare (common-lisp:ignorable text-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-detect-dominant-language-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "BatchDetectDominantLanguage"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-detect-dominant-language))
(common-lisp:progn
 (common-lisp:defun batch-detect-entities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-list language-code)
   (common-lisp:declare (common-lisp:ignorable text-list language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-detect-entities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "BatchDetectEntities"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-detect-entities))
(common-lisp:progn
 (common-lisp:defun batch-detect-key-phrases
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-list language-code)
   (common-lisp:declare (common-lisp:ignorable text-list language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-detect-key-phrases-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "BatchDetectKeyPhrases"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-detect-key-phrases))
(common-lisp:progn
 (common-lisp:defun batch-detect-sentiment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-list language-code)
   (common-lisp:declare (common-lisp:ignorable text-list language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-detect-sentiment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "BatchDetectSentiment"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-detect-sentiment))
(common-lisp:progn
 (common-lisp:defun batch-detect-syntax
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-list language-code)
   (common-lisp:declare (common-lisp:ignorable text-list language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-detect-syntax-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "BatchDetectSyntax"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-detect-syntax))
(common-lisp:progn
 (common-lisp:defun batch-detect-targeted-sentiment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-list language-code)
   (common-lisp:declare (common-lisp:ignorable text-list language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-detect-targeted-sentiment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "BatchDetectTargetedSentiment"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-detect-targeted-sentiment))
(common-lisp:progn
 (common-lisp:defun classify-document
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text endpoint-arn bytes
                     document-reader-config)
   (common-lisp:declare
    (common-lisp:ignorable text endpoint-arn bytes document-reader-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-classify-document-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ClassifyDocument"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'classify-document))
(common-lisp:progn
 (common-lisp:defun contains-pii-entities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code)
   (common-lisp:declare (common-lisp:ignorable text language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-contains-pii-entities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ContainsPiiEntities"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'contains-pii-entities))
(common-lisp:progn
 (common-lisp:defun create-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn dataset-name dataset-type
                     description input-data-config client-request-token tags)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-arn dataset-name dataset-type description
     input-data-config client-request-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateDataset"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-dataset))
(common-lisp:progn
 (common-lisp:defun create-document-classifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key document-classifier-name version-name
                     data-access-role-arn tags input-data-config
                     output-data-config client-request-token language-code
                     volume-kms-key-id vpc-config mode model-kms-key-id
                     model-policy)
   (common-lisp:declare
    (common-lisp:ignorable document-classifier-name version-name
     data-access-role-arn tags input-data-config output-data-config
     client-request-token language-code volume-kms-key-id vpc-config mode
     model-kms-key-id model-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-document-classifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateDocumentClassifier"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-document-classifier))
(common-lisp:progn
 (common-lisp:defun create-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-name model-arn
                     desired-inference-units client-request-token tags
                     data-access-role-arn flywheel-arn)
   (common-lisp:declare
    (common-lisp:ignorable endpoint-name model-arn desired-inference-units
     client-request-token tags data-access-role-arn flywheel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateEndpoint"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-endpoint))
(common-lisp:progn
 (common-lisp:defun create-entity-recognizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recognizer-name version-name
                     data-access-role-arn tags input-data-config
                     client-request-token language-code volume-kms-key-id
                     vpc-config model-kms-key-id model-policy)
   (common-lisp:declare
    (common-lisp:ignorable recognizer-name version-name data-access-role-arn
     tags input-data-config client-request-token language-code
     volume-kms-key-id vpc-config model-kms-key-id model-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-entity-recognizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateEntityRecognizer"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-entity-recognizer))
(common-lisp:progn
 (common-lisp:defun create-flywheel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-name active-model-arn
                     data-access-role-arn task-config model-type
                     data-lake-s3uri data-security-config client-request-token
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-name active-model-arn data-access-role-arn
     task-config model-type data-lake-s3uri data-security-config
     client-request-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-flywheel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateFlywheel"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-flywheel))
(common-lisp:progn
 (common-lisp:defun delete-document-classifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key document-classifier-arn)
   (common-lisp:declare (common-lisp:ignorable document-classifier-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-document-classifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteDocumentClassifier"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-document-classifier))
(common-lisp:progn
 (common-lisp:defun delete-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-arn)
   (common-lisp:declare (common-lisp:ignorable endpoint-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteEndpoint"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-entity-recognizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entity-recognizer-arn)
   (common-lisp:declare (common-lisp:ignorable entity-recognizer-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-entity-recognizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteEntityRecognizer"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-entity-recognizer))
(common-lisp:progn
 (common-lisp:defun delete-flywheel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn)
   (common-lisp:declare (common-lisp:ignorable flywheel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-flywheel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteFlywheel"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-flywheel))
(common-lisp:progn
 (common-lisp:defun delete-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn policy-revision-id)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn policy-revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteResourcePolicy"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-resource-policy))
(common-lisp:progn
 (common-lisp:defun describe-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dataset-arn)
   (common-lisp:declare (common-lisp:ignorable dataset-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeDataset"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-dataset))
(common-lisp:progn
 (common-lisp:defun describe-document-classification-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-document-classification-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeDocumentClassificationJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-document-classification-job))
(common-lisp:progn
 (common-lisp:defun describe-document-classifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key document-classifier-arn)
   (common-lisp:declare (common-lisp:ignorable document-classifier-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-document-classifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeDocumentClassifier"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-document-classifier))
(common-lisp:progn
 (common-lisp:defun describe-dominant-language-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-dominant-language-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeDominantLanguageDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-dominant-language-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-arn)
   (common-lisp:declare (common-lisp:ignorable endpoint-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeEndpoint"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-endpoint))
(common-lisp:progn
 (common-lisp:defun describe-entities-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-entities-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeEntitiesDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-entities-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-entity-recognizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entity-recognizer-arn)
   (common-lisp:declare (common-lisp:ignorable entity-recognizer-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-entity-recognizer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeEntityRecognizer"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-entity-recognizer))
(common-lisp:progn
 (common-lisp:defun describe-events-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-events-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeEventsDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-events-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-flywheel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn)
   (common-lisp:declare (common-lisp:ignorable flywheel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-flywheel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeFlywheel"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-flywheel))
(common-lisp:progn
 (common-lisp:defun describe-flywheel-iteration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn flywheel-iteration-id)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-arn flywheel-iteration-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-flywheel-iteration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeFlywheelIteration"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-flywheel-iteration))
(common-lisp:progn
 (common-lisp:defun describe-key-phrases-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-key-phrases-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeKeyPhrasesDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-key-phrases-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-pii-entities-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-pii-entities-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribePiiEntitiesDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-pii-entities-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeResourcePolicy"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-resource-policy))
(common-lisp:progn
 (common-lisp:defun describe-sentiment-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-sentiment-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeSentimentDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-sentiment-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-targeted-sentiment-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-targeted-sentiment-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeTargetedSentimentDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-targeted-sentiment-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-topics-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-topics-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeTopicsDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-topics-detection-job))
(common-lisp:progn
 (common-lisp:defun detect-dominant-language
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text)
   (common-lisp:declare (common-lisp:ignorable text))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-dominant-language-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DetectDominantLanguage"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'detect-dominant-language))
(common-lisp:progn
 (common-lisp:defun detect-entities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code endpoint-arn bytes
                     document-reader-config)
   (common-lisp:declare
    (common-lisp:ignorable text language-code endpoint-arn bytes
     document-reader-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-entities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DetectEntities"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'detect-entities))
(common-lisp:progn
 (common-lisp:defun detect-key-phrases
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code)
   (common-lisp:declare (common-lisp:ignorable text language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-key-phrases-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DetectKeyPhrases"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'detect-key-phrases))
(common-lisp:progn
 (common-lisp:defun detect-pii-entities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code)
   (common-lisp:declare (common-lisp:ignorable text language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-pii-entities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DetectPiiEntities"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'detect-pii-entities))
(common-lisp:progn
 (common-lisp:defun detect-sentiment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code)
   (common-lisp:declare (common-lisp:ignorable text language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-sentiment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DetectSentiment"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'detect-sentiment))
(common-lisp:progn
 (common-lisp:defun detect-syntax
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code)
   (common-lisp:declare (common-lisp:ignorable text language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-syntax-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DetectSyntax"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'detect-syntax))
(common-lisp:progn
 (common-lisp:defun detect-targeted-sentiment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code)
   (common-lisp:declare (common-lisp:ignorable text language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-detect-targeted-sentiment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DetectTargetedSentiment"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'detect-targeted-sentiment))
(common-lisp:progn
 (common-lisp:defun import-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-model-arn model-name version-name
                     model-kms-key-id data-access-role-arn tags)
   (common-lisp:declare
    (common-lisp:ignorable source-model-arn model-name version-name
     model-kms-key-id data-access-role-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ImportModel"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-model))
(common-lisp:progn
 (common-lisp:defun list-datasets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn filter next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-arn filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-datasets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListDatasets"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-datasets))
(common-lisp:progn
 (common-lisp:defun list-document-classification-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-document-classification-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListDocumentClassificationJobs"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-document-classification-jobs))
(common-lisp:progn
 (common-lisp:defun list-document-classifier-summaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-document-classifier-summaries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListDocumentClassifierSummaries"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-document-classifier-summaries))
(common-lisp:progn
 (common-lisp:defun list-document-classifiers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-document-classifiers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListDocumentClassifiers"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-document-classifiers))
(common-lisp:progn
 (common-lisp:defun list-dominant-language-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-dominant-language-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListDominantLanguageDetectionJobs"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-dominant-language-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-endpoints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-endpoints-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListEndpoints"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-endpoints))
(common-lisp:progn
 (common-lisp:defun list-entities-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-entities-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListEntitiesDetectionJobs"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-entities-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-entity-recognizer-summaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-entity-recognizer-summaries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListEntityRecognizerSummaries"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-entity-recognizer-summaries))
(common-lisp:progn
 (common-lisp:defun list-entity-recognizers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-entity-recognizers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListEntityRecognizers"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-entity-recognizers))
(common-lisp:progn
 (common-lisp:defun list-events-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-events-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListEventsDetectionJobs"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-events-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-flywheel-iteration-history
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn filter next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-arn filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-flywheel-iteration-history-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListFlywheelIterationHistory"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-flywheel-iteration-history))
(common-lisp:progn
 (common-lisp:defun list-flywheels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-flywheels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListFlywheels"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-flywheels))
(common-lisp:progn
 (common-lisp:defun list-key-phrases-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-key-phrases-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListKeyPhrasesDetectionJobs"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-key-phrases-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-pii-entities-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-pii-entities-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListPiiEntitiesDetectionJobs"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-pii-entities-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-sentiment-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-sentiment-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListSentimentDetectionJobs"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-sentiment-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListTagsForResource"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-targeted-sentiment-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-targeted-sentiment-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListTargetedSentimentDetectionJobs"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-targeted-sentiment-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-topics-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-topics-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListTopicsDetectionJobs"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-topics-detection-jobs))
(common-lisp:progn
 (common-lisp:defun put-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn resource-policy
                     policy-revision-id)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn resource-policy policy-revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "PutResourcePolicy"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-resource-policy))
(common-lisp:progn
 (common-lisp:defun start-document-classification-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-name document-classifier-arn
                     input-data-config output-data-config data-access-role-arn
                     client-request-token volume-kms-key-id vpc-config tags
                     flywheel-arn)
   (common-lisp:declare
    (common-lisp:ignorable job-name document-classifier-arn input-data-config
     output-data-config data-access-role-arn client-request-token
     volume-kms-key-id vpc-config tags flywheel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-document-classification-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartDocumentClassificationJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-document-classification-job))
(common-lisp:progn
 (common-lisp:defun start-dominant-language-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name client-request-token
                     volume-kms-key-id vpc-config tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name client-request-token volume-kms-key-id
     vpc-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-dominant-language-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartDominantLanguageDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-dominant-language-detection-job))
(common-lisp:progn
 (common-lisp:defun start-entities-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name entity-recognizer-arn
                     language-code client-request-token volume-kms-key-id
                     vpc-config tags flywheel-arn)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name entity-recognizer-arn language-code
     client-request-token volume-kms-key-id vpc-config tags flywheel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-entities-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartEntitiesDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-entities-detection-job))
(common-lisp:progn
 (common-lisp:defun start-events-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name language-code
                     client-request-token target-event-types tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name language-code client-request-token
     target-event-types tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-events-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartEventsDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-events-detection-job))
(common-lisp:progn
 (common-lisp:defun start-flywheel-iteration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-arn client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-flywheel-iteration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartFlywheelIteration"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-flywheel-iteration))
(common-lisp:progn
 (common-lisp:defun start-key-phrases-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name language-code
                     client-request-token volume-kms-key-id vpc-config tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name language-code client-request-token
     volume-kms-key-id vpc-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-key-phrases-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartKeyPhrasesDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-key-phrases-detection-job))
(common-lisp:progn
 (common-lisp:defun start-pii-entities-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config mode
                     redaction-config data-access-role-arn job-name
                     language-code client-request-token tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config mode
     redaction-config data-access-role-arn job-name language-code
     client-request-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-pii-entities-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartPiiEntitiesDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-pii-entities-detection-job))
(common-lisp:progn
 (common-lisp:defun start-sentiment-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name language-code
                     client-request-token volume-kms-key-id vpc-config tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name language-code client-request-token
     volume-kms-key-id vpc-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-sentiment-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartSentimentDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-sentiment-detection-job))
(common-lisp:progn
 (common-lisp:defun start-targeted-sentiment-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name language-code
                     client-request-token volume-kms-key-id vpc-config tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name language-code client-request-token
     volume-kms-key-id vpc-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-targeted-sentiment-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartTargetedSentimentDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-targeted-sentiment-detection-job))
(common-lisp:progn
 (common-lisp:defun start-topics-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name number-of-topics
                     client-request-token volume-kms-key-id vpc-config tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name number-of-topics client-request-token
     volume-kms-key-id vpc-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-topics-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartTopicsDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-topics-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-dominant-language-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-dominant-language-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StopDominantLanguageDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-dominant-language-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-entities-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-entities-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StopEntitiesDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-entities-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-events-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-events-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StopEventsDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-events-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-key-phrases-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-key-phrases-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StopKeyPhrasesDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-key-phrases-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-pii-entities-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-pii-entities-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StopPiiEntitiesDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-pii-entities-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-sentiment-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-sentiment-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StopSentimentDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-sentiment-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-targeted-sentiment-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-targeted-sentiment-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StopTargetedSentimentDetectionJob"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-targeted-sentiment-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-training-document-classifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key document-classifier-arn)
   (common-lisp:declare (common-lisp:ignorable document-classifier-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-training-document-classifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StopTrainingDocumentClassifier"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-training-document-classifier))
(common-lisp:progn
 (common-lisp:defun stop-training-entity-recognizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entity-recognizer-arn)
   (common-lisp:declare (common-lisp:ignorable entity-recognizer-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-training-entity-recognizer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StopTrainingEntityRecognizer"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-training-entity-recognizer))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "TagResource"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UntagResource"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-arn desired-model-arn
                     desired-inference-units desired-data-access-role-arn
                     flywheel-arn)
   (common-lisp:declare
    (common-lisp:ignorable endpoint-arn desired-model-arn
     desired-inference-units desired-data-access-role-arn flywheel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateEndpoint"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-endpoint))
(common-lisp:progn
 (common-lisp:defun update-flywheel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn active-model-arn
                     data-access-role-arn data-security-config)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-arn active-model-arn data-access-role-arn
     data-security-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-flywheel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateFlywheel"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-flywheel))
