;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/pinpoint-email/api
  (:use)
  (:nicknames #:aws/pinpoint-email)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/pinpoint-email/api)
(common-lisp:progn
 (common-lisp:define-condition pinpoint-email-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'pinpoint-email-error))
(common-lisp:progn
 (common-lisp:defclass pinpoint-email-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "pinpoint-email"
                        :api-version "2018-07-26" :host-prefix "email"
                        :signing-name "ses" :global-host common-lisp:nil))
 (common-lisp:export 'pinpoint-email-request))
(common-lisp:defvar *error-map*
  '(("AccountSuspendedException" . account-suspended-exception)
    ("AlreadyExistsException" . already-exists-exception)
    ("BadRequestException" . bad-request-exception)
    ("ConcurrentModificationException" . concurrent-modification-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("MailFromDomainNotVerifiedException"
     . mail-from-domain-not-verified-exception)
    ("MessageRejected" . message-rejected)
    ("NotFoundException" . not-found-exception)
    ("SendingPausedException" . sending-paused-exception)
    ("TooManyRequestsException" . too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:define-condition account-suspended-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'account-suspended-exception)))
(common-lisp:progn
 (common-lisp:define-condition already-exists-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'already-exists-exception)))
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'bad-request-exception)))
(common-lisp:deftype behavior-on-mx-failure () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype blacklist-entries ()
   '(trivial-types:proper-list blacklist-entry))
 (common-lisp:defun make-blacklist-entries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list blacklist-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (blacklist-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-blacklist-entry-"))
   (rbl-name common-lisp:nil :type (common-lisp:or rbl-name common-lisp:null))
   (listing-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or blacklisting-description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'blacklist-entry 'make-blacklist-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input blacklist-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input blacklist-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rbl-name))
      (common-lisp:list
       (common-lisp:cons "RblName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'listing-time))
      (common-lisp:list
       (common-lisp:cons "ListingTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input blacklist-entry))
   common-lisp:nil))
(common-lisp:deftype blacklist-item-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype blacklist-item-names ()
   '(trivial-types:proper-list blacklist-item-name))
 (common-lisp:defun make-blacklist-item-names
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list blacklist-item-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype blacklist-report () 'common-lisp:hash-table)
 (common-lisp:defun make-blacklist-report (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype blacklisting-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (body (:copier common-lisp:nil) (:conc-name "struct-shape-body-"))
   (text common-lisp:nil :type (common-lisp:or content common-lisp:null))
   (html common-lisp:nil :type (common-lisp:or content common-lisp:null)))
 (common-lisp:export (common-lisp:list 'body 'make-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input body))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input body))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'html))
      (common-lisp:list
       (common-lisp:cons "Html"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input body))
   common-lisp:nil))
(common-lisp:deftype campaign-id () 'common-lisp:string)
(common-lisp:deftype charset () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-cloud-watch-destination-"))
   (dimension-configurations
    (common-lisp:error ":dimension-configurations is required") :type
    (common-lisp:or cloud-watch-dimension-configurations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-destination 'make-cloud-watch-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-configurations))
      (common-lisp:list
       (common-lisp:cons "DimensionConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-dimension-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-cloud-watch-dimension-configuration-"))
   (dimension-name (common-lisp:error ":dimension-name is required") :type
    (common-lisp:or dimension-name common-lisp:null))
   (dimension-value-source
    (common-lisp:error ":dimension-value-source is required") :type
    (common-lisp:or dimension-value-source common-lisp:null))
   (default-dimension-value
    (common-lisp:error ":default-dimension-value is required") :type
    (common-lisp:or default-dimension-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-dimension-configuration
                    'make-cloud-watch-dimension-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-dimension-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-dimension-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-name))
      (common-lisp:list
       (common-lisp:cons "DimensionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-value-source))
      (common-lisp:list
       (common-lisp:cons "DimensionValueSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-dimension-value))
      (common-lisp:list
       (common-lisp:cons "DefaultDimensionValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-dimension-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cloud-watch-dimension-configurations ()
   '(trivial-types:proper-list cloud-watch-dimension-configuration))
 (common-lisp:defun make-cloud-watch-dimension-configurations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cloud-watch-dimension-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition concurrent-modification-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'concurrent-modification-exception)))
(common-lisp:deftype configuration-set-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype configuration-set-name-list ()
   '(trivial-types:proper-list configuration-set-name))
 (common-lisp:defun make-configuration-set-name-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration-set-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (content (:copier common-lisp:nil) (:conc-name "struct-shape-content-"))
   (data (common-lisp:error ":data is required") :type
    (common-lisp:or message-data common-lisp:null))
   (charset common-lisp:nil :type (common-lisp:or charset common-lisp:null)))
 (common-lisp:export (common-lisp:list 'content 'make-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charset))
      (common-lisp:list
       (common-lisp:cons "Charset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input content))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-event-destination-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-configuration-set-event-destination-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination-name
    (common-lisp:error ":event-destination-name is required") :type
    (common-lisp:or event-destination-name common-lisp:null))
   (event-destination (common-lisp:error ":event-destination is required")
    :type (common-lisp:or event-destination-definition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-event-destination-request
                    'make-create-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-destination-name))
      (common-lisp:list
       (common-lisp:cons "EventDestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destination))
      (common-lisp:list
       (common-lisp:cons "EventDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-event-destination-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-configuration-set-event-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-event-destination-response
                    'make-create-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-configuration-set-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (tracking-options common-lisp:nil :type
    (common-lisp:or tracking-options common-lisp:null))
   (delivery-options common-lisp:nil :type
    (common-lisp:or delivery-options common-lisp:null))
   (reputation-options common-lisp:nil :type
    (common-lisp:or reputation-options common-lisp:null))
   (sending-options common-lisp:nil :type
    (common-lisp:or sending-options common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-request
                    'make-create-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracking-options))
      (common-lisp:list
       (common-lisp:cons "TrackingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-options))
      (common-lisp:list
       (common-lisp:cons "DeliveryOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reputation-options))
      (common-lisp:list
       (common-lisp:cons "ReputationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-options))
      (common-lisp:list
       (common-lisp:cons "SendingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-configuration-set-response-")))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-response
                    'make-create-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-dedicated-ip-pool-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-dedicated-ip-pool-request-"))
   (pool-name (common-lisp:error ":pool-name is required") :type
    (common-lisp:or pool-name common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-dedicated-ip-pool-request
                    'make-create-dedicated-ip-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-name))
      (common-lisp:list
       (common-lisp:cons "PoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-dedicated-ip-pool-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-dedicated-ip-pool-response-")))
 (common-lisp:export
  (common-lisp:list 'create-dedicated-ip-pool-response
                    'make-create-dedicated-ip-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-deliverability-test-report-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-deliverability-test-report-request-"))
   (report-name common-lisp:nil :type
    (common-lisp:or report-name common-lisp:null))
   (from-email-address (common-lisp:error ":from-email-address is required")
    :type (common-lisp:or email-address common-lisp:null))
   (content (common-lisp:error ":content is required") :type
    (common-lisp:or email-content common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deliverability-test-report-request
                    'make-create-deliverability-test-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-name))
      (common-lisp:list
       (common-lisp:cons "ReportName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-deliverability-test-report-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-deliverability-test-report-response-"))
   (report-id (common-lisp:error ":report-id is required") :type
    (common-lisp:or report-id common-lisp:null))
   (deliverability-test-status
    (common-lisp:error ":deliverability-test-status is required") :type
    (common-lisp:or deliverability-test-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deliverability-test-report-response
                    'make-create-deliverability-test-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-id))
      (common-lisp:list
       (common-lisp:cons "ReportId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deliverability-test-status))
      (common-lisp:list
       (common-lisp:cons "DeliverabilityTestStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-email-identity-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-email-identity-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-email-identity-request
                    'make-create-email-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-identity))
      (common-lisp:list
       (common-lisp:cons "EmailIdentity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-email-identity-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-email-identity-response-"))
   (identity-type common-lisp:nil :type
    (common-lisp:or identity-type common-lisp:null))
   (verified-for-sending-status common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (dkim-attributes common-lisp:nil :type
    (common-lisp:or dkim-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-email-identity-response
                    'make-create-email-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-type))
      (common-lisp:list
       (common-lisp:cons "IdentityType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verified-for-sending-status))
      (common-lisp:list
       (common-lisp:cons "VerifiedForSendingStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dkim-attributes))
      (common-lisp:list
       (common-lisp:cons "DkimAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-response))
   common-lisp:nil))
(common-lisp:deftype custom-redirect-domain () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (daily-volume (:copier common-lisp:nil)
      (:conc-name "struct-shape-daily-volume-"))
   (start-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (volume-statistics common-lisp:nil :type
    (common-lisp:or volume-statistics common-lisp:null))
   (domain-isp-placements common-lisp:nil :type
    (common-lisp:or domain-isp-placements common-lisp:null)))
 (common-lisp:export (common-lisp:list 'daily-volume 'make-daily-volume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input daily-volume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input daily-volume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date))
      (common-lisp:list
       (common-lisp:cons "StartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-statistics))
      (common-lisp:list
       (common-lisp:cons "VolumeStatistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-isp-placements))
      (common-lisp:list
       (common-lisp:cons "DomainIspPlacements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input daily-volume))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype daily-volumes ()
   '(trivial-types:proper-list daily-volume))
 (common-lisp:defun make-daily-volumes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list daily-volume))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (dedicated-ip (:copier common-lisp:nil)
      (:conc-name "struct-shape-dedicated-ip-"))
   (ip (common-lisp:error ":ip is required") :type
    (common-lisp:or ip common-lisp:null))
   (warmup-status (common-lisp:error ":warmup-status is required") :type
    (common-lisp:or warmup-status common-lisp:null))
   (warmup-percentage (common-lisp:error ":warmup-percentage is required")
    :type (common-lisp:or percentage100wrapper common-lisp:null))
   (pool-name common-lisp:nil :type
    (common-lisp:or pool-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dedicated-ip 'make-dedicated-ip))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dedicated-ip))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dedicated-ip))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip))
      (common-lisp:list
       (common-lisp:cons "Ip"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warmup-status))
      (common-lisp:list
       (common-lisp:cons "WarmupStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warmup-percentage))
      (common-lisp:list
       (common-lisp:cons "WarmupPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-name))
      (common-lisp:list
       (common-lisp:cons "PoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dedicated-ip))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dedicated-ip-list ()
   '(trivial-types:proper-list dedicated-ip))
 (common-lisp:defun make-dedicated-ip-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dedicated-ip))
   aws-sdk/generator/shape::members))
(common-lisp:deftype default-dimension-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-event-destination-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-configuration-set-event-destination-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination-name
    (common-lisp:error ":event-destination-name is required") :type
    (common-lisp:or event-destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-event-destination-request
                    'make-delete-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-event-destination-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-configuration-set-event-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-event-destination-response
                    'make-delete-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-configuration-set-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-request
                    'make-delete-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-configuration-set-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-response
                    'make-delete-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-dedicated-ip-pool-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-dedicated-ip-pool-request-"))
   (pool-name (common-lisp:error ":pool-name is required") :type
    (common-lisp:or pool-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-dedicated-ip-pool-request
                    'make-delete-dedicated-ip-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-dedicated-ip-pool-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-dedicated-ip-pool-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-dedicated-ip-pool-response
                    'make-delete-dedicated-ip-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-email-identity-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-email-identity-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-email-identity-request
                    'make-delete-email-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-email-identity-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-email-identity-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-email-identity-response
                    'make-delete-email-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-response))
   common-lisp:nil))
(common-lisp:deftype deliverability-dashboard-account-status ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (deliverability-test-report (:copier common-lisp:nil)
      (:conc-name "struct-shape-deliverability-test-report-"))
   (report-id common-lisp:nil :type
    (common-lisp:or report-id common-lisp:null))
   (report-name common-lisp:nil :type
    (common-lisp:or report-name common-lisp:null))
   (subject common-lisp:nil :type
    (common-lisp:or deliverability-test-subject common-lisp:null))
   (from-email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (create-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (deliverability-test-status common-lisp:nil :type
    (common-lisp:or deliverability-test-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deliverability-test-report
                    'make-deliverability-test-report))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deliverability-test-report))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deliverability-test-report))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-id))
      (common-lisp:list
       (common-lisp:cons "ReportId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-name))
      (common-lisp:list
       (common-lisp:cons "ReportName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-date))
      (common-lisp:list
       (common-lisp:cons "CreateDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deliverability-test-status))
      (common-lisp:list
       (common-lisp:cons "DeliverabilityTestStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deliverability-test-report))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype deliverability-test-reports ()
   '(trivial-types:proper-list deliverability-test-report))
 (common-lisp:defun make-deliverability-test-reports
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            deliverability-test-report))
   aws-sdk/generator/shape::members))
(common-lisp:deftype deliverability-test-status () 'common-lisp:string)
(common-lisp:deftype deliverability-test-subject () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delivery-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-delivery-options-"))
   (tls-policy common-lisp:nil :type
    (common-lisp:or tls-policy common-lisp:null))
   (sending-pool-name common-lisp:nil :type
    (common-lisp:or pool-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delivery-options 'make-delivery-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delivery-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delivery-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-policy))
      (common-lisp:list
       (common-lisp:cons "TlsPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-pool-name))
      (common-lisp:list
       (common-lisp:cons "SendingPoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delivery-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-destination-"))
   (to-addresses common-lisp:nil :type
    (common-lisp:or email-address-list common-lisp:null))
   (cc-addresses common-lisp:nil :type
    (common-lisp:or email-address-list common-lisp:null))
   (bcc-addresses common-lisp:nil :type
    (common-lisp:or email-address-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'destination 'make-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-addresses))
      (common-lisp:list
       (common-lisp:cons "ToAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cc-addresses))
      (common-lisp:list
       (common-lisp:cons "CcAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bcc-addresses))
      (common-lisp:list
       (common-lisp:cons "BccAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input destination))
   common-lisp:nil))
(common-lisp:deftype dimension-name () 'common-lisp:string)
(common-lisp:deftype dimension-value-source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dkim-attributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-dkim-attributes-"))
   (signing-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or dkim-status common-lisp:null))
   (tokens common-lisp:nil :type
    (common-lisp:or dns-token-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dkim-attributes 'make-dkim-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dkim-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dkim-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-enabled))
      (common-lisp:list
       (common-lisp:cons "SigningEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tokens))
      (common-lisp:list
       (common-lisp:cons "Tokens"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dkim-attributes))
   common-lisp:nil))
(common-lisp:deftype dkim-status () 'common-lisp:string)
(common-lisp:deftype dns-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dns-token-list () '(trivial-types:proper-list dns-token))
 (common-lisp:defun make-dns-token-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dns-token))
   aws-sdk/generator/shape::members))
(common-lisp:deftype domain () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (domain-deliverability-campaign (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-deliverability-campaign-"))
   (campaign-id common-lisp:nil :type
    (common-lisp:or campaign-id common-lisp:null))
   (image-url common-lisp:nil :type
    (common-lisp:or image-url common-lisp:null))
   (subject common-lisp:nil :type (common-lisp:or subject common-lisp:null))
   (from-address common-lisp:nil :type
    (common-lisp:or identity common-lisp:null))
   (sending-ips common-lisp:nil :type
    (common-lisp:or ip-list common-lisp:null))
   (first-seen-date-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-seen-date-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (inbox-count common-lisp:nil :type (common-lisp:or volume common-lisp:null))
   (spam-count common-lisp:nil :type (common-lisp:or volume common-lisp:null))
   (read-rate common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (delete-rate common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (read-delete-rate common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (projected-volume common-lisp:nil :type
    (common-lisp:or volume common-lisp:null))
   (esps common-lisp:nil :type (common-lisp:or esps common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-deliverability-campaign
                    'make-domain-deliverability-campaign))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-campaign))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-campaign))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-id))
      (common-lisp:list
       (common-lisp:cons "CampaignId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-url))
      (common-lisp:list
       (common-lisp:cons "ImageUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-address))
      (common-lisp:list
       (common-lisp:cons "FromAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-ips))
      (common-lisp:list
       (common-lisp:cons "SendingIps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'first-seen-date-time))
      (common-lisp:list
       (common-lisp:cons "FirstSeenDateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-seen-date-time))
      (common-lisp:list
       (common-lisp:cons "LastSeenDateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-count))
      (common-lisp:list
       (common-lisp:cons "InboxCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-count))
      (common-lisp:list
       (common-lisp:cons "SpamCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-rate))
      (common-lisp:list
       (common-lisp:cons "ReadRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delete-rate))
      (common-lisp:list
       (common-lisp:cons "DeleteRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-delete-rate))
      (common-lisp:list
       (common-lisp:cons "ReadDeleteRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-volume))
      (common-lisp:list
       (common-lisp:cons "ProjectedVolume"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'esps))
      (common-lisp:list
       (common-lisp:cons "Esps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-campaign))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-deliverability-campaign-list ()
   '(trivial-types:proper-list domain-deliverability-campaign))
 (common-lisp:defun make-domain-deliverability-campaign-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            domain-deliverability-campaign))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (domain-deliverability-tracking-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-deliverability-tracking-option-"))
   (domain common-lisp:nil :type (common-lisp:or domain common-lisp:null))
   (subscription-start-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (inbox-placement-tracking-option common-lisp:nil :type
    (common-lisp:or inbox-placement-tracking-option common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-deliverability-tracking-option
                    'make-domain-deliverability-tracking-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-tracking-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-tracking-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subscription-start-date))
      (common-lisp:list
       (common-lisp:cons "SubscriptionStartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inbox-placement-tracking-option))
      (common-lisp:list
       (common-lisp:cons "InboxPlacementTrackingOption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-tracking-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-deliverability-tracking-options ()
   '(trivial-types:proper-list domain-deliverability-tracking-option))
 (common-lisp:defun make-domain-deliverability-tracking-options
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            domain-deliverability-tracking-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (domain-isp-placement (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-isp-placement-"))
   (isp-name common-lisp:nil :type (common-lisp:or isp-name common-lisp:null))
   (inbox-raw-count common-lisp:nil :type
    (common-lisp:or volume common-lisp:null))
   (spam-raw-count common-lisp:nil :type
    (common-lisp:or volume common-lisp:null))
   (inbox-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (spam-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-isp-placement 'make-domain-isp-placement))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-isp-placement))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-isp-placement))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isp-name))
      (common-lisp:list
       (common-lisp:cons "IspName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-raw-count))
      (common-lisp:list
       (common-lisp:cons "InboxRawCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-raw-count))
      (common-lisp:list
       (common-lisp:cons "SpamRawCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-percentage))
      (common-lisp:list
       (common-lisp:cons "InboxPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-percentage))
      (common-lisp:list
       (common-lisp:cons "SpamPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-isp-placement))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-isp-placements ()
   '(trivial-types:proper-list domain-isp-placement))
 (common-lisp:defun make-domain-isp-placements
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-isp-placement))
   aws-sdk/generator/shape::members))
(common-lisp:deftype email-address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype email-address-list ()
   '(trivial-types:proper-list email-address))
 (common-lisp:defun make-email-address-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list email-address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (email-content (:copier common-lisp:nil)
      (:conc-name "struct-shape-email-content-"))
   (simple common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (raw common-lisp:nil :type (common-lisp:or raw-message common-lisp:null))
   (template common-lisp:nil :type (common-lisp:or template common-lisp:null)))
 (common-lisp:export (common-lisp:list 'email-content 'make-email-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input email-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input email-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple))
      (common-lisp:list
       (common-lisp:cons "Simple"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw))
      (common-lisp:list
       (common-lisp:cons "Raw"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template))
      (common-lisp:list
       (common-lisp:cons "Template"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input email-content))
   common-lisp:nil))
(common-lisp:deftype enabled () 'common-lisp:boolean)
(common-lisp:deftype esp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype esps () '(trivial-types:proper-list esp))
 (common-lisp:defun make-esps
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list esp))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (event-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-event-destination-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or event-destination-name common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or enabled common-lisp:null))
   (matching-event-types
    (common-lisp:error ":matching-event-types is required") :type
    (common-lisp:or event-types common-lisp:null))
   (kinesis-firehose-destination common-lisp:nil :type
    (common-lisp:or kinesis-firehose-destination common-lisp:null))
   (cloud-watch-destination common-lisp:nil :type
    (common-lisp:or cloud-watch-destination common-lisp:null))
   (sns-destination common-lisp:nil :type
    (common-lisp:or sns-destination common-lisp:null))
   (pinpoint-destination common-lisp:nil :type
    (common-lisp:or pinpoint-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-destination 'make-event-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'matching-event-types))
      (common-lisp:list
       (common-lisp:cons "MatchingEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kinesis-firehose-destination))
      (common-lisp:list
       (common-lisp:cons "KinesisFirehoseDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-destination))
      (common-lisp:list
       (common-lisp:cons "CloudWatchDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-destination))
      (common-lisp:list
       (common-lisp:cons "SnsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pinpoint-destination))
      (common-lisp:list
       (common-lisp:cons "PinpointDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (event-destination-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-event-destination-definition-"))
   (enabled common-lisp:nil :type (common-lisp:or enabled common-lisp:null))
   (matching-event-types common-lisp:nil :type
    (common-lisp:or event-types common-lisp:null))
   (kinesis-firehose-destination common-lisp:nil :type
    (common-lisp:or kinesis-firehose-destination common-lisp:null))
   (cloud-watch-destination common-lisp:nil :type
    (common-lisp:or cloud-watch-destination common-lisp:null))
   (sns-destination common-lisp:nil :type
    (common-lisp:or sns-destination common-lisp:null))
   (pinpoint-destination common-lisp:nil :type
    (common-lisp:or pinpoint-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-destination-definition
                    'make-event-destination-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'matching-event-types))
      (common-lisp:list
       (common-lisp:cons "MatchingEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kinesis-firehose-destination))
      (common-lisp:list
       (common-lisp:cons "KinesisFirehoseDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-destination))
      (common-lisp:list
       (common-lisp:cons "CloudWatchDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-destination))
      (common-lisp:list
       (common-lisp:cons "SnsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pinpoint-destination))
      (common-lisp:list
       (common-lisp:cons "PinpointDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   common-lisp:nil))
(common-lisp:deftype event-destination-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-destinations ()
   '(trivial-types:proper-list event-destination))
 (common-lisp:defun make-event-destinations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-destination))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-types () '(trivial-types:proper-list event-type))
 (common-lisp:defun make-event-types
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype general-enforcement-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-account-request-")))
 (common-lisp:export
  (common-lisp:list 'get-account-request 'make-get-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-account-response-"))
   (send-quota common-lisp:nil :type
    (common-lisp:or send-quota common-lisp:null))
   (sending-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (dedicated-ip-auto-warmup-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (enforcement-status common-lisp:nil :type
    (common-lisp:or general-enforcement-status common-lisp:null))
   (production-access-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-account-response 'make-get-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'send-quota))
      (common-lisp:list
       (common-lisp:cons "SendQuota"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dedicated-ip-auto-warmup-enabled))
      (common-lisp:list
       (common-lisp:cons "DedicatedIpAutoWarmupEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enforcement-status))
      (common-lisp:list
       (common-lisp:cons "EnforcementStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'production-access-enabled))
      (common-lisp:list
       (common-lisp:cons "ProductionAccessEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-blacklist-reports-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-blacklist-reports-request-"))
   (blacklist-item-names
    (common-lisp:error ":blacklist-item-names is required") :type
    (common-lisp:or blacklist-item-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-blacklist-reports-request
                    'make-get-blacklist-reports-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-blacklist-reports-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-blacklist-reports-response-"))
   (blacklist-report (common-lisp:error ":blacklist-report is required") :type
    (common-lisp:or blacklist-report common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-blacklist-reports-response
                    'make-get-blacklist-reports-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blacklist-report))
      (common-lisp:list
       (common-lisp:cons "BlacklistReport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-configuration-set-event-destinations-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-configuration-set-event-destinations-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-event-destinations-request
                    'make-get-configuration-set-event-destinations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-configuration-set-event-destinations-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-configuration-set-event-destinations-response-"))
   (event-destinations common-lisp:nil :type
    (common-lisp:or event-destinations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-event-destinations-response
                    'make-get-configuration-set-event-destinations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destinations))
      (common-lisp:list
       (common-lisp:cons "EventDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-configuration-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-configuration-set-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-request
                    'make-get-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-configuration-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-configuration-set-response-"))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (tracking-options common-lisp:nil :type
    (common-lisp:or tracking-options common-lisp:null))
   (delivery-options common-lisp:nil :type
    (common-lisp:or delivery-options common-lisp:null))
   (reputation-options common-lisp:nil :type
    (common-lisp:or reputation-options common-lisp:null))
   (sending-options common-lisp:nil :type
    (common-lisp:or sending-options common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-response
                    'make-get-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracking-options))
      (common-lisp:list
       (common-lisp:cons "TrackingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-options))
      (common-lisp:list
       (common-lisp:cons "DeliveryOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reputation-options))
      (common-lisp:list
       (common-lisp:cons "ReputationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-options))
      (common-lisp:list
       (common-lisp:cons "SendingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-dedicated-ip-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-dedicated-ip-request-"))
   (ip (common-lisp:error ":ip is required") :type
    (common-lisp:or ip common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ip-request 'make-get-dedicated-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-dedicated-ip-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-dedicated-ip-response-"))
   (dedicated-ip common-lisp:nil :type
    (common-lisp:or dedicated-ip common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ip-response
                    'make-get-dedicated-ip-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dedicated-ip))
      (common-lisp:list
       (common-lisp:cons "DedicatedIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-dedicated-ips-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-dedicated-ips-request-"))
   (pool-name common-lisp:nil :type
    (common-lisp:or pool-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ips-request
                    'make-get-dedicated-ips-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-dedicated-ips-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-dedicated-ips-response-"))
   (dedicated-ips common-lisp:nil :type
    (common-lisp:or dedicated-ip-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ips-response
                    'make-get-dedicated-ips-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dedicated-ips))
      (common-lisp:list
       (common-lisp:cons "DedicatedIps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deliverability-dashboard-options-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-deliverability-dashboard-options-request-")))
 (common-lisp:export
  (common-lisp:list 'get-deliverability-dashboard-options-request
                    'make-get-deliverability-dashboard-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deliverability-dashboard-options-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-deliverability-dashboard-options-response-"))
   (dashboard-enabled (common-lisp:error ":dashboard-enabled is required")
    :type (common-lisp:or enabled common-lisp:null))
   (subscription-expiry-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (account-status common-lisp:nil :type
    (common-lisp:or deliverability-dashboard-account-status common-lisp:null))
   (active-subscribed-domains common-lisp:nil :type
    (common-lisp:or domain-deliverability-tracking-options common-lisp:null))
   (pending-expiration-subscribed-domains common-lisp:nil :type
    (common-lisp:or domain-deliverability-tracking-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deliverability-dashboard-options-response
                    'make-get-deliverability-dashboard-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-enabled))
      (common-lisp:list
       (common-lisp:cons "DashboardEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subscription-expiry-date))
      (common-lisp:list
       (common-lisp:cons "SubscriptionExpiryDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-status))
      (common-lisp:list
       (common-lisp:cons "AccountStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'active-subscribed-domains))
      (common-lisp:list
       (common-lisp:cons "ActiveSubscribedDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-expiration-subscribed-domains))
      (common-lisp:list
       (common-lisp:cons "PendingExpirationSubscribedDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deliverability-test-report-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-deliverability-test-report-request-"))
   (report-id (common-lisp:error ":report-id is required") :type
    (common-lisp:or report-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deliverability-test-report-request
                    'make-get-deliverability-test-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deliverability-test-report-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-deliverability-test-report-response-"))
   (deliverability-test-report
    (common-lisp:error ":deliverability-test-report is required") :type
    (common-lisp:or deliverability-test-report common-lisp:null))
   (overall-placement (common-lisp:error ":overall-placement is required")
    :type (common-lisp:or placement-statistics common-lisp:null))
   (isp-placements (common-lisp:error ":isp-placements is required") :type
    (common-lisp:or isp-placements common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or message-content common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deliverability-test-report-response
                    'make-get-deliverability-test-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deliverability-test-report))
      (common-lisp:list
       (common-lisp:cons "DeliverabilityTestReport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overall-placement))
      (common-lisp:list
       (common-lisp:cons "OverallPlacement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isp-placements))
      (common-lisp:list
       (common-lisp:cons "IspPlacements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-deliverability-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-deliverability-campaign-request-"))
   (campaign-id (common-lisp:error ":campaign-id is required") :type
    (common-lisp:or campaign-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-deliverability-campaign-request
                    'make-get-domain-deliverability-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-deliverability-campaign-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-deliverability-campaign-response-"))
   (domain-deliverability-campaign
    (common-lisp:error ":domain-deliverability-campaign is required") :type
    (common-lisp:or domain-deliverability-campaign common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-deliverability-campaign-response
                    'make-get-domain-deliverability-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-deliverability-campaign))
      (common-lisp:list
       (common-lisp:cons "DomainDeliverabilityCampaign"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-statistics-report-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-statistics-report-request-"))
   (domain (common-lisp:error ":domain is required") :type
    (common-lisp:or identity common-lisp:null))
   (start-date (common-lisp:error ":start-date is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (end-date (common-lisp:error ":end-date is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-statistics-report-request
                    'make-get-domain-statistics-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-statistics-report-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-statistics-report-response-"))
   (overall-volume (common-lisp:error ":overall-volume is required") :type
    (common-lisp:or overall-volume common-lisp:null))
   (daily-volumes (common-lisp:error ":daily-volumes is required") :type
    (common-lisp:or daily-volumes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-statistics-report-response
                    'make-get-domain-statistics-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overall-volume))
      (common-lisp:list
       (common-lisp:cons "OverallVolume"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'daily-volumes))
      (common-lisp:list
       (common-lisp:cons "DailyVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-email-identity-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-email-identity-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-email-identity-request
                    'make-get-email-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-email-identity-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-email-identity-response-"))
   (identity-type common-lisp:nil :type
    (common-lisp:or identity-type common-lisp:null))
   (feedback-forwarding-status common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (verified-for-sending-status common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (dkim-attributes common-lisp:nil :type
    (common-lisp:or dkim-attributes common-lisp:null))
   (mail-from-attributes common-lisp:nil :type
    (common-lisp:or mail-from-attributes common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-email-identity-response
                    'make-get-email-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-type))
      (common-lisp:list
       (common-lisp:cons "IdentityType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'feedback-forwarding-status))
      (common-lisp:list
       (common-lisp:cons "FeedbackForwardingStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verified-for-sending-status))
      (common-lisp:list
       (common-lisp:cons "VerifiedForSendingStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dkim-attributes))
      (common-lisp:list
       (common-lisp:cons "DkimAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mail-from-attributes))
      (common-lisp:list
       (common-lisp:cons "MailFromAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-response))
   common-lisp:nil))
(common-lisp:deftype identity () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (identity-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-identity-info-"))
   (identity-type common-lisp:nil :type
    (common-lisp:or identity-type common-lisp:null))
   (identity-name common-lisp:nil :type
    (common-lisp:or identity common-lisp:null))
   (sending-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export (common-lisp:list 'identity-info 'make-identity-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input identity-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input identity-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-type))
      (common-lisp:list
       (common-lisp:cons "IdentityType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-name))
      (common-lisp:list
       (common-lisp:cons "IdentityName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input identity-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype identity-info-list ()
   '(trivial-types:proper-list identity-info))
 (common-lisp:defun make-identity-info-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list identity-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype identity-type () 'common-lisp:string)
(common-lisp:deftype image-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (inbox-placement-tracking-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-inbox-placement-tracking-option-"))
   (global common-lisp:nil :type (common-lisp:or enabled common-lisp:null))
   (tracked-isps common-lisp:nil :type
    (common-lisp:or isp-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inbox-placement-tracking-option
                    'make-inbox-placement-tracking-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          inbox-placement-tracking-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          inbox-placement-tracking-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'global))
      (common-lisp:list
       (common-lisp:cons "Global"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracked-isps))
      (common-lisp:list
       (common-lisp:cons "TrackedIsps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          inbox-placement-tracking-option))
   common-lisp:nil))
(common-lisp:deftype ip () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ip-list () '(trivial-types:proper-list ip))
 (common-lisp:defun make-ip-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ip))
   aws-sdk/generator/shape::members))
(common-lisp:deftype isp-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype isp-name-list () '(trivial-types:proper-list isp-name))
 (common-lisp:defun make-isp-name-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list isp-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (isp-placement (:copier common-lisp:nil)
      (:conc-name "struct-shape-isp-placement-"))
   (isp-name common-lisp:nil :type (common-lisp:or isp-name common-lisp:null))
   (placement-statistics common-lisp:nil :type
    (common-lisp:or placement-statistics common-lisp:null)))
 (common-lisp:export (common-lisp:list 'isp-placement 'make-isp-placement))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input isp-placement))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input isp-placement))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isp-name))
      (common-lisp:list
       (common-lisp:cons "IspName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'placement-statistics))
      (common-lisp:list
       (common-lisp:cons "PlacementStatistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input isp-placement))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype isp-placements ()
   '(trivial-types:proper-list isp-placement))
 (common-lisp:defun make-isp-placements
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list isp-placement))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (kinesis-firehose-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-kinesis-firehose-destination-"))
   (iam-role-arn (common-lisp:error ":iam-role-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (delivery-stream-arn (common-lisp:error ":delivery-stream-arn is required")
    :type (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-firehose-destination
                    'make-kinesis-firehose-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-stream-arn))
      (common-lisp:list
       (common-lisp:cons "DeliveryStreamArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   common-lisp:nil))
(common-lisp:deftype last-fresh-start () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'limit-exceeded-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configuration-sets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-configuration-sets-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configuration-sets-request
                    'make-list-configuration-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configuration-sets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-configuration-sets-response-"))
   (configuration-sets common-lisp:nil :type
    (common-lisp:or configuration-set-name-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configuration-sets-response
                    'make-list-configuration-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-sets))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-dedicated-ip-pools-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-dedicated-ip-pools-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-dedicated-ip-pools-request
                    'make-list-dedicated-ip-pools-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-dedicated-ip-pools-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-dedicated-ip-pools-response-"))
   (dedicated-ip-pools common-lisp:nil :type
    (common-lisp:or list-of-dedicated-ip-pools common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-dedicated-ip-pools-response
                    'make-list-dedicated-ip-pools-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dedicated-ip-pools))
      (common-lisp:list
       (common-lisp:cons "DedicatedIpPools"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-deliverability-test-reports-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-deliverability-test-reports-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-deliverability-test-reports-request
                    'make-list-deliverability-test-reports-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-deliverability-test-reports-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-deliverability-test-reports-response-"))
   (deliverability-test-reports
    (common-lisp:error ":deliverability-test-reports is required") :type
    (common-lisp:or deliverability-test-reports common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-deliverability-test-reports-response
                    'make-list-deliverability-test-reports-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deliverability-test-reports))
      (common-lisp:list
       (common-lisp:cons "DeliverabilityTestReports"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-domain-deliverability-campaigns-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-domain-deliverability-campaigns-request-"))
   (start-date (common-lisp:error ":start-date is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (end-date (common-lisp:error ":end-date is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (subscribed-domain (common-lisp:error ":subscribed-domain is required")
    :type (common-lisp:or domain common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domain-deliverability-campaigns-request
                    'make-list-domain-deliverability-campaigns-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-domain-deliverability-campaigns-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-domain-deliverability-campaigns-response-"))
   (domain-deliverability-campaigns
    (common-lisp:error ":domain-deliverability-campaigns is required") :type
    (common-lisp:or domain-deliverability-campaign-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domain-deliverability-campaigns-response
                    'make-list-domain-deliverability-campaigns-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-deliverability-campaigns))
      (common-lisp:list
       (common-lisp:cons "DomainDeliverabilityCampaigns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-email-identities-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-email-identities-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-email-identities-request
                    'make-list-email-identities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-email-identities-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-email-identities-response-"))
   (email-identities common-lisp:nil :type
    (common-lisp:or identity-info-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-email-identities-response
                    'make-list-email-identities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-identities))
      (common-lisp:list
       (common-lisp:cons "EmailIdentities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-of-dedicated-ip-pools ()
   '(trivial-types:proper-list pool-name))
 (common-lisp:defun make-list-of-dedicated-ip-pools
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pool-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (mail-from-attributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-mail-from-attributes-"))
   (mail-from-domain (common-lisp:error ":mail-from-domain is required") :type
    (common-lisp:or mail-from-domain-name common-lisp:null))
   (mail-from-domain-status
    (common-lisp:error ":mail-from-domain-status is required") :type
    (common-lisp:or mail-from-domain-status common-lisp:null))
   (behavior-on-mx-failure
    (common-lisp:error ":behavior-on-mx-failure is required") :type
    (common-lisp:or behavior-on-mx-failure common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'mail-from-attributes 'make-mail-from-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mail-from-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mail-from-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mail-from-domain))
      (common-lisp:list
       (common-lisp:cons "MailFromDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mail-from-domain-status))
      (common-lisp:list
       (common-lisp:cons "MailFromDomainStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'behavior-on-mx-failure))
      (common-lisp:list
       (common-lisp:cons "BehaviorOnMxFailure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mail-from-attributes))
   common-lisp:nil))
(common-lisp:deftype mail-from-domain-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition mail-from-domain-not-verified-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'mail-from-domain-not-verified-exception)))
(common-lisp:deftype mail-from-domain-status () 'common-lisp:string)
(common-lisp:deftype max24hour-send () 'common-lisp:double-float)
(common-lisp:deftype max-items () 'common-lisp:integer)
(common-lisp:deftype max-send-rate () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (message (:copier common-lisp:nil) (:conc-name "struct-shape-message-"))
   (subject (common-lisp:error ":subject is required") :type
    (common-lisp:or content common-lisp:null))
   (body (common-lisp:error ":body is required") :type
    (common-lisp:or body common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message))
   common-lisp:nil))
(common-lisp:deftype message-content () 'common-lisp:string)
(common-lisp:deftype message-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition message-rejected
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'message-rejected)))
(common-lisp:progn
 (common-lisp:defstruct
     (message-tag (:copier common-lisp:nil)
      (:conc-name "struct-shape-message-tag-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or message-tag-name common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or message-tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message-tag 'make-message-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message-tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message-tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message-tag))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype message-tag-list ()
   '(trivial-types:proper-list message-tag))
 (common-lisp:defun make-message-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list message-tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype message-tag-name () 'common-lisp:string)
(common-lisp:deftype message-tag-value () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'not-found-exception)))
(common-lisp:deftype outbound-message-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (overall-volume (:copier common-lisp:nil)
      (:conc-name "struct-shape-overall-volume-"))
   (volume-statistics common-lisp:nil :type
    (common-lisp:or volume-statistics common-lisp:null))
   (read-rate-percent common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (domain-isp-placements common-lisp:nil :type
    (common-lisp:or domain-isp-placements common-lisp:null)))
 (common-lisp:export (common-lisp:list 'overall-volume 'make-overall-volume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input overall-volume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input overall-volume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-statistics))
      (common-lisp:list
       (common-lisp:cons "VolumeStatistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-rate-percent))
      (common-lisp:list
       (common-lisp:cons "ReadRatePercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-isp-placements))
      (common-lisp:list
       (common-lisp:cons "DomainIspPlacements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input overall-volume))
   common-lisp:nil))
(common-lisp:deftype percentage () 'common-lisp:double-float)
(common-lisp:deftype percentage100wrapper () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (pinpoint-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-pinpoint-destination-"))
   (application-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pinpoint-destination 'make-pinpoint-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input pinpoint-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input pinpoint-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input pinpoint-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (placement-statistics (:copier common-lisp:nil)
      (:conc-name "struct-shape-placement-statistics-"))
   (inbox-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (spam-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (missing-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (spf-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null))
   (dkim-percentage common-lisp:nil :type
    (common-lisp:or percentage common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'placement-statistics 'make-placement-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input placement-statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input placement-statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-percentage))
      (common-lisp:list
       (common-lisp:cons "InboxPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-percentage))
      (common-lisp:list
       (common-lisp:cons "SpamPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'missing-percentage))
      (common-lisp:list
       (common-lisp:cons "MissingPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spf-percentage))
      (common-lisp:list
       (common-lisp:cons "SpfPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dkim-percentage))
      (common-lisp:list
       (common-lisp:cons "DkimPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input placement-statistics))
   common-lisp:nil))
(common-lisp:deftype pool-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-dedicated-ip-warmup-attributes-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-account-dedicated-ip-warmup-attributes-request-"))
   (auto-warmup-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-account-dedicated-ip-warmup-attributes-request
                    'make-put-account-dedicated-ip-warmup-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-warmup-enabled))
      (common-lisp:list
       (common-lisp:cons "AutoWarmupEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-dedicated-ip-warmup-attributes-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-account-dedicated-ip-warmup-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-account-dedicated-ip-warmup-attributes-response
                    'make-put-account-dedicated-ip-warmup-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-sending-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-account-sending-attributes-request-"))
   (sending-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-account-sending-attributes-request
                    'make-put-account-sending-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-account-sending-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-account-sending-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-account-sending-attributes-response
                    'make-put-account-sending-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-delivery-options-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-delivery-options-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (tls-policy common-lisp:nil :type
    (common-lisp:or tls-policy common-lisp:null))
   (sending-pool-name common-lisp:nil :type
    (common-lisp:or sending-pool-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-delivery-options-request
                    'make-put-configuration-set-delivery-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-policy))
      (common-lisp:list
       (common-lisp:cons "TlsPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-pool-name))
      (common-lisp:list
       (common-lisp:cons "SendingPoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-delivery-options-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-delivery-options-response-")))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-delivery-options-response
                    'make-put-configuration-set-delivery-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-reputation-options-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-reputation-options-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (reputation-metrics-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-reputation-options-request
                    'make-put-configuration-set-reputation-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reputation-metrics-enabled))
      (common-lisp:list
       (common-lisp:cons "ReputationMetricsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-reputation-options-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-reputation-options-response-")))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-reputation-options-response
                    'make-put-configuration-set-reputation-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-sending-options-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-sending-options-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (sending-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-sending-options-request
                    'make-put-configuration-set-sending-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-sending-options-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-sending-options-response-")))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-sending-options-response
                    'make-put-configuration-set-sending-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-tracking-options-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-tracking-options-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (custom-redirect-domain common-lisp:nil :type
    (common-lisp:or custom-redirect-domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-tracking-options-request
                    'make-put-configuration-set-tracking-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-redirect-domain))
      (common-lisp:list
       (common-lisp:cons "CustomRedirectDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-configuration-set-tracking-options-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-configuration-set-tracking-options-response-")))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-tracking-options-response
                    'make-put-configuration-set-tracking-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-dedicated-ip-in-pool-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-dedicated-ip-in-pool-request-"))
   (ip (common-lisp:error ":ip is required") :type
    (common-lisp:or ip common-lisp:null))
   (destination-pool-name
    (common-lisp:error ":destination-pool-name is required") :type
    (common-lisp:or pool-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-dedicated-ip-in-pool-request
                    'make-put-dedicated-ip-in-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-pool-name))
      (common-lisp:list
       (common-lisp:cons "DestinationPoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-dedicated-ip-in-pool-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-dedicated-ip-in-pool-response-")))
 (common-lisp:export
  (common-lisp:list 'put-dedicated-ip-in-pool-response
                    'make-put-dedicated-ip-in-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-dedicated-ip-warmup-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-dedicated-ip-warmup-attributes-request-"))
   (ip (common-lisp:error ":ip is required") :type
    (common-lisp:or ip common-lisp:null))
   (warmup-percentage (common-lisp:error ":warmup-percentage is required")
    :type (common-lisp:or percentage100wrapper common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-dedicated-ip-warmup-attributes-request
                    'make-put-dedicated-ip-warmup-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warmup-percentage))
      (common-lisp:list
       (common-lisp:cons "WarmupPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-dedicated-ip-warmup-attributes-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-dedicated-ip-warmup-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-dedicated-ip-warmup-attributes-response
                    'make-put-dedicated-ip-warmup-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-deliverability-dashboard-option-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-deliverability-dashboard-option-request-"))
   (dashboard-enabled (common-lisp:error ":dashboard-enabled is required")
    :type (common-lisp:or enabled common-lisp:null))
   (subscribed-domains common-lisp:nil :type
    (common-lisp:or domain-deliverability-tracking-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-deliverability-dashboard-option-request
                    'make-put-deliverability-dashboard-option-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-enabled))
      (common-lisp:list
       (common-lisp:cons "DashboardEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscribed-domains))
      (common-lisp:list
       (common-lisp:cons "SubscribedDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-deliverability-dashboard-option-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-deliverability-dashboard-option-response-")))
 (common-lisp:export
  (common-lisp:list 'put-deliverability-dashboard-option-response
                    'make-put-deliverability-dashboard-option-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-dkim-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-email-identity-dkim-attributes-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (signing-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-dkim-attributes-request
                    'make-put-email-identity-dkim-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-enabled))
      (common-lisp:list
       (common-lisp:cons "SigningEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-dkim-attributes-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-dkim-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-dkim-attributes-response
                    'make-put-email-identity-dkim-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-feedback-attributes-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-feedback-attributes-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (email-forwarding-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-feedback-attributes-request
                    'make-put-email-identity-feedback-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-forwarding-enabled))
      (common-lisp:list
       (common-lisp:cons "EmailForwardingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-feedback-attributes-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-feedback-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-feedback-attributes-response
                    'make-put-email-identity-feedback-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-mail-from-attributes-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-mail-from-attributes-request-"))
   (email-identity (common-lisp:error ":email-identity is required") :type
    (common-lisp:or identity common-lisp:null))
   (mail-from-domain common-lisp:nil :type
    (common-lisp:or mail-from-domain-name common-lisp:null))
   (behavior-on-mx-failure common-lisp:nil :type
    (common-lisp:or behavior-on-mx-failure common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-mail-from-attributes-request
                    'make-put-email-identity-mail-from-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mail-from-domain))
      (common-lisp:list
       (common-lisp:cons "MailFromDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'behavior-on-mx-failure))
      (common-lisp:list
       (common-lisp:cons "BehaviorOnMxFailure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-email-identity-mail-from-attributes-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-email-identity-mail-from-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-mail-from-attributes-response
                    'make-put-email-identity-mail-from-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (raw-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-raw-message-"))
   (data (common-lisp:error ":data is required") :type
    (common-lisp:or raw-message-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'raw-message 'make-raw-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input raw-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input raw-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input raw-message))
   common-lisp:nil))
(common-lisp:deftype raw-message-data ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype rbl-name () 'common-lisp:string)
(common-lisp:deftype report-id () 'common-lisp:string)
(common-lisp:deftype report-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (reputation-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-reputation-options-"))
   (reputation-metrics-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null))
   (last-fresh-start common-lisp:nil :type
    (common-lisp:or last-fresh-start common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reputation-options 'make-reputation-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reputation-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reputation-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reputation-metrics-enabled))
      (common-lisp:list
       (common-lisp:cons "ReputationMetricsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-fresh-start))
      (common-lisp:list
       (common-lisp:cons "LastFreshStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reputation-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-email-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-email-request-"))
   (from-email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (destination (common-lisp:error ":destination is required") :type
    (common-lisp:or destination common-lisp:null))
   (reply-to-addresses common-lisp:nil :type
    (common-lisp:or email-address-list common-lisp:null))
   (feedback-forwarding-email-address common-lisp:nil :type
    (common-lisp:or email-address common-lisp:null))
   (content (common-lisp:error ":content is required") :type
    (common-lisp:or email-content common-lisp:null))
   (email-tags common-lisp:nil :type
    (common-lisp:or message-tag-list common-lisp:null))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or configuration-set-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-email-request 'make-send-email-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-email-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-email-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reply-to-addresses))
      (common-lisp:list
       (common-lisp:cons "ReplyToAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'feedback-forwarding-email-address))
      (common-lisp:list
       (common-lisp:cons "FeedbackForwardingEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-tags))
      (common-lisp:list
       (common-lisp:cons "EmailTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-email-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-email-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-email-response-"))
   (message-id common-lisp:nil :type
    (common-lisp:or outbound-message-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-email-response 'make-send-email-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-email-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-email-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-email-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-quota (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-quota-"))
   (max24hour-send common-lisp:nil :type
    (common-lisp:or max24hour-send common-lisp:null))
   (max-send-rate common-lisp:nil :type
    (common-lisp:or max-send-rate common-lisp:null))
   (sent-last24hours common-lisp:nil :type
    (common-lisp:or sent-last24hours common-lisp:null)))
 (common-lisp:export (common-lisp:list 'send-quota 'make-send-quota))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-quota))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-quota))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max24hour-send))
      (common-lisp:list
       (common-lisp:cons "Max24HourSend"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-send-rate))
      (common-lisp:list
       (common-lisp:cons "MaxSendRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sent-last24hours))
      (common-lisp:list
       (common-lisp:cons "SentLast24Hours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-quota))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sending-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-sending-options-"))
   (sending-enabled common-lisp:nil :type
    (common-lisp:or enabled common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sending-options 'make-sending-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sending-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sending-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sending-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition sending-paused-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'sending-paused-exception)))
(common-lisp:deftype sending-pool-name () 'common-lisp:string)
(common-lisp:deftype sent-last24hours () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (sns-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-sns-destination-"))
   (topic-arn (common-lisp:error ":topic-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sns-destination 'make-sns-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sns-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sns-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sns-destination))
   common-lisp:nil))
(common-lisp:deftype subject () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (template (:copier common-lisp:nil) (:conc-name "struct-shape-template-"))
   (template-arn common-lisp:nil :type
    (common-lisp:or template-arn common-lisp:null))
   (template-data common-lisp:nil :type
    (common-lisp:or template-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'template 'make-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-arn))
      (common-lisp:list
       (common-lisp:cons "TemplateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-data))
      (common-lisp:list
       (common-lisp:cons "TemplateData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input template))
   common-lisp:nil))
(common-lisp:deftype template-arn () 'common-lisp:string)
(common-lisp:deftype template-data () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype tls-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (tracking-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-tracking-options-"))
   (custom-redirect-domain
    (common-lisp:error ":custom-redirect-domain is required") :type
    (common-lisp:or custom-redirect-domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tracking-options 'make-tracking-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tracking-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tracking-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-redirect-domain))
      (common-lisp:list
       (common-lisp:cons "CustomRedirectDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tracking-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-set-event-destination-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-configuration-set-event-destination-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or configuration-set-name common-lisp:null))
   (event-destination-name
    (common-lisp:error ":event-destination-name is required") :type
    (common-lisp:or event-destination-name common-lisp:null))
   (event-destination (common-lisp:error ":event-destination is required")
    :type (common-lisp:or event-destination-definition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-configuration-set-event-destination-request
                    'make-update-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destination))
      (common-lisp:list
       (common-lisp:cons "EventDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-set-event-destination-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-configuration-set-event-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'update-configuration-set-event-destination-response
                    'make-update-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:deftype volume () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (volume-statistics (:copier common-lisp:nil)
      (:conc-name "struct-shape-volume-statistics-"))
   (inbox-raw-count common-lisp:nil :type
    (common-lisp:or volume common-lisp:null))
   (spam-raw-count common-lisp:nil :type
    (common-lisp:or volume common-lisp:null))
   (projected-inbox common-lisp:nil :type
    (common-lisp:or volume common-lisp:null))
   (projected-spam common-lisp:nil :type
    (common-lisp:or volume common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'volume-statistics 'make-volume-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input volume-statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input volume-statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-raw-count))
      (common-lisp:list
       (common-lisp:cons "InboxRawCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-raw-count))
      (common-lisp:list
       (common-lisp:cons "SpamRawCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-inbox))
      (common-lisp:list
       (common-lisp:cons "ProjectedInbox"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-spam))
      (common-lisp:list
       (common-lisp:cons "ProjectedSpam"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input volume-statistics))
   common-lisp:nil))
(common-lisp:deftype warmup-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name tracking-options
                     delivery-options reputation-options sending-options tags)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name tracking-options
     delivery-options reputation-options sending-options tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/email/configuration-sets"
                                                        "CreateConfigurationSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-configuration-set))
(common-lisp:progn
 (common-lisp:defun create-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     event-destination-name event-destination)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination-name
     event-destination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/event-destinations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "CreateConfigurationSetEventDestination"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun create-dedicated-ip-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name tags)
   (common-lisp:declare (common-lisp:ignorable pool-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-dedicated-ip-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/email/dedicated-ip-pools"
                                                        "CreateDedicatedIpPool"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-dedicated-ip-pool))
(common-lisp:progn
 (common-lisp:defun create-deliverability-test-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-name from-email-address content
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable report-name from-email-address content tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-deliverability-test-report-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/email/deliverability-dashboard/test"
                                                        "CreateDeliverabilityTestReport"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-deliverability-test-report))
(common-lisp:progn
 (common-lisp:defun create-email-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity tags)
   (common-lisp:declare (common-lisp:ignorable email-identity tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-email-identity-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/email/identities"
                                                        "CreateEmailIdentity"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-email-identity))
(common-lisp:progn
 (common-lisp:defun delete-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "DeleteConfigurationSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-configuration-set))
(common-lisp:progn
 (common-lisp:defun delete-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     event-destination-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/event-destinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'event-destination-name))))
                                                        "DeleteConfigurationSetEventDestination"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun delete-dedicated-ip-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name)
   (common-lisp:declare (common-lisp:ignorable pool-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-dedicated-ip-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/dedicated-ip-pools/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'pool-name))))
                                                        "DeleteDedicatedIpPool"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-dedicated-ip-pool))
(common-lisp:progn
 (common-lisp:defun delete-email-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity)
   (common-lisp:declare (common-lisp:ignorable email-identity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-email-identity-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/identities/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "DeleteEmailIdentity"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-email-identity))
(common-lisp:progn
 (common-lisp:defun get-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'pinpoint-email-request :method "GET" :path
                                "/v1/email/account" :operation "GetAccount"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-account))
(common-lisp:progn
 (common-lisp:defun get-blacklist-reports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key blacklist-item-names)
   (common-lisp:declare (common-lisp:ignorable blacklist-item-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-blacklist-reports-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/email/deliverability-dashboard/blacklist-report"
                                                        "GetBlacklistReports"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-blacklist-reports))
(common-lisp:progn
 (common-lisp:defun get-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "GetConfigurationSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-configuration-set))
(common-lisp:progn
 (common-lisp:defun get-configuration-set-event-destinations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-configuration-set-event-destinations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/event-destinations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "GetConfigurationSetEventDestinations"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-configuration-set-event-destinations))
(common-lisp:progn
 (common-lisp:defun get-dedicated-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ip)
   (common-lisp:declare (common-lisp:ignorable ip))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-dedicated-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/dedicated-ips/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ip))))
                                                        "GetDedicatedIp"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-dedicated-ip))
(common-lisp:progn
 (common-lisp:defun get-dedicated-ips
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name next-token page-size)
   (common-lisp:declare (common-lisp:ignorable pool-name next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-dedicated-ips-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/email/dedicated-ips"
                                                        "GetDedicatedIps"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-dedicated-ips))
(common-lisp:progn
 (common-lisp:defun get-deliverability-dashboard-options ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'pinpoint-email-request :method "GET" :path
                                "/v1/email/deliverability-dashboard" :operation
                                "GetDeliverabilityDashboardOptions"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-deliverability-dashboard-options))
(common-lisp:progn
 (common-lisp:defun get-deliverability-test-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-id)
   (common-lisp:declare (common-lisp:ignorable report-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-deliverability-test-report-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/deliverability-dashboard/test-reports/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'report-id))))
                                                        "GetDeliverabilityTestReport"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-deliverability-test-report))
(common-lisp:progn
 (common-lisp:defun get-domain-deliverability-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key campaign-id)
   (common-lisp:declare (common-lisp:ignorable campaign-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-domain-deliverability-campaign-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/deliverability-dashboard/campaigns/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "GetDomainDeliverabilityCampaign"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-domain-deliverability-campaign))
(common-lisp:progn
 (common-lisp:defun get-domain-statistics-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain start-date end-date)
   (common-lisp:declare (common-lisp:ignorable domain start-date end-date))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-domain-statistics-report-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/deliverability-dashboard/statistics-report/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain))))
                                                        "GetDomainStatisticsReport"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-domain-statistics-report))
(common-lisp:progn
 (common-lisp:defun get-email-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity)
   (common-lisp:declare (common-lisp:ignorable email-identity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-email-identity-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/identities/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "GetEmailIdentity"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-email-identity))
(common-lisp:progn
 (common-lisp:defun list-configuration-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-configuration-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/email/configuration-sets"
                                                        "ListConfigurationSets"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-configuration-sets))
(common-lisp:progn
 (common-lisp:defun list-dedicated-ip-pools
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-dedicated-ip-pools-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/email/dedicated-ip-pools"
                                                        "ListDedicatedIpPools"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-dedicated-ip-pools))
(common-lisp:progn
 (common-lisp:defun list-deliverability-test-reports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-deliverability-test-reports-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/email/deliverability-dashboard/test-reports"
                                                        "ListDeliverabilityTestReports"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-deliverability-test-reports))
(common-lisp:progn
 (common-lisp:defun list-domain-deliverability-campaigns
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key start-date end-date subscribed-domain
                     next-token page-size)
   (common-lisp:declare
    (common-lisp:ignorable start-date end-date subscribed-domain next-token
     page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-domain-deliverability-campaigns-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/deliverability-dashboard/domains/~A/campaigns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'subscribed-domain))))
                                                        "ListDomainDeliverabilityCampaigns"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-domain-deliverability-campaigns))
(common-lisp:progn
 (common-lisp:defun list-email-identities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-email-identities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/email/identities"
                                                        "ListEmailIdentities"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-email-identities))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/email/tags"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-account-dedicated-ip-warmup-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-warmup-enabled)
   (common-lisp:declare (common-lisp:ignorable auto-warmup-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-account-dedicated-ip-warmup-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/v1/email/account/dedicated-ips/warmup"
                                                        "PutAccountDedicatedIpWarmupAttributes"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-account-dedicated-ip-warmup-attributes))
(common-lisp:progn
 (common-lisp:defun put-account-sending-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sending-enabled)
   (common-lisp:declare (common-lisp:ignorable sending-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-account-sending-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/v1/email/account/sending"
                                                        "PutAccountSendingAttributes"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-account-sending-attributes))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-delivery-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name tls-policy
                     sending-pool-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name tls-policy
     sending-pool-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-delivery-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/delivery-options"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetDeliveryOptions"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-configuration-set-delivery-options))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-reputation-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     reputation-metrics-enabled)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name reputation-metrics-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-reputation-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/reputation-options"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetReputationOptions"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-configuration-set-reputation-options))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-sending-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name sending-enabled)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name sending-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-sending-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/sending"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetSendingOptions"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-configuration-set-sending-options))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-tracking-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     custom-redirect-domain)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name custom-redirect-domain))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-tracking-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/tracking-options"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetTrackingOptions"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-configuration-set-tracking-options))
(common-lisp:progn
 (common-lisp:defun put-dedicated-ip-in-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ip destination-pool-name)
   (common-lisp:declare (common-lisp:ignorable ip destination-pool-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-dedicated-ip-in-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/dedicated-ips/~A/pool"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ip))))
                                                        "PutDedicatedIpInPool"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-dedicated-ip-in-pool))
(common-lisp:progn
 (common-lisp:defun put-dedicated-ip-warmup-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ip warmup-percentage)
   (common-lisp:declare (common-lisp:ignorable ip warmup-percentage))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-dedicated-ip-warmup-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/dedicated-ips/~A/warmup"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ip))))
                                                        "PutDedicatedIpWarmupAttributes"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-dedicated-ip-warmup-attributes))
(common-lisp:progn
 (common-lisp:defun put-deliverability-dashboard-option
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dashboard-enabled subscribed-domains)
   (common-lisp:declare
    (common-lisp:ignorable dashboard-enabled subscribed-domains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-deliverability-dashboard-option-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/v1/email/deliverability-dashboard"
                                                        "PutDeliverabilityDashboardOption"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-deliverability-dashboard-option))
(common-lisp:progn
 (common-lisp:defun put-email-identity-dkim-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity signing-enabled)
   (common-lisp:declare (common-lisp:ignorable email-identity signing-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-email-identity-dkim-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/identities/~A/dkim"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "PutEmailIdentityDkimAttributes"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-email-identity-dkim-attributes))
(common-lisp:progn
 (common-lisp:defun put-email-identity-feedback-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity email-forwarding-enabled)
   (common-lisp:declare
    (common-lisp:ignorable email-identity email-forwarding-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-email-identity-feedback-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/identities/~A/feedback"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "PutEmailIdentityFeedbackAttributes"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-email-identity-feedback-attributes))
(common-lisp:progn
 (common-lisp:defun put-email-identity-mail-from-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity mail-from-domain
                     behavior-on-mx-failure)
   (common-lisp:declare
    (common-lisp:ignorable email-identity mail-from-domain
     behavior-on-mx-failure))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-email-identity-mail-from-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/identities/~A/mail-from"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "PutEmailIdentityMailFromAttributes"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-email-identity-mail-from-attributes))
(common-lisp:progn
 (common-lisp:defun send-email
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key from-email-address destination
                     reply-to-addresses feedback-forwarding-email-address
                     content email-tags configuration-set-name)
   (common-lisp:declare
    (common-lisp:ignorable from-email-address destination reply-to-addresses
     feedback-forwarding-email-address content email-tags
     configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-email-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/email/outbound-emails"
                                                        "SendEmail"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'send-email))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v1/email/tags"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        "/v1/email/tags"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     event-destination-name event-destination)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination-name
     event-destination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/event-destinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'event-destination-name))))
                                                        "UpdateConfigurationSetEventDestination"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-configuration-set-event-destination))
