;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/bedrock/api
  (:use)
  (:nicknames #:aws/bedrock)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/bedrock/api)
(common-lisp:progn
 (common-lisp:define-condition bedrock-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'bedrock-error))
(common-lisp:progn
 (common-lisp:defclass bedrock-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "bedrock" :api-version
                        "2023-04-20" :host-prefix "bedrock" :signing-name
                        "bedrock" :global-host common-lisp:nil))
 (common-lisp:export 'bedrock-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("TooManyTagsException" . too-many-tags-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (bedrock-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype base-model-identifier () 'common-lisp:string)
(common-lisp:deftype bedrock-model-id () 'common-lisp:string)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype branded-name () 'common-lisp:string)
(common-lisp:deftype bucket-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-cloud-watch-config-"))
   (log-group-name (common-lisp:error ":loggroupname is required") :type
    (common-lisp:or log-group-name common-lisp:null))
   (role-arn (common-lisp:error ":rolearn is required") :type
    (common-lisp:or role-arn common-lisp:null))
   (large-data-delivery-s3config common-lisp:nil :type
    (common-lisp:or s3config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-config 'make-cloud-watch-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cloud-watch-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cloud-watch-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group-name))
      (common-lisp:list
       (common-lisp:cons "logGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'large-data-delivery-s3config))
      (common-lisp:list
       (common-lisp:cons "largeDataDeliveryS3Config"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cloud-watch-config))
   common-lisp:nil))
(common-lisp:deftype commitment-duration () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (bedrock-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-model-customization-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-model-customization-job-request-"))
   (job-name (common-lisp:error ":jobname is required") :type
    (common-lisp:or job-name common-lisp:null))
   (custom-model-name (common-lisp:error ":custommodelname is required") :type
    (common-lisp:or custom-model-name common-lisp:null))
   (role-arn (common-lisp:error ":rolearn is required") :type
    (common-lisp:or role-arn common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (base-model-identifier
    (common-lisp:error ":basemodelidentifier is required") :type
    (common-lisp:or base-model-identifier common-lisp:null))
   (customization-type common-lisp:nil :type
    (common-lisp:or customization-type common-lisp:null))
   (custom-model-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (job-tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (custom-model-tags common-lisp:nil :type
    (common-lisp:or tag-list common-lisp:null))
   (training-data-config (common-lisp:error ":trainingdataconfig is required")
    :type (common-lisp:or training-data-config common-lisp:null))
   (validation-data-config common-lisp:nil :type
    (common-lisp:or validation-data-config common-lisp:null))
   (output-data-config (common-lisp:error ":outputdataconfig is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (hyper-parameters (common-lisp:error ":hyperparameters is required") :type
    (common-lisp:or model-customization-hyper-parameters common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-model-customization-job-request
                    'make-create-model-customization-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-model-customization-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-model-customization-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "jobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-model-name))
      (common-lisp:list
       (common-lisp:cons "customModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "clientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'base-model-identifier))
      (common-lisp:list
       (common-lisp:cons "baseModelIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customization-type))
      (common-lisp:list
       (common-lisp:cons "customizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "customModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-tags))
      (common-lisp:list
       (common-lisp:cons "jobTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-model-tags))
      (common-lisp:list
       (common-lisp:cons "customModelTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-data-config))
      (common-lisp:list
       (common-lisp:cons "trainingDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validation-data-config))
      (common-lisp:list
       (common-lisp:cons "validationDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "outputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hyper-parameters))
      (common-lisp:list
       (common-lisp:cons "hyperParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "vpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-model-customization-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-model-customization-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-model-customization-job-response-"))
   (job-arn (common-lisp:error ":jobarn is required") :type
    (common-lisp:or model-customization-job-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-model-customization-job-response
                    'make-create-model-customization-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-model-customization-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-model-customization-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "jobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-model-customization-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-provisioned-model-throughput-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-provisioned-model-throughput-request-"))
   (client-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (model-units (common-lisp:error ":modelunits is required") :type
    (common-lisp:or positive-integer common-lisp:null))
   (provisioned-model-name
    (common-lisp:error ":provisionedmodelname is required") :type
    (common-lisp:or provisioned-model-name common-lisp:null))
   (model-id (common-lisp:error ":modelid is required") :type
    (common-lisp:or model-identifier common-lisp:null))
   (commitment-duration common-lisp:nil :type
    (common-lisp:or commitment-duration common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-provisioned-model-throughput-request
                    'make-create-provisioned-model-throughput-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-provisioned-model-throughput-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-provisioned-model-throughput-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "clientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-units))
      (common-lisp:list
       (common-lisp:cons "modelUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'provisioned-model-name))
      (common-lisp:list
       (common-lisp:cons "provisionedModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-id))
      (common-lisp:list
       (common-lisp:cons "modelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'commitment-duration))
      (common-lisp:list
       (common-lisp:cons "commitmentDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-provisioned-model-throughput-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-provisioned-model-throughput-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-provisioned-model-throughput-response-"))
   (provisioned-model-arn
    (common-lisp:error ":provisionedmodelarn is required") :type
    (common-lisp:or provisioned-model-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-provisioned-model-throughput-response
                    'make-create-provisioned-model-throughput-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-provisioned-model-throughput-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-provisioned-model-throughput-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'provisioned-model-arn))
      (common-lisp:list
       (common-lisp:cons "provisionedModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-provisioned-model-throughput-response))
   common-lisp:nil))
(common-lisp:deftype custom-model-arn () 'common-lisp:string)
(common-lisp:deftype custom-model-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (custom-model-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-custom-model-summary-"))
   (model-arn (common-lisp:error ":modelarn is required") :type
    (common-lisp:or custom-model-arn common-lisp:null))
   (model-name (common-lisp:error ":modelname is required") :type
    (common-lisp:or custom-model-name common-lisp:null))
   (creation-time (common-lisp:error ":creationtime is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (base-model-arn (common-lisp:error ":basemodelarn is required") :type
    (common-lisp:or model-arn common-lisp:null))
   (base-model-name (common-lisp:error ":basemodelname is required") :type
    (common-lisp:or model-name common-lisp:null))
   (customization-type common-lisp:nil :type
    (common-lisp:or customization-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-model-summary 'make-custom-model-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input custom-model-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input custom-model-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "modelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-name))
      (common-lisp:list
       (common-lisp:cons "modelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-model-arn))
      (common-lisp:list
       (common-lisp:cons "baseModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-model-name))
      (common-lisp:list
       (common-lisp:cons "baseModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customization-type))
      (common-lisp:list
       (common-lisp:cons "customizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input custom-model-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype custom-model-summary-list ()
   '(trivial-types:proper-list custom-model-summary))
 (common-lisp:defun make-custom-model-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list custom-model-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype customization-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-custom-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-custom-model-request-"))
   (model-identifier (common-lisp:error ":modelidentifier is required") :type
    (common-lisp:or model-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-custom-model-request
                    'make-delete-custom-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-custom-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-custom-model-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-custom-model-response
                    'make-delete-custom-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-model-invocation-logging-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-model-invocation-logging-configuration-request-")))
 (common-lisp:export
  (common-lisp:list 'delete-model-invocation-logging-configuration-request
                    'make-delete-model-invocation-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-model-invocation-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-model-invocation-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-model-invocation-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-model-invocation-logging-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-model-invocation-logging-configuration-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-model-invocation-logging-configuration-response
                    'make-delete-model-invocation-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-model-invocation-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-model-invocation-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-model-invocation-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-provisioned-model-throughput-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-provisioned-model-throughput-request-"))
   (provisioned-model-id (common-lisp:error ":provisionedmodelid is required")
    :type (common-lisp:or provisioned-model-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-provisioned-model-throughput-request
                    'make-delete-provisioned-model-throughput-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-provisioned-model-throughput-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-provisioned-model-throughput-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-provisioned-model-throughput-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-provisioned-model-throughput-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-provisioned-model-throughput-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-provisioned-model-throughput-response
                    'make-delete-provisioned-model-throughput-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-provisioned-model-throughput-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-provisioned-model-throughput-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-provisioned-model-throughput-response))
   common-lisp:nil))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype fine-tuning-job-status () 'common-lisp:string)
(common-lisp:deftype foundation-model-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (foundation-model-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-foundation-model-details-"))
   (model-arn (common-lisp:error ":modelarn is required") :type
    (common-lisp:or foundation-model-arn common-lisp:null))
   (model-id (common-lisp:error ":modelid is required") :type
    (common-lisp:or bedrock-model-id common-lisp:null))
   (model-name common-lisp:nil :type
    (common-lisp:or branded-name common-lisp:null))
   (provider-name common-lisp:nil :type
    (common-lisp:or branded-name common-lisp:null))
   (input-modalities common-lisp:nil :type
    (common-lisp:or model-modality-list common-lisp:null))
   (output-modalities common-lisp:nil :type
    (common-lisp:or model-modality-list common-lisp:null))
   (response-streaming-supported common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (customizations-supported common-lisp:nil :type
    (common-lisp:or model-customization-list common-lisp:null))
   (inference-types-supported common-lisp:nil :type
    (common-lisp:or inference-type-list common-lisp:null))
   (model-lifecycle common-lisp:nil :type
    (common-lisp:or foundation-model-lifecycle common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'foundation-model-details 'make-foundation-model-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          foundation-model-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          foundation-model-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "modelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-id))
      (common-lisp:list
       (common-lisp:cons "modelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-name))
      (common-lisp:list
       (common-lisp:cons "modelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-name))
      (common-lisp:list
       (common-lisp:cons "providerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-modalities))
      (common-lisp:list
       (common-lisp:cons "inputModalities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-modalities))
      (common-lisp:list
       (common-lisp:cons "outputModalities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'response-streaming-supported))
      (common-lisp:list
       (common-lisp:cons "responseStreamingSupported"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customizations-supported))
      (common-lisp:list
       (common-lisp:cons "customizationsSupported"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inference-types-supported))
      (common-lisp:list
       (common-lisp:cons "inferenceTypesSupported"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-lifecycle))
      (common-lisp:list
       (common-lisp:cons "modelLifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          foundation-model-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (foundation-model-lifecycle (:copier common-lisp:nil)
      (:conc-name "struct-shape-foundation-model-lifecycle-"))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or foundation-model-lifecycle-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'foundation-model-lifecycle
                    'make-foundation-model-lifecycle))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          foundation-model-lifecycle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          foundation-model-lifecycle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          foundation-model-lifecycle))
   common-lisp:nil))
(common-lisp:deftype foundation-model-lifecycle-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (foundation-model-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-foundation-model-summary-"))
   (model-arn (common-lisp:error ":modelarn is required") :type
    (common-lisp:or foundation-model-arn common-lisp:null))
   (model-id (common-lisp:error ":modelid is required") :type
    (common-lisp:or bedrock-model-id common-lisp:null))
   (model-name common-lisp:nil :type
    (common-lisp:or branded-name common-lisp:null))
   (provider-name common-lisp:nil :type
    (common-lisp:or branded-name common-lisp:null))
   (input-modalities common-lisp:nil :type
    (common-lisp:or model-modality-list common-lisp:null))
   (output-modalities common-lisp:nil :type
    (common-lisp:or model-modality-list common-lisp:null))
   (response-streaming-supported common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (customizations-supported common-lisp:nil :type
    (common-lisp:or model-customization-list common-lisp:null))
   (inference-types-supported common-lisp:nil :type
    (common-lisp:or inference-type-list common-lisp:null))
   (model-lifecycle common-lisp:nil :type
    (common-lisp:or foundation-model-lifecycle common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'foundation-model-summary 'make-foundation-model-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          foundation-model-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          foundation-model-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "modelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-id))
      (common-lisp:list
       (common-lisp:cons "modelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-name))
      (common-lisp:list
       (common-lisp:cons "modelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-name))
      (common-lisp:list
       (common-lisp:cons "providerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-modalities))
      (common-lisp:list
       (common-lisp:cons "inputModalities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-modalities))
      (common-lisp:list
       (common-lisp:cons "outputModalities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'response-streaming-supported))
      (common-lisp:list
       (common-lisp:cons "responseStreamingSupported"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customizations-supported))
      (common-lisp:list
       (common-lisp:cons "customizationsSupported"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inference-types-supported))
      (common-lisp:list
       (common-lisp:cons "inferenceTypesSupported"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-lifecycle))
      (common-lisp:list
       (common-lisp:cons "modelLifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          foundation-model-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype foundation-model-summary-list ()
   '(trivial-types:proper-list foundation-model-summary))
 (common-lisp:defun make-foundation-model-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            foundation-model-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (get-custom-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-custom-model-request-"))
   (model-identifier (common-lisp:error ":modelidentifier is required") :type
    (common-lisp:or model-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-custom-model-request 'make-get-custom-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-custom-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-custom-model-response-"))
   (model-arn (common-lisp:error ":modelarn is required") :type
    (common-lisp:or model-arn common-lisp:null))
   (model-name (common-lisp:error ":modelname is required") :type
    (common-lisp:or custom-model-name common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-arn (common-lisp:error ":jobarn is required") :type
    (common-lisp:or model-customization-job-arn common-lisp:null))
   (base-model-arn (common-lisp:error ":basemodelarn is required") :type
    (common-lisp:or model-arn common-lisp:null))
   (customization-type common-lisp:nil :type
    (common-lisp:or customization-type common-lisp:null))
   (model-kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null))
   (hyper-parameters common-lisp:nil :type
    (common-lisp:or model-customization-hyper-parameters common-lisp:null))
   (training-data-config (common-lisp:error ":trainingdataconfig is required")
    :type (common-lisp:or training-data-config common-lisp:null))
   (validation-data-config common-lisp:nil :type
    (common-lisp:or validation-data-config common-lisp:null))
   (output-data-config (common-lisp:error ":outputdataconfig is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (training-metrics common-lisp:nil :type
    (common-lisp:or training-metrics common-lisp:null))
   (validation-metrics common-lisp:nil :type
    (common-lisp:or validation-metrics common-lisp:null))
   (creation-time (common-lisp:error ":creationtime is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-custom-model-response
                    'make-get-custom-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "modelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-name))
      (common-lisp:list
       (common-lisp:cons "modelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "jobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "jobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-model-arn))
      (common-lisp:list
       (common-lisp:cons "baseModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customization-type))
      (common-lisp:list
       (common-lisp:cons "customizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "modelKmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hyper-parameters))
      (common-lisp:list
       (common-lisp:cons "hyperParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-data-config))
      (common-lisp:list
       (common-lisp:cons "trainingDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validation-data-config))
      (common-lisp:list
       (common-lisp:cons "validationDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "outputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-metrics))
      (common-lisp:list
       (common-lisp:cons "trainingMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validation-metrics))
      (common-lisp:list
       (common-lisp:cons "validationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-foundation-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-foundation-model-request-"))
   (model-identifier (common-lisp:error ":modelidentifier is required") :type
    (common-lisp:or model-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-foundation-model-request
                    'make-get-foundation-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-foundation-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-foundation-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-foundation-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-foundation-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-foundation-model-response-"))
   (model-details common-lisp:nil :type
    (common-lisp:or foundation-model-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-foundation-model-response
                    'make-get-foundation-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-foundation-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-foundation-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-details))
      (common-lisp:list
       (common-lisp:cons "modelDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-foundation-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-model-customization-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-model-customization-job-request-"))
   (job-identifier (common-lisp:error ":jobidentifier is required") :type
    (common-lisp:or model-customization-job-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-model-customization-job-request
                    'make-get-model-customization-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-model-customization-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-model-customization-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-model-customization-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-model-customization-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-model-customization-job-response-"))
   (job-arn (common-lisp:error ":jobarn is required") :type
    (common-lisp:or model-customization-job-arn common-lisp:null))
   (job-name (common-lisp:error ":jobname is required") :type
    (common-lisp:or job-name common-lisp:null))
   (output-model-name (common-lisp:error ":outputmodelname is required") :type
    (common-lisp:or custom-model-name common-lisp:null))
   (output-model-arn common-lisp:nil :type
    (common-lisp:or custom-model-arn common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (role-arn (common-lisp:error ":rolearn is required") :type
    (common-lisp:or role-arn common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or model-customization-job-status common-lisp:null))
   (failure-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (creation-time (common-lisp:error ":creationtime is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (base-model-arn (common-lisp:error ":basemodelarn is required") :type
    (common-lisp:or foundation-model-arn common-lisp:null))
   (hyper-parameters (common-lisp:error ":hyperparameters is required") :type
    (common-lisp:or model-customization-hyper-parameters common-lisp:null))
   (training-data-config (common-lisp:error ":trainingdataconfig is required")
    :type (common-lisp:or training-data-config common-lisp:null))
   (validation-data-config
    (common-lisp:error ":validationdataconfig is required") :type
    (common-lisp:or validation-data-config common-lisp:null))
   (output-data-config (common-lisp:error ":outputdataconfig is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (customization-type common-lisp:nil :type
    (common-lisp:or customization-type common-lisp:null))
   (output-model-kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null))
   (training-metrics common-lisp:nil :type
    (common-lisp:or training-metrics common-lisp:null))
   (validation-metrics common-lisp:nil :type
    (common-lisp:or validation-metrics common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-model-customization-job-response
                    'make-get-model-customization-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-model-customization-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-model-customization-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "jobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "jobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-model-name))
      (common-lisp:list
       (common-lisp:cons "outputModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-model-arn))
      (common-lisp:list
       (common-lisp:cons "outputModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "clientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-message))
      (common-lisp:list
       (common-lisp:cons "failureMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "lastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-model-arn))
      (common-lisp:list
       (common-lisp:cons "baseModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hyper-parameters))
      (common-lisp:list
       (common-lisp:cons "hyperParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-data-config))
      (common-lisp:list
       (common-lisp:cons "trainingDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validation-data-config))
      (common-lisp:list
       (common-lisp:cons "validationDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "outputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customization-type))
      (common-lisp:list
       (common-lisp:cons "customizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'output-model-kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "outputModelKmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-metrics))
      (common-lisp:list
       (common-lisp:cons "trainingMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validation-metrics))
      (common-lisp:list
       (common-lisp:cons "validationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "vpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-model-customization-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-model-invocation-logging-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-model-invocation-logging-configuration-request-")))
 (common-lisp:export
  (common-lisp:list 'get-model-invocation-logging-configuration-request
                    'make-get-model-invocation-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-model-invocation-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-model-invocation-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-model-invocation-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-model-invocation-logging-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-model-invocation-logging-configuration-response-"))
   (logging-config common-lisp:nil :type
    (common-lisp:or logging-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-model-invocation-logging-configuration-response
                    'make-get-model-invocation-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-model-invocation-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-model-invocation-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-config))
      (common-lisp:list
       (common-lisp:cons "loggingConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-model-invocation-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-provisioned-model-throughput-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-provisioned-model-throughput-request-"))
   (provisioned-model-id (common-lisp:error ":provisionedmodelid is required")
    :type (common-lisp:or provisioned-model-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-provisioned-model-throughput-request
                    'make-get-provisioned-model-throughput-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-provisioned-model-throughput-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-provisioned-model-throughput-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-provisioned-model-throughput-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-provisioned-model-throughput-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-provisioned-model-throughput-response-"))
   (model-units (common-lisp:error ":modelunits is required") :type
    (common-lisp:or positive-integer common-lisp:null))
   (desired-model-units (common-lisp:error ":desiredmodelunits is required")
    :type (common-lisp:or positive-integer common-lisp:null))
   (provisioned-model-name
    (common-lisp:error ":provisionedmodelname is required") :type
    (common-lisp:or provisioned-model-name common-lisp:null))
   (provisioned-model-arn
    (common-lisp:error ":provisionedmodelarn is required") :type
    (common-lisp:or provisioned-model-arn common-lisp:null))
   (model-arn (common-lisp:error ":modelarn is required") :type
    (common-lisp:or model-arn common-lisp:null))
   (desired-model-arn (common-lisp:error ":desiredmodelarn is required") :type
    (common-lisp:or model-arn common-lisp:null))
   (foundation-model-arn (common-lisp:error ":foundationmodelarn is required")
    :type (common-lisp:or foundation-model-arn common-lisp:null))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or provisioned-model-status common-lisp:null))
   (creation-time (common-lisp:error ":creationtime is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modified-time (common-lisp:error ":lastmodifiedtime is required")
    :type (common-lisp:or timestamp common-lisp:null))
   (failure-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (commitment-duration common-lisp:nil :type
    (common-lisp:or commitment-duration common-lisp:null))
   (commitment-expiration-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-provisioned-model-throughput-response
                    'make-get-provisioned-model-throughput-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-provisioned-model-throughput-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-provisioned-model-throughput-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-units))
      (common-lisp:list
       (common-lisp:cons "modelUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-model-units))
      (common-lisp:list
       (common-lisp:cons "desiredModelUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'provisioned-model-name))
      (common-lisp:list
       (common-lisp:cons "provisionedModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'provisioned-model-arn))
      (common-lisp:list
       (common-lisp:cons "provisionedModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "modelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-model-arn))
      (common-lisp:list
       (common-lisp:cons "desiredModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'foundation-model-arn))
      (common-lisp:list
       (common-lisp:cons "foundationModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "lastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-message))
      (common-lisp:list
       (common-lisp:cons "failureMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'commitment-duration))
      (common-lisp:list
       (common-lisp:cons "commitmentDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'commitment-expiration-time))
      (common-lisp:list
       (common-lisp:cons "commitmentExpirationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-provisioned-model-throughput-response))
   common-lisp:nil))
(common-lisp:deftype idempotency-token () 'common-lisp:string)
(common-lisp:deftype inference-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype inference-type-list ()
   '(trivial-types:proper-list inference-type))
 (common-lisp:defun make-inference-type-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list inference-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (bedrock-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype job-name () 'common-lisp:string)
(common-lisp:deftype key-prefix () 'common-lisp:string)
(common-lisp:deftype kms-key-arn () 'common-lisp:string)
(common-lisp:deftype kms-key-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-models-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-custom-models-request-"))
   (creation-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (creation-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or custom-model-name common-lisp:null))
   (base-model-arn-equals common-lisp:nil :type
    (common-lisp:or model-arn common-lisp:null))
   (foundation-model-arn-equals common-lisp:nil :type
    (common-lisp:or foundation-model-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (sort-by common-lisp:nil :type
    (common-lisp:or sort-models-by common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-models-request
                    'make-list-custom-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-models-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-custom-models-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (model-summaries common-lisp:nil :type
    (common-lisp:or custom-model-summary-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-models-response
                    'make-list-custom-models-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-models-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-models-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-summaries))
      (common-lisp:list
       (common-lisp:cons "modelSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-models-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-foundation-models-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-foundation-models-request-"))
   (by-provider common-lisp:nil :type
    (common-lisp:or provider common-lisp:null))
   (by-customization-type common-lisp:nil :type
    (common-lisp:or model-customization common-lisp:null))
   (by-output-modality common-lisp:nil :type
    (common-lisp:or model-modality common-lisp:null))
   (by-inference-type common-lisp:nil :type
    (common-lisp:or inference-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-foundation-models-request
                    'make-list-foundation-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-foundation-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-foundation-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-foundation-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-foundation-models-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-foundation-models-response-"))
   (model-summaries common-lisp:nil :type
    (common-lisp:or foundation-model-summary-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-foundation-models-response
                    'make-list-foundation-models-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-foundation-models-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-foundation-models-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-summaries))
      (common-lisp:list
       (common-lisp:cons "modelSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-foundation-models-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-model-customization-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-model-customization-jobs-request-"))
   (creation-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (creation-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status-equals common-lisp:nil :type
    (common-lisp:or fine-tuning-job-status common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or job-name common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (sort-by common-lisp:nil :type
    (common-lisp:or sort-jobs-by common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-model-customization-jobs-request
                    'make-list-model-customization-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-model-customization-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-model-customization-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-model-customization-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-model-customization-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-model-customization-jobs-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (model-customization-job-summaries common-lisp:nil :type
    (common-lisp:or model-customization-job-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-model-customization-jobs-response
                    'make-list-model-customization-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-model-customization-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-model-customization-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-customization-job-summaries))
      (common-lisp:list
       (common-lisp:cons "modelCustomizationJobSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-model-customization-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-provisioned-model-throughputs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-provisioned-model-throughputs-request-"))
   (creation-time-after common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (creation-time-before common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status-equals common-lisp:nil :type
    (common-lisp:or provisioned-model-status common-lisp:null))
   (model-arn-equals common-lisp:nil :type
    (common-lisp:or model-arn common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or provisioned-model-name common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (sort-by common-lisp:nil :type
    (common-lisp:or sort-by-provisioned-models common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-provisioned-model-throughputs-request
                    'make-list-provisioned-model-throughputs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-provisioned-model-throughputs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-provisioned-model-throughputs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-provisioned-model-throughputs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-provisioned-model-throughputs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-provisioned-model-throughputs-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (provisioned-model-summaries common-lisp:nil :type
    (common-lisp:or provisioned-model-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-provisioned-model-throughputs-response
                    'make-list-provisioned-model-throughputs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-provisioned-model-throughputs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-provisioned-model-throughputs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'provisioned-model-summaries))
      (common-lisp:list
       (common-lisp:cons "provisionedModelSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-provisioned-model-throughputs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or taggable-resources-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype log-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (logging-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-logging-config-"))
   (cloud-watch-config common-lisp:nil :type
    (common-lisp:or cloud-watch-config common-lisp:null))
   (s3config common-lisp:nil :type (common-lisp:or s3config common-lisp:null))
   (text-data-delivery-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (image-data-delivery-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (embedding-data-delivery-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'logging-config 'make-logging-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input logging-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input logging-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cloud-watch-config))
      (common-lisp:list
       (common-lisp:cons "cloudWatchConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3config))
      (common-lisp:list
       (common-lisp:cons "s3Config"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'text-data-delivery-enabled))
      (common-lisp:list
       (common-lisp:cons "textDataDeliveryEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'image-data-delivery-enabled))
      (common-lisp:list
       (common-lisp:cons "imageDataDeliveryEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'embedding-data-delivery-enabled))
      (common-lisp:list
       (common-lisp:cons "embeddingDataDeliveryEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input logging-config))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype metric-float () 'common-lisp:single-float)
(common-lisp:deftype model-arn () 'common-lisp:string)
(common-lisp:deftype model-customization () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype model-customization-hyper-parameters ()
   'common-lisp:hash-table)
 (common-lisp:defun make-model-customization-hyper-parameters
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype model-customization-job-arn () 'common-lisp:string)
(common-lisp:deftype model-customization-job-identifier () 'common-lisp:string)
(common-lisp:deftype model-customization-job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype model-customization-job-summaries ()
   '(trivial-types:proper-list model-customization-job-summary))
 (common-lisp:defun make-model-customization-job-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            model-customization-job-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (model-customization-job-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-model-customization-job-summary-"))
   (job-arn (common-lisp:error ":jobarn is required") :type
    (common-lisp:or model-customization-job-arn common-lisp:null))
   (base-model-arn (common-lisp:error ":basemodelarn is required") :type
    (common-lisp:or model-arn common-lisp:null))
   (job-name (common-lisp:error ":jobname is required") :type
    (common-lisp:or job-name common-lisp:null))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or model-customization-job-status common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (creation-time (common-lisp:error ":creationtime is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (custom-model-arn common-lisp:nil :type
    (common-lisp:or custom-model-arn common-lisp:null))
   (custom-model-name common-lisp:nil :type
    (common-lisp:or custom-model-name common-lisp:null))
   (customization-type common-lisp:nil :type
    (common-lisp:or customization-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'model-customization-job-summary
                    'make-model-customization-job-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          model-customization-job-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          model-customization-job-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "jobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-model-arn))
      (common-lisp:list
       (common-lisp:cons "baseModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "jobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "lastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-model-arn))
      (common-lisp:list
       (common-lisp:cons "customModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-model-name))
      (common-lisp:list
       (common-lisp:cons "customModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customization-type))
      (common-lisp:list
       (common-lisp:cons "customizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          model-customization-job-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype model-customization-list ()
   '(trivial-types:proper-list model-customization))
 (common-lisp:defun make-model-customization-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list model-customization))
   aws-sdk/generator/shape::members))
(common-lisp:deftype model-identifier () 'common-lisp:string)
(common-lisp:deftype model-modality () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype model-modality-list ()
   '(trivial-types:proper-list model-modality))
 (common-lisp:defun make-model-modality-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list model-modality))
   aws-sdk/generator/shape::members))
(common-lisp:deftype model-name () 'common-lisp:string)
(common-lisp:deftype non-blank-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (output-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-data-config-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'output-data-config 'make-output-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "s3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output-data-config))
   common-lisp:nil))
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:deftype positive-integer () 'common-lisp:integer)
(common-lisp:deftype provider () 'common-lisp:string)
(common-lisp:deftype provisioned-model-arn () 'common-lisp:string)
(common-lisp:deftype provisioned-model-id () 'common-lisp:string)
(common-lisp:deftype provisioned-model-name () 'common-lisp:string)
(common-lisp:deftype provisioned-model-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype provisioned-model-summaries ()
   '(trivial-types:proper-list provisioned-model-summary))
 (common-lisp:defun make-provisioned-model-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            provisioned-model-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (provisioned-model-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-provisioned-model-summary-"))
   (provisioned-model-name
    (common-lisp:error ":provisionedmodelname is required") :type
    (common-lisp:or provisioned-model-name common-lisp:null))
   (provisioned-model-arn
    (common-lisp:error ":provisionedmodelarn is required") :type
    (common-lisp:or provisioned-model-arn common-lisp:null))
   (model-arn (common-lisp:error ":modelarn is required") :type
    (common-lisp:or model-arn common-lisp:null))
   (desired-model-arn (common-lisp:error ":desiredmodelarn is required") :type
    (common-lisp:or model-arn common-lisp:null))
   (foundation-model-arn (common-lisp:error ":foundationmodelarn is required")
    :type (common-lisp:or foundation-model-arn common-lisp:null))
   (model-units (common-lisp:error ":modelunits is required") :type
    (common-lisp:or positive-integer common-lisp:null))
   (desired-model-units (common-lisp:error ":desiredmodelunits is required")
    :type (common-lisp:or positive-integer common-lisp:null))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or provisioned-model-status common-lisp:null))
   (commitment-duration common-lisp:nil :type
    (common-lisp:or commitment-duration common-lisp:null))
   (commitment-expiration-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (creation-time (common-lisp:error ":creationtime is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modified-time (common-lisp:error ":lastmodifiedtime is required")
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioned-model-summary
                    'make-provisioned-model-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          provisioned-model-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          provisioned-model-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'provisioned-model-name))
      (common-lisp:list
       (common-lisp:cons "provisionedModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'provisioned-model-arn))
      (common-lisp:list
       (common-lisp:cons "provisionedModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "modelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-model-arn))
      (common-lisp:list
       (common-lisp:cons "desiredModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'foundation-model-arn))
      (common-lisp:list
       (common-lisp:cons "foundationModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-units))
      (common-lisp:list
       (common-lisp:cons "modelUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-model-units))
      (common-lisp:list
       (common-lisp:cons "desiredModelUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'commitment-duration))
      (common-lisp:list
       (common-lisp:cons "commitmentDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'commitment-expiration-time))
      (common-lisp:list
       (common-lisp:cons "commitmentExpirationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "lastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          provisioned-model-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-model-invocation-logging-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-model-invocation-logging-configuration-request-"))
   (logging-config (common-lisp:error ":loggingconfig is required") :type
    (common-lisp:or logging-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-model-invocation-logging-configuration-request
                    'make-put-model-invocation-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-model-invocation-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-model-invocation-logging-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-config))
      (common-lisp:list
       (common-lisp:cons "loggingConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-model-invocation-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-model-invocation-logging-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-model-invocation-logging-configuration-response-")))
 (common-lisp:export
  (common-lisp:list 'put-model-invocation-logging-configuration-response
                    'make-put-model-invocation-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-model-invocation-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-model-invocation-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-model-invocation-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (bedrock-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (s3config (:copier common-lisp:nil) (:conc-name "struct-shape-s3config-"))
   (bucket-name (common-lisp:error ":bucketname is required") :type
    (common-lisp:or bucket-name common-lisp:null))
   (key-prefix common-lisp:nil :type
    (common-lisp:or key-prefix common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3config 'make-s3config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-prefix))
      (common-lisp:list
       (common-lisp:cons "keyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3config))
   common-lisp:nil))
(common-lisp:deftype s3uri () 'common-lisp:string)
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-group-ids ()
   '(trivial-types:proper-list security-group-id))
 (common-lisp:defun make-security-group-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (bedrock-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:deftype sort-by-provisioned-models () 'common-lisp:string)
(common-lisp:deftype sort-jobs-by () 'common-lisp:string)
(common-lisp:deftype sort-models-by () 'common-lisp:string)
(common-lisp:deftype sort-order () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (stop-model-customization-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-model-customization-job-request-"))
   (job-identifier (common-lisp:error ":jobidentifier is required") :type
    (common-lisp:or model-customization-job-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-model-customization-job-request
                    'make-stop-model-customization-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-model-customization-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-model-customization-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-model-customization-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-model-customization-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-model-customization-job-response-")))
 (common-lisp:export
  (common-lisp:list 'stop-model-customization-job-response
                    'make-stop-model-customization-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-model-customization-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-model-customization-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-model-customization-job-response))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnet-ids () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun make-subnet-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or taggable-resources-arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype taggable-resources-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (bedrock-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-tags-exception
     (bedrock-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-tags-exception-message)
      (resource-name :initarg :resource-name :initform common-lisp:nil :reader
       too-many-tags-exception-resource-name)))
 (common-lisp:export
  (common-lisp:list 'too-many-tags-exception 'too-many-tags-exception-message
                    'too-many-tags-exception-resource-name)))
(common-lisp:progn
 (common-lisp:defstruct
     (training-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-training-data-config-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'training-data-config 'make-training-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input training-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input training-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "s3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input training-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (training-metrics (:copier common-lisp:nil)
      (:conc-name "struct-shape-training-metrics-"))
   (training-loss common-lisp:nil :type
    (common-lisp:or metric-float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'training-metrics 'make-training-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input training-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input training-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-loss))
      (common-lisp:list
       (common-lisp:cons "trainingLoss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input training-metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or taggable-resources-arn common-lisp:null))
   (tag-keys (common-lisp:error ":tagkeys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "tagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-provisioned-model-throughput-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-provisioned-model-throughput-request-"))
   (provisioned-model-id (common-lisp:error ":provisionedmodelid is required")
    :type (common-lisp:or provisioned-model-id common-lisp:null))
   (desired-provisioned-model-name common-lisp:nil :type
    (common-lisp:or provisioned-model-name common-lisp:null))
   (desired-model-id common-lisp:nil :type
    (common-lisp:or model-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-provisioned-model-throughput-request
                    'make-update-provisioned-model-throughput-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-provisioned-model-throughput-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-provisioned-model-throughput-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'desired-provisioned-model-name))
      (common-lisp:list
       (common-lisp:cons "desiredProvisionedModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-model-id))
      (common-lisp:list
       (common-lisp:cons "desiredModelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-provisioned-model-throughput-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-provisioned-model-throughput-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-provisioned-model-throughput-response-")))
 (common-lisp:export
  (common-lisp:list 'update-provisioned-model-throughput-response
                    'make-update-provisioned-model-throughput-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-provisioned-model-throughput-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-provisioned-model-throughput-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-provisioned-model-throughput-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (validation-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-validation-data-config-"))
   (validators (common-lisp:error ":validators is required") :type
    (common-lisp:or validators common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validation-data-config 'make-validation-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validation-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validation-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validators))
      (common-lisp:list
       (common-lisp:cons "validators"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validation-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (bedrock-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:deftype validation-metrics ()
   '(trivial-types:proper-list validator-metric))
 (common-lisp:defun make-validation-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list validator-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (validator (:copier common-lisp:nil)
      (:conc-name "struct-shape-validator-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export (common-lisp:list 'validator 'make-validator))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input validator))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input validator))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "s3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input validator))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (validator-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-validator-metric-"))
   (validation-loss common-lisp:nil :type
    (common-lisp:or metric-float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validator-metric 'make-validator-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input validator-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input validator-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validation-loss))
      (common-lisp:list
       (common-lisp:cons "validationLoss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input validator-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype validators () '(trivial-types:proper-list validator))
 (common-lisp:defun make-validators
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list validator))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-config-"))
   (subnet-ids (common-lisp:error ":subnetids is required") :type
    (common-lisp:or subnet-ids common-lisp:null))
   (security-group-ids (common-lisp:error ":securitygroupids is required")
    :type (common-lisp:or security-group-ids common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-config 'make-vpc-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "subnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "securityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun create-model-customization-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-name custom-model-name role-arn
                     client-request-token base-model-identifier
                     customization-type custom-model-kms-key-id job-tags
                     custom-model-tags training-data-config
                     validation-data-config output-data-config hyper-parameters
                     vpc-config)
   (common-lisp:declare
    (common-lisp:ignorable job-name custom-model-name role-arn
     client-request-token base-model-identifier customization-type
     custom-model-kms-key-id job-tags custom-model-tags training-data-config
     validation-data-config output-data-config hyper-parameters vpc-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-model-customization-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/model-customization-jobs"
                                                        "CreateModelCustomizationJob"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-model-customization-job))
(common-lisp:progn
 (common-lisp:defun create-provisioned-model-throughput
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-request-token model-units
                     provisioned-model-name model-id commitment-duration tags)
   (common-lisp:declare
    (common-lisp:ignorable client-request-token model-units
     provisioned-model-name model-id commitment-duration tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-provisioned-model-throughput-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/provisioned-model-throughput"
                                                        "CreateProvisionedModelThroughput"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-provisioned-model-throughput))
(common-lisp:progn
 (common-lisp:defun delete-custom-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key model-identifier)
   (common-lisp:declare (common-lisp:ignorable model-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-custom-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/custom-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-identifier))))
                                                        "DeleteCustomModel"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-custom-model))
(common-lisp:progn
 (common-lisp:defun delete-model-invocation-logging-configuration ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'bedrock-request :method "DELETE" :path
                                "/logging/modelinvocations" :operation
                                "DeleteModelInvocationLoggingConfiguration"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'delete-model-invocation-logging-configuration))
(common-lisp:progn
 (common-lisp:defun delete-provisioned-model-throughput
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key provisioned-model-id)
   (common-lisp:declare (common-lisp:ignorable provisioned-model-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-provisioned-model-throughput-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/provisioned-model-throughput/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'provisioned-model-id))))
                                                        "DeleteProvisionedModelThroughput"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-provisioned-model-throughput))
(common-lisp:progn
 (common-lisp:defun get-custom-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key model-identifier)
   (common-lisp:declare (common-lisp:ignorable model-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-custom-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/custom-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-identifier))))
                                                        "GetCustomModel"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-custom-model))
(common-lisp:progn
 (common-lisp:defun get-foundation-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key model-identifier)
   (common-lisp:declare (common-lisp:ignorable model-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-foundation-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/foundation-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-identifier))))
                                                        "GetFoundationModel"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-foundation-model))
(common-lisp:progn
 (common-lisp:defun get-model-customization-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-identifier)
   (common-lisp:declare (common-lisp:ignorable job-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-model-customization-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/model-customization-jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-identifier))))
                                                        "GetModelCustomizationJob"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-model-customization-job))
(common-lisp:progn
 (common-lisp:defun get-model-invocation-logging-configuration ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'bedrock-request :method "GET" :path
                                "/logging/modelinvocations" :operation
                                "GetModelInvocationLoggingConfiguration"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-model-invocation-logging-configuration))
(common-lisp:progn
 (common-lisp:defun get-provisioned-model-throughput
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key provisioned-model-id)
   (common-lisp:declare (common-lisp:ignorable provisioned-model-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-provisioned-model-throughput-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/provisioned-model-throughput/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'provisioned-model-id))))
                                                        "GetProvisionedModelThroughput"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-provisioned-model-throughput))
(common-lisp:progn
 (common-lisp:defun list-custom-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key creation-time-before creation-time-after
                     name-contains base-model-arn-equals
                     foundation-model-arn-equals max-results next-token sort-by
                     sort-order)
   (common-lisp:declare
    (common-lisp:ignorable creation-time-before creation-time-after
     name-contains base-model-arn-equals foundation-model-arn-equals
     max-results next-token sort-by sort-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-custom-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/custom-models"
                                                        "ListCustomModels"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-custom-models))
(common-lisp:progn
 (common-lisp:defun list-foundation-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key by-provider by-customization-type
                     by-output-modality by-inference-type)
   (common-lisp:declare
    (common-lisp:ignorable by-provider by-customization-type by-output-modality
     by-inference-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-foundation-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/foundation-models"
                                                        "ListFoundationModels"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-foundation-models))
(common-lisp:progn
 (common-lisp:defun list-model-customization-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key creation-time-after creation-time-before
                     status-equals name-contains max-results next-token sort-by
                     sort-order)
   (common-lisp:declare
    (common-lisp:ignorable creation-time-after creation-time-before
     status-equals name-contains max-results next-token sort-by sort-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-model-customization-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/model-customization-jobs"
                                                        "ListModelCustomizationJobs"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-model-customization-jobs))
(common-lisp:progn
 (common-lisp:defun list-provisioned-model-throughputs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key creation-time-after creation-time-before
                     status-equals model-arn-equals name-contains max-results
                     next-token sort-by sort-order)
   (common-lisp:declare
    (common-lisp:ignorable creation-time-after creation-time-before
     status-equals model-arn-equals name-contains max-results next-token
     sort-by sort-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-provisioned-model-throughputs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/provisioned-model-throughputs"
                                                        "ListProvisionedModelThroughputs"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-provisioned-model-throughputs))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/listTagsForResource"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-model-invocation-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key logging-config)
   (common-lisp:declare (common-lisp:ignorable logging-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-model-invocation-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/logging/modelinvocations"
                                                        "PutModelInvocationLoggingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-model-invocation-logging-configuration))
(common-lisp:progn
 (common-lisp:defun stop-model-customization-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-identifier)
   (common-lisp:declare (common-lisp:ignorable job-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-model-customization-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/model-customization-jobs/~A/stop"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-identifier))))
                                                        "StopModelCustomizationJob"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-model-customization-job))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/tagResource"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/untagResource"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-provisioned-model-throughput
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key provisioned-model-id
                     desired-provisioned-model-name desired-model-id)
   (common-lisp:declare
    (common-lisp:ignorable provisioned-model-id desired-provisioned-model-name
     desired-model-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-provisioned-model-throughput-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'bedrock-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/provisioned-model-throughput/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'provisioned-model-id))))
                                                        "UpdateProvisionedModelThroughput"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-provisioned-model-throughput))
