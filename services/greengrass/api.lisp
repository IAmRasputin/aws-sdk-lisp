;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/greengrass/api
  (:use)
  (:nicknames #:aws/greengrass)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/greengrass/api)
(common-lisp:progn
 (common-lisp:defclass greengrass-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "greengrass" :protocol
                        :rest-json))
 (common-lisp:export 'greengrass-request))
(common-lisp:progn
 (common-lisp:define-condition greengrass-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'greengrass-error))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("InternalServerErrorException" . internal-server-error-exception)))
(common-lisp:progn
 (common-lisp:defclass associate-role-to-group-request common-lisp:nil
                       ((role-arn :initarg :role-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %associate-role-to-group-request-role-arn :initform
                         (common-lisp:error ":role-arn is required"))
                        (group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %associate-role-to-group-request-group-id :initform
                         (common-lisp:error ":group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'associate-role-to-group-request
                    'make-associate-role-to-group-request))
 (common-lisp:defun make-associate-role-to-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key role-arn group-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-role-to-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-role-to-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-role-to-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-role-to-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-role-to-group-response common-lisp:nil
                       ((associated-at :initarg :associated-at :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %associate-role-to-group-response-associated-at
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'associate-role-to-group-response
                    'make-associate-role-to-group-response))
 (common-lisp:defun make-associate-role-to-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key associated-at)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-role-to-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-role-to-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-role-to-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'associated-at))
      (common-lisp:list
       (common-lisp:cons "AssociatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-role-to-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-service-role-to-account-request
                       common-lisp:nil
                       ((role-arn :initarg :role-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %associate-service-role-to-account-request-role-arn
                         :initform
                         (common-lisp:error ":role-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'associate-service-role-to-account-request
                    'make-associate-service-role-to-account-request))
 (common-lisp:defun make-associate-service-role-to-account-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key role-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-service-role-to-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-service-role-to-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-service-role-to-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-service-role-to-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-service-role-to-account-response
                       common-lisp:nil
                       ((associated-at :initarg :associated-at :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %associate-service-role-to-account-response-associated-at
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'associate-service-role-to-account-response
                    'make-associate-service-role-to-account-response))
 (common-lisp:defun make-associate-service-role-to-account-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key associated-at)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-service-role-to-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-service-role-to-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-service-role-to-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'associated-at))
      (common-lisp:list
       (common-lisp:cons "AssociatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-service-role-to-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (greengrass-error)
     ((error-details :initarg :error-details :initform common-lisp:nil :reader
       bad-request-exception-error-details)
      (message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-error-details
                    'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass bulk-deployment common-lisp:nil
                       ((created-at :initarg :created-at :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %bulk-deployment-created-at :initform common-lisp:nil)
                        (bulk-deployment-id :initarg :bulk-deployment-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %bulk-deployment-bulk-deployment-id :initform
                         common-lisp:nil)
                        (bulk-deployment-arn :initarg :bulk-deployment-arn
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor %bulk-deployment-bulk-deployment-arn
                         :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'bulk-deployment 'make-bulk-deployment))
 (common-lisp:defun make-bulk-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key created-at bulk-deployment-id
                     bulk-deployment-arn)
   (common-lisp:apply #'common-lisp:make-instance 'bulk-deployment
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bulk-deployment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bulk-deployment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bulk-deployment-arn))
      (common-lisp:list
       (common-lisp:cons "BulkDeploymentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bulk-deployment-id))
      (common-lisp:list
       (common-lisp:cons "BulkDeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bulk-deployment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bulk-deployment-metrics common-lisp:nil
                       ((retry-attempts :initarg :retry-attempts :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor %bulk-deployment-metrics-retry-attempts
                         :initform common-lisp:nil)
                        (records-processed :initarg :records-processed :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor %bulk-deployment-metrics-records-processed
                         :initform common-lisp:nil)
                        (invalid-input-records :initarg :invalid-input-records
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         %bulk-deployment-metrics-invalid-input-records
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'bulk-deployment-metrics 'make-bulk-deployment-metrics))
 (common-lisp:defun make-bulk-deployment-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key retry-attempts records-processed
                     invalid-input-records)
   (common-lisp:apply #'common-lisp:make-instance 'bulk-deployment-metrics
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bulk-deployment-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bulk-deployment-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invalid-input-records))
      (common-lisp:list
       (common-lisp:cons "InvalidInputRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'records-processed))
      (common-lisp:list
       (common-lisp:cons "RecordsProcessed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retry-attempts))
      (common-lisp:list
       (common-lisp:cons "RetryAttempts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bulk-deployment-metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bulk-deployment-result common-lisp:nil
                       ((group-arn :initarg :group-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %bulk-deployment-result-group-arn :initform
                         common-lisp:nil)
                        (error-message :initarg :error-message :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %bulk-deployment-result-error-message :initform
                         common-lisp:nil)
                        (error-details :initarg :error-details :type
                         (common-lisp:or error-details common-lisp:null)
                         :accessor %bulk-deployment-result-error-details
                         :initform common-lisp:nil)
                        (deployment-type :initarg :deployment-type :type
                         (common-lisp:or deployment-type common-lisp:null)
                         :accessor %bulk-deployment-result-deployment-type
                         :initform common-lisp:nil)
                        (deployment-status :initarg :deployment-status :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %bulk-deployment-result-deployment-status :initform
                         common-lisp:nil)
                        (deployment-id :initarg :deployment-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %bulk-deployment-result-deployment-id :initform
                         common-lisp:nil)
                        (deployment-arn :initarg :deployment-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %bulk-deployment-result-deployment-arn :initform
                         common-lisp:nil)
                        (created-at :initarg :created-at :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %bulk-deployment-result-created-at :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'bulk-deployment-result 'make-bulk-deployment-result))
 (common-lisp:defun make-bulk-deployment-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-arn error-message error-details
                     deployment-type deployment-status deployment-id
                     deployment-arn created-at)
   (common-lisp:apply #'common-lisp:make-instance 'bulk-deployment-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bulk-deployment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bulk-deployment-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-arn))
      (common-lisp:list
       (common-lisp:cons "DeploymentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-type))
      (common-lisp:list
       (common-lisp:cons "DeploymentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-details))
      (common-lisp:list
       (common-lisp:cons "ErrorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-arn))
      (common-lisp:list
       (common-lisp:cons "GroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bulk-deployment-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bulk-deployment-results ()
   '(trivial-types:proper-list bulk-deployment-result))
 (common-lisp:defun |make-bulk-deployment-results|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bulk-deployment-result))
   aws-sdk/generator/shape::members))
(common-lisp:deftype bulk-deployment-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype bulk-deployments ()
   '(trivial-types:proper-list bulk-deployment))
 (common-lisp:defun |make-bulk-deployments|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bulk-deployment))
   aws-sdk/generator/shape::members))
(common-lisp:deftype configuration-sync-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass connectivity-info common-lisp:nil
                       ((port-number :initarg :port-number :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor %connectivity-info-port-number :initform
                         common-lisp:nil)
                        (metadata :initarg :metadata :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %connectivity-info-metadata :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %connectivity-info-id :initform common-lisp:nil)
                        (host-address :initarg :host-address :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %connectivity-info-host-address :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'connectivity-info 'make-connectivity-info))
 (common-lisp:defun make-connectivity-info
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key port-number metadata id host-address)
   (common-lisp:apply #'common-lisp:make-instance 'connectivity-info
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input connectivity-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input connectivity-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-address))
      (common-lisp:list
       (common-lisp:cons "HostAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port-number))
      (common-lisp:list
       (common-lisp:cons "PortNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input connectivity-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass connector common-lisp:nil
                       ((parameters :initarg :parameters :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor %connector-parameters :initform
                         common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %connector-id :initform
                         (common-lisp:error ":id is required"))
                        (connector-arn :initarg :connector-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %connector-connector-arn :initform
                         (common-lisp:error ":connector-arn is required"))))
 (common-lisp:export (common-lisp:list 'connector 'make-connector))
 (common-lisp:defun make-connector
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key parameters id connector-arn)
   (common-lisp:apply #'common-lisp:make-instance 'connector
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input connector))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input connector))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connector-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parameters))
      (common-lisp:list
       (common-lisp:cons "Parameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input connector))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass connector-definition-version common-lisp:nil
                       ((connectors :initarg :connectors :type
                         (common-lisp:or |__listOfConnector| common-lisp:null)
                         :accessor %connector-definition-version-connectors
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'connector-definition-version
                    'make-connector-definition-version))
 (common-lisp:defun make-connector-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key connectors)
   (common-lisp:apply #'common-lisp:make-instance 'connector-definition-version
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connector-definition-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connector-definition-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connectors))
      (common-lisp:list
       (common-lisp:cons "Connectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connector-definition-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass core common-lisp:nil
                       ((thing-arn :initarg :thing-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %core-thing-arn :initform
                         (common-lisp:error ":thing-arn is required"))
                        (sync-shadow :initarg :sync-shadow :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor %core-sync-shadow :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %core-id :initform
                         (common-lisp:error ":id is required"))
                        (certificate-arn :initarg :certificate-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %core-certificate-arn :initform
                         (common-lisp:error ":certificate-arn is required"))))
 (common-lisp:export (common-lisp:list 'core 'make-core))
 (common-lisp:defun make-core
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key thing-arn sync-shadow id certificate-arn)
   (common-lisp:apply #'common-lisp:make-instance 'core
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input core))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input core))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "CertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sync-shadow))
      (common-lisp:list
       (common-lisp:cons "SyncShadow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-arn))
      (common-lisp:list
       (common-lisp:cons "ThingArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input core))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass core-definition-version common-lisp:nil
                       ((cores :initarg :cores :type
                         (common-lisp:or |__listOfCore| common-lisp:null)
                         :accessor %core-definition-version-cores :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'core-definition-version 'make-core-definition-version))
 (common-lisp:defun make-core-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key cores)
   (common-lisp:apply #'common-lisp:make-instance 'core-definition-version
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          core-definition-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          core-definition-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cores))
      (common-lisp:list
       (common-lisp:cons "Cores"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          core-definition-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-connector-definition-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-connector-definition-request-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-request-name :initform
                         common-lisp:nil)
                        (initial-version :initarg :initial-version :type
                         (common-lisp:or connector-definition-version
                                         common-lisp:null)
                         :accessor
                         %create-connector-definition-request-initial-version
                         :initform common-lisp:nil)
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-connector-definition-request
                    'make-create-connector-definition-request))
 (common-lisp:defun make-create-connector-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name initial-version
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-connector-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-connector-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-connector-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initial-version))
      (common-lisp:list
       (common-lisp:cons "InitialVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-connector-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-connector-definition-response common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-connector-definition-response
                    'make-create-connector-definition-response))
 (common-lisp:defun make-create-connector-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name latest-version-arn latest-version
                     last-updated-timestamp id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-connector-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-connector-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-connector-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-connector-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-connector-definition-version-request
                       common-lisp:nil
                       ((connectors :initarg :connectors :type
                         (common-lisp:or |__listOfConnector| common-lisp:null)
                         :accessor
                         %create-connector-definition-version-request-connectors
                         :initform common-lisp:nil)
                        (connector-definition-id :initarg
                         :connector-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-version-request-connector-definition-id
                         :initform
                         (common-lisp:error
                          ":connector-definition-id is required"))
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-version-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-connector-definition-version-request
                    'make-create-connector-definition-version-request))
 (common-lisp:defun make-create-connector-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key connectors connector-definition-id
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-connector-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-connector-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-connector-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connectors))
      (common-lisp:list
       (common-lisp:cons "Connectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-connector-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-connector-definition-version-response
                       common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-version-response-version
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-version-response-id
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-connector-definition-version-response-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-connector-definition-version-response
                    'make-create-connector-definition-version-response))
 (common-lisp:defun make-create-connector-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-connector-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-connector-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-connector-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-connector-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-core-definition-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-core-definition-request-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-request-name :initform
                         common-lisp:nil)
                        (initial-version :initarg :initial-version :type
                         (common-lisp:or core-definition-version
                                         common-lisp:null)
                         :accessor
                         %create-core-definition-request-initial-version
                         :initform common-lisp:nil)
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-core-definition-request
                    'make-create-core-definition-request))
 (common-lisp:defun make-create-core-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name initial-version
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-core-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-core-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-core-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initial-version))
      (common-lisp:list
       (common-lisp:cons "InitialVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-core-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-core-definition-response common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-core-definition-response
                    'make-create-core-definition-response))
 (common-lisp:defun make-create-core-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name latest-version-arn latest-version
                     last-updated-timestamp id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-core-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-core-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-core-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-core-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-core-definition-version-request common-lisp:nil
                       ((cores :initarg :cores :type
                         (common-lisp:or |__listOfCore| common-lisp:null)
                         :accessor
                         %create-core-definition-version-request-cores
                         :initform common-lisp:nil)
                        (core-definition-id :initarg :core-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-version-request-core-definition-id
                         :initform
                         (common-lisp:error ":core-definition-id is required"))
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-version-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-core-definition-version-request
                    'make-create-core-definition-version-request))
 (common-lisp:defun make-create-core-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key cores core-definition-id
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-core-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-core-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-core-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cores))
      (common-lisp:list
       (common-lisp:cons "Cores"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-core-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-core-definition-version-response common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-version-response-version
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-version-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-core-definition-version-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-core-definition-version-response
                    'make-create-core-definition-version-response))
 (common-lisp:defun make-create-core-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-core-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-core-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-core-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-core-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-deployment-request common-lisp:nil
                       ((group-version-id :initarg :group-version-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-deployment-request-group-version-id :initform
                         common-lisp:nil)
                        (group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-deployment-request-group-id :initform
                         (common-lisp:error ":group-id is required"))
                        (deployment-type :initarg :deployment-type :type
                         (common-lisp:or deployment-type common-lisp:null)
                         :accessor %create-deployment-request-deployment-type
                         :initform
                         (common-lisp:error ":deployment-type is required"))
                        (deployment-id :initarg :deployment-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-deployment-request-deployment-id :initform
                         common-lisp:nil)
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-deployment-request-amzn-client-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-request
                    'make-create-deployment-request))
 (common-lisp:defun make-create-deployment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-version-id group-id deployment-type
                     deployment-id amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance 'create-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-type))
      (common-lisp:list
       (common-lisp:cons "DeploymentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-version-id))
      (common-lisp:list
       (common-lisp:cons "GroupVersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-deployment-response common-lisp:nil
                       ((deployment-id :initarg :deployment-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-deployment-response-deployment-id :initform
                         common-lisp:nil)
                        (deployment-arn :initarg :deployment-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-deployment-response-deployment-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-response
                    'make-create-deployment-response))
 (common-lisp:defun make-create-deployment-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key deployment-id deployment-arn)
   (common-lisp:apply #'common-lisp:make-instance 'create-deployment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-arn))
      (common-lisp:list
       (common-lisp:cons "DeploymentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-device-definition-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-device-definition-request-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-request-name :initform
                         common-lisp:nil)
                        (initial-version :initarg :initial-version :type
                         (common-lisp:or device-definition-version
                                         common-lisp:null)
                         :accessor
                         %create-device-definition-request-initial-version
                         :initform common-lisp:nil)
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-device-definition-request
                    'make-create-device-definition-request))
 (common-lisp:defun make-create-device-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name initial-version
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-device-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-device-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-device-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initial-version))
      (common-lisp:list
       (common-lisp:cons "InitialVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-device-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-device-definition-response common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-device-definition-response
                    'make-create-device-definition-response))
 (common-lisp:defun make-create-device-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name latest-version-arn latest-version
                     last-updated-timestamp id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-device-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-device-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-device-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-device-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-device-definition-version-request common-lisp:nil
                       ((devices :initarg :devices :type
                         (common-lisp:or |__listOfDevice| common-lisp:null)
                         :accessor
                         %create-device-definition-version-request-devices
                         :initform common-lisp:nil)
                        (device-definition-id :initarg :device-definition-id
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %create-device-definition-version-request-device-definition-id
                         :initform
                         (common-lisp:error
                          ":device-definition-id is required"))
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-version-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-device-definition-version-request
                    'make-create-device-definition-version-request))
 (common-lisp:defun make-create-device-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key devices device-definition-id
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-device-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-device-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-device-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'devices))
      (common-lisp:list
       (common-lisp:cons "Devices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-device-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-device-definition-version-response
                       common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-version-response-version
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-version-response-id
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-device-definition-version-response-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-device-definition-version-response
                    'make-create-device-definition-version-response))
 (common-lisp:defun make-create-device-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-device-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-device-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-device-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-device-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-function-definition-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-function-definition-request-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-request-name :initform
                         common-lisp:nil)
                        (initial-version :initarg :initial-version :type
                         (common-lisp:or function-definition-version
                                         common-lisp:null)
                         :accessor
                         %create-function-definition-request-initial-version
                         :initform common-lisp:nil)
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-function-definition-request
                    'make-create-function-definition-request))
 (common-lisp:defun make-create-function-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name initial-version
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-function-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-function-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-function-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initial-version))
      (common-lisp:list
       (common-lisp:cons "InitialVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-function-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-function-definition-response common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-function-definition-response
                    'make-create-function-definition-response))
 (common-lisp:defun make-create-function-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name latest-version-arn latest-version
                     last-updated-timestamp id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-function-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-function-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-function-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-function-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-function-definition-version-request
                       common-lisp:nil
                       ((functions :initarg :functions :type
                         (common-lisp:or |__listOfFunction| common-lisp:null)
                         :accessor
                         %create-function-definition-version-request-functions
                         :initform common-lisp:nil)
                        (function-definition-id :initarg
                         :function-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-version-request-function-definition-id
                         :initform
                         (common-lisp:error
                          ":function-definition-id is required"))
                        (default-config :initarg :default-config :type
                         (common-lisp:or function-default-config
                                         common-lisp:null)
                         :accessor
                         %create-function-definition-version-request-default-config
                         :initform common-lisp:nil)
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-version-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-function-definition-version-request
                    'make-create-function-definition-version-request))
 (common-lisp:defun make-create-function-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key functions function-definition-id
                     default-config amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-function-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-function-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-function-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-config))
      (common-lisp:list
       (common-lisp:cons "DefaultConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'functions))
      (common-lisp:list
       (common-lisp:cons "Functions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-function-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-function-definition-version-response
                       common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-version-response-version
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-version-response-id
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-function-definition-version-response-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-function-definition-version-response
                    'make-create-function-definition-version-response))
 (common-lisp:defun make-create-function-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-function-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-function-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-function-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-function-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-group-certificate-authority-request
                       common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-certificate-authority-request-group-id
                         :initform (common-lisp:error ":group-id is required"))
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-certificate-authority-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-group-certificate-authority-request
                    'make-create-group-certificate-authority-request))
 (common-lisp:defun make-create-group-certificate-authority-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-group-certificate-authority-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-group-certificate-authority-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-group-certificate-authority-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-group-certificate-authority-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-group-certificate-authority-response
                       common-lisp:nil
                       ((group-certificate-authority-arn :initarg
                         :group-certificate-authority-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-certificate-authority-response-group-certificate-authority-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-group-certificate-authority-response
                    'make-create-group-certificate-authority-response))
 (common-lisp:defun make-create-group-certificate-authority-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-certificate-authority-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-group-certificate-authority-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-group-certificate-authority-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-group-certificate-authority-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'group-certificate-authority-arn))
      (common-lisp:list
       (common-lisp:cons "GroupCertificateAuthorityArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-group-certificate-authority-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-group-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-group-request-tags :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-request-name :initform
                         (common-lisp:error ":name is required"))
                        (initial-version :initarg :initial-version :type
                         (common-lisp:or group-version common-lisp:null)
                         :accessor %create-group-request-initial-version
                         :initform common-lisp:nil)
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-request-amzn-client-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-group-request 'make-create-group-request))
 (common-lisp:defun make-create-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name initial-version
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance 'create-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initial-version))
      (common-lisp:list
       (common-lisp:cons "InitialVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-group-response common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-response-name :initform common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-response-latest-version-arn :initform
                         common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-response-latest-version :initform
                         common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-response-id :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-response-creation-timestamp :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-group-response 'make-create-group-response))
 (common-lisp:defun make-create-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name latest-version-arn latest-version
                     last-updated-timestamp id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance 'create-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-group-version-request common-lisp:nil
                       ((subscription-definition-version-arn :initarg
                         :subscription-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-request-subscription-definition-version-arn
                         :initform common-lisp:nil)
                        (resource-definition-version-arn :initarg
                         :resource-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-request-resource-definition-version-arn
                         :initform common-lisp:nil)
                        (logger-definition-version-arn :initarg
                         :logger-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-request-logger-definition-version-arn
                         :initform common-lisp:nil)
                        (group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-request-group-id :initform
                         (common-lisp:error ":group-id is required"))
                        (function-definition-version-arn :initarg
                         :function-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-request-function-definition-version-arn
                         :initform common-lisp:nil)
                        (device-definition-version-arn :initarg
                         :device-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-request-device-definition-version-arn
                         :initform common-lisp:nil)
                        (core-definition-version-arn :initarg
                         :core-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-request-core-definition-version-arn
                         :initform common-lisp:nil)
                        (connector-definition-version-arn :initarg
                         :connector-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-request-connector-definition-version-arn
                         :initform common-lisp:nil)
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-group-version-request
                    'make-create-group-version-request))
 (common-lisp:defun make-create-group-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subscription-definition-version-arn
                     resource-definition-version-arn
                     logger-definition-version-arn group-id
                     function-definition-version-arn
                     device-definition-version-arn core-definition-version-arn
                     connector-definition-version-arn amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance 'create-group-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-group-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-group-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'connector-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectorDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'core-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "CoreDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "DeviceDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'function-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "FunctionDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logger-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "LoggerDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subscription-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-group-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-group-version-response common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-response-version :initform
                         common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-group-version-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-group-version-response
                    'make-create-group-version-response))
 (common-lisp:defun make-create-group-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-group-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-group-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-group-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-group-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-logger-definition-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-logger-definition-request-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-request-name :initform
                         common-lisp:nil)
                        (initial-version :initarg :initial-version :type
                         (common-lisp:or logger-definition-version
                                         common-lisp:null)
                         :accessor
                         %create-logger-definition-request-initial-version
                         :initform common-lisp:nil)
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-logger-definition-request
                    'make-create-logger-definition-request))
 (common-lisp:defun make-create-logger-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name initial-version
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-logger-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-logger-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-logger-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initial-version))
      (common-lisp:list
       (common-lisp:cons "InitialVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-logger-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-logger-definition-response common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-logger-definition-response
                    'make-create-logger-definition-response))
 (common-lisp:defun make-create-logger-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name latest-version-arn latest-version
                     last-updated-timestamp id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-logger-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-logger-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-logger-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-logger-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-logger-definition-version-request common-lisp:nil
                       ((loggers :initarg :loggers :type
                         (common-lisp:or |__listOfLogger| common-lisp:null)
                         :accessor
                         %create-logger-definition-version-request-loggers
                         :initform common-lisp:nil)
                        (logger-definition-id :initarg :logger-definition-id
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %create-logger-definition-version-request-logger-definition-id
                         :initform
                         (common-lisp:error
                          ":logger-definition-id is required"))
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-version-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-logger-definition-version-request
                    'make-create-logger-definition-version-request))
 (common-lisp:defun make-create-logger-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key loggers logger-definition-id
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-logger-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-logger-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-logger-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'loggers))
      (common-lisp:list
       (common-lisp:cons "Loggers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-logger-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-logger-definition-version-response
                       common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-version-response-version
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-version-response-id
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-logger-definition-version-response-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-logger-definition-version-response
                    'make-create-logger-definition-version-response))
 (common-lisp:defun make-create-logger-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-logger-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-logger-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-logger-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-logger-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-resource-definition-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-resource-definition-request-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-request-name :initform
                         common-lisp:nil)
                        (initial-version :initarg :initial-version :type
                         (common-lisp:or resource-definition-version
                                         common-lisp:null)
                         :accessor
                         %create-resource-definition-request-initial-version
                         :initform common-lisp:nil)
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-resource-definition-request
                    'make-create-resource-definition-request))
 (common-lisp:defun make-create-resource-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name initial-version
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-resource-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initial-version))
      (common-lisp:list
       (common-lisp:cons "InitialVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-resource-definition-response common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-resource-definition-response
                    'make-create-resource-definition-response))
 (common-lisp:defun make-create-resource-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name latest-version-arn latest-version
                     last-updated-timestamp id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-resource-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-resource-definition-version-request
                       common-lisp:nil
                       ((resources :initarg :resources :type
                         (common-lisp:or |__listOfResource| common-lisp:null)
                         :accessor
                         %create-resource-definition-version-request-resources
                         :initform common-lisp:nil)
                        (resource-definition-id :initarg
                         :resource-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-version-request-resource-definition-id
                         :initform
                         (common-lisp:error
                          ":resource-definition-id is required"))
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-version-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-resource-definition-version-request
                    'make-create-resource-definition-version-request))
 (common-lisp:defun make-create-resource-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resources resource-definition-id
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-resource-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-resource-definition-version-response
                       common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-version-response-version
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-version-response-id
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-resource-definition-version-response-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-resource-definition-version-response
                    'make-create-resource-definition-version-response))
 (common-lisp:defun make-create-resource-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-resource-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-software-update-job-request common-lisp:nil
                       ((update-targets-operating-system :initarg
                         :update-targets-operating-system :type
                         (common-lisp:or update-targets-operating-system
                                         common-lisp:null)
                         :accessor
                         %create-software-update-job-request-update-targets-operating-system
                         :initform
                         (common-lisp:error
                          ":update-targets-operating-system is required"))
                        (update-targets-architecture :initarg
                         :update-targets-architecture :type
                         (common-lisp:or update-targets-architecture
                                         common-lisp:null)
                         :accessor
                         %create-software-update-job-request-update-targets-architecture
                         :initform
                         (common-lisp:error
                          ":update-targets-architecture is required"))
                        (update-targets :initarg :update-targets :type
                         (common-lisp:or update-targets common-lisp:null)
                         :accessor
                         %create-software-update-job-request-update-targets
                         :initform
                         (common-lisp:error ":update-targets is required"))
                        (update-agent-log-level :initarg
                         :update-agent-log-level :type
                         (common-lisp:or update-agent-log-level
                                         common-lisp:null)
                         :accessor
                         %create-software-update-job-request-update-agent-log-level
                         :initform common-lisp:nil)
                        (software-to-update :initarg :software-to-update :type
                         (common-lisp:or software-to-update common-lisp:null)
                         :accessor
                         %create-software-update-job-request-software-to-update
                         :initform
                         (common-lisp:error ":software-to-update is required"))
                        (s3url-signer-role :initarg :s3url-signer-role :type
                         (common-lisp:or s3url-signer-role common-lisp:null)
                         :accessor
                         %create-software-update-job-request-s3url-signer-role
                         :initform
                         (common-lisp:error ":s3url-signer-role is required"))
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-software-update-job-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-software-update-job-request
                    'make-create-software-update-job-request))
 (common-lisp:defun make-create-software-update-job-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key update-targets-operating-system
                     update-targets-architecture update-targets
                     update-agent-log-level software-to-update
                     s3url-signer-role amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-software-update-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-software-update-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-software-update-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url-signer-role))
      (common-lisp:list
       (common-lisp:cons "S3UrlSignerRole"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'software-to-update))
      (common-lisp:list
       (common-lisp:cons "SoftwareToUpdate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-agent-log-level))
      (common-lisp:list
       (common-lisp:cons "UpdateAgentLogLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-targets))
      (common-lisp:list
       (common-lisp:cons "UpdateTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-targets-architecture))
      (common-lisp:list
       (common-lisp:cons "UpdateTargetsArchitecture"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-targets-operating-system))
      (common-lisp:list
       (common-lisp:cons "UpdateTargetsOperatingSystem"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-software-update-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-software-update-job-response common-lisp:nil
                       ((platform-software-version :initarg
                         :platform-software-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-software-update-job-response-platform-software-version
                         :initform common-lisp:nil)
                        (iot-job-id :initarg :iot-job-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-software-update-job-response-iot-job-id
                         :initform common-lisp:nil)
                        (iot-job-arn :initarg :iot-job-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-software-update-job-response-iot-job-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-software-update-job-response
                    'make-create-software-update-job-response))
 (common-lisp:defun make-create-software-update-job-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key platform-software-version iot-job-id
                     iot-job-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-software-update-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-software-update-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-software-update-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-job-arn))
      (common-lisp:list
       (common-lisp:cons "IotJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-job-id))
      (common-lisp:list
       (common-lisp:cons "IotJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-software-version))
      (common-lisp:list
       (common-lisp:cons "PlatformSoftwareVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-software-update-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-subscription-definition-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-subscription-definition-request-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-request-name :initform
                         common-lisp:nil)
                        (initial-version :initarg :initial-version :type
                         (common-lisp:or subscription-definition-version
                                         common-lisp:null)
                         :accessor
                         %create-subscription-definition-request-initial-version
                         :initform common-lisp:nil)
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-subscription-definition-request
                    'make-create-subscription-definition-request))
 (common-lisp:defun make-create-subscription-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name initial-version
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-subscription-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initial-version))
      (common-lisp:list
       (common-lisp:cons "InitialVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-subscription-definition-response common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-response-name
                         :initform common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-subscription-definition-response
                    'make-create-subscription-definition-response))
 (common-lisp:defun make-create-subscription-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name latest-version-arn latest-version
                     last-updated-timestamp id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-subscription-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-subscription-definition-version-request
                       common-lisp:nil
                       ((subscriptions :initarg :subscriptions :type
                         (common-lisp:or |__listOfSubscription|
                                         common-lisp:null)
                         :accessor
                         %create-subscription-definition-version-request-subscriptions
                         :initform common-lisp:nil)
                        (subscription-definition-id :initarg
                         :subscription-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-version-request-subscription-definition-id
                         :initform
                         (common-lisp:error
                          ":subscription-definition-id is required"))
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-version-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-subscription-definition-version-request
                    'make-create-subscription-definition-version-request))
 (common-lisp:defun make-create-subscription-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subscriptions subscription-definition-id
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-subscription-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-definition-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscriptions))
      (common-lisp:list
       (common-lisp:cons "Subscriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-subscription-definition-version-response
                       common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-version-response-version
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-version-response-id
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %create-subscription-definition-version-response-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-subscription-definition-version-response
                    'make-create-subscription-definition-version-response))
 (common-lisp:defun make-create-subscription-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-subscription-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass definition-information common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %definition-information-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %definition-information-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %definition-information-latest-version-arn :initform
                         common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %definition-information-latest-version :initform
                         common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %definition-information-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %definition-information-id :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %definition-information-creation-timestamp :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %definition-information-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'definition-information 'make-definition-information))
 (common-lisp:defun make-definition-information
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name latest-version-arn
                     latest-version last-updated-timestamp id
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance 'definition-information
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          definition-information))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          definition-information))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          definition-information))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-connector-definition-request common-lisp:nil
                       ((connector-definition-id :initarg
                         :connector-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %delete-connector-definition-request-connector-definition-id
                         :initform
                         (common-lisp:error
                          ":connector-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-connector-definition-request
                    'make-delete-connector-definition-request))
 (common-lisp:defun make-delete-connector-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key connector-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-connector-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-connector-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-connector-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-connector-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-connector-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-connector-definition-response
                    'make-delete-connector-definition-response))
 (common-lisp:defun make-delete-connector-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-connector-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-connector-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-connector-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-connector-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-core-definition-request common-lisp:nil
                       ((core-definition-id :initarg :core-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %delete-core-definition-request-core-definition-id
                         :initform
                         (common-lisp:error
                          ":core-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-core-definition-request
                    'make-delete-core-definition-request))
 (common-lisp:defun make-delete-core-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key core-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-core-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-core-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-core-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-core-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-core-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-core-definition-response
                    'make-delete-core-definition-response))
 (common-lisp:defun make-delete-core-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-core-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-core-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-core-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-core-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-device-definition-request common-lisp:nil
                       ((device-definition-id :initarg :device-definition-id
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %delete-device-definition-request-device-definition-id
                         :initform
                         (common-lisp:error
                          ":device-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-device-definition-request
                    'make-delete-device-definition-request))
 (common-lisp:defun make-delete-device-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key device-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-device-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-device-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-device-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-device-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-device-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-device-definition-response
                    'make-delete-device-definition-response))
 (common-lisp:defun make-delete-device-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-device-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-device-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-device-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-device-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-function-definition-request common-lisp:nil
                       ((function-definition-id :initarg
                         :function-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %delete-function-definition-request-function-definition-id
                         :initform
                         (common-lisp:error
                          ":function-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-function-definition-request
                    'make-delete-function-definition-request))
 (common-lisp:defun make-delete-function-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key function-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-function-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-function-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-function-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-function-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-function-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-function-definition-response
                    'make-delete-function-definition-response))
 (common-lisp:defun make-delete-function-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-function-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-function-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-function-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-function-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-group-request common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %delete-group-request-group-id :initform
                         (common-lisp:error ":group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-group-request 'make-delete-group-request))
 (common-lisp:defun make-delete-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-group-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-group-response 'make-delete-group-response))
 (common-lisp:defun make-delete-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-logger-definition-request common-lisp:nil
                       ((logger-definition-id :initarg :logger-definition-id
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %delete-logger-definition-request-logger-definition-id
                         :initform
                         (common-lisp:error
                          ":logger-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-logger-definition-request
                    'make-delete-logger-definition-request))
 (common-lisp:defun make-delete-logger-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key logger-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-logger-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-logger-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-logger-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-logger-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-logger-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-logger-definition-response
                    'make-delete-logger-definition-response))
 (common-lisp:defun make-delete-logger-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-logger-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-logger-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-logger-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-logger-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-definition-request common-lisp:nil
                       ((resource-definition-id :initarg
                         :resource-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %delete-resource-definition-request-resource-definition-id
                         :initform
                         (common-lisp:error
                          ":resource-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-resource-definition-request
                    'make-delete-resource-definition-request))
 (common-lisp:defun make-delete-resource-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-resource-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-resource-definition-response
                    'make-delete-resource-definition-response))
 (common-lisp:defun make-delete-resource-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-resource-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-subscription-definition-request common-lisp:nil
                       ((subscription-definition-id :initarg
                         :subscription-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %delete-subscription-definition-request-subscription-definition-id
                         :initform
                         (common-lisp:error
                          ":subscription-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-subscription-definition-request
                    'make-delete-subscription-definition-request))
 (common-lisp:defun make-delete-subscription-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subscription-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-subscription-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-subscription-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-subscription-definition-response
                    'make-delete-subscription-definition-response))
 (common-lisp:defun make-delete-subscription-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-subscription-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deployment common-lisp:nil
                       ((group-arn :initarg :group-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %deployment-group-arn :initform common-lisp:nil)
                        (deployment-type :initarg :deployment-type :type
                         (common-lisp:or deployment-type common-lisp:null)
                         :accessor %deployment-deployment-type :initform
                         common-lisp:nil)
                        (deployment-id :initarg :deployment-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %deployment-deployment-id :initform common-lisp:nil)
                        (deployment-arn :initarg :deployment-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %deployment-deployment-arn :initform common-lisp:nil)
                        (created-at :initarg :created-at :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %deployment-created-at :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'deployment 'make-deployment))
 (common-lisp:defun make-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-arn deployment-type deployment-id
                     deployment-arn created-at)
   (common-lisp:apply #'common-lisp:make-instance 'deployment
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-arn))
      (common-lisp:list
       (common-lisp:cons "DeploymentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-type))
      (common-lisp:list
       (common-lisp:cons "DeploymentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-arn))
      (common-lisp:list
       (common-lisp:cons "GroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment))
   common-lisp:nil))
(common-lisp:deftype deployment-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype deployments () '(trivial-types:proper-list deployment))
 (common-lisp:defun |make-deployments|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass device common-lisp:nil
                       ((thing-arn :initarg :thing-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %device-thing-arn :initform
                         (common-lisp:error ":thing-arn is required"))
                        (sync-shadow :initarg :sync-shadow :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor %device-sync-shadow :initform
                         common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %device-id :initform
                         (common-lisp:error ":id is required"))
                        (certificate-arn :initarg :certificate-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %device-certificate-arn :initform
                         (common-lisp:error ":certificate-arn is required"))))
 (common-lisp:export (common-lisp:list 'device 'make-device))
 (common-lisp:defun make-device
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key thing-arn sync-shadow id certificate-arn)
   (common-lisp:apply #'common-lisp:make-instance 'device
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "CertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sync-shadow))
      (common-lisp:list
       (common-lisp:cons "SyncShadow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-arn))
      (common-lisp:list
       (common-lisp:cons "ThingArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input device))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass device-definition-version common-lisp:nil
                       ((devices :initarg :devices :type
                         (common-lisp:or |__listOfDevice| common-lisp:null)
                         :accessor %device-definition-version-devices :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'device-definition-version
                    'make-device-definition-version))
 (common-lisp:defun make-device-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key devices)
   (common-lisp:apply #'common-lisp:make-instance 'device-definition-version
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          device-definition-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          device-definition-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'devices))
      (common-lisp:list
       (common-lisp:cons "Devices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          device-definition-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-role-from-group-request common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %disassociate-role-from-group-request-group-id
                         :initform
                         (common-lisp:error ":group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'disassociate-role-from-group-request
                    'make-disassociate-role-from-group-request))
 (common-lisp:defun make-disassociate-role-from-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-role-from-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-role-from-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-role-from-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-role-from-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-role-from-group-response common-lisp:nil
                       ((disassociated-at :initarg :disassociated-at :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %disassociate-role-from-group-response-disassociated-at
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disassociate-role-from-group-response
                    'make-disassociate-role-from-group-response))
 (common-lisp:defun make-disassociate-role-from-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key disassociated-at)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-role-from-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-role-from-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-role-from-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disassociated-at))
      (common-lisp:list
       (common-lisp:cons "DisassociatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-role-from-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-service-role-from-account-request
                       common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'disassociate-service-role-from-account-request
                    'make-disassociate-service-role-from-account-request))
 (common-lisp:defun make-disassociate-service-role-from-account-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-service-role-from-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-service-role-from-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-service-role-from-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-service-role-from-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-service-role-from-account-response
                       common-lisp:nil
                       ((disassociated-at :initarg :disassociated-at :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %disassociate-service-role-from-account-response-disassociated-at
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disassociate-service-role-from-account-response
                    'make-disassociate-service-role-from-account-response))
 (common-lisp:defun make-disassociate-service-role-from-account-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key disassociated-at)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-service-role-from-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-service-role-from-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-service-role-from-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disassociated-at))
      (common-lisp:list
       (common-lisp:cons "DisassociatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-service-role-from-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass empty common-lisp:nil common-lisp:nil)
 (common-lisp:export (common-lisp:list 'empty 'make-empty))
 (common-lisp:defun make-empty
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'empty
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input empty))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input empty))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input empty))
   common-lisp:nil))
(common-lisp:deftype encoding-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass error-detail common-lisp:nil
                       ((detailed-error-message :initarg
                         :detailed-error-message :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %error-detail-detailed-error-message :initform
                         common-lisp:nil)
                        (detailed-error-code :initarg :detailed-error-code
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor %error-detail-detailed-error-code :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'error-detail 'make-error-detail))
 (common-lisp:defun make-error-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key detailed-error-message
                     detailed-error-code)
   (common-lisp:apply #'common-lisp:make-instance 'error-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input error-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input error-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detailed-error-code))
      (common-lisp:list
       (common-lisp:cons "DetailedErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detailed-error-message))
      (common-lisp:list
       (common-lisp:cons "DetailedErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input error-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype error-details ()
   '(trivial-types:proper-list error-detail))
 (common-lisp:defun |make-error-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list error-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass function common-lisp:nil
                       ((id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %function-id :initform
                         (common-lisp:error ":id is required"))
                        (function-configuration :initarg
                         :function-configuration :type
                         (common-lisp:or function-configuration
                                         common-lisp:null)
                         :accessor %function-function-configuration :initform
                         common-lisp:nil)
                        (function-arn :initarg :function-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %function-function-arn :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'function 'make-function))
 (common-lisp:defun make-function
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key id function-configuration function-arn)
   (common-lisp:apply #'common-lisp:make-instance 'function
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input function))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input function))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'function-arn))
      (common-lisp:list
       (common-lisp:cons "FunctionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'function-configuration))
      (common-lisp:list
       (common-lisp:cons "FunctionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input function))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass function-configuration common-lisp:nil
                       ((function-runtime-override :initarg
                         :function-runtime-override :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %function-configuration-function-runtime-override
                         :initform common-lisp:nil)
                        (timeout :initarg :timeout :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor %function-configuration-timeout :initform
                         common-lisp:nil)
                        (pinned :initarg :pinned :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor %function-configuration-pinned :initform
                         common-lisp:nil)
                        (memory-size :initarg :memory-size :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor %function-configuration-memory-size
                         :initform common-lisp:nil)
                        (executable :initarg :executable :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %function-configuration-executable :initform
                         common-lisp:nil)
                        (exec-args :initarg :exec-args :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %function-configuration-exec-args :initform
                         common-lisp:nil)
                        (environment :initarg :environment :type
                         (common-lisp:or function-configuration-environment
                                         common-lisp:null)
                         :accessor %function-configuration-environment
                         :initform common-lisp:nil)
                        (encoding-type :initarg :encoding-type :type
                         (common-lisp:or encoding-type common-lisp:null)
                         :accessor %function-configuration-encoding-type
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'function-configuration 'make-function-configuration))
 (common-lisp:defun make-function-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key function-runtime-override timeout pinned
                     memory-size executable exec-args environment
                     encoding-type)
   (common-lisp:apply #'common-lisp:make-instance 'function-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          function-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          function-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encoding-type))
      (common-lisp:list
       (common-lisp:cons "EncodingType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment))
      (common-lisp:list
       (common-lisp:cons "Environment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'exec-args))
      (common-lisp:list
       (common-lisp:cons "ExecArgs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'executable))
      (common-lisp:list
       (common-lisp:cons "Executable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-size))
      (common-lisp:list
       (common-lisp:cons "MemorySize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pinned))
      (common-lisp:list
       (common-lisp:cons "Pinned"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout))
      (common-lisp:list
       (common-lisp:cons "Timeout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'function-runtime-override))
      (common-lisp:list
       (common-lisp:cons "FunctionRuntimeOverride"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          function-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass function-configuration-environment common-lisp:nil
                       ((variables :initarg :variables :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         %function-configuration-environment-variables
                         :initform common-lisp:nil)
                        (resource-access-policies :initarg
                         :resource-access-policies :type
                         (common-lisp:or |__listOfResourceAccessPolicy|
                                         common-lisp:null)
                         :accessor
                         %function-configuration-environment-resource-access-policies
                         :initform common-lisp:nil)
                        (execution :initarg :execution :type
                         (common-lisp:or function-execution-config
                                         common-lisp:null)
                         :accessor
                         %function-configuration-environment-execution
                         :initform common-lisp:nil)
                        (access-sysfs :initarg :access-sysfs :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         %function-configuration-environment-access-sysfs
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'function-configuration-environment
                    'make-function-configuration-environment))
 (common-lisp:defun make-function-configuration-environment
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key variables resource-access-policies
                     execution access-sysfs)
   (common-lisp:apply #'common-lisp:make-instance
                      'function-configuration-environment
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          function-configuration-environment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          function-configuration-environment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-sysfs))
      (common-lisp:list
       (common-lisp:cons "AccessSysfs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution))
      (common-lisp:list
       (common-lisp:cons "Execution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-access-policies))
      (common-lisp:list
       (common-lisp:cons "ResourceAccessPolicies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variables))
      (common-lisp:list
       (common-lisp:cons "Variables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          function-configuration-environment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass function-default-config common-lisp:nil
                       ((execution :initarg :execution :type
                         (common-lisp:or function-default-execution-config
                                         common-lisp:null)
                         :accessor %function-default-config-execution :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'function-default-config 'make-function-default-config))
 (common-lisp:defun make-function-default-config
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key execution)
   (common-lisp:apply #'common-lisp:make-instance 'function-default-config
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          function-default-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          function-default-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution))
      (common-lisp:list
       (common-lisp:cons "Execution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          function-default-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass function-default-execution-config common-lisp:nil
                       ((run-as :initarg :run-as :type
                         (common-lisp:or function-run-as-config
                                         common-lisp:null)
                         :accessor %function-default-execution-config-run-as
                         :initform common-lisp:nil)
                        (isolation-mode :initarg :isolation-mode :type
                         (common-lisp:or function-isolation-mode
                                         common-lisp:null)
                         :accessor
                         %function-default-execution-config-isolation-mode
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'function-default-execution-config
                    'make-function-default-execution-config))
 (common-lisp:defun make-function-default-execution-config
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key run-as isolation-mode)
   (common-lisp:apply #'common-lisp:make-instance
                      'function-default-execution-config
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          function-default-execution-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          function-default-execution-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isolation-mode))
      (common-lisp:list
       (common-lisp:cons "IsolationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-as))
      (common-lisp:list
       (common-lisp:cons "RunAs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          function-default-execution-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass function-definition-version common-lisp:nil
                       ((functions :initarg :functions :type
                         (common-lisp:or |__listOfFunction| common-lisp:null)
                         :accessor %function-definition-version-functions
                         :initform common-lisp:nil)
                        (default-config :initarg :default-config :type
                         (common-lisp:or function-default-config
                                         common-lisp:null)
                         :accessor %function-definition-version-default-config
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'function-definition-version
                    'make-function-definition-version))
 (common-lisp:defun make-function-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key functions default-config)
   (common-lisp:apply #'common-lisp:make-instance 'function-definition-version
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          function-definition-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          function-definition-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-config))
      (common-lisp:list
       (common-lisp:cons "DefaultConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'functions))
      (common-lisp:list
       (common-lisp:cons "Functions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          function-definition-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass function-execution-config common-lisp:nil
                       ((run-as :initarg :run-as :type
                         (common-lisp:or function-run-as-config
                                         common-lisp:null)
                         :accessor %function-execution-config-run-as :initform
                         common-lisp:nil)
                        (isolation-mode :initarg :isolation-mode :type
                         (common-lisp:or function-isolation-mode
                                         common-lisp:null)
                         :accessor %function-execution-config-isolation-mode
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'function-execution-config
                    'make-function-execution-config))
 (common-lisp:defun make-function-execution-config
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key run-as isolation-mode)
   (common-lisp:apply #'common-lisp:make-instance 'function-execution-config
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          function-execution-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          function-execution-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isolation-mode))
      (common-lisp:list
       (common-lisp:cons "IsolationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-as))
      (common-lisp:list
       (common-lisp:cons "RunAs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          function-execution-config))
   common-lisp:nil))
(common-lisp:deftype function-isolation-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass function-run-as-config common-lisp:nil
                       ((uid :initarg :uid :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor %function-run-as-config-uid :initform
                         common-lisp:nil)
                        (gid :initarg :gid :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor %function-run-as-config-gid :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'function-run-as-config 'make-function-run-as-config))
 (common-lisp:defun make-function-run-as-config
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key uid gid)
   (common-lisp:apply #'common-lisp:make-instance 'function-run-as-config
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          function-run-as-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          function-run-as-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gid))
      (common-lisp:list
       (common-lisp:cons "Gid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uid))
      (common-lisp:list
       (common-lisp:cons "Uid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          function-run-as-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass general-error common-lisp:nil
                       ((message :initarg :message :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %general-error-message :initform common-lisp:nil)
                        (error-details :initarg :error-details :type
                         (common-lisp:or error-details common-lisp:null)
                         :accessor %general-error-error-details :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'general-error 'make-general-error))
 (common-lisp:defun make-general-error
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key message error-details)
   (common-lisp:apply #'common-lisp:make-instance 'general-error
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input general-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input general-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-details))
      (common-lisp:list
       (common-lisp:cons "ErrorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input general-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-associated-role-request common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-associated-role-request-group-id :initform
                         (common-lisp:error ":group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-associated-role-request
                    'make-get-associated-role-request))
 (common-lisp:defun make-get-associated-role-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-associated-role-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-associated-role-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-associated-role-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-associated-role-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-associated-role-response common-lisp:nil
                       ((role-arn :initarg :role-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-associated-role-response-role-arn :initform
                         common-lisp:nil)
                        (associated-at :initarg :associated-at :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-associated-role-response-associated-at :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-associated-role-response
                    'make-get-associated-role-response))
 (common-lisp:defun make-get-associated-role-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key role-arn associated-at)
   (common-lisp:apply #'common-lisp:make-instance 'get-associated-role-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-associated-role-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-associated-role-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'associated-at))
      (common-lisp:list
       (common-lisp:cons "AssociatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-associated-role-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-bulk-deployment-status-request common-lisp:nil
                       ((bulk-deployment-id :initarg :bulk-deployment-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-bulk-deployment-status-request-bulk-deployment-id
                         :initform
                         (common-lisp:error
                          ":bulk-deployment-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-bulk-deployment-status-request
                    'make-get-bulk-deployment-status-request))
 (common-lisp:defun make-get-bulk-deployment-status-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key bulk-deployment-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-bulk-deployment-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bulk-deployment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bulk-deployment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bulk-deployment-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-bulk-deployment-status-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %get-bulk-deployment-status-response-tags :initform
                         common-lisp:nil)
                        (error-message :initarg :error-message :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-bulk-deployment-status-response-error-message
                         :initform common-lisp:nil)
                        (error-details :initarg :error-details :type
                         (common-lisp:or error-details common-lisp:null)
                         :accessor
                         %get-bulk-deployment-status-response-error-details
                         :initform common-lisp:nil)
                        (created-at :initarg :created-at :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-bulk-deployment-status-response-created-at
                         :initform common-lisp:nil)
                        (bulk-deployment-status :initarg
                         :bulk-deployment-status :type
                         (common-lisp:or bulk-deployment-status
                                         common-lisp:null)
                         :accessor
                         %get-bulk-deployment-status-response-bulk-deployment-status
                         :initform common-lisp:nil)
                        (bulk-deployment-metrics :initarg
                         :bulk-deployment-metrics :type
                         (common-lisp:or bulk-deployment-metrics
                                         common-lisp:null)
                         :accessor
                         %get-bulk-deployment-status-response-bulk-deployment-metrics
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-bulk-deployment-status-response
                    'make-get-bulk-deployment-status-response))
 (common-lisp:defun make-get-bulk-deployment-status-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags error-message error-details
                     created-at bulk-deployment-status bulk-deployment-metrics)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-bulk-deployment-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bulk-deployment-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bulk-deployment-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bulk-deployment-metrics))
      (common-lisp:list
       (common-lisp:cons "BulkDeploymentMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bulk-deployment-status))
      (common-lisp:list
       (common-lisp:cons "BulkDeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-details))
      (common-lisp:list
       (common-lisp:cons "ErrorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bulk-deployment-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-connectivity-info-request common-lisp:nil
                       ((thing-name :initarg :thing-name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connectivity-info-request-thing-name :initform
                         (common-lisp:error ":thing-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-connectivity-info-request
                    'make-get-connectivity-info-request))
 (common-lisp:defun make-get-connectivity-info-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key thing-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-connectivity-info-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-connectivity-info-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-connectivity-info-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-connectivity-info-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-connectivity-info-response common-lisp:nil
                       ((message :initarg :message :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connectivity-info-response-message :initform
                         common-lisp:nil)
                        (connectivity-info :initarg :connectivity-info :type
                         (common-lisp:or |__listOfConnectivityInfo|
                                         common-lisp:null)
                         :accessor
                         %get-connectivity-info-response-connectivity-info
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-connectivity-info-response
                    'make-get-connectivity-info-response))
 (common-lisp:defun make-get-connectivity-info-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key message connectivity-info)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-connectivity-info-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-connectivity-info-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-connectivity-info-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connectivity-info))
      (common-lisp:list
       (common-lisp:cons "ConnectivityInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-connectivity-info-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-connector-definition-request common-lisp:nil
                       ((connector-definition-id :initarg
                         :connector-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-request-connector-definition-id
                         :initform
                         (common-lisp:error
                          ":connector-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-connector-definition-request
                    'make-get-connector-definition-request))
 (common-lisp:defun make-get-connector-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key connector-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-connector-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-connector-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-connector-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-connector-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-connector-definition-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %get-connector-definition-response-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-connector-definition-response
                    'make-get-connector-definition-response))
 (common-lisp:defun make-get-connector-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name latest-version-arn
                     latest-version last-updated-timestamp id
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-connector-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-connector-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-connector-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-connector-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-connector-definition-version-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-version-request-next-token
                         :initform common-lisp:nil)
                        (connector-definition-version-id :initarg
                         :connector-definition-version-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-version-request-connector-definition-version-id
                         :initform
                         (common-lisp:error
                          ":connector-definition-version-id is required"))
                        (connector-definition-id :initarg
                         :connector-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-version-request-connector-definition-id
                         :initform
                         (common-lisp:error
                          ":connector-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-connector-definition-version-request
                    'make-get-connector-definition-version-request))
 (common-lisp:defun make-get-connector-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token
                     connector-definition-version-id connector-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-connector-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-connector-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-connector-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-connector-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-connector-definition-version-response
                       common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-version-response-version
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-version-response-next-token
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-version-response-id
                         :initform common-lisp:nil)
                        (definition :initarg :definition :type
                         (common-lisp:or connector-definition-version
                                         common-lisp:null)
                         :accessor
                         %get-connector-definition-version-response-definition
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-connector-definition-version-response-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-connector-definition-version-response
                    'make-get-connector-definition-version-response))
 (common-lisp:defun make-get-connector-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version next-token id definition
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-connector-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-connector-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-connector-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-connector-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-core-definition-request common-lisp:nil
                       ((core-definition-id :initarg :core-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-request-core-definition-id
                         :initform
                         (common-lisp:error
                          ":core-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-core-definition-request
                    'make-get-core-definition-request))
 (common-lisp:defun make-get-core-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key core-definition-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-core-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-core-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-core-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-core-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-core-definition-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %get-core-definition-response-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-response-latest-version :initform
                         common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-core-definition-response
                    'make-get-core-definition-response))
 (common-lisp:defun make-get-core-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name latest-version-arn
                     latest-version last-updated-timestamp id
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-core-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-core-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-core-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-core-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-core-definition-version-request common-lisp:nil
                       ((core-definition-version-id :initarg
                         :core-definition-version-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-version-request-core-definition-version-id
                         :initform
                         (common-lisp:error
                          ":core-definition-version-id is required"))
                        (core-definition-id :initarg :core-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-version-request-core-definition-id
                         :initform
                         (common-lisp:error
                          ":core-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-core-definition-version-request
                    'make-get-core-definition-version-request))
 (common-lisp:defun make-get-core-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key core-definition-version-id
                     core-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-core-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-core-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-core-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-core-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-core-definition-version-response common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-version-response-version
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-version-response-next-token
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-version-response-id :initform
                         common-lisp:nil)
                        (definition :initarg :definition :type
                         (common-lisp:or core-definition-version
                                         common-lisp:null)
                         :accessor
                         %get-core-definition-version-response-definition
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-core-definition-version-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-core-definition-version-response
                    'make-get-core-definition-version-response))
 (common-lisp:defun make-get-core-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version next-token id definition
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-core-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-core-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-core-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-core-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployment-status-request common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-deployment-status-request-group-id :initform
                         (common-lisp:error ":group-id is required"))
                        (deployment-id :initarg :deployment-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-deployment-status-request-deployment-id :initform
                         (common-lisp:error ":deployment-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-deployment-status-request
                    'make-get-deployment-status-request))
 (common-lisp:defun make-get-deployment-status-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id deployment-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-deployment-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployment-status-response common-lisp:nil
                       ((updated-at :initarg :updated-at :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-deployment-status-response-updated-at :initform
                         common-lisp:nil)
                        (error-message :initarg :error-message :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-deployment-status-response-error-message
                         :initform common-lisp:nil)
                        (error-details :initarg :error-details :type
                         (common-lisp:or error-details common-lisp:null)
                         :accessor
                         %get-deployment-status-response-error-details
                         :initform common-lisp:nil)
                        (deployment-type :initarg :deployment-type :type
                         (common-lisp:or deployment-type common-lisp:null)
                         :accessor
                         %get-deployment-status-response-deployment-type
                         :initform common-lisp:nil)
                        (deployment-status :initarg :deployment-status :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-deployment-status-response-deployment-status
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-status-response
                    'make-get-deployment-status-response))
 (common-lisp:defun make-get-deployment-status-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key updated-at error-message error-details
                     deployment-type deployment-status)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-deployment-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-type))
      (common-lisp:list
       (common-lisp:cons "DeploymentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-details))
      (common-lisp:list
       (common-lisp:cons "ErrorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-device-definition-request common-lisp:nil
                       ((device-definition-id :initarg :device-definition-id
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %get-device-definition-request-device-definition-id
                         :initform
                         (common-lisp:error
                          ":device-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-device-definition-request
                    'make-get-device-definition-request))
 (common-lisp:defun make-get-device-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key device-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-device-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-device-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-device-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-device-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-device-definition-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %get-device-definition-response-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-device-definition-response
                    'make-get-device-definition-response))
 (common-lisp:defun make-get-device-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name latest-version-arn
                     latest-version last-updated-timestamp id
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-device-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-device-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-device-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-device-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-device-definition-version-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-version-request-next-token
                         :initform common-lisp:nil)
                        (device-definition-version-id :initarg
                         :device-definition-version-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-version-request-device-definition-version-id
                         :initform
                         (common-lisp:error
                          ":device-definition-version-id is required"))
                        (device-definition-id :initarg :device-definition-id
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %get-device-definition-version-request-device-definition-id
                         :initform
                         (common-lisp:error
                          ":device-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-device-definition-version-request
                    'make-get-device-definition-version-request))
 (common-lisp:defun make-get-device-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token device-definition-version-id
                     device-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-device-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-device-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-device-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-device-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-device-definition-version-response common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-version-response-version
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-version-response-next-token
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-version-response-id :initform
                         common-lisp:nil)
                        (definition :initarg :definition :type
                         (common-lisp:or device-definition-version
                                         common-lisp:null)
                         :accessor
                         %get-device-definition-version-response-definition
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-device-definition-version-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-device-definition-version-response
                    'make-get-device-definition-version-response))
 (common-lisp:defun make-get-device-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version next-token id definition
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-device-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-device-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-device-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-device-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-function-definition-request common-lisp:nil
                       ((function-definition-id :initarg
                         :function-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-request-function-definition-id
                         :initform
                         (common-lisp:error
                          ":function-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-function-definition-request
                    'make-get-function-definition-request))
 (common-lisp:defun make-get-function-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key function-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-function-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-function-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-function-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-function-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-function-definition-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %get-function-definition-response-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-function-definition-response
                    'make-get-function-definition-response))
 (common-lisp:defun make-get-function-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name latest-version-arn
                     latest-version last-updated-timestamp id
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-function-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-function-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-function-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-function-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-function-definition-version-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-version-request-next-token
                         :initform common-lisp:nil)
                        (function-definition-version-id :initarg
                         :function-definition-version-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-version-request-function-definition-version-id
                         :initform
                         (common-lisp:error
                          ":function-definition-version-id is required"))
                        (function-definition-id :initarg
                         :function-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-version-request-function-definition-id
                         :initform
                         (common-lisp:error
                          ":function-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-function-definition-version-request
                    'make-get-function-definition-version-request))
 (common-lisp:defun make-get-function-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token function-definition-version-id
                     function-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-function-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-function-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-function-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-function-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-function-definition-version-response common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-version-response-version
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-version-response-next-token
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-version-response-id :initform
                         common-lisp:nil)
                        (definition :initarg :definition :type
                         (common-lisp:or function-definition-version
                                         common-lisp:null)
                         :accessor
                         %get-function-definition-version-response-definition
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-function-definition-version-response-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-function-definition-version-response
                    'make-get-function-definition-version-response))
 (common-lisp:defun make-get-function-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version next-token id definition
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-function-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-function-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-function-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-function-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-group-certificate-authority-request common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-certificate-authority-request-group-id
                         :initform (common-lisp:error ":group-id is required"))
                        (certificate-authority-id :initarg
                         :certificate-authority-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-certificate-authority-request-certificate-authority-id
                         :initform
                         (common-lisp:error
                          ":certificate-authority-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-group-certificate-authority-request
                    'make-get-group-certificate-authority-request))
 (common-lisp:defun make-get-group-certificate-authority-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id certificate-authority-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-group-certificate-authority-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-group-certificate-authority-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-group-certificate-authority-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-group-certificate-authority-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-group-certificate-authority-response common-lisp:nil
                       ((pem-encoded-certificate :initarg
                         :pem-encoded-certificate :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-certificate-authority-response-pem-encoded-certificate
                         :initform common-lisp:nil)
                        (group-certificate-authority-id :initarg
                         :group-certificate-authority-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-certificate-authority-response-group-certificate-authority-id
                         :initform common-lisp:nil)
                        (group-certificate-authority-arn :initarg
                         :group-certificate-authority-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-certificate-authority-response-group-certificate-authority-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-group-certificate-authority-response
                    'make-get-group-certificate-authority-response))
 (common-lisp:defun make-get-group-certificate-authority-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key pem-encoded-certificate
                     group-certificate-authority-id
                     group-certificate-authority-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-group-certificate-authority-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-group-certificate-authority-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-group-certificate-authority-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'group-certificate-authority-arn))
      (common-lisp:list
       (common-lisp:cons "GroupCertificateAuthorityArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'group-certificate-authority-id))
      (common-lisp:list
       (common-lisp:cons "GroupCertificateAuthorityId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pem-encoded-certificate))
      (common-lisp:list
       (common-lisp:cons "PemEncodedCertificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-group-certificate-authority-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-group-certificate-configuration-request
                       common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-certificate-configuration-request-group-id
                         :initform
                         (common-lisp:error ":group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-group-certificate-configuration-request
                    'make-get-group-certificate-configuration-request))
 (common-lisp:defun make-get-group-certificate-configuration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-group-certificate-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-group-certificate-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-group-certificate-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-group-certificate-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-group-certificate-configuration-response
                       common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-certificate-configuration-response-group-id
                         :initform common-lisp:nil)
                        (certificate-expiry-in-milliseconds :initarg
                         :certificate-expiry-in-milliseconds :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-certificate-configuration-response-certificate-expiry-in-milliseconds
                         :initform common-lisp:nil)
                        (certificate-authority-expiry-in-milliseconds :initarg
                         :certificate-authority-expiry-in-milliseconds :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-certificate-configuration-response-certificate-authority-expiry-in-milliseconds
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-group-certificate-configuration-response
                    'make-get-group-certificate-configuration-response))
 (common-lisp:defun make-get-group-certificate-configuration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id
                     certificate-expiry-in-milliseconds
                     certificate-authority-expiry-in-milliseconds)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-group-certificate-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-group-certificate-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-group-certificate-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-authority-expiry-in-milliseconds))
      (common-lisp:list
       (common-lisp:cons "CertificateAuthorityExpiryInMilliseconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-expiry-in-milliseconds))
      (common-lisp:list
       (common-lisp:cons "CertificateExpiryInMilliseconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-id))
      (common-lisp:list
       (common-lisp:cons "GroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-group-certificate-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-group-request common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-request-group-id :initform
                         (common-lisp:error ":group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-group-request 'make-get-group-request))
 (common-lisp:defun make-get-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-group-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %get-group-response-tags :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-response-name :initform common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-response-latest-version-arn :initform
                         common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-response-latest-version :initform
                         common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-response-last-updated-timestamp :initform
                         common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-response-id :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-response-creation-timestamp :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-response-arn :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-group-response 'make-get-group-response))
 (common-lisp:defun make-get-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name latest-version-arn
                     latest-version last-updated-timestamp id
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-group-version-request common-lisp:nil
                       ((group-version-id :initarg :group-version-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-version-request-group-version-id :initform
                         (common-lisp:error ":group-version-id is required"))
                        (group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-version-request-group-id :initform
                         (common-lisp:error ":group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-group-version-request
                    'make-get-group-version-request))
 (common-lisp:defun make-get-group-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-version-id group-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-group-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-group-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-group-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-group-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-group-version-response common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-version-response-version :initform
                         common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-version-response-id :initform
                         common-lisp:nil)
                        (definition :initarg :definition :type
                         (common-lisp:or group-version common-lisp:null)
                         :accessor %get-group-version-response-definition
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-group-version-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-group-version-response
                    'make-get-group-version-response))
 (common-lisp:defun make-get-group-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version id definition creation-timestamp
                     arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-group-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-group-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-group-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-group-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-logger-definition-request common-lisp:nil
                       ((logger-definition-id :initarg :logger-definition-id
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %get-logger-definition-request-logger-definition-id
                         :initform
                         (common-lisp:error
                          ":logger-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-logger-definition-request
                    'make-get-logger-definition-request))
 (common-lisp:defun make-get-logger-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key logger-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-logger-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-logger-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-logger-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-logger-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-logger-definition-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %get-logger-definition-response-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-logger-definition-response
                    'make-get-logger-definition-response))
 (common-lisp:defun make-get-logger-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name latest-version-arn
                     latest-version last-updated-timestamp id
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-logger-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-logger-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-logger-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-logger-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-logger-definition-version-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-version-request-next-token
                         :initform common-lisp:nil)
                        (logger-definition-version-id :initarg
                         :logger-definition-version-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-version-request-logger-definition-version-id
                         :initform
                         (common-lisp:error
                          ":logger-definition-version-id is required"))
                        (logger-definition-id :initarg :logger-definition-id
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %get-logger-definition-version-request-logger-definition-id
                         :initform
                         (common-lisp:error
                          ":logger-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-logger-definition-version-request
                    'make-get-logger-definition-version-request))
 (common-lisp:defun make-get-logger-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token logger-definition-version-id
                     logger-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-logger-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-logger-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-logger-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-logger-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-logger-definition-version-response common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-version-response-version
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-version-response-id :initform
                         common-lisp:nil)
                        (definition :initarg :definition :type
                         (common-lisp:or logger-definition-version
                                         common-lisp:null)
                         :accessor
                         %get-logger-definition-version-response-definition
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-logger-definition-version-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-logger-definition-version-response
                    'make-get-logger-definition-version-response))
 (common-lisp:defun make-get-logger-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version id definition creation-timestamp
                     arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-logger-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-logger-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-logger-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-logger-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-definition-request common-lisp:nil
                       ((resource-definition-id :initarg
                         :resource-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-request-resource-definition-id
                         :initform
                         (common-lisp:error
                          ":resource-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-resource-definition-request
                    'make-get-resource-definition-request))
 (common-lisp:defun make-get-resource-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-resource-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-definition-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %get-resource-definition-response-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-resource-definition-response
                    'make-get-resource-definition-response))
 (common-lisp:defun make-get-resource-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name latest-version-arn
                     latest-version last-updated-timestamp id
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-resource-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-definition-version-request common-lisp:nil
                       ((resource-definition-version-id :initarg
                         :resource-definition-version-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-version-request-resource-definition-version-id
                         :initform
                         (common-lisp:error
                          ":resource-definition-version-id is required"))
                        (resource-definition-id :initarg
                         :resource-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-version-request-resource-definition-id
                         :initform
                         (common-lisp:error
                          ":resource-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-resource-definition-version-request
                    'make-get-resource-definition-version-request))
 (common-lisp:defun make-get-resource-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-definition-version-id
                     resource-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-resource-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-definition-version-response common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-version-response-version
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-version-response-id :initform
                         common-lisp:nil)
                        (definition :initarg :definition :type
                         (common-lisp:or resource-definition-version
                                         common-lisp:null)
                         :accessor
                         %get-resource-definition-version-response-definition
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-resource-definition-version-response-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-resource-definition-version-response
                    'make-get-resource-definition-version-response))
 (common-lisp:defun make-get-resource-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version id definition creation-timestamp
                     arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-resource-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-service-role-for-account-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'get-service-role-for-account-request
                    'make-get-service-role-for-account-request))
 (common-lisp:defun make-get-service-role-for-account-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-service-role-for-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-service-role-for-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-service-role-for-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-service-role-for-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-service-role-for-account-response common-lisp:nil
                       ((role-arn :initarg :role-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-service-role-for-account-response-role-arn
                         :initform common-lisp:nil)
                        (associated-at :initarg :associated-at :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-service-role-for-account-response-associated-at
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-service-role-for-account-response
                    'make-get-service-role-for-account-response))
 (common-lisp:defun make-get-service-role-for-account-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key role-arn associated-at)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-service-role-for-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-service-role-for-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-service-role-for-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'associated-at))
      (common-lisp:list
       (common-lisp:cons "AssociatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-service-role-for-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-subscription-definition-request common-lisp:nil
                       ((subscription-definition-id :initarg
                         :subscription-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-request-subscription-definition-id
                         :initform
                         (common-lisp:error
                          ":subscription-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-subscription-definition-request
                    'make-get-subscription-definition-request))
 (common-lisp:defun make-get-subscription-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subscription-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-subscription-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-subscription-definition-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %get-subscription-definition-response-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-response-name :initform
                         common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-response-latest-version-arn
                         :initform common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-response-latest-version
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-response-id :initform
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-subscription-definition-response
                    'make-get-subscription-definition-response))
 (common-lisp:defun make-get-subscription-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name latest-version-arn
                     latest-version last-updated-timestamp id
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-subscription-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-subscription-definition-version-request
                       common-lisp:nil
                       ((subscription-definition-version-id :initarg
                         :subscription-definition-version-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-version-request-subscription-definition-version-id
                         :initform
                         (common-lisp:error
                          ":subscription-definition-version-id is required"))
                        (subscription-definition-id :initarg
                         :subscription-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-version-request-subscription-definition-id
                         :initform
                         (common-lisp:error
                          ":subscription-definition-id is required"))
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-version-request-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-subscription-definition-version-request
                    'make-get-subscription-definition-version-request))
 (common-lisp:defun make-get-subscription-definition-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subscription-definition-version-id
                     subscription-definition-id next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-subscription-definition-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-definition-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-definition-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-subscription-definition-version-response
                       common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-version-response-version
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-version-response-next-token
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-version-response-id
                         :initform common-lisp:nil)
                        (definition :initarg :definition :type
                         (common-lisp:or subscription-definition-version
                                         common-lisp:null)
                         :accessor
                         %get-subscription-definition-version-response-definition
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-version-response-creation-timestamp
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-subscription-definition-version-response-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-subscription-definition-version-response
                    'make-get-subscription-definition-version-response))
 (common-lisp:defun make-get-subscription-definition-version-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version next-token id definition
                     creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-subscription-definition-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-definition-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-definition-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-definition-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-thing-runtime-configuration-request common-lisp:nil
                       ((thing-name :initarg :thing-name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %get-thing-runtime-configuration-request-thing-name
                         :initform
                         (common-lisp:error ":thing-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-thing-runtime-configuration-request
                    'make-get-thing-runtime-configuration-request))
 (common-lisp:defun make-get-thing-runtime-configuration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key thing-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-thing-runtime-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-runtime-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-runtime-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-runtime-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-thing-runtime-configuration-response common-lisp:nil
                       ((runtime-configuration :initarg :runtime-configuration
                         :type
                         (common-lisp:or runtime-configuration
                                         common-lisp:null)
                         :accessor
                         %get-thing-runtime-configuration-response-runtime-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-thing-runtime-configuration-response
                    'make-get-thing-runtime-configuration-response))
 (common-lisp:defun make-get-thing-runtime-configuration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key runtime-configuration)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-thing-runtime-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-runtime-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-runtime-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'runtime-configuration))
      (common-lisp:list
       (common-lisp:cons "RuntimeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-runtime-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass group-certificate-authority-properties common-lisp:nil
                       ((group-certificate-authority-id :initarg
                         :group-certificate-authority-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-certificate-authority-properties-group-certificate-authority-id
                         :initform common-lisp:nil)
                        (group-certificate-authority-arn :initarg
                         :group-certificate-authority-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-certificate-authority-properties-group-certificate-authority-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'group-certificate-authority-properties
                    'make-group-certificate-authority-properties))
 (common-lisp:defun make-group-certificate-authority-properties
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-certificate-authority-id
                     group-certificate-authority-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'group-certificate-authority-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          group-certificate-authority-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          group-certificate-authority-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'group-certificate-authority-arn))
      (common-lisp:list
       (common-lisp:cons "GroupCertificateAuthorityArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'group-certificate-authority-id))
      (common-lisp:list
       (common-lisp:cons "GroupCertificateAuthorityId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          group-certificate-authority-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass group-certificate-configuration common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-certificate-configuration-group-id :initform
                         common-lisp:nil)
                        (certificate-expiry-in-milliseconds :initarg
                         :certificate-expiry-in-milliseconds :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-certificate-configuration-certificate-expiry-in-milliseconds
                         :initform common-lisp:nil)
                        (certificate-authority-expiry-in-milliseconds :initarg
                         :certificate-authority-expiry-in-milliseconds :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-certificate-configuration-certificate-authority-expiry-in-milliseconds
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'group-certificate-configuration
                    'make-group-certificate-configuration))
 (common-lisp:defun make-group-certificate-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id
                     certificate-expiry-in-milliseconds
                     certificate-authority-expiry-in-milliseconds)
   (common-lisp:apply #'common-lisp:make-instance
                      'group-certificate-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          group-certificate-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          group-certificate-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-authority-expiry-in-milliseconds))
      (common-lisp:list
       (common-lisp:cons "CertificateAuthorityExpiryInMilliseconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-expiry-in-milliseconds))
      (common-lisp:list
       (common-lisp:cons "CertificateExpiryInMilliseconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-id))
      (common-lisp:list
       (common-lisp:cons "GroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          group-certificate-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass group-information common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-information-name :initform common-lisp:nil)
                        (latest-version-arn :initarg :latest-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-information-latest-version-arn :initform
                         common-lisp:nil)
                        (latest-version :initarg :latest-version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-information-latest-version :initform
                         common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-information-last-updated-timestamp :initform
                         common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-information-id :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-information-creation-timestamp :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-information-arn :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'group-information 'make-group-information))
 (common-lisp:defun make-group-information
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name latest-version-arn latest-version
                     last-updated-timestamp id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance 'group-information
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input group-information))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input group-information))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "LatestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-arn))
      (common-lisp:list
       (common-lisp:cons "LatestVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input group-information))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass group-owner-setting common-lisp:nil
                       ((group-owner :initarg :group-owner :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-owner-setting-group-owner :initform
                         common-lisp:nil)
                        (auto-add-group-owner :initarg :auto-add-group-owner
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor %group-owner-setting-auto-add-group-owner
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'group-owner-setting 'make-group-owner-setting))
 (common-lisp:defun make-group-owner-setting
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-owner auto-add-group-owner)
   (common-lisp:apply #'common-lisp:make-instance 'group-owner-setting
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input group-owner-setting))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input group-owner-setting))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-add-group-owner))
      (common-lisp:list
       (common-lisp:cons "AutoAddGroupOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-owner))
      (common-lisp:list
       (common-lisp:cons "GroupOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input group-owner-setting))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass group-version common-lisp:nil
                       ((subscription-definition-version-arn :initarg
                         :subscription-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-version-subscription-definition-version-arn
                         :initform common-lisp:nil)
                        (resource-definition-version-arn :initarg
                         :resource-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-version-resource-definition-version-arn
                         :initform common-lisp:nil)
                        (logger-definition-version-arn :initarg
                         :logger-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-version-logger-definition-version-arn :initform
                         common-lisp:nil)
                        (function-definition-version-arn :initarg
                         :function-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-version-function-definition-version-arn
                         :initform common-lisp:nil)
                        (device-definition-version-arn :initarg
                         :device-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-version-device-definition-version-arn :initform
                         common-lisp:nil)
                        (core-definition-version-arn :initarg
                         :core-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-version-core-definition-version-arn :initform
                         common-lisp:nil)
                        (connector-definition-version-arn :initarg
                         :connector-definition-version-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %group-version-connector-definition-version-arn
                         :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'group-version 'make-group-version))
 (common-lisp:defun make-group-version
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subscription-definition-version-arn
                     resource-definition-version-arn
                     logger-definition-version-arn
                     function-definition-version-arn
                     device-definition-version-arn core-definition-version-arn
                     connector-definition-version-arn)
   (common-lisp:apply #'common-lisp:make-instance 'group-version
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input group-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input group-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'connector-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectorDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'core-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "CoreDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "DeviceDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'function-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "FunctionDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logger-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "LoggerDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subscription-definition-version-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionDefinitionVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input group-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-error-exception
     (greengrass-error)
     ((error-details :initarg :error-details :initform common-lisp:nil :reader
       internal-server-error-exception-error-details)
      (message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error-exception
                    'internal-server-error-exception-error-details
                    'internal-server-error-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-bulk-deployment-detailed-reports-request
                       common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-bulk-deployment-detailed-reports-request-next-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-bulk-deployment-detailed-reports-request-max-results
                         :initform common-lisp:nil)
                        (bulk-deployment-id :initarg :bulk-deployment-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-bulk-deployment-detailed-reports-request-bulk-deployment-id
                         :initform
                         (common-lisp:error
                          ":bulk-deployment-id is required"))))
 (common-lisp:export
  (common-lisp:list 'list-bulk-deployment-detailed-reports-request
                    'make-list-bulk-deployment-detailed-reports-request))
 (common-lisp:defun make-list-bulk-deployment-detailed-reports-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results
                     bulk-deployment-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-bulk-deployment-detailed-reports-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-bulk-deployment-detailed-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-bulk-deployment-detailed-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-bulk-deployment-detailed-reports-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-bulk-deployment-detailed-reports-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-bulk-deployment-detailed-reports-response-next-token
                         :initform common-lisp:nil)
                        (deployments :initarg :deployments :type
                         (common-lisp:or bulk-deployment-results
                                         common-lisp:null)
                         :accessor
                         %list-bulk-deployment-detailed-reports-response-deployments
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-bulk-deployment-detailed-reports-response
                    'make-list-bulk-deployment-detailed-reports-response))
 (common-lisp:defun make-list-bulk-deployment-detailed-reports-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token deployments)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-bulk-deployment-detailed-reports-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-bulk-deployment-detailed-reports-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-bulk-deployment-detailed-reports-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployments))
      (common-lisp:list
       (common-lisp:cons "Deployments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-bulk-deployment-detailed-reports-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-bulk-deployments-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-bulk-deployments-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-bulk-deployments-request-max-results :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-bulk-deployments-request
                    'make-list-bulk-deployments-request))
 (common-lisp:defun make-list-bulk-deployments-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-bulk-deployments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-bulk-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-bulk-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-bulk-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-bulk-deployments-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-bulk-deployments-response-next-token :initform
                         common-lisp:nil)
                        (bulk-deployments :initarg :bulk-deployments :type
                         (common-lisp:or bulk-deployments common-lisp:null)
                         :accessor
                         %list-bulk-deployments-response-bulk-deployments
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-bulk-deployments-response
                    'make-list-bulk-deployments-response))
 (common-lisp:defun make-list-bulk-deployments-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token bulk-deployments)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-bulk-deployments-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-bulk-deployments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-bulk-deployments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bulk-deployments))
      (common-lisp:list
       (common-lisp:cons "BulkDeployments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-bulk-deployments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-connector-definition-versions-request
                       common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-connector-definition-versions-request-next-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-connector-definition-versions-request-max-results
                         :initform common-lisp:nil)
                        (connector-definition-id :initarg
                         :connector-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-connector-definition-versions-request-connector-definition-id
                         :initform
                         (common-lisp:error
                          ":connector-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'list-connector-definition-versions-request
                    'make-list-connector-definition-versions-request))
 (common-lisp:defun make-list-connector-definition-versions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results
                     connector-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-connector-definition-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-connector-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-connector-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-connector-definition-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-connector-definition-versions-response
                       common-lisp:nil
                       ((versions :initarg :versions :type
                         (common-lisp:or |__listOfVersionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-connector-definition-versions-response-versions
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-connector-definition-versions-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-connector-definition-versions-response
                    'make-list-connector-definition-versions-response))
 (common-lisp:defun make-list-connector-definition-versions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key versions next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-connector-definition-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-connector-definition-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-connector-definition-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'versions))
      (common-lisp:list
       (common-lisp:cons "Versions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-connector-definition-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-connector-definitions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-connector-definitions-request-next-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-connector-definitions-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-connector-definitions-request
                    'make-list-connector-definitions-request))
 (common-lisp:defun make-list-connector-definitions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-connector-definitions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-connector-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-connector-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-connector-definitions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-connector-definitions-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-connector-definitions-response-next-token
                         :initform common-lisp:nil)
                        (definitions :initarg :definitions :type
                         (common-lisp:or |__listOfDefinitionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-connector-definitions-response-definitions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-connector-definitions-response
                    'make-list-connector-definitions-response))
 (common-lisp:defun make-list-connector-definitions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token definitions)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-connector-definitions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-connector-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-connector-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definitions))
      (common-lisp:list
       (common-lisp:cons "Definitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-connector-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-core-definition-versions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-core-definition-versions-request-next-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-core-definition-versions-request-max-results
                         :initform common-lisp:nil)
                        (core-definition-id :initarg :core-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-core-definition-versions-request-core-definition-id
                         :initform
                         (common-lisp:error
                          ":core-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'list-core-definition-versions-request
                    'make-list-core-definition-versions-request))
 (common-lisp:defun make-list-core-definition-versions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results
                     core-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-core-definition-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-core-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-core-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-core-definition-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-core-definition-versions-response common-lisp:nil
                       ((versions :initarg :versions :type
                         (common-lisp:or |__listOfVersionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-core-definition-versions-response-versions
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-core-definition-versions-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-core-definition-versions-response
                    'make-list-core-definition-versions-response))
 (common-lisp:defun make-list-core-definition-versions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key versions next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-core-definition-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-core-definition-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-core-definition-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'versions))
      (common-lisp:list
       (common-lisp:cons "Versions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-core-definition-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-core-definitions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-core-definitions-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-core-definitions-request-max-results :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-core-definitions-request
                    'make-list-core-definitions-request))
 (common-lisp:defun make-list-core-definitions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-core-definitions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-core-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-core-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-core-definitions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-core-definitions-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-core-definitions-response-next-token :initform
                         common-lisp:nil)
                        (definitions :initarg :definitions :type
                         (common-lisp:or |__listOfDefinitionInformation|
                                         common-lisp:null)
                         :accessor %list-core-definitions-response-definitions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-core-definitions-response
                    'make-list-core-definitions-response))
 (common-lisp:defun make-list-core-definitions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token definitions)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-core-definitions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-core-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-core-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definitions))
      (common-lisp:list
       (common-lisp:cons "Definitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-core-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-definitions-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-definitions-response-next-token :initform
                         common-lisp:nil)
                        (definitions :initarg :definitions :type
                         (common-lisp:or |__listOfDefinitionInformation|
                                         common-lisp:null)
                         :accessor %list-definitions-response-definitions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-definitions-response
                    'make-list-definitions-response))
 (common-lisp:defun make-list-definitions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token definitions)
   (common-lisp:apply #'common-lisp:make-instance 'list-definitions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definitions))
      (common-lisp:list
       (common-lisp:cons "Definitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-deployments-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-deployments-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-deployments-request-max-results :initform
                         common-lisp:nil)
                        (group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-deployments-request-group-id :initform
                         (common-lisp:error ":group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'list-deployments-request 'make-list-deployments-request))
 (common-lisp:defun make-list-deployments-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results group-id)
   (common-lisp:apply #'common-lisp:make-instance 'list-deployments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-deployments-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-deployments-response-next-token :initform
                         common-lisp:nil)
                        (deployments :initarg :deployments :type
                         (common-lisp:or deployments common-lisp:null)
                         :accessor %list-deployments-response-deployments
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-deployments-response
                    'make-list-deployments-response))
 (common-lisp:defun make-list-deployments-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token deployments)
   (common-lisp:apply #'common-lisp:make-instance 'list-deployments-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-deployments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-deployments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployments))
      (common-lisp:list
       (common-lisp:cons "Deployments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-deployments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-device-definition-versions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-device-definition-versions-request-next-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-device-definition-versions-request-max-results
                         :initform common-lisp:nil)
                        (device-definition-id :initarg :device-definition-id
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %list-device-definition-versions-request-device-definition-id
                         :initform
                         (common-lisp:error
                          ":device-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'list-device-definition-versions-request
                    'make-list-device-definition-versions-request))
 (common-lisp:defun make-list-device-definition-versions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results
                     device-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-device-definition-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-device-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-device-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-device-definition-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-device-definition-versions-response common-lisp:nil
                       ((versions :initarg :versions :type
                         (common-lisp:or |__listOfVersionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-device-definition-versions-response-versions
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-device-definition-versions-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-device-definition-versions-response
                    'make-list-device-definition-versions-response))
 (common-lisp:defun make-list-device-definition-versions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key versions next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-device-definition-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-device-definition-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-device-definition-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'versions))
      (common-lisp:list
       (common-lisp:cons "Versions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-device-definition-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-device-definitions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-device-definitions-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-device-definitions-request-max-results :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-device-definitions-request
                    'make-list-device-definitions-request))
 (common-lisp:defun make-list-device-definitions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-device-definitions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-device-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-device-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-device-definitions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-device-definitions-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-device-definitions-response-next-token :initform
                         common-lisp:nil)
                        (definitions :initarg :definitions :type
                         (common-lisp:or |__listOfDefinitionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-device-definitions-response-definitions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-device-definitions-response
                    'make-list-device-definitions-response))
 (common-lisp:defun make-list-device-definitions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token definitions)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-device-definitions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-device-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-device-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definitions))
      (common-lisp:list
       (common-lisp:cons "Definitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-device-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-function-definition-versions-request
                       common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-function-definition-versions-request-next-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-function-definition-versions-request-max-results
                         :initform common-lisp:nil)
                        (function-definition-id :initarg
                         :function-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-function-definition-versions-request-function-definition-id
                         :initform
                         (common-lisp:error
                          ":function-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'list-function-definition-versions-request
                    'make-list-function-definition-versions-request))
 (common-lisp:defun make-list-function-definition-versions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results
                     function-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-function-definition-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-function-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-function-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-function-definition-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-function-definition-versions-response
                       common-lisp:nil
                       ((versions :initarg :versions :type
                         (common-lisp:or |__listOfVersionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-function-definition-versions-response-versions
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-function-definition-versions-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-function-definition-versions-response
                    'make-list-function-definition-versions-response))
 (common-lisp:defun make-list-function-definition-versions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key versions next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-function-definition-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-function-definition-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-function-definition-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'versions))
      (common-lisp:list
       (common-lisp:cons "Versions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-function-definition-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-function-definitions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-function-definitions-request-next-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-function-definitions-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-function-definitions-request
                    'make-list-function-definitions-request))
 (common-lisp:defun make-list-function-definitions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-function-definitions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-function-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-function-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-function-definitions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-function-definitions-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-function-definitions-response-next-token
                         :initform common-lisp:nil)
                        (definitions :initarg :definitions :type
                         (common-lisp:or |__listOfDefinitionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-function-definitions-response-definitions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-function-definitions-response
                    'make-list-function-definitions-response))
 (common-lisp:defun make-list-function-definitions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token definitions)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-function-definitions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-function-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-function-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definitions))
      (common-lisp:list
       (common-lisp:cons "Definitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-function-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-group-certificate-authorities-request
                       common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-group-certificate-authorities-request-group-id
                         :initform
                         (common-lisp:error ":group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'list-group-certificate-authorities-request
                    'make-list-group-certificate-authorities-request))
 (common-lisp:defun make-list-group-certificate-authorities-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-group-certificate-authorities-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-group-certificate-authorities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-group-certificate-authorities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-group-certificate-authorities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-group-certificate-authorities-response
                       common-lisp:nil
                       ((group-certificate-authorities :initarg
                         :group-certificate-authorities :type
                         (common-lisp:or
                          |__listOfGroupCertificateAuthorityProperties|
                          common-lisp:null)
                         :accessor
                         %list-group-certificate-authorities-response-group-certificate-authorities
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-group-certificate-authorities-response
                    'make-list-group-certificate-authorities-response))
 (common-lisp:defun make-list-group-certificate-authorities-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-certificate-authorities)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-group-certificate-authorities-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-group-certificate-authorities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-group-certificate-authorities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'group-certificate-authorities))
      (common-lisp:list
       (common-lisp:cons "GroupCertificateAuthorities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-group-certificate-authorities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-group-versions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-group-versions-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-group-versions-request-max-results :initform
                         common-lisp:nil)
                        (group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-group-versions-request-group-id :initform
                         (common-lisp:error ":group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'list-group-versions-request
                    'make-list-group-versions-request))
 (common-lisp:defun make-list-group-versions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results group-id)
   (common-lisp:apply #'common-lisp:make-instance 'list-group-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-group-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-group-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-group-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-group-versions-response common-lisp:nil
                       ((versions :initarg :versions :type
                         (common-lisp:or |__listOfVersionInformation|
                                         common-lisp:null)
                         :accessor %list-group-versions-response-versions
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-group-versions-response-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-group-versions-response
                    'make-list-group-versions-response))
 (common-lisp:defun make-list-group-versions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key versions next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-group-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-group-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-group-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'versions))
      (common-lisp:list
       (common-lisp:cons "Versions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-group-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-groups-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-groups-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-groups-request-max-results :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-groups-request 'make-list-groups-request))
 (common-lisp:defun make-list-groups-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance 'list-groups-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-groups-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-groups-response-next-token :initform
                         common-lisp:nil)
                        (groups :initarg :groups :type
                         (common-lisp:or |__listOfGroupInformation|
                                         common-lisp:null)
                         :accessor %list-groups-response-groups :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-groups-response 'make-list-groups-response))
 (common-lisp:defun make-list-groups-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token groups)
   (common-lisp:apply #'common-lisp:make-instance 'list-groups-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-logger-definition-versions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-logger-definition-versions-request-next-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-logger-definition-versions-request-max-results
                         :initform common-lisp:nil)
                        (logger-definition-id :initarg :logger-definition-id
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %list-logger-definition-versions-request-logger-definition-id
                         :initform
                         (common-lisp:error
                          ":logger-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'list-logger-definition-versions-request
                    'make-list-logger-definition-versions-request))
 (common-lisp:defun make-list-logger-definition-versions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results
                     logger-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-logger-definition-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-logger-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-logger-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-logger-definition-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-logger-definition-versions-response common-lisp:nil
                       ((versions :initarg :versions :type
                         (common-lisp:or |__listOfVersionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-logger-definition-versions-response-versions
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-logger-definition-versions-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-logger-definition-versions-response
                    'make-list-logger-definition-versions-response))
 (common-lisp:defun make-list-logger-definition-versions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key versions next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-logger-definition-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-logger-definition-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-logger-definition-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'versions))
      (common-lisp:list
       (common-lisp:cons "Versions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-logger-definition-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-logger-definitions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-logger-definitions-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-logger-definitions-request-max-results :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-logger-definitions-request
                    'make-list-logger-definitions-request))
 (common-lisp:defun make-list-logger-definitions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-logger-definitions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-logger-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-logger-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-logger-definitions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-logger-definitions-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-logger-definitions-response-next-token :initform
                         common-lisp:nil)
                        (definitions :initarg :definitions :type
                         (common-lisp:or |__listOfDefinitionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-logger-definitions-response-definitions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-logger-definitions-response
                    'make-list-logger-definitions-response))
 (common-lisp:defun make-list-logger-definitions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token definitions)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-logger-definitions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-logger-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-logger-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definitions))
      (common-lisp:list
       (common-lisp:cons "Definitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-logger-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resource-definition-versions-request
                       common-lisp:nil
                       ((resource-definition-id :initarg
                         :resource-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-resource-definition-versions-request-resource-definition-id
                         :initform
                         (common-lisp:error
                          ":resource-definition-id is required"))
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-resource-definition-versions-request-next-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-resource-definition-versions-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-resource-definition-versions-request
                    'make-list-resource-definition-versions-request))
 (common-lisp:defun make-list-resource-definition-versions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-definition-id next-token
                     max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resource-definition-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-definition-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resource-definition-versions-response
                       common-lisp:nil
                       ((versions :initarg :versions :type
                         (common-lisp:or |__listOfVersionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-resource-definition-versions-response-versions
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-resource-definition-versions-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-resource-definition-versions-response
                    'make-list-resource-definition-versions-response))
 (common-lisp:defun make-list-resource-definition-versions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key versions next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resource-definition-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-definition-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-definition-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'versions))
      (common-lisp:list
       (common-lisp:cons "Versions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-definition-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resource-definitions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-resource-definitions-request-next-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-resource-definitions-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-resource-definitions-request
                    'make-list-resource-definitions-request))
 (common-lisp:defun make-list-resource-definitions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resource-definitions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-definitions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resource-definitions-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-resource-definitions-response-next-token
                         :initform common-lisp:nil)
                        (definitions :initarg :definitions :type
                         (common-lisp:or |__listOfDefinitionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-resource-definitions-response-definitions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-resource-definitions-response
                    'make-list-resource-definitions-response))
 (common-lisp:defun make-list-resource-definitions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token definitions)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resource-definitions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definitions))
      (common-lisp:list
       (common-lisp:cons "Definitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-subscription-definition-versions-request
                       common-lisp:nil
                       ((subscription-definition-id :initarg
                         :subscription-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-subscription-definition-versions-request-subscription-definition-id
                         :initform
                         (common-lisp:error
                          ":subscription-definition-id is required"))
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-subscription-definition-versions-request-next-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-subscription-definition-versions-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-subscription-definition-versions-request
                    'make-list-subscription-definition-versions-request))
 (common-lisp:defun make-list-subscription-definition-versions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subscription-definition-id next-token
                     max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-subscription-definition-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-subscription-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-subscription-definition-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-subscription-definition-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-subscription-definition-versions-response
                       common-lisp:nil
                       ((versions :initarg :versions :type
                         (common-lisp:or |__listOfVersionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-subscription-definition-versions-response-versions
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-subscription-definition-versions-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-subscription-definition-versions-response
                    'make-list-subscription-definition-versions-response))
 (common-lisp:defun make-list-subscription-definition-versions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key versions next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-subscription-definition-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-subscription-definition-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-subscription-definition-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'versions))
      (common-lisp:list
       (common-lisp:cons "Versions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-subscription-definition-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-subscription-definitions-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-subscription-definitions-request-next-token
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-subscription-definitions-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-subscription-definitions-request
                    'make-list-subscription-definitions-request))
 (common-lisp:defun make-list-subscription-definitions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-subscription-definitions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-subscription-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-subscription-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-subscription-definitions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-subscription-definitions-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-subscription-definitions-response-next-token
                         :initform common-lisp:nil)
                        (definitions :initarg :definitions :type
                         (common-lisp:or |__listOfDefinitionInformation|
                                         common-lisp:null)
                         :accessor
                         %list-subscription-definitions-response-definitions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-subscription-definitions-response
                    'make-list-subscription-definitions-response))
 (common-lisp:defun make-list-subscription-definitions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token definitions)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-subscription-definitions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-subscription-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-subscription-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definitions))
      (common-lisp:list
       (common-lisp:cons "Definitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-subscription-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-tags-for-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %list-tags-for-resource-response-tags :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defun make-list-tags-for-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-versions-response common-lisp:nil
                       ((versions :initarg :versions :type
                         (common-lisp:or |__listOfVersionInformation|
                                         common-lisp:null)
                         :accessor %list-versions-response-versions :initform
                         common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %list-versions-response-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-versions-response 'make-list-versions-response))
 (common-lisp:defun make-list-versions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key versions next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'versions))
      (common-lisp:list
       (common-lisp:cons "Versions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass local-device-resource-data common-lisp:nil
                       ((source-path :initarg :source-path :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %local-device-resource-data-source-path :initform
                         common-lisp:nil)
                        (group-owner-setting :initarg :group-owner-setting
                         :type
                         (common-lisp:or group-owner-setting common-lisp:null)
                         :accessor
                         %local-device-resource-data-group-owner-setting
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'local-device-resource-data
                    'make-local-device-resource-data))
 (common-lisp:defun make-local-device-resource-data
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key source-path group-owner-setting)
   (common-lisp:apply #'common-lisp:make-instance 'local-device-resource-data
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          local-device-resource-data))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          local-device-resource-data))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-owner-setting))
      (common-lisp:list
       (common-lisp:cons "GroupOwnerSetting"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-path))
      (common-lisp:list
       (common-lisp:cons "SourcePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          local-device-resource-data))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass local-volume-resource-data common-lisp:nil
                       ((source-path :initarg :source-path :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %local-volume-resource-data-source-path :initform
                         common-lisp:nil)
                        (group-owner-setting :initarg :group-owner-setting
                         :type
                         (common-lisp:or group-owner-setting common-lisp:null)
                         :accessor
                         %local-volume-resource-data-group-owner-setting
                         :initform common-lisp:nil)
                        (destination-path :initarg :destination-path :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %local-volume-resource-data-destination-path :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'local-volume-resource-data
                    'make-local-volume-resource-data))
 (common-lisp:defun make-local-volume-resource-data
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key source-path group-owner-setting
                     destination-path)
   (common-lisp:apply #'common-lisp:make-instance 'local-volume-resource-data
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          local-volume-resource-data))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          local-volume-resource-data))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-path))
      (common-lisp:list
       (common-lisp:cons "DestinationPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-owner-setting))
      (common-lisp:list
       (common-lisp:cons "GroupOwnerSetting"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-path))
      (common-lisp:list
       (common-lisp:cons "SourcePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          local-volume-resource-data))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass logger common-lisp:nil
                       ((type :initarg :type :type
                         (common-lisp:or logger-type common-lisp:null)
                         :accessor %logger-type :initform
                         (common-lisp:error ":type is required"))
                        (space :initarg :space :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor %logger-space :initform common-lisp:nil)
                        (level :initarg :level :type
                         (common-lisp:or logger-level common-lisp:null)
                         :accessor %logger-level :initform
                         (common-lisp:error ":level is required"))
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %logger-id :initform
                         (common-lisp:error ":id is required"))
                        (component :initarg :component :type
                         (common-lisp:or logger-component common-lisp:null)
                         :accessor %logger-component :initform
                         (common-lisp:error ":component is required"))))
 (common-lisp:export (common-lisp:list 'logger 'make-logger))
 (common-lisp:defun make-logger
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type space level id component)
   (common-lisp:apply #'common-lisp:make-instance 'logger
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input logger))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input logger))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component))
      (common-lisp:list
       (common-lisp:cons "Component"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'level))
      (common-lisp:list
       (common-lisp:cons "Level"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'space))
      (common-lisp:list
       (common-lisp:cons "Space"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input logger))
   common-lisp:nil))
(common-lisp:deftype logger-component () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass logger-definition-version common-lisp:nil
                       ((loggers :initarg :loggers :type
                         (common-lisp:or |__listOfLogger| common-lisp:null)
                         :accessor %logger-definition-version-loggers :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'logger-definition-version
                    'make-logger-definition-version))
 (common-lisp:defun make-logger-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key loggers)
   (common-lisp:apply #'common-lisp:make-instance 'logger-definition-version
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          logger-definition-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          logger-definition-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'loggers))
      (common-lisp:list
       (common-lisp:cons "Loggers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          logger-definition-version))
   common-lisp:nil))
(common-lisp:deftype logger-level () 'common-lisp:string)
(common-lisp:deftype logger-type () 'common-lisp:string)
(common-lisp:deftype permission () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass reset-deployments-request common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %reset-deployments-request-group-id :initform
                         (common-lisp:error ":group-id is required"))
                        (force :initarg :force :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor %reset-deployments-request-force :initform
                         common-lisp:nil)
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %reset-deployments-request-amzn-client-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'reset-deployments-request
                    'make-reset-deployments-request))
 (common-lisp:defun make-reset-deployments-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id force amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance 'reset-deployments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-deployments-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-deployments-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force))
      (common-lisp:list
       (common-lisp:cons "Force"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass reset-deployments-response common-lisp:nil
                       ((deployment-id :initarg :deployment-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %reset-deployments-response-deployment-id :initform
                         common-lisp:nil)
                        (deployment-arn :initarg :deployment-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %reset-deployments-response-deployment-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'reset-deployments-response
                    'make-reset-deployments-response))
 (common-lisp:defun make-reset-deployments-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key deployment-id deployment-arn)
   (common-lisp:apply #'common-lisp:make-instance 'reset-deployments-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-deployments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-deployments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-arn))
      (common-lisp:list
       (common-lisp:cons "DeploymentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-deployments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource common-lisp:nil
                       ((resource-data-container :initarg
                         :resource-data-container :type
                         (common-lisp:or resource-data-container
                                         common-lisp:null)
                         :accessor %resource-resource-data-container :initform
                         (common-lisp:error
                          ":resource-data-container is required"))
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %resource-name :initform
                         (common-lisp:error ":name is required"))
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %resource-id :initform
                         (common-lisp:error ":id is required"))))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defun make-resource
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-data-container name id)
   (common-lisp:apply #'common-lisp:make-instance 'resource
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-data-container))
      (common-lisp:list
       (common-lisp:cons "ResourceDataContainer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource-access-policy common-lisp:nil
                       ((resource-id :initarg :resource-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %resource-access-policy-resource-id :initform
                         (common-lisp:error ":resource-id is required"))
                        (permission :initarg :permission :type
                         (common-lisp:or permission common-lisp:null) :accessor
                         %resource-access-policy-permission :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-access-policy 'make-resource-access-policy))
 (common-lisp:defun make-resource-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-id permission)
   (common-lisp:apply #'common-lisp:make-instance 'resource-access-policy
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-access-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-access-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission))
      (common-lisp:list
       (common-lisp:cons "Permission"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-access-policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource-data-container common-lisp:nil
                       ((secrets-manager-secret-resource-data :initarg
                         :secrets-manager-secret-resource-data :type
                         (common-lisp:or secrets-manager-secret-resource-data
                                         common-lisp:null)
                         :accessor
                         %resource-data-container-secrets-manager-secret-resource-data
                         :initform common-lisp:nil)
                        (sage-maker-machine-learning-model-resource-data
                         :initarg
                         :sage-maker-machine-learning-model-resource-data :type
                         (common-lisp:or
                          sage-maker-machine-learning-model-resource-data
                          common-lisp:null)
                         :accessor
                         %resource-data-container-sage-maker-machine-learning-model-resource-data
                         :initform common-lisp:nil)
                        (s3machine-learning-model-resource-data :initarg
                         :s3machine-learning-model-resource-data :type
                         (common-lisp:or s3machine-learning-model-resource-data
                                         common-lisp:null)
                         :accessor
                         %resource-data-container-s3machine-learning-model-resource-data
                         :initform common-lisp:nil)
                        (local-volume-resource-data :initarg
                         :local-volume-resource-data :type
                         (common-lisp:or local-volume-resource-data
                                         common-lisp:null)
                         :accessor
                         %resource-data-container-local-volume-resource-data
                         :initform common-lisp:nil)
                        (local-device-resource-data :initarg
                         :local-device-resource-data :type
                         (common-lisp:or local-device-resource-data
                                         common-lisp:null)
                         :accessor
                         %resource-data-container-local-device-resource-data
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-data-container 'make-resource-data-container))
 (common-lisp:defun make-resource-data-container
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key secrets-manager-secret-resource-data
                     sage-maker-machine-learning-model-resource-data
                     s3machine-learning-model-resource-data
                     local-volume-resource-data local-device-resource-data)
   (common-lisp:apply #'common-lisp:make-instance 'resource-data-container
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-data-container))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-data-container))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'local-device-resource-data))
      (common-lisp:list
       (common-lisp:cons "LocalDeviceResourceData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'local-volume-resource-data))
      (common-lisp:list
       (common-lisp:cons "LocalVolumeResourceData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3machine-learning-model-resource-data))
      (common-lisp:list
       (common-lisp:cons "S3MachineLearningModelResourceData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sage-maker-machine-learning-model-resource-data))
      (common-lisp:list
       (common-lisp:cons "SageMakerMachineLearningModelResourceData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'secrets-manager-secret-resource-data))
      (common-lisp:list
       (common-lisp:cons "SecretsManagerSecretResourceData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-data-container))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource-definition-version common-lisp:nil
                       ((resources :initarg :resources :type
                         (common-lisp:or |__listOfResource| common-lisp:null)
                         :accessor %resource-definition-version-resources
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-definition-version
                    'make-resource-definition-version))
 (common-lisp:defun make-resource-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resources)
   (common-lisp:apply #'common-lisp:make-instance 'resource-definition-version
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-definition-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-definition-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-definition-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource-download-owner-setting common-lisp:nil
                       ((group-permission :initarg :group-permission :type
                         (common-lisp:or permission common-lisp:null) :accessor
                         %resource-download-owner-setting-group-permission
                         :initform
                         (common-lisp:error ":group-permission is required"))
                        (group-owner :initarg :group-owner :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %resource-download-owner-setting-group-owner :initform
                         (common-lisp:error ":group-owner is required"))))
 (common-lisp:export
  (common-lisp:list 'resource-download-owner-setting
                    'make-resource-download-owner-setting))
 (common-lisp:defun make-resource-download-owner-setting
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-permission group-owner)
   (common-lisp:apply #'common-lisp:make-instance
                      'resource-download-owner-setting
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-download-owner-setting))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-download-owner-setting))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-owner))
      (common-lisp:list
       (common-lisp:cons "GroupOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-permission))
      (common-lisp:list
       (common-lisp:cons "GroupPermission"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-download-owner-setting))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass runtime-configuration common-lisp:nil
                       ((telemetry-configuration :initarg
                         :telemetry-configuration :type
                         (common-lisp:or telemetry-configuration
                                         common-lisp:null)
                         :accessor
                         %runtime-configuration-telemetry-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'runtime-configuration 'make-runtime-configuration))
 (common-lisp:defun make-runtime-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key telemetry-configuration)
   (common-lisp:apply #'common-lisp:make-instance 'runtime-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          runtime-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          runtime-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'telemetry-configuration))
      (common-lisp:list
       (common-lisp:cons "TelemetryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          runtime-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass runtime-configuration-update common-lisp:nil
                       ((telemetry-configuration :initarg
                         :telemetry-configuration :type
                         (common-lisp:or telemetry-configuration-update
                                         common-lisp:null)
                         :accessor
                         %runtime-configuration-update-telemetry-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'runtime-configuration-update
                    'make-runtime-configuration-update))
 (common-lisp:defun make-runtime-configuration-update
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key telemetry-configuration)
   (common-lisp:apply #'common-lisp:make-instance 'runtime-configuration-update
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          runtime-configuration-update))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          runtime-configuration-update))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'telemetry-configuration))
      (common-lisp:list
       (common-lisp:cons "TelemetryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          runtime-configuration-update))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3machine-learning-model-resource-data common-lisp:nil
                       ((s3uri :initarg :s3uri :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %s3machine-learning-model-resource-data-s3uri
                         :initform common-lisp:nil)
                        (owner-setting :initarg :owner-setting :type
                         (common-lisp:or resource-download-owner-setting
                                         common-lisp:null)
                         :accessor
                         %s3machine-learning-model-resource-data-owner-setting
                         :initform common-lisp:nil)
                        (destination-path :initarg :destination-path :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %s3machine-learning-model-resource-data-destination-path
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 's3machine-learning-model-resource-data
                    'make-s3machine-learning-model-resource-data))
 (common-lisp:defun make-s3machine-learning-model-resource-data
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3uri owner-setting destination-path)
   (common-lisp:apply #'common-lisp:make-instance
                      's3machine-learning-model-resource-data
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3machine-learning-model-resource-data))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3machine-learning-model-resource-data))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-path))
      (common-lisp:list
       (common-lisp:cons "DestinationPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-setting))
      (common-lisp:list
       (common-lisp:cons "OwnerSetting"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3machine-learning-model-resource-data))
   common-lisp:nil))
(common-lisp:deftype s3url-signer-role () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass sage-maker-machine-learning-model-resource-data
                       common-lisp:nil
                       ((sage-maker-job-arn :initarg :sage-maker-job-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %sage-maker-machine-learning-model-resource-data-sage-maker-job-arn
                         :initform common-lisp:nil)
                        (owner-setting :initarg :owner-setting :type
                         (common-lisp:or resource-download-owner-setting
                                         common-lisp:null)
                         :accessor
                         %sage-maker-machine-learning-model-resource-data-owner-setting
                         :initform common-lisp:nil)
                        (destination-path :initarg :destination-path :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %sage-maker-machine-learning-model-resource-data-destination-path
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'sage-maker-machine-learning-model-resource-data
                    'make-sage-maker-machine-learning-model-resource-data))
 (common-lisp:defun make-sage-maker-machine-learning-model-resource-data
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key sage-maker-job-arn owner-setting
                     destination-path)
   (common-lisp:apply #'common-lisp:make-instance
                      'sage-maker-machine-learning-model-resource-data
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sage-maker-machine-learning-model-resource-data))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sage-maker-machine-learning-model-resource-data))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-path))
      (common-lisp:list
       (common-lisp:cons "DestinationPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-setting))
      (common-lisp:list
       (common-lisp:cons "OwnerSetting"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sage-maker-job-arn))
      (common-lisp:list
       (common-lisp:cons "SageMakerJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sage-maker-machine-learning-model-resource-data))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass secrets-manager-secret-resource-data common-lisp:nil
                       ((additional-staging-labels-to-download :initarg
                         :additional-staging-labels-to-download :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         %secrets-manager-secret-resource-data-additional-staging-labels-to-download
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %secrets-manager-secret-resource-data-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'secrets-manager-secret-resource-data
                    'make-secrets-manager-secret-resource-data))
 (common-lisp:defun make-secrets-manager-secret-resource-data
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key additional-staging-labels-to-download
                     arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'secrets-manager-secret-resource-data
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          secrets-manager-secret-resource-data))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          secrets-manager-secret-resource-data))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "ARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-staging-labels-to-download))
      (common-lisp:list
       (common-lisp:cons "AdditionalStagingLabelsToDownload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          secrets-manager-secret-resource-data))
   common-lisp:nil))
(common-lisp:deftype software-to-update () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass start-bulk-deployment-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %start-bulk-deployment-request-tags :initform
                         common-lisp:nil)
                        (input-file-uri :initarg :input-file-uri :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %start-bulk-deployment-request-input-file-uri
                         :initform
                         (common-lisp:error ":input-file-uri is required"))
                        (execution-role-arn :initarg :execution-role-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %start-bulk-deployment-request-execution-role-arn
                         :initform
                         (common-lisp:error ":execution-role-arn is required"))
                        (amzn-client-token :initarg :amzn-client-token :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %start-bulk-deployment-request-amzn-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'start-bulk-deployment-request
                    'make-start-bulk-deployment-request))
 (common-lisp:defun make-start-bulk-deployment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags input-file-uri execution-role-arn
                     amzn-client-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-bulk-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amzn-client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-role-arn))
      (common-lisp:list
       (common-lisp:cons "ExecutionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-file-uri))
      (common-lisp:list
       (common-lisp:cons "InputFileUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-bulk-deployment-response common-lisp:nil
                       ((bulk-deployment-id :initarg :bulk-deployment-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %start-bulk-deployment-response-bulk-deployment-id
                         :initform common-lisp:nil)
                        (bulk-deployment-arn :initarg :bulk-deployment-arn
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %start-bulk-deployment-response-bulk-deployment-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'start-bulk-deployment-response
                    'make-start-bulk-deployment-response))
 (common-lisp:defun make-start-bulk-deployment-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key bulk-deployment-id bulk-deployment-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-bulk-deployment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-deployment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bulk-deployment-arn))
      (common-lisp:list
       (common-lisp:cons "BulkDeploymentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bulk-deployment-id))
      (common-lisp:list
       (common-lisp:cons "BulkDeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-deployment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-bulk-deployment-request common-lisp:nil
                       ((bulk-deployment-id :initarg :bulk-deployment-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %stop-bulk-deployment-request-bulk-deployment-id
                         :initform
                         (common-lisp:error
                          ":bulk-deployment-id is required"))))
 (common-lisp:export
  (common-lisp:list 'stop-bulk-deployment-request
                    'make-stop-bulk-deployment-request))
 (common-lisp:defun make-stop-bulk-deployment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key bulk-deployment-id)
   (common-lisp:apply #'common-lisp:make-instance 'stop-bulk-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-bulk-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-bulk-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-bulk-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-bulk-deployment-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'stop-bulk-deployment-response
                    'make-stop-bulk-deployment-response))
 (common-lisp:defun make-stop-bulk-deployment-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-bulk-deployment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-bulk-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-bulk-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-bulk-deployment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass subscription common-lisp:nil
                       ((target :initarg :target :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %subscription-target :initform
                         (common-lisp:error ":target is required"))
                        (subject :initarg :subject :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %subscription-subject :initform
                         (common-lisp:error ":subject is required"))
                        (source :initarg :source :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %subscription-source :initform
                         (common-lisp:error ":source is required"))
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %subscription-id :initform
                         (common-lisp:error ":id is required"))))
 (common-lisp:export (common-lisp:list 'subscription 'make-subscription))
 (common-lisp:defun make-subscription
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key target subject source id)
   (common-lisp:apply #'common-lisp:make-instance 'subscription
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subscription))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subscription))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subscription))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass subscription-definition-version common-lisp:nil
                       ((subscriptions :initarg :subscriptions :type
                         (common-lisp:or |__listOfSubscription|
                                         common-lisp:null)
                         :accessor
                         %subscription-definition-version-subscriptions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'subscription-definition-version
                    'make-subscription-definition-version))
 (common-lisp:defun make-subscription-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subscriptions)
   (common-lisp:apply #'common-lisp:make-instance
                      'subscription-definition-version
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          subscription-definition-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          subscription-definition-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscriptions))
      (common-lisp:list
       (common-lisp:cons "Subscriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          subscription-definition-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %tag-resource-request-tags :initform common-lisp:nil)
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tags () 'common-lisp:hash-table)
 (common-lisp:defun |make-tags| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype telemetry () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass telemetry-configuration common-lisp:nil
                       ((telemetry :initarg :telemetry :type
                         (common-lisp:or telemetry common-lisp:null) :accessor
                         %telemetry-configuration-telemetry :initform
                         (common-lisp:error ":telemetry is required"))
                        (configuration-sync-status :initarg
                         :configuration-sync-status :type
                         (common-lisp:or configuration-sync-status
                                         common-lisp:null)
                         :accessor
                         %telemetry-configuration-configuration-sync-status
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'telemetry-configuration 'make-telemetry-configuration))
 (common-lisp:defun make-telemetry-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key telemetry configuration-sync-status)
   (common-lisp:apply #'common-lisp:make-instance 'telemetry-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          telemetry-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          telemetry-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-sync-status))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSyncStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'telemetry))
      (common-lisp:list
       (common-lisp:cons "Telemetry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          telemetry-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass telemetry-configuration-update common-lisp:nil
                       ((telemetry :initarg :telemetry :type
                         (common-lisp:or telemetry common-lisp:null) :accessor
                         %telemetry-configuration-update-telemetry :initform
                         (common-lisp:error ":telemetry is required"))))
 (common-lisp:export
  (common-lisp:list 'telemetry-configuration-update
                    'make-telemetry-configuration-update))
 (common-lisp:defun make-telemetry-configuration-update
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key telemetry)
   (common-lisp:apply #'common-lisp:make-instance
                      'telemetry-configuration-update
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          telemetry-configuration-update))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          telemetry-configuration-update))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'telemetry))
      (common-lisp:list
       (common-lisp:cons "Telemetry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          telemetry-configuration-update))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :tag-keys :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tag-keys is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %untag-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:deftype update-agent-log-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass update-connectivity-info-request common-lisp:nil
                       ((thing-name :initarg :thing-name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-connectivity-info-request-thing-name :initform
                         (common-lisp:error ":thing-name is required"))
                        (connectivity-info :initarg :connectivity-info :type
                         (common-lisp:or |__listOfConnectivityInfo|
                                         common-lisp:null)
                         :accessor
                         %update-connectivity-info-request-connectivity-info
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-connectivity-info-request
                    'make-update-connectivity-info-request))
 (common-lisp:defun make-update-connectivity-info-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key thing-name connectivity-info)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-connectivity-info-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connectivity-info-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connectivity-info-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connectivity-info))
      (common-lisp:list
       (common-lisp:cons "ConnectivityInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connectivity-info-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-connectivity-info-response common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-connectivity-info-response-version :initform
                         common-lisp:nil)
                        (message :initarg :message :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-connectivity-info-response-message :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-connectivity-info-response
                    'make-update-connectivity-info-response))
 (common-lisp:defun make-update-connectivity-info-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version message)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-connectivity-info-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connectivity-info-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connectivity-info-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connectivity-info-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-connector-definition-request common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-connector-definition-request-name :initform
                         common-lisp:nil)
                        (connector-definition-id :initarg
                         :connector-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-connector-definition-request-connector-definition-id
                         :initform
                         (common-lisp:error
                          ":connector-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'update-connector-definition-request
                    'make-update-connector-definition-request))
 (common-lisp:defun make-update-connector-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name connector-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-connector-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connector-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connector-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connector-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-connector-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-connector-definition-response
                    'make-update-connector-definition-response))
 (common-lisp:defun make-update-connector-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-connector-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connector-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connector-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connector-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-core-definition-request common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-core-definition-request-name :initform
                         common-lisp:nil)
                        (core-definition-id :initarg :core-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-core-definition-request-core-definition-id
                         :initform
                         (common-lisp:error
                          ":core-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'update-core-definition-request
                    'make-update-core-definition-request))
 (common-lisp:defun make-update-core-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name core-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-core-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-core-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-core-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-core-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-core-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-core-definition-response
                    'make-update-core-definition-response))
 (common-lisp:defun make-update-core-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-core-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-core-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-core-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-core-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-device-definition-request common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-device-definition-request-name :initform
                         common-lisp:nil)
                        (device-definition-id :initarg :device-definition-id
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %update-device-definition-request-device-definition-id
                         :initform
                         (common-lisp:error
                          ":device-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'update-device-definition-request
                    'make-update-device-definition-request))
 (common-lisp:defun make-update-device-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name device-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-device-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-device-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-device-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-device-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-device-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-device-definition-response
                    'make-update-device-definition-response))
 (common-lisp:defun make-update-device-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-device-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-device-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-device-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-device-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-function-definition-request common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-function-definition-request-name :initform
                         common-lisp:nil)
                        (function-definition-id :initarg
                         :function-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-function-definition-request-function-definition-id
                         :initform
                         (common-lisp:error
                          ":function-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'update-function-definition-request
                    'make-update-function-definition-request))
 (common-lisp:defun make-update-function-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name function-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-function-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-function-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-function-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-function-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-function-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-function-definition-response
                    'make-update-function-definition-response))
 (common-lisp:defun make-update-function-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-function-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-function-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-function-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-function-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-group-certificate-configuration-request
                       common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-group-certificate-configuration-request-group-id
                         :initform (common-lisp:error ":group-id is required"))
                        (certificate-expiry-in-milliseconds :initarg
                         :certificate-expiry-in-milliseconds :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-group-certificate-configuration-request-certificate-expiry-in-milliseconds
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-group-certificate-configuration-request
                    'make-update-group-certificate-configuration-request))
 (common-lisp:defun make-update-group-certificate-configuration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id
                     certificate-expiry-in-milliseconds)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-group-certificate-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-group-certificate-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-group-certificate-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-expiry-in-milliseconds))
      (common-lisp:list
       (common-lisp:cons "CertificateExpiryInMilliseconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-group-certificate-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-group-certificate-configuration-response
                       common-lisp:nil
                       ((group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-group-certificate-configuration-response-group-id
                         :initform common-lisp:nil)
                        (certificate-expiry-in-milliseconds :initarg
                         :certificate-expiry-in-milliseconds :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-group-certificate-configuration-response-certificate-expiry-in-milliseconds
                         :initform common-lisp:nil)
                        (certificate-authority-expiry-in-milliseconds :initarg
                         :certificate-authority-expiry-in-milliseconds :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-group-certificate-configuration-response-certificate-authority-expiry-in-milliseconds
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-group-certificate-configuration-response
                    'make-update-group-certificate-configuration-response))
 (common-lisp:defun make-update-group-certificate-configuration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-id
                     certificate-expiry-in-milliseconds
                     certificate-authority-expiry-in-milliseconds)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-group-certificate-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-group-certificate-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-group-certificate-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-authority-expiry-in-milliseconds))
      (common-lisp:list
       (common-lisp:cons "CertificateAuthorityExpiryInMilliseconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-expiry-in-milliseconds))
      (common-lisp:list
       (common-lisp:cons "CertificateExpiryInMilliseconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-id))
      (common-lisp:list
       (common-lisp:cons "GroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-group-certificate-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-group-request common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-group-request-name :initform common-lisp:nil)
                        (group-id :initarg :group-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-group-request-group-id :initform
                         (common-lisp:error ":group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'update-group-request 'make-update-group-request))
 (common-lisp:defun make-update-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name group-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-group-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-group-response 'make-update-group-response))
 (common-lisp:defun make-update-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'update-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-logger-definition-request common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-logger-definition-request-name :initform
                         common-lisp:nil)
                        (logger-definition-id :initarg :logger-definition-id
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         %update-logger-definition-request-logger-definition-id
                         :initform
                         (common-lisp:error
                          ":logger-definition-id is required"))))
 (common-lisp:export
  (common-lisp:list 'update-logger-definition-request
                    'make-update-logger-definition-request))
 (common-lisp:defun make-update-logger-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name logger-definition-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-logger-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-logger-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-logger-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-logger-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-logger-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-logger-definition-response
                    'make-update-logger-definition-response))
 (common-lisp:defun make-update-logger-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-logger-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-logger-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-logger-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-logger-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-resource-definition-request common-lisp:nil
                       ((resource-definition-id :initarg
                         :resource-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-resource-definition-request-resource-definition-id
                         :initform
                         (common-lisp:error
                          ":resource-definition-id is required"))
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-resource-definition-request-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-resource-definition-request
                    'make-update-resource-definition-request))
 (common-lisp:defun make-update-resource-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-definition-id name)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-resource-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-resource-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-resource-definition-response
                    'make-update-resource-definition-response))
 (common-lisp:defun make-update-resource-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-resource-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-subscription-definition-request common-lisp:nil
                       ((subscription-definition-id :initarg
                         :subscription-definition-id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-subscription-definition-request-subscription-definition-id
                         :initform
                         (common-lisp:error
                          ":subscription-definition-id is required"))
                        (name :initarg :name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-subscription-definition-request-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-subscription-definition-request
                    'make-update-subscription-definition-request))
 (common-lisp:defun make-update-subscription-definition-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subscription-definition-id name)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-subscription-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-subscription-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-subscription-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-subscription-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-subscription-definition-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-subscription-definition-response
                    'make-update-subscription-definition-response))
 (common-lisp:defun make-update-subscription-definition-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-subscription-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-subscription-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-subscription-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-subscription-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype update-targets ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun |make-update-targets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype update-targets-architecture () 'common-lisp:string)
(common-lisp:deftype update-targets-operating-system () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass update-thing-runtime-configuration-request
                       common-lisp:nil
                       ((thing-name :initarg :thing-name :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %update-thing-runtime-configuration-request-thing-name
                         :initform
                         (common-lisp:error ":thing-name is required"))
                        (telemetry-configuration :initarg
                         :telemetry-configuration :type
                         (common-lisp:or telemetry-configuration-update
                                         common-lisp:null)
                         :accessor
                         %update-thing-runtime-configuration-request-telemetry-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-thing-runtime-configuration-request
                    'make-update-thing-runtime-configuration-request))
 (common-lisp:defun make-update-thing-runtime-configuration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key thing-name telemetry-configuration)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-thing-runtime-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-runtime-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-runtime-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'telemetry-configuration))
      (common-lisp:list
       (common-lisp:cons "TelemetryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-runtime-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-thing-runtime-configuration-response
                       common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-thing-runtime-configuration-response
                    'make-update-thing-runtime-configuration-response))
 (common-lisp:defun make-update-thing-runtime-configuration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-thing-runtime-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-runtime-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-runtime-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-runtime-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass version-information common-lisp:nil
                       ((version :initarg :version :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %version-information-version :initform
                         common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %version-information-id :initform common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %version-information-creation-timestamp :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         %version-information-arn :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'version-information 'make-version-information))
 (common-lisp:defun make-version-information
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version id creation-timestamp arn)
   (common-lisp:apply #'common-lisp:make-instance 'version-information
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input version-information))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input version-information))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input version-information))
   common-lisp:nil))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfConnectivityInfo| ()
   '(trivial-types:proper-list connectivity-info))
 (common-lisp:defun |make-__listofconnectivityinfo|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list connectivity-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfConnector| ()
   '(trivial-types:proper-list connector))
 (common-lisp:defun |make-__listofconnector|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list connector))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfCore| () '(trivial-types:proper-list core))
 (common-lisp:defun |make-__listofcore|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list core))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDefinitionInformation| ()
   '(trivial-types:proper-list definition-information))
 (common-lisp:defun |make-__listofdefinitioninformation|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list definition-information))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDevice| () '(trivial-types:proper-list device))
 (common-lisp:defun |make-__listofdevice|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list device))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfFunction| ()
   '(trivial-types:proper-list function))
 (common-lisp:defun |make-__listoffunction|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list function))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfGroupCertificateAuthorityProperties| ()
   '(trivial-types:proper-list group-certificate-authority-properties))
 (common-lisp:defun |make-__listofgroupcertificateauthorityproperties|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            group-certificate-authority-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfGroupInformation| ()
   '(trivial-types:proper-list group-information))
 (common-lisp:defun |make-__listofgroupinformation|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list group-information))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfLogger| () '(trivial-types:proper-list logger))
 (common-lisp:defun |make-__listoflogger|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list logger))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfResource| ()
   '(trivial-types:proper-list resource))
 (common-lisp:defun |make-__listofresource|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfResourceAccessPolicy| ()
   '(trivial-types:proper-list resource-access-policy))
 (common-lisp:defun |make-__listofresourceaccesspolicy|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-access-policy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSubscription| ()
   '(trivial-types:proper-list subscription))
 (common-lisp:defun |make-__listofsubscription|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subscription))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfVersionInformation| ()
   '(trivial-types:proper-list version-information))
 (common-lisp:defun |make-__listofversioninformation|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list version-information))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun |make-__listof__string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__mapOf__string| () 'common-lisp:hash-table)
 (common-lisp:defun |make-__mapof__string|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun associate-role-to-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-id role-arn)
   (common-lisp:declare (common-lisp:ignorable group-id role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-role-to-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/role"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "AssociateRoleToGroup"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-role-to-group))
(common-lisp:progn
 (common-lisp:defun associate-service-role-to-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key role-arn)
   (common-lisp:declare (common-lisp:ignorable role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-service-role-to-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        "/greengrass/servicerole"
                                                        "AssociateServiceRoleToAccount"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-service-role-to-account))
(common-lisp:progn
 (common-lisp:defun create-connector-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token initial-version name
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token initial-version name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-connector-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/greengrass/definition/connectors"
                                                        "CreateConnectorDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-connector-definition))
(common-lisp:progn
 (common-lisp:defun create-connector-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token connector-definition-id
                     connectors)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token connector-definition-id
     connectors))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-connector-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/connectors/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'connector-definition-id))))
                                                        "CreateConnectorDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-connector-definition-version))
(common-lisp:progn
 (common-lisp:defun create-core-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token initial-version name
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token initial-version name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-core-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/greengrass/definition/cores"
                                                        "CreateCoreDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-core-definition))
(common-lisp:progn
 (common-lisp:defun create-core-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token core-definition-id
                     cores)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token core-definition-id cores))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-core-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/cores/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-definition-id))))
                                                        "CreateCoreDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-core-definition-version))
(common-lisp:progn
 (common-lisp:defun create-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token deployment-id
                     deployment-type group-id group-version-id)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token deployment-id deployment-type
     group-id group-version-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "CreateDeployment"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-deployment))
(common-lisp:progn
 (common-lisp:defun create-device-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token initial-version name
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token initial-version name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-device-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/greengrass/definition/devices"
                                                        "CreateDeviceDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-device-definition))
(common-lisp:progn
 (common-lisp:defun create-device-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token device-definition-id
                     devices)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token device-definition-id devices))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-device-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/devices/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'device-definition-id))))
                                                        "CreateDeviceDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-device-definition-version))
(common-lisp:progn
 (common-lisp:defun create-function-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token initial-version name
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token initial-version name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-function-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/greengrass/definition/functions"
                                                        "CreateFunctionDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-function-definition))
(common-lisp:progn
 (common-lisp:defun create-function-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token default-config
                     function-definition-id functions)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token default-config
     function-definition-id functions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-function-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/functions/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'function-definition-id))))
                                                        "CreateFunctionDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-function-definition-version))
(common-lisp:progn
 (common-lisp:defun create-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token initial-version name
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token initial-version name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/greengrass/groups"
                                                        "CreateGroup"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-group))
(common-lisp:progn
 (common-lisp:defun create-group-certificate-authority
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token group-id)
   (common-lisp:declare (common-lisp:ignorable amzn-client-token group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-group-certificate-authority-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/certificateauthorities"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "CreateGroupCertificateAuthority"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-group-certificate-authority))
(common-lisp:progn
 (common-lisp:defun create-group-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token
                     connector-definition-version-arn
                     core-definition-version-arn device-definition-version-arn
                     function-definition-version-arn group-id
                     logger-definition-version-arn
                     resource-definition-version-arn
                     subscription-definition-version-arn)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token connector-definition-version-arn
     core-definition-version-arn device-definition-version-arn
     function-definition-version-arn group-id logger-definition-version-arn
     resource-definition-version-arn subscription-definition-version-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-group-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "CreateGroupVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-group-version))
(common-lisp:progn
 (common-lisp:defun create-logger-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token initial-version name
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token initial-version name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-logger-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/greengrass/definition/loggers"
                                                        "CreateLoggerDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-logger-definition))
(common-lisp:progn
 (common-lisp:defun create-logger-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token logger-definition-id
                     loggers)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token logger-definition-id loggers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-logger-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/loggers/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'logger-definition-id))))
                                                        "CreateLoggerDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-logger-definition-version))
(common-lisp:progn
 (common-lisp:defun create-resource-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token initial-version name
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token initial-version name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-resource-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/greengrass/definition/resources"
                                                        "CreateResourceDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-resource-definition))
(common-lisp:progn
 (common-lisp:defun create-resource-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token resource-definition-id
                     resources)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token resource-definition-id resources))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-resource-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/resources/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-definition-id))))
                                                        "CreateResourceDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-resource-definition-version))
(common-lisp:progn
 (common-lisp:defun create-software-update-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token s3url-signer-role
                     software-to-update update-agent-log-level update-targets
                     update-targets-architecture
                     update-targets-operating-system)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token s3url-signer-role
     software-to-update update-agent-log-level update-targets
     update-targets-architecture update-targets-operating-system))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-software-update-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/greengrass/updates"
                                                        "CreateSoftwareUpdateJob"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-software-update-job))
(common-lisp:progn
 (common-lisp:defun create-subscription-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token initial-version name
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token initial-version name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-subscription-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/greengrass/definition/subscriptions"
                                                        "CreateSubscriptionDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-subscription-definition))
(common-lisp:progn
 (common-lisp:defun create-subscription-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token
                     subscription-definition-id subscriptions)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token subscription-definition-id
     subscriptions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-subscription-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/subscriptions/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'subscription-definition-id))))
                                                        "CreateSubscriptionDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-subscription-definition-version))
(common-lisp:progn
 (common-lisp:defun delete-connector-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key connector-definition-id)
   (common-lisp:declare (common-lisp:ignorable connector-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-connector-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/connectors/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'connector-definition-id))))
                                                        "DeleteConnectorDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-connector-definition))
(common-lisp:progn
 (common-lisp:defun delete-core-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key core-definition-id)
   (common-lisp:declare (common-lisp:ignorable core-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-core-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/cores/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-definition-id))))
                                                        "DeleteCoreDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-core-definition))
(common-lisp:progn
 (common-lisp:defun delete-device-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-definition-id)
   (common-lisp:declare (common-lisp:ignorable device-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-device-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/devices/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'device-definition-id))))
                                                        "DeleteDeviceDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-device-definition))
(common-lisp:progn
 (common-lisp:defun delete-function-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-definition-id)
   (common-lisp:declare (common-lisp:ignorable function-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-function-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/functions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'function-definition-id))))
                                                        "DeleteFunctionDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-function-definition))
(common-lisp:progn
 (common-lisp:defun delete-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-id)
   (common-lisp:declare (common-lisp:ignorable group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "DeleteGroup"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-group))
(common-lisp:progn
 (common-lisp:defun delete-logger-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key logger-definition-id)
   (common-lisp:declare (common-lisp:ignorable logger-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-logger-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/loggers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'logger-definition-id))))
                                                        "DeleteLoggerDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-logger-definition))
(common-lisp:progn
 (common-lisp:defun delete-resource-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-definition-id)
   (common-lisp:declare (common-lisp:ignorable resource-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-resource-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-definition-id))))
                                                        "DeleteResourceDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-resource-definition))
(common-lisp:progn
 (common-lisp:defun delete-subscription-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subscription-definition-id)
   (common-lisp:declare (common-lisp:ignorable subscription-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-subscription-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/subscriptions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'subscription-definition-id))))
                                                        "DeleteSubscriptionDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-subscription-definition))
(common-lisp:progn
 (common-lisp:defun disassociate-role-from-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-id)
   (common-lisp:declare (common-lisp:ignorable group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-role-from-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/role"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "DisassociateRoleFromGroup"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-role-from-group))
(common-lisp:progn
 (common-lisp:defun disassociate-service-role-from-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'greengrass-request :method "DELETE" :path
                                "/greengrass/servicerole" :protocol :rest-json
                                :operation "DisassociateServiceRoleFromAccount"
                                :params
                                `(("Action"
                                   ,@"DisassociateServiceRoleFromAccount")
                                  ("Version" ,@"2017-06-07"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'disassociate-service-role-from-account))
(common-lisp:progn
 (common-lisp:defun get-associated-role
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-id)
   (common-lisp:declare (common-lisp:ignorable group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-associated-role-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/role"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "GetAssociatedRole"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-associated-role))
(common-lisp:progn
 (common-lisp:defun get-bulk-deployment-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bulk-deployment-id)
   (common-lisp:declare (common-lisp:ignorable bulk-deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bulk-deployment-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/bulk/deployments/~A/status"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bulk-deployment-id))))
                                                        "GetBulkDeploymentStatus"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-bulk-deployment-status))
(common-lisp:progn
 (common-lisp:defun get-connectivity-info
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name)
   (common-lisp:declare (common-lisp:ignorable thing-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-connectivity-info-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/things/~A/connectivityInfo"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "GetConnectivityInfo"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-connectivity-info))
(common-lisp:progn
 (common-lisp:defun get-connector-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key connector-definition-id)
   (common-lisp:declare (common-lisp:ignorable connector-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-connector-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/connectors/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'connector-definition-id))))
                                                        "GetConnectorDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-connector-definition))
(common-lisp:progn
 (common-lisp:defun get-connector-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key connector-definition-id
                     connector-definition-version-id next-token)
   (common-lisp:declare
    (common-lisp:ignorable connector-definition-id
     connector-definition-version-id next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-connector-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/connectors/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'connector-definition-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'connector-definition-version-id))))
                                                        "GetConnectorDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-connector-definition-version))
(common-lisp:progn
 (common-lisp:defun get-core-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key core-definition-id)
   (common-lisp:declare (common-lisp:ignorable core-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-core-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/cores/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-definition-id))))
                                                        "GetCoreDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-core-definition))
(common-lisp:progn
 (common-lisp:defun get-core-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key core-definition-id
                     core-definition-version-id)
   (common-lisp:declare
    (common-lisp:ignorable core-definition-id core-definition-version-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-core-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/cores/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-definition-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-definition-version-id))))
                                                        "GetCoreDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-core-definition-version))
(common-lisp:progn
 (common-lisp:defun get-deployment-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id group-id)
   (common-lisp:declare (common-lisp:ignorable deployment-id group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployment-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/deployments/~A/status"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "GetDeploymentStatus"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-deployment-status))
(common-lisp:progn
 (common-lisp:defun get-device-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-definition-id)
   (common-lisp:declare (common-lisp:ignorable device-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-device-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/devices/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'device-definition-id))))
                                                        "GetDeviceDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-device-definition))
(common-lisp:progn
 (common-lisp:defun get-device-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-definition-id
                     device-definition-version-id next-token)
   (common-lisp:declare
    (common-lisp:ignorable device-definition-id device-definition-version-id
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-device-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/devices/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'device-definition-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'device-definition-version-id))))
                                                        "GetDeviceDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-device-definition-version))
(common-lisp:progn
 (common-lisp:defun get-function-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-definition-id)
   (common-lisp:declare (common-lisp:ignorable function-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-function-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/functions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'function-definition-id))))
                                                        "GetFunctionDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-function-definition))
(common-lisp:progn
 (common-lisp:defun get-function-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-definition-id
                     function-definition-version-id next-token)
   (common-lisp:declare
    (common-lisp:ignorable function-definition-id
     function-definition-version-id next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-function-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/functions/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'function-definition-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'function-definition-version-id))))
                                                        "GetFunctionDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-function-definition-version))
(common-lisp:progn
 (common-lisp:defun get-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-id)
   (common-lisp:declare (common-lisp:ignorable group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "GetGroup"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-group))
(common-lisp:progn
 (common-lisp:defun get-group-certificate-authority
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key certificate-authority-id group-id)
   (common-lisp:declare
    (common-lisp:ignorable certificate-authority-id group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-group-certificate-authority-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/certificateauthorities/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'certificate-authority-id))))
                                                        "GetGroupCertificateAuthority"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-group-certificate-authority))
(common-lisp:progn
 (common-lisp:defun get-group-certificate-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-id)
   (common-lisp:declare (common-lisp:ignorable group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-group-certificate-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/certificateauthorities/configuration/expiry"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "GetGroupCertificateConfiguration"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-group-certificate-configuration))
(common-lisp:progn
 (common-lisp:defun get-group-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-id group-version-id)
   (common-lisp:declare (common-lisp:ignorable group-id group-version-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-group-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-version-id))))
                                                        "GetGroupVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-group-version))
(common-lisp:progn
 (common-lisp:defun get-logger-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key logger-definition-id)
   (common-lisp:declare (common-lisp:ignorable logger-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-logger-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/loggers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'logger-definition-id))))
                                                        "GetLoggerDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-logger-definition))
(common-lisp:progn
 (common-lisp:defun get-logger-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key logger-definition-id
                     logger-definition-version-id next-token)
   (common-lisp:declare
    (common-lisp:ignorable logger-definition-id logger-definition-version-id
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-logger-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/loggers/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'logger-definition-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'logger-definition-version-id))))
                                                        "GetLoggerDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-logger-definition-version))
(common-lisp:progn
 (common-lisp:defun get-resource-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-definition-id)
   (common-lisp:declare (common-lisp:ignorable resource-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-definition-id))))
                                                        "GetResourceDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-definition))
(common-lisp:progn
 (common-lisp:defun get-resource-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-definition-id
                     resource-definition-version-id)
   (common-lisp:declare
    (common-lisp:ignorable resource-definition-id
     resource-definition-version-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-resource-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/resources/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-definition-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-definition-version-id))))
                                                        "GetResourceDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-definition-version))
(common-lisp:progn
 (common-lisp:defun get-service-role-for-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'greengrass-request :method "GET" :path
                                "/greengrass/servicerole" :protocol :rest-json
                                :operation "GetServiceRoleForAccount" :params
                                `(("Action" ,@"GetServiceRoleForAccount")
                                  ("Version" ,@"2017-06-07"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-service-role-for-account))
(common-lisp:progn
 (common-lisp:defun get-subscription-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subscription-definition-id)
   (common-lisp:declare (common-lisp:ignorable subscription-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-subscription-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/subscriptions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'subscription-definition-id))))
                                                        "GetSubscriptionDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-subscription-definition))
(common-lisp:progn
 (common-lisp:defun get-subscription-definition-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token subscription-definition-id
                     subscription-definition-version-id)
   (common-lisp:declare
    (common-lisp:ignorable next-token subscription-definition-id
     subscription-definition-version-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-subscription-definition-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/subscriptions/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'subscription-definition-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'subscription-definition-version-id))))
                                                        "GetSubscriptionDefinitionVersion"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-subscription-definition-version))
(common-lisp:progn
 (common-lisp:defun get-thing-runtime-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name)
   (common-lisp:declare (common-lisp:ignorable thing-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-thing-runtime-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/things/~A/runtimeconfig"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "GetThingRuntimeConfiguration"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-thing-runtime-configuration))
(common-lisp:progn
 (common-lisp:defun list-bulk-deployment-detailed-reports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bulk-deployment-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable bulk-deployment-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-bulk-deployment-detailed-reports-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/bulk/deployments/~A/detailed-reports"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bulk-deployment-id))))
                                                        "ListBulkDeploymentDetailedReports"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-bulk-deployment-detailed-reports))
(common-lisp:progn
 (common-lisp:defun list-bulk-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-bulk-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/greengrass/bulk/deployments"
                                                        "ListBulkDeployments"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-bulk-deployments))
(common-lisp:progn
 (common-lisp:defun list-connector-definition-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key connector-definition-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable connector-definition-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-connector-definition-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/connectors/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'connector-definition-id))))
                                                        "ListConnectorDefinitionVersions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-connector-definition-versions))
(common-lisp:progn
 (common-lisp:defun list-connector-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-connector-definitions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/greengrass/definition/connectors"
                                                        "ListConnectorDefinitions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-connector-definitions))
(common-lisp:progn
 (common-lisp:defun list-core-definition-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key core-definition-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable core-definition-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-core-definition-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/cores/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-definition-id))))
                                                        "ListCoreDefinitionVersions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-core-definition-versions))
(common-lisp:progn
 (common-lisp:defun list-core-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-core-definitions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/greengrass/definition/cores"
                                                        "ListCoreDefinitions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-core-definitions))
(common-lisp:progn
 (common-lisp:defun list-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable group-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "ListDeployments"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-deployments))
(common-lisp:progn
 (common-lisp:defun list-device-definition-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-definition-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable device-definition-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-device-definition-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/devices/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'device-definition-id))))
                                                        "ListDeviceDefinitionVersions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-device-definition-versions))
(common-lisp:progn
 (common-lisp:defun list-device-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-device-definitions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/greengrass/definition/devices"
                                                        "ListDeviceDefinitions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-device-definitions))
(common-lisp:progn
 (common-lisp:defun list-function-definition-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-definition-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable function-definition-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-function-definition-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/functions/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'function-definition-id))))
                                                        "ListFunctionDefinitionVersions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-function-definition-versions))
(common-lisp:progn
 (common-lisp:defun list-function-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-function-definitions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/greengrass/definition/functions"
                                                        "ListFunctionDefinitions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-function-definitions))
(common-lisp:progn
 (common-lisp:defun list-group-certificate-authorities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-id)
   (common-lisp:declare (common-lisp:ignorable group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-group-certificate-authorities-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/certificateauthorities"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "ListGroupCertificateAuthorities"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-group-certificate-authorities))
(common-lisp:progn
 (common-lisp:defun list-group-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable group-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-group-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "ListGroupVersions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-group-versions))
(common-lisp:progn
 (common-lisp:defun list-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/greengrass/groups"
                                                        "ListGroups"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-groups))
(common-lisp:progn
 (common-lisp:defun list-logger-definition-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key logger-definition-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable logger-definition-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-logger-definition-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/loggers/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'logger-definition-id))))
                                                        "ListLoggerDefinitionVersions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-logger-definition-versions))
(common-lisp:progn
 (common-lisp:defun list-logger-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-logger-definitions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/greengrass/definition/loggers"
                                                        "ListLoggerDefinitions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-logger-definitions))
(common-lisp:progn
 (common-lisp:defun list-resource-definition-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     resource-definition-id)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-resource-definition-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/resources/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-definition-id))))
                                                        "ListResourceDefinitionVersions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-resource-definition-versions))
(common-lisp:progn
 (common-lisp:defun list-resource-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-resource-definitions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/greengrass/definition/resources"
                                                        "ListResourceDefinitions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-resource-definitions))
(common-lisp:progn
 (common-lisp:defun list-subscription-definition-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     subscription-definition-id)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token subscription-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-subscription-definition-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/subscriptions/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'subscription-definition-id))))
                                                        "ListSubscriptionDefinitionVersions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-subscription-definition-versions))
(common-lisp:progn
 (common-lisp:defun list-subscription-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-subscription-definitions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/greengrass/definition/subscriptions"
                                                        "ListSubscriptionDefinitions"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-subscription-definitions))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun reset-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token force group-id)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token force group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reset-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/deployments/$reset"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "ResetDeployments"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'reset-deployments))
(common-lisp:progn
 (common-lisp:defun start-bulk-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key amzn-client-token execution-role-arn
                     input-file-uri tags)
   (common-lisp:declare
    (common-lisp:ignorable amzn-client-token execution-role-arn input-file-uri
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-bulk-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/greengrass/bulk/deployments"
                                                        "StartBulkDeployment"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-bulk-deployment))
(common-lisp:progn
 (common-lisp:defun stop-bulk-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bulk-deployment-id)
   (common-lisp:declare (common-lisp:ignorable bulk-deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-bulk-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/bulk/deployments/~A/$stop"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bulk-deployment-id))))
                                                        "StopBulkDeployment"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-bulk-deployment))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-connectivity-info
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key connectivity-info thing-name)
   (common-lisp:declare (common-lisp:ignorable connectivity-info thing-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-connectivity-info-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/things/~A/connectivityInfo"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "UpdateConnectivityInfo"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-connectivity-info))
(common-lisp:progn
 (common-lisp:defun update-connector-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key connector-definition-id name)
   (common-lisp:declare (common-lisp:ignorable connector-definition-id name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-connector-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/connectors/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'connector-definition-id))))
                                                        "UpdateConnectorDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-connector-definition))
(common-lisp:progn
 (common-lisp:defun update-core-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key core-definition-id name)
   (common-lisp:declare (common-lisp:ignorable core-definition-id name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-core-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/cores/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-definition-id))))
                                                        "UpdateCoreDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-core-definition))
(common-lisp:progn
 (common-lisp:defun update-device-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-definition-id name)
   (common-lisp:declare (common-lisp:ignorable device-definition-id name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-device-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/devices/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'device-definition-id))))
                                                        "UpdateDeviceDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-device-definition))
(common-lisp:progn
 (common-lisp:defun update-function-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-definition-id name)
   (common-lisp:declare (common-lisp:ignorable function-definition-id name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-function-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/functions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'function-definition-id))))
                                                        "UpdateFunctionDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-function-definition))
(common-lisp:progn
 (common-lisp:defun update-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-id name)
   (common-lisp:declare (common-lisp:ignorable group-id name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "UpdateGroup"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-group))
(common-lisp:progn
 (common-lisp:defun update-group-certificate-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key certificate-expiry-in-milliseconds
                     group-id)
   (common-lisp:declare
    (common-lisp:ignorable certificate-expiry-in-milliseconds group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-group-certificate-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/groups/~A/certificateauthorities/configuration/expiry"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-id))))
                                                        "UpdateGroupCertificateConfiguration"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-group-certificate-configuration))
(common-lisp:progn
 (common-lisp:defun update-logger-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key logger-definition-id name)
   (common-lisp:declare (common-lisp:ignorable logger-definition-id name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-logger-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/loggers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'logger-definition-id))))
                                                        "UpdateLoggerDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-logger-definition))
(common-lisp:progn
 (common-lisp:defun update-resource-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name resource-definition-id)
   (common-lisp:declare (common-lisp:ignorable name resource-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-resource-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-definition-id))))
                                                        "UpdateResourceDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-resource-definition))
(common-lisp:progn
 (common-lisp:defun update-subscription-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name subscription-definition-id)
   (common-lisp:declare
    (common-lisp:ignorable name subscription-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-subscription-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/definition/subscriptions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'subscription-definition-id))))
                                                        "UpdateSubscriptionDefinition"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-subscription-definition))
(common-lisp:progn
 (common-lisp:defun update-thing-runtime-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key telemetry-configuration thing-name)
   (common-lisp:declare
    (common-lisp:ignorable telemetry-configuration thing-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-thing-runtime-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrass-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/things/~A/runtimeconfig"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "UpdateThingRuntimeConfiguration"
                                                        "2017-06-07"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-thing-runtime-configuration))
