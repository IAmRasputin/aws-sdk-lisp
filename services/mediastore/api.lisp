;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/mediastore/api
  (:use)
  (:nicknames #:aws/mediastore)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/mediastore/api)
(common-lisp:progn
 (common-lisp:defclass mediastore-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "mediastore" :protocol
                        :json))
 (common-lisp:export 'mediastore-request))
(common-lisp:progn
 (common-lisp:define-condition mediastore-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'mediastore-error))
(common-lisp:defvar *error-map*
  '(("ContainerInUseException" . container-in-use-exception)
    ("ContainerNotFoundException" . container-not-found-exception)
    ("CorsPolicyNotFoundException" . cors-policy-not-found-exception)
    ("InternalServerError" . internal-server-error)
    ("LimitExceededException" . limit-exceeded-exception)
    ("PolicyNotFoundException" . policy-not-found-exception)))
(common-lisp:progn
 (common-lisp:deftype allowed-headers () '(trivial-types:proper-list header))
 (common-lisp:defun |make-allowed-headers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list header))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype allowed-methods ()
   '(trivial-types:proper-list method-name))
 (common-lisp:defun |make-allowed-methods|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list method-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype allowed-origins () '(trivial-types:proper-list origin))
 (common-lisp:defun |make-allowed-origins|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list origin))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass container common-lisp:nil
                       ((access-logging-enabled :initarg
                         :access-logging-enabled :type
                         (common-lisp:or container-access-logging-enabled
                                         common-lisp:null)
                         :accessor %container-access-logging-enabled :initform
                         common-lisp:nil)
                        (status :initarg :status :type
                         (common-lisp:or container-status common-lisp:null)
                         :accessor %container-status :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %container-name :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or container-arn common-lisp:null)
                         :accessor %container-arn :initform common-lisp:nil)
                        (creation-time :initarg :creation-time :type
                         (common-lisp:or time-stamp common-lisp:null) :accessor
                         %container-creation-time :initform common-lisp:nil)
                        (endpoint :initarg :endpoint :type
                         (common-lisp:or endpoint common-lisp:null) :accessor
                         %container-endpoint :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'container 'make-container))
 (common-lisp:defun make-container
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key access-logging-enabled status name arn
                     creation-time endpoint)
   (common-lisp:apply #'common-lisp:make-instance 'container
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input container))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input container))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "Endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "ARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-logging-enabled))
      (common-lisp:list
       (common-lisp:cons "AccessLoggingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input container))
   common-lisp:nil))
(common-lisp:deftype container-arn () 'common-lisp:string)
(common-lisp:deftype container-access-logging-enabled () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:define-condition container-in-use-exception
     (mediastore-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       container-in-use-exception-message)))
 (common-lisp:export
  (common-lisp:list 'container-in-use-exception
                    'container-in-use-exception-message)))
(common-lisp:deftype container-level-metrics () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype container-list () '(trivial-types:proper-list container))
 (common-lisp:defun |make-container-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list container))
   aws-sdk/generator/shape::members))
(common-lisp:deftype container-list-limit () 'common-lisp:integer)
(common-lisp:deftype container-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition container-not-found-exception
     (mediastore-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       container-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'container-not-found-exception
                    'container-not-found-exception-message)))
(common-lisp:deftype container-policy () 'common-lisp:string)
(common-lisp:deftype container-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype cors-policy () '(trivial-types:proper-list cors-rule))
 (common-lisp:defun |make-cors-policy|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cors-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition cors-policy-not-found-exception
     (mediastore-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       cors-policy-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'cors-policy-not-found-exception
                    'cors-policy-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass cors-rule common-lisp:nil
                       ((expose-headers :initarg :expose-headers :type
                         (common-lisp:or expose-headers common-lisp:null)
                         :accessor %cors-rule-expose-headers :initform
                         common-lisp:nil)
                        (max-age-seconds :initarg :max-age-seconds :type
                         (common-lisp:or max-age-seconds common-lisp:null)
                         :accessor %cors-rule-max-age-seconds :initform
                         common-lisp:nil)
                        (allowed-headers :initarg :allowed-headers :type
                         (common-lisp:or allowed-headers common-lisp:null)
                         :accessor %cors-rule-allowed-headers :initform
                         (common-lisp:error ":allowed-headers is required"))
                        (allowed-methods :initarg :allowed-methods :type
                         (common-lisp:or allowed-methods common-lisp:null)
                         :accessor %cors-rule-allowed-methods :initform
                         common-lisp:nil)
                        (allowed-origins :initarg :allowed-origins :type
                         (common-lisp:or allowed-origins common-lisp:null)
                         :accessor %cors-rule-allowed-origins :initform
                         (common-lisp:error ":allowed-origins is required"))))
 (common-lisp:export (common-lisp:list 'cors-rule 'make-cors-rule))
 (common-lisp:defun make-cors-rule
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key expose-headers max-age-seconds
                     allowed-headers allowed-methods allowed-origins)
   (common-lisp:apply #'common-lisp:make-instance 'cors-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cors-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cors-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-origins))
      (common-lisp:list
       (common-lisp:cons "AllowedOrigins"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-methods))
      (common-lisp:list
       (common-lisp:cons "AllowedMethods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-headers))
      (common-lisp:list
       (common-lisp:cons "AllowedHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-age-seconds))
      (common-lisp:list
       (common-lisp:cons "MaxAgeSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expose-headers))
      (common-lisp:list
       (common-lisp:cons "ExposeHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cors-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-container-input common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %create-container-input-tags :initform
                         common-lisp:nil)
                        (container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %create-container-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-container-input 'make-create-container-input))
 (common-lisp:defun make-create-container-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags container-name)
   (common-lisp:apply #'common-lisp:make-instance 'create-container-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-container-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-container-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-container-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-container-output common-lisp:nil
                       ((container :initarg :container :type
                         (common-lisp:or container common-lisp:null) :accessor
                         %create-container-output-container :initform
                         (common-lisp:error ":container is required"))))
 (common-lisp:export
  (common-lisp:list 'create-container-output 'make-create-container-output))
 (common-lisp:defun make-create-container-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container)
   (common-lisp:apply #'common-lisp:make-instance 'create-container-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-container-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-container-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container))
      (common-lisp:list
       (common-lisp:cons "Container"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-container-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-container-input common-lisp:nil
                       ((container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %delete-container-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-container-input 'make-delete-container-input))
 (common-lisp:defun make-delete-container-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-name)
   (common-lisp:apply #'common-lisp:make-instance 'delete-container-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-container-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-container-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-container-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-container-output common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-container-output 'make-delete-container-output))
 (common-lisp:defun make-delete-container-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-container-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-container-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-container-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-container-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-container-policy-input common-lisp:nil
                       ((container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor
                         %delete-container-policy-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-container-policy-input
                    'make-delete-container-policy-input))
 (common-lisp:defun make-delete-container-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-container-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-container-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-container-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-container-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-container-policy-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-container-policy-output
                    'make-delete-container-policy-output))
 (common-lisp:defun make-delete-container-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-container-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-container-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-container-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-container-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-cors-policy-input common-lisp:nil
                       ((container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %delete-cors-policy-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-cors-policy-input 'make-delete-cors-policy-input))
 (common-lisp:defun make-delete-cors-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-name)
   (common-lisp:apply #'common-lisp:make-instance 'delete-cors-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cors-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cors-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cors-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-cors-policy-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-cors-policy-output
                    'make-delete-cors-policy-output))
 (common-lisp:defun make-delete-cors-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-cors-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cors-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cors-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cors-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-lifecycle-policy-input common-lisp:nil
                       ((container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor
                         %delete-lifecycle-policy-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-lifecycle-policy-input
                    'make-delete-lifecycle-policy-input))
 (common-lisp:defun make-delete-lifecycle-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-lifecycle-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-lifecycle-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-lifecycle-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-lifecycle-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-lifecycle-policy-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-lifecycle-policy-output
                    'make-delete-lifecycle-policy-output))
 (common-lisp:defun make-delete-lifecycle-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-lifecycle-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-lifecycle-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-lifecycle-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-lifecycle-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-metric-policy-input common-lisp:nil
                       ((container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %delete-metric-policy-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-metric-policy-input
                    'make-delete-metric-policy-input))
 (common-lisp:defun make-delete-metric-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-name)
   (common-lisp:apply #'common-lisp:make-instance 'delete-metric-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-metric-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-metric-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-metric-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-metric-policy-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-metric-policy-output
                    'make-delete-metric-policy-output))
 (common-lisp:defun make-delete-metric-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-metric-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-metric-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-metric-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-metric-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-container-input common-lisp:nil
                       ((container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %describe-container-input-container-name
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-container-input 'make-describe-container-input))
 (common-lisp:defun make-describe-container-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-name)
   (common-lisp:apply #'common-lisp:make-instance 'describe-container-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-container-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-container-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-container-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-container-output common-lisp:nil
                       ((container :initarg :container :type
                         (common-lisp:or container common-lisp:null) :accessor
                         %describe-container-output-container :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-container-output
                    'make-describe-container-output))
 (common-lisp:defun make-describe-container-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container)
   (common-lisp:apply #'common-lisp:make-instance 'describe-container-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-container-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-container-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container))
      (common-lisp:list
       (common-lisp:cons "Container"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-container-output))
   common-lisp:nil))
(common-lisp:deftype endpoint () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype expose-headers () '(trivial-types:proper-list header))
 (common-lisp:defun |make-expose-headers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list header))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass get-container-policy-input common-lisp:nil
                       ((container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %get-container-policy-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-container-policy-input
                    'make-get-container-policy-input))
 (common-lisp:defun make-get-container-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-container-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-container-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-container-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-container-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-container-policy-output common-lisp:nil
                       ((policy :initarg :policy :type
                         (common-lisp:or container-policy common-lisp:null)
                         :accessor %get-container-policy-output-policy
                         :initform (common-lisp:error ":policy is required"))))
 (common-lisp:export
  (common-lisp:list 'get-container-policy-output
                    'make-get-container-policy-output))
 (common-lisp:defun make-get-container-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key policy)
   (common-lisp:apply #'common-lisp:make-instance 'get-container-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-container-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-container-policy-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-container-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-cors-policy-input common-lisp:nil
                       ((container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %get-cors-policy-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-cors-policy-input 'make-get-cors-policy-input))
 (common-lisp:defun make-get-cors-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-cors-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-cors-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-cors-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-cors-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-cors-policy-output common-lisp:nil
                       ((cors-policy :initarg :cors-policy :type
                         (common-lisp:or cors-policy common-lisp:null)
                         :accessor %get-cors-policy-output-cors-policy
                         :initform
                         (common-lisp:error ":cors-policy is required"))))
 (common-lisp:export
  (common-lisp:list 'get-cors-policy-output 'make-get-cors-policy-output))
 (common-lisp:defun make-get-cors-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key cors-policy)
   (common-lisp:apply #'common-lisp:make-instance 'get-cors-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-cors-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-cors-policy-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-policy))
      (common-lisp:list
       (common-lisp:cons "CorsPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-cors-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-lifecycle-policy-input common-lisp:nil
                       ((container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %get-lifecycle-policy-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-lifecycle-policy-input
                    'make-get-lifecycle-policy-input))
 (common-lisp:defun make-get-lifecycle-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-lifecycle-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-lifecycle-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-lifecycle-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-lifecycle-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-lifecycle-policy-output common-lisp:nil
                       ((lifecycle-policy :initarg :lifecycle-policy :type
                         (common-lisp:or lifecycle-policy common-lisp:null)
                         :accessor
                         %get-lifecycle-policy-output-lifecycle-policy
                         :initform
                         (common-lisp:error ":lifecycle-policy is required"))))
 (common-lisp:export
  (common-lisp:list 'get-lifecycle-policy-output
                    'make-get-lifecycle-policy-output))
 (common-lisp:defun make-get-lifecycle-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key lifecycle-policy)
   (common-lisp:apply #'common-lisp:make-instance 'get-lifecycle-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-lifecycle-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-lifecycle-policy-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle-policy))
      (common-lisp:list
       (common-lisp:cons "LifecyclePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-lifecycle-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-metric-policy-input common-lisp:nil
                       ((container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %get-metric-policy-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-metric-policy-input 'make-get-metric-policy-input))
 (common-lisp:defun make-get-metric-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-metric-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-metric-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-metric-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-metric-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-metric-policy-output common-lisp:nil
                       ((metric-policy :initarg :metric-policy :type
                         (common-lisp:or metric-policy common-lisp:null)
                         :accessor %get-metric-policy-output-metric-policy
                         :initform
                         (common-lisp:error ":metric-policy is required"))))
 (common-lisp:export
  (common-lisp:list 'get-metric-policy-output 'make-get-metric-policy-output))
 (common-lisp:defun make-get-metric-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key metric-policy)
   (common-lisp:apply #'common-lisp:make-instance 'get-metric-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-metric-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-metric-policy-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-policy))
      (common-lisp:list
       (common-lisp:cons "MetricPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-metric-policy-output))
   common-lisp:nil))
(common-lisp:deftype header () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-error
     (mediastore-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error 'internal-server-error-message)))
(common-lisp:deftype lifecycle-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (mediastore-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-containers-input common-lisp:nil
                       ((max-results :initarg :max-results :type
                         (common-lisp:or container-list-limit common-lisp:null)
                         :accessor %list-containers-input-max-results :initform
                         common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-containers-input-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-containers-input 'make-list-containers-input))
 (common-lisp:defun make-list-containers-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-containers-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-containers-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-containers-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-containers-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-containers-output common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-containers-output-next-token :initform
                         common-lisp:nil)
                        (containers :initarg :containers :type
                         (common-lisp:or container-list common-lisp:null)
                         :accessor %list-containers-output-containers :initform
                         (common-lisp:error ":containers is required"))))
 (common-lisp:export
  (common-lisp:list 'list-containers-output 'make-list-containers-output))
 (common-lisp:defun make-list-containers-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token containers)
   (common-lisp:apply #'common-lisp:make-instance 'list-containers-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-containers-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-containers-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'containers))
      (common-lisp:list
       (common-lisp:cons "Containers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-containers-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-input common-lisp:nil
                       ((resource :initarg :resource :type
                         (common-lisp:or container-arn common-lisp:null)
                         :accessor %list-tags-for-resource-input-resource
                         :initform
                         (common-lisp:error ":resource is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-input
                    'make-list-tags-for-resource-input))
 (common-lisp:defun make-list-tags-for-resource-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource)
   (common-lisp:apply #'common-lisp:make-instance 'list-tags-for-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource))
      (common-lisp:list
       (common-lisp:cons "Resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-output common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %list-tags-for-resource-output-tags :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-output
                    'make-list-tags-for-resource-output))
 (common-lisp:defun make-list-tags-for-resource-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   common-lisp:nil))
(common-lisp:deftype max-age-seconds () 'common-lisp:integer)
(common-lisp:deftype method-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass metric-policy common-lisp:nil
                       ((metric-policy-rules :initarg :metric-policy-rules
                         :type
                         (common-lisp:or metric-policy-rules common-lisp:null)
                         :accessor %metric-policy-metric-policy-rules :initform
                         common-lisp:nil)
                        (container-level-metrics :initarg
                         :container-level-metrics :type
                         (common-lisp:or container-level-metrics
                                         common-lisp:null)
                         :accessor %metric-policy-container-level-metrics
                         :initform
                         (common-lisp:error
                          ":container-level-metrics is required"))))
 (common-lisp:export (common-lisp:list 'metric-policy 'make-metric-policy))
 (common-lisp:defun make-metric-policy
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key metric-policy-rules
                     container-level-metrics)
   (common-lisp:apply #'common-lisp:make-instance 'metric-policy
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-level-metrics))
      (common-lisp:list
       (common-lisp:cons "ContainerLevelMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-policy-rules))
      (common-lisp:list
       (common-lisp:cons "MetricPolicyRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass metric-policy-rule common-lisp:nil
                       ((object-group-name :initarg :object-group-name :type
                         (common-lisp:or object-group-name common-lisp:null)
                         :accessor %metric-policy-rule-object-group-name
                         :initform
                         (common-lisp:error ":object-group-name is required"))
                        (object-group :initarg :object-group :type
                         (common-lisp:or object-group common-lisp:null)
                         :accessor %metric-policy-rule-object-group :initform
                         (common-lisp:error ":object-group is required"))))
 (common-lisp:export
  (common-lisp:list 'metric-policy-rule 'make-metric-policy-rule))
 (common-lisp:defun make-metric-policy-rule
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key object-group-name object-group)
   (common-lisp:apply #'common-lisp:make-instance 'metric-policy-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-policy-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-policy-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-group))
      (common-lisp:list
       (common-lisp:cons "ObjectGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-group-name))
      (common-lisp:list
       (common-lisp:cons "ObjectGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-policy-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype metric-policy-rules ()
   '(trivial-types:proper-list metric-policy-rule))
 (common-lisp:defun |make-metric-policy-rules|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-policy-rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype object-group () 'common-lisp:string)
(common-lisp:deftype object-group-name () 'common-lisp:string)
(common-lisp:deftype origin () 'common-lisp:string)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition policy-not-found-exception
     (mediastore-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       policy-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'policy-not-found-exception
                    'policy-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass put-container-policy-input common-lisp:nil
                       ((policy :initarg :policy :type
                         (common-lisp:or container-policy common-lisp:null)
                         :accessor %put-container-policy-input-policy :initform
                         (common-lisp:error ":policy is required"))
                        (container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %put-container-policy-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'put-container-policy-input
                    'make-put-container-policy-input))
 (common-lisp:defun make-put-container-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key policy container-name)
   (common-lisp:apply #'common-lisp:make-instance 'put-container-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-container-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-container-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-container-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-container-policy-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'put-container-policy-output
                    'make-put-container-policy-output))
 (common-lisp:defun make-put-container-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'put-container-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-container-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-container-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-container-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-cors-policy-input common-lisp:nil
                       ((cors-policy :initarg :cors-policy :type
                         (common-lisp:or cors-policy common-lisp:null)
                         :accessor %put-cors-policy-input-cors-policy :initform
                         (common-lisp:error ":cors-policy is required"))
                        (container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %put-cors-policy-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'put-cors-policy-input 'make-put-cors-policy-input))
 (common-lisp:defun make-put-cors-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key cors-policy container-name)
   (common-lisp:apply #'common-lisp:make-instance 'put-cors-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-cors-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-cors-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-policy))
      (common-lisp:list
       (common-lisp:cons "CorsPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-cors-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-cors-policy-output common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'put-cors-policy-output 'make-put-cors-policy-output))
 (common-lisp:defun make-put-cors-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'put-cors-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-cors-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-cors-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-cors-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-lifecycle-policy-input common-lisp:nil
                       ((lifecycle-policy :initarg :lifecycle-policy :type
                         (common-lisp:or lifecycle-policy common-lisp:null)
                         :accessor %put-lifecycle-policy-input-lifecycle-policy
                         :initform
                         (common-lisp:error ":lifecycle-policy is required"))
                        (container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %put-lifecycle-policy-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'put-lifecycle-policy-input
                    'make-put-lifecycle-policy-input))
 (common-lisp:defun make-put-lifecycle-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key lifecycle-policy container-name)
   (common-lisp:apply #'common-lisp:make-instance 'put-lifecycle-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-lifecycle-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-lifecycle-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle-policy))
      (common-lisp:list
       (common-lisp:cons "LifecyclePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-lifecycle-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-lifecycle-policy-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'put-lifecycle-policy-output
                    'make-put-lifecycle-policy-output))
 (common-lisp:defun make-put-lifecycle-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'put-lifecycle-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-lifecycle-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-lifecycle-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-lifecycle-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-metric-policy-input common-lisp:nil
                       ((metric-policy :initarg :metric-policy :type
                         (common-lisp:or metric-policy common-lisp:null)
                         :accessor %put-metric-policy-input-metric-policy
                         :initform
                         (common-lisp:error ":metric-policy is required"))
                        (container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %put-metric-policy-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'put-metric-policy-input 'make-put-metric-policy-input))
 (common-lisp:defun make-put-metric-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key metric-policy container-name)
   (common-lisp:apply #'common-lisp:make-instance 'put-metric-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-metric-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-metric-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-policy))
      (common-lisp:list
       (common-lisp:cons "MetricPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-metric-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-metric-policy-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'put-metric-policy-output 'make-put-metric-policy-output))
 (common-lisp:defun make-put-metric-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'put-metric-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-metric-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-metric-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-metric-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-access-logging-input common-lisp:nil
                       ((container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %start-access-logging-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'start-access-logging-input
                    'make-start-access-logging-input))
 (common-lisp:defun make-start-access-logging-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-name)
   (common-lisp:apply #'common-lisp:make-instance 'start-access-logging-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-access-logging-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-access-logging-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-access-logging-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-access-logging-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'start-access-logging-output
                    'make-start-access-logging-output))
 (common-lisp:defun make-start-access-logging-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'start-access-logging-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-access-logging-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-access-logging-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-access-logging-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-access-logging-input common-lisp:nil
                       ((container-name :initarg :container-name :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %stop-access-logging-input-container-name
                         :initform
                         (common-lisp:error ":container-name is required"))))
 (common-lisp:export
  (common-lisp:list 'stop-access-logging-input
                    'make-stop-access-logging-input))
 (common-lisp:defun make-stop-access-logging-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-name)
   (common-lisp:apply #'common-lisp:make-instance 'stop-access-logging-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-access-logging-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-access-logging-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "ContainerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-access-logging-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-access-logging-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'stop-access-logging-output
                    'make-stop-access-logging-output))
 (common-lisp:defun make-stop-access-logging-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'stop-access-logging-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-access-logging-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-access-logging-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-access-logging-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((value :initarg :value :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         %tag-value :initform common-lisp:nil)
                        (key :initarg :key :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         %tag-key :initform
                         (common-lisp:error ":key is required"))))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defun make-tag
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value key)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-input common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %tag-resource-input-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource :initarg :resource :type
                         (common-lisp:or container-arn common-lisp:null)
                         :accessor %tag-resource-input-resource :initform
                         (common-lisp:error ":resource is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-input 'make-tag-resource-input))
 (common-lisp:defun make-tag-resource-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource))
      (common-lisp:list
       (common-lisp:cons "Resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-output common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'tag-resource-output 'make-tag-resource-output))
 (common-lisp:defun make-tag-resource-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-output))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype time-stamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-input common-lisp:nil
                       ((tag-keys :initarg :tag-keys :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor %untag-resource-input-tag-keys :initform
                         (common-lisp:error ":tag-keys is required"))
                        (resource :initarg :resource :type
                         (common-lisp:or container-arn common-lisp:null)
                         :accessor %untag-resource-input-resource :initform
                         (common-lisp:error ":resource is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-input 'make-untag-resource-input))
 (common-lisp:defun make-untag-resource-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource))
      (common-lisp:list
       (common-lisp:cons "Resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input untag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-output common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'untag-resource-output 'make-untag-resource-output))
 (common-lisp:defun make-untag-resource-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun create-container
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name tags)
   (common-lisp:declare (common-lisp:ignorable container-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-container-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateContainer"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-container))
(common-lisp:progn
 (common-lisp:defun delete-container
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name)
   (common-lisp:declare (common-lisp:ignorable container-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-container-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteContainer"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-container))
(common-lisp:progn
 (common-lisp:defun delete-container-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name)
   (common-lisp:declare (common-lisp:ignorable container-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-container-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteContainerPolicy"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-container-policy))
(common-lisp:progn
 (common-lisp:defun delete-cors-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name)
   (common-lisp:declare (common-lisp:ignorable container-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-cors-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteCorsPolicy"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-cors-policy))
(common-lisp:progn
 (common-lisp:defun delete-lifecycle-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name)
   (common-lisp:declare (common-lisp:ignorable container-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-lifecycle-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteLifecyclePolicy"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-lifecycle-policy))
(common-lisp:progn
 (common-lisp:defun delete-metric-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name)
   (common-lisp:declare (common-lisp:ignorable container-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-metric-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteMetricPolicy"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-metric-policy))
(common-lisp:progn
 (common-lisp:defun describe-container
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name)
   (common-lisp:declare (common-lisp:ignorable container-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-container-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeContainer"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-container))
(common-lisp:progn
 (common-lisp:defun get-container-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name)
   (common-lisp:declare (common-lisp:ignorable container-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-container-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetContainerPolicy"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-container-policy))
(common-lisp:progn
 (common-lisp:defun get-cors-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name)
   (common-lisp:declare (common-lisp:ignorable container-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-cors-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetCorsPolicy"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-cors-policy))
(common-lisp:progn
 (common-lisp:defun get-lifecycle-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name)
   (common-lisp:declare (common-lisp:ignorable container-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-lifecycle-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetLifecyclePolicy"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-lifecycle-policy))
(common-lisp:progn
 (common-lisp:defun get-metric-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name)
   (common-lisp:declare (common-lisp:ignorable container-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-metric-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetMetricPolicy"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-metric-policy))
(common-lisp:progn
 (common-lisp:defun list-containers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-containers-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListContainers"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-containers))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource)
   (common-lisp:declare (common-lisp:ignorable resource))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListTagsForResource"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-container-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name policy)
   (common-lisp:declare (common-lisp:ignorable container-name policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-container-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "PutContainerPolicy"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-container-policy))
(common-lisp:progn
 (common-lisp:defun put-cors-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name cors-policy)
   (common-lisp:declare (common-lisp:ignorable container-name cors-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-cors-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "PutCorsPolicy"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-cors-policy))
(common-lisp:progn
 (common-lisp:defun put-lifecycle-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name lifecycle-policy)
   (common-lisp:declare
    (common-lisp:ignorable container-name lifecycle-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-lifecycle-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "PutLifecyclePolicy"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-lifecycle-policy))
(common-lisp:progn
 (common-lisp:defun put-metric-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name metric-policy)
   (common-lisp:declare (common-lisp:ignorable container-name metric-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-metric-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "PutMetricPolicy"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-metric-policy))
(common-lisp:progn
 (common-lisp:defun start-access-logging
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name)
   (common-lisp:declare (common-lisp:ignorable container-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-access-logging-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartAccessLogging"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-access-logging))
(common-lisp:progn
 (common-lisp:defun stop-access-logging
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-name)
   (common-lisp:declare (common-lisp:ignorable container-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-access-logging-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StopAccessLogging"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-access-logging))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource tags)
   (common-lisp:declare (common-lisp:ignorable resource tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "TagResource"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediastore-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UntagResource"
                                                        "2017-09-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
