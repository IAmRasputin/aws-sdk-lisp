;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/mediatailor/api
  (:use)
  (:nicknames #:aws/mediatailor)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/mediatailor/api)
(common-lisp:progn
 (common-lisp:defclass mediatailor-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "mediatailor"))
 (common-lisp:export 'mediatailor-request))
(common-lisp:progn
 (common-lisp:define-condition mediatailor-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'mediatailor-error))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (access-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-access-configuration-"))
   (access-type common-lisp:nil :type
    (common-lisp:or access-type common-lisp:null))
   (secrets-manager-access-token-configuration common-lisp:nil :type
    (common-lisp:or secrets-manager-access-token-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-configuration 'make-access-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input access-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input access-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-type))
      (common-lisp:list
       (common-lisp:cons "AccessType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'secrets-manager-access-token-configuration))
      (common-lisp:list
       (common-lisp:cons "SecretsManagerAccessTokenConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input access-configuration))
   common-lisp:nil))
(common-lisp:deftype access-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ad-break (:copier common-lisp:nil) (:conc-name "struct-shape-ad-break-"))
   (message-type common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null))
   (offset-millis common-lisp:nil :type
    (common-lisp:or |__long| common-lisp:null))
   (slate common-lisp:nil :type (common-lisp:or slate-source common-lisp:null))
   (splice-insert-message common-lisp:nil :type
    (common-lisp:or splice-insert-message common-lisp:null))
   (time-signal-message common-lisp:nil :type
    (common-lisp:or time-signal-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ad-break 'make-ad-break))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ad-break))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ad-break))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-type))
      (common-lisp:list
       (common-lisp:cons "MessageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset-millis))
      (common-lisp:list
       (common-lisp:cons "OffsetMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slate))
      (common-lisp:list
       (common-lisp:cons "Slate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'splice-insert-message))
      (common-lisp:list
       (common-lisp:cons "SpliceInsertMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-signal-message))
      (common-lisp:list
       (common-lisp:cons "TimeSignalMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ad-break))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (ad-marker-passthrough (:copier common-lisp:nil)
      (:conc-name "struct-shape-ad-marker-passthrough-"))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ad-marker-passthrough 'make-ad-marker-passthrough))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ad-marker-passthrough))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ad-marker-passthrough))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ad-marker-passthrough))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (alert (:copier common-lisp:nil) (:conc-name "struct-shape-alert-"))
   (alert-code (common-lisp:error ":alert-code is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (alert-message (common-lisp:error ":alert-message is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-time (common-lisp:error ":last-modified-time is required")
    :type (common-lisp:or |__timestampUnix| common-lisp:null))
   (related-resource-arns
    (common-lisp:error ":related-resource-arns is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alert 'make-alert))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alert))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alert))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-code))
      (common-lisp:list
       (common-lisp:cons "AlertCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-message))
      (common-lisp:list
       (common-lisp:cons "AlertMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'related-resource-arns))
      (common-lisp:list
       (common-lisp:cons "RelatedResourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alert))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (avail-matching-criteria (:copier common-lisp:nil)
      (:conc-name "struct-shape-avail-matching-criteria-"))
   (dynamic-variable (common-lisp:error ":dynamic-variable is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (operator (common-lisp:error ":operator is required") :type
    (common-lisp:or operator common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'avail-matching-criteria 'make-avail-matching-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          avail-matching-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          avail-matching-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamic-variable))
      (common-lisp:list
       (common-lisp:cons "DynamicVariable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operator))
      (common-lisp:list
       (common-lisp:cons "Operator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          avail-matching-criteria))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (avail-suppression (:copier common-lisp:nil)
      (:conc-name "struct-shape-avail-suppression-"))
   (mode common-lisp:nil :type (common-lisp:or mode common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'avail-suppression 'make-avail-suppression))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input avail-suppression))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input avail-suppression))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input avail-suppression))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (mediatailor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (bumper (:copier common-lisp:nil) (:conc-name "struct-shape-bumper-"))
   (end-url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (start-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bumper 'make-bumper))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bumper))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bumper))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-url))
      (common-lisp:list
       (common-lisp:cons "EndUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-url))
      (common-lisp:list
       (common-lisp:cons "StartUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bumper))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cdn-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-cdn-configuration-"))
   (ad-segment-url-prefix common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (content-segment-url-prefix common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cdn-configuration 'make-cdn-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cdn-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cdn-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-segment-url-prefix))
      (common-lisp:list
       (common-lisp:cons "AdSegmentUrlPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-segment-url-prefix))
      (common-lisp:list
       (common-lisp:cons "ContentSegmentUrlPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cdn-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (channel (:copier common-lisp:nil) (:conc-name "struct-shape-channel-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (channel-state (common-lisp:error ":channel-state is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (filler-slate common-lisp:nil :type
    (common-lisp:or slate-source common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (log-configuration (common-lisp:error ":log-configuration is required")
    :type (common-lisp:or log-configuration-for-channel common-lisp:null))
   (outputs (common-lisp:error ":outputs is required") :type
    (common-lisp:or response-outputs common-lisp:null))
   (playback-mode (common-lisp:error ":playback-mode is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (tier (common-lisp:error ":tier is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'channel 'make-channel))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-state))
      (common-lisp:list
       (common-lisp:cons "ChannelState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filler-slate))
      (common-lisp:list
       (common-lisp:cons "FillerSlate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-configuration))
      (common-lisp:list
       (common-lisp:cons "LogConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-mode))
      (common-lisp:list
       (common-lisp:cons "PlaybackMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tier))
      (common-lisp:list
       (common-lisp:cons "Tier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel))
   common-lisp:nil))
(common-lisp:deftype channel-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (clip-range (:copier common-lisp:nil)
      (:conc-name "struct-shape-clip-range-"))
   (end-offset-millis (common-lisp:error ":end-offset-millis is required")
    :type (common-lisp:or |__long| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'clip-range 'make-clip-range))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input clip-range))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input clip-range))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset-millis))
      (common-lisp:list
       (common-lisp:cons "EndOffsetMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input clip-range))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype configuration-aliases-request () 'common-lisp:hash-table)
 (common-lisp:defun |make-configuration-aliases-request|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype configuration-aliases-response ()
   'common-lisp:hash-table)
 (common-lisp:defun |make-configuration-aliases-response|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (configure-logs-for-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-configure-logs-for-channel-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (log-types (common-lisp:error ":log-types is required") :type
    (common-lisp:or log-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configure-logs-for-channel-request
                    'make-configure-logs-for-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-types))
      (common-lisp:list
       (common-lisp:cons "LogTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (configure-logs-for-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-configure-logs-for-channel-response-"))
   (channel-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (log-types common-lisp:nil :type
    (common-lisp:or log-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configure-logs-for-channel-response
                    'make-configure-logs-for-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-types))
      (common-lisp:list
       (common-lisp:cons "LogTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (configure-logs-for-playback-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-configure-logs-for-playback-configuration-request-"))
   (percent-enabled (common-lisp:error ":percent-enabled is required") :type
    (common-lisp:or |__integer| common-lisp:null))
   (playback-configuration-name
    (common-lisp:error ":playback-configuration-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configure-logs-for-playback-configuration-request
                    'make-configure-logs-for-playback-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-playback-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-playback-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-enabled))
      (common-lisp:list
       (common-lisp:cons "PercentEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-name))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-playback-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (configure-logs-for-playback-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-configure-logs-for-playback-configuration-response-"))
   (percent-enabled (common-lisp:error ":percent-enabled is required") :type
    (common-lisp:or |__integer| common-lisp:null))
   (playback-configuration-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configure-logs-for-playback-configuration-response
                    'make-configure-logs-for-playback-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-playback-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-playback-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-enabled))
      (common-lisp:list
       (common-lisp:cons "PercentEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-name))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-playback-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-channel-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (filler-slate common-lisp:nil :type
    (common-lisp:or slate-source common-lisp:null))
   (outputs (common-lisp:error ":outputs is required") :type
    (common-lisp:or request-outputs common-lisp:null))
   (playback-mode (common-lisp:error ":playback-mode is required") :type
    (common-lisp:or playback-mode common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (tier common-lisp:nil :type (common-lisp:or tier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-channel-request 'make-create-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filler-slate))
      (common-lisp:list
       (common-lisp:cons "FillerSlate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-mode))
      (common-lisp:list
       (common-lisp:cons "PlaybackMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tier))
      (common-lisp:list
       (common-lisp:cons "Tier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-channel-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (channel-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (channel-state common-lisp:nil :type
    (common-lisp:or channel-state common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (filler-slate common-lisp:nil :type
    (common-lisp:or slate-source common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (outputs common-lisp:nil :type
    (common-lisp:or response-outputs common-lisp:null))
   (playback-mode common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (tier common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-channel-response 'make-create-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-state))
      (common-lisp:list
       (common-lisp:cons "ChannelState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filler-slate))
      (common-lisp:list
       (common-lisp:cons "FillerSlate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-mode))
      (common-lisp:list
       (common-lisp:cons "PlaybackMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tier))
      (common-lisp:list
       (common-lisp:cons "Tier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-live-source-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-live-source-request-"))
   (http-package-configurations
    (common-lisp:error ":http-package-configurations is required") :type
    (common-lisp:or http-package-configurations common-lisp:null))
   (live-source-name (common-lisp:error ":live-source-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-live-source-request
                    'make-create-live-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-live-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-live-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-live-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-live-source-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-live-source-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (http-package-configurations common-lisp:nil :type
    (common-lisp:or http-package-configurations common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (live-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-live-source-response
                    'make-create-live-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-live-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-live-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-live-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-prefetch-schedule-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-prefetch-schedule-request-"))
   (consumption (common-lisp:error ":consumption is required") :type
    (common-lisp:or prefetch-consumption common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (playback-configuration-name
    (common-lisp:error ":playback-configuration-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (retrieval (common-lisp:error ":retrieval is required") :type
    (common-lisp:or prefetch-retrieval common-lisp:null))
   (stream-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-prefetch-schedule-request
                    'make-create-prefetch-schedule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-prefetch-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-prefetch-schedule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'consumption))
      (common-lisp:list
       (common-lisp:cons "Consumption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieval))
      (common-lisp:list
       (common-lisp:cons "Retrieval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-prefetch-schedule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-prefetch-schedule-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-prefetch-schedule-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (consumption common-lisp:nil :type
    (common-lisp:or prefetch-consumption common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (playback-configuration-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (retrieval common-lisp:nil :type
    (common-lisp:or prefetch-retrieval common-lisp:null))
   (stream-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-prefetch-schedule-response
                    'make-create-prefetch-schedule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-prefetch-schedule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-prefetch-schedule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'consumption))
      (common-lisp:list
       (common-lisp:cons "Consumption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-name))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieval))
      (common-lisp:list
       (common-lisp:cons "Retrieval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-prefetch-schedule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-program-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-program-request-"))
   (ad-breaks common-lisp:nil :type
    (common-lisp:or |__listOfAdBreak| common-lisp:null))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (live-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (program-name (common-lisp:error ":program-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (schedule-configuration
    (common-lisp:error ":schedule-configuration is required") :type
    (common-lisp:or schedule-configuration common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (vod-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-program-request 'make-create-program-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-program-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-program-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-breaks))
      (common-lisp:list
       (common-lisp:cons "AdBreaks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'schedule-configuration))
      (common-lisp:list
       (common-lisp:cons "ScheduleConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-program-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-program-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-program-response-"))
   (ad-breaks common-lisp:nil :type
    (common-lisp:or |__listOfAdBreak| common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (channel-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (clip-range common-lisp:nil :type
    (common-lisp:or clip-range common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (duration-millis common-lisp:nil :type
    (common-lisp:or |__long| common-lisp:null))
   (live-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (program-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (scheduled-start-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (vod-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-program-response 'make-create-program-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-program-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-program-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-breaks))
      (common-lisp:list
       (common-lisp:cons "AdBreaks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clip-range))
      (common-lisp:list
       (common-lisp:cons "ClipRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-millis))
      (common-lisp:list
       (common-lisp:cons "DurationMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-name))
      (common-lisp:list
       (common-lisp:cons "ProgramName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scheduled-start-time))
      (common-lisp:list
       (common-lisp:cons "ScheduledStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-program-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-source-location-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-source-location-request-"))
   (access-configuration common-lisp:nil :type
    (common-lisp:or access-configuration common-lisp:null))
   (default-segment-delivery-configuration common-lisp:nil :type
    (common-lisp:or default-segment-delivery-configuration common-lisp:null))
   (http-configuration (common-lisp:error ":http-configuration is required")
    :type (common-lisp:or http-configuration common-lisp:null))
   (segment-delivery-configurations common-lisp:nil :type
    (common-lisp:or |__listOfSegmentDeliveryConfiguration| common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-source-location-request
                    'make-create-source-location-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-source-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-source-location-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-configuration))
      (common-lisp:list
       (common-lisp:cons "AccessConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-segment-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "DefaultSegmentDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-configuration))
      (common-lisp:list
       (common-lisp:cons "HttpConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-delivery-configurations))
      (common-lisp:list
       (common-lisp:cons "SegmentDeliveryConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-source-location-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-source-location-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-source-location-response-"))
   (access-configuration common-lisp:nil :type
    (common-lisp:or access-configuration common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (default-segment-delivery-configuration common-lisp:nil :type
    (common-lisp:or default-segment-delivery-configuration common-lisp:null))
   (http-configuration common-lisp:nil :type
    (common-lisp:or http-configuration common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (segment-delivery-configurations common-lisp:nil :type
    (common-lisp:or |__listOfSegmentDeliveryConfiguration| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-source-location-response
                    'make-create-source-location-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-source-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-source-location-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-configuration))
      (common-lisp:list
       (common-lisp:cons "AccessConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-segment-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "DefaultSegmentDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-configuration))
      (common-lisp:list
       (common-lisp:cons "HttpConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-delivery-configurations))
      (common-lisp:list
       (common-lisp:cons "SegmentDeliveryConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-source-location-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-vod-source-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-vod-source-request-"))
   (http-package-configurations
    (common-lisp:error ":http-package-configurations is required") :type
    (common-lisp:or http-package-configurations common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (vod-source-name (common-lisp:error ":vod-source-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vod-source-request
                    'make-create-vod-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vod-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vod-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vod-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-vod-source-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-vod-source-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (http-package-configurations common-lisp:nil :type
    (common-lisp:or http-package-configurations common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (vod-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vod-source-response
                    'make-create-vod-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vod-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vod-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vod-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dash-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-dash-configuration-"))
   (manifest-endpoint-prefix common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (mpd-location common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (origin-manifest-type common-lisp:nil :type
    (common-lisp:or origin-manifest-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dash-configuration 'make-dash-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dash-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dash-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "ManifestEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mpd-location))
      (common-lisp:list
       (common-lisp:cons "MpdLocation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origin-manifest-type))
      (common-lisp:list
       (common-lisp:cons "OriginManifestType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dash-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dash-configuration-for-put (:copier common-lisp:nil)
      (:conc-name "struct-shape-dash-configuration-for-put-"))
   (mpd-location common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (origin-manifest-type common-lisp:nil :type
    (common-lisp:or origin-manifest-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dash-configuration-for-put
                    'make-dash-configuration-for-put))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dash-configuration-for-put))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dash-configuration-for-put))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mpd-location))
      (common-lisp:list
       (common-lisp:cons "MpdLocation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origin-manifest-type))
      (common-lisp:list
       (common-lisp:cons "OriginManifestType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dash-configuration-for-put))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dash-playlist-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-dash-playlist-settings-"))
   (manifest-window-seconds common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (min-buffer-time-seconds common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (min-update-period-seconds common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (suggested-presentation-delay-seconds common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dash-playlist-settings 'make-dash-playlist-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dash-playlist-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dash-playlist-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-window-seconds))
      (common-lisp:list
       (common-lisp:cons "ManifestWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-buffer-time-seconds))
      (common-lisp:list
       (common-lisp:cons "MinBufferTimeSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-update-period-seconds))
      (common-lisp:list
       (common-lisp:cons "MinUpdatePeriodSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suggested-presentation-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "SuggestedPresentationDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dash-playlist-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (default-segment-delivery-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-default-segment-delivery-configuration-"))
   (base-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'default-segment-delivery-configuration
                    'make-default-segment-delivery-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          default-segment-delivery-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          default-segment-delivery-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-url))
      (common-lisp:list
       (common-lisp:cons "BaseUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          default-segment-delivery-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-channel-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-channel-policy-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-channel-policy-request
                    'make-delete-channel-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-channel-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-channel-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-channel-policy-response
                    'make-delete-channel-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-channel-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-channel-request 'make-delete-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-channel-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-channel-response 'make-delete-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-live-source-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-live-source-request-"))
   (live-source-name (common-lisp:error ":live-source-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-live-source-request
                    'make-delete-live-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-live-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-live-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-live-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-live-source-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-live-source-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-live-source-response
                    'make-delete-live-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-live-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-live-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-live-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-playback-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-playback-configuration-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-playback-configuration-request
                    'make-delete-playback-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-playback-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-playback-configuration-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-playback-configuration-response
                    'make-delete-playback-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-prefetch-schedule-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-prefetch-schedule-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (playback-configuration-name
    (common-lisp:error ":playback-configuration-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-prefetch-schedule-request
                    'make-delete-prefetch-schedule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-prefetch-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-prefetch-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-prefetch-schedule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-prefetch-schedule-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-prefetch-schedule-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-prefetch-schedule-response
                    'make-delete-prefetch-schedule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-prefetch-schedule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-prefetch-schedule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-prefetch-schedule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-program-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-program-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (program-name (common-lisp:error ":program-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-program-request 'make-delete-program-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-program-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-program-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-program-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-program-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-program-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-program-response 'make-delete-program-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-program-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-program-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-program-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-source-location-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-source-location-request-"))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-source-location-request
                    'make-delete-source-location-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-source-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-source-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-source-location-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-source-location-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-source-location-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-source-location-response
                    'make-delete-source-location-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-source-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-source-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-source-location-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vod-source-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-vod-source-request-"))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (vod-source-name (common-lisp:error ":vod-source-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-vod-source-request
                    'make-delete-vod-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vod-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vod-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vod-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vod-source-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-vod-source-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-vod-source-response
                    'make-delete-vod-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vod-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vod-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vod-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-channel-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-channel-request 'make-describe-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-channel-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (channel-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (channel-state common-lisp:nil :type
    (common-lisp:or channel-state common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (filler-slate common-lisp:nil :type
    (common-lisp:or slate-source common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (log-configuration (common-lisp:error ":log-configuration is required")
    :type (common-lisp:or log-configuration-for-channel common-lisp:null))
   (outputs common-lisp:nil :type
    (common-lisp:or response-outputs common-lisp:null))
   (playback-mode common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (tier common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-channel-response
                    'make-describe-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-state))
      (common-lisp:list
       (common-lisp:cons "ChannelState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filler-slate))
      (common-lisp:list
       (common-lisp:cons "FillerSlate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-configuration))
      (common-lisp:list
       (common-lisp:cons "LogConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-mode))
      (common-lisp:list
       (common-lisp:cons "PlaybackMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tier))
      (common-lisp:list
       (common-lisp:cons "Tier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-live-source-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-live-source-request-"))
   (live-source-name (common-lisp:error ":live-source-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-live-source-request
                    'make-describe-live-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-live-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-live-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-live-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-live-source-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-live-source-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (http-package-configurations common-lisp:nil :type
    (common-lisp:or http-package-configurations common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (live-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-live-source-response
                    'make-describe-live-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-live-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-live-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-live-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-program-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-program-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (program-name (common-lisp:error ":program-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-program-request 'make-describe-program-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-program-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-program-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-program-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-program-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-program-response-"))
   (ad-breaks common-lisp:nil :type
    (common-lisp:or |__listOfAdBreak| common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (channel-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (clip-range common-lisp:nil :type
    (common-lisp:or clip-range common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (duration-millis common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (live-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (program-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (scheduled-start-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (vod-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-program-response
                    'make-describe-program-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-program-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-program-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-breaks))
      (common-lisp:list
       (common-lisp:cons "AdBreaks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clip-range))
      (common-lisp:list
       (common-lisp:cons "ClipRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-millis))
      (common-lisp:list
       (common-lisp:cons "DurationMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-name))
      (common-lisp:list
       (common-lisp:cons "ProgramName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scheduled-start-time))
      (common-lisp:list
       (common-lisp:cons "ScheduledStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-program-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-source-location-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-source-location-request-"))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-source-location-request
                    'make-describe-source-location-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-source-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-source-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-source-location-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-source-location-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-source-location-response-"))
   (access-configuration common-lisp:nil :type
    (common-lisp:or access-configuration common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (default-segment-delivery-configuration common-lisp:nil :type
    (common-lisp:or default-segment-delivery-configuration common-lisp:null))
   (http-configuration common-lisp:nil :type
    (common-lisp:or http-configuration common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (segment-delivery-configurations common-lisp:nil :type
    (common-lisp:or |__listOfSegmentDeliveryConfiguration| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-source-location-response
                    'make-describe-source-location-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-source-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-source-location-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-configuration))
      (common-lisp:list
       (common-lisp:cons "AccessConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-segment-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "DefaultSegmentDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-configuration))
      (common-lisp:list
       (common-lisp:cons "HttpConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-delivery-configurations))
      (common-lisp:list
       (common-lisp:cons "SegmentDeliveryConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-source-location-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-vod-source-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-vod-source-request-"))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (vod-source-name (common-lisp:error ":vod-source-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-vod-source-request
                    'make-describe-vod-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-vod-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-vod-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-vod-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-vod-source-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-vod-source-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (http-package-configurations common-lisp:nil :type
    (common-lisp:or http-package-configurations common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (vod-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-vod-source-response
                    'make-describe-vod-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-vod-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-vod-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-vod-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-channel-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-channel-policy-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-channel-policy-request
                    'make-get-channel-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-channel-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-channel-policy-response-"))
   (policy common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-channel-policy-response
                    'make-get-channel-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-channel-schedule-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-channel-schedule-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (duration-minutes common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-channel-schedule-request
                    'make-get-channel-schedule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-schedule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-channel-schedule-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-channel-schedule-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfScheduleEntry| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-channel-schedule-response
                    'make-get-channel-schedule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-schedule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-schedule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-schedule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-playback-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-playback-configuration-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-playback-configuration-request
                    'make-get-playback-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-playback-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-playback-configuration-response-"))
   (ad-decision-server-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (avail-suppression common-lisp:nil :type
    (common-lisp:or avail-suppression common-lisp:null))
   (bumper common-lisp:nil :type (common-lisp:or bumper common-lisp:null))
   (cdn-configuration common-lisp:nil :type
    (common-lisp:or cdn-configuration common-lisp:null))
   (configuration-aliases common-lisp:nil :type
    (common-lisp:or configuration-aliases-response common-lisp:null))
   (dash-configuration common-lisp:nil :type
    (common-lisp:or dash-configuration common-lisp:null))
   (hls-configuration common-lisp:nil :type
    (common-lisp:or hls-configuration common-lisp:null))
   (live-pre-roll-configuration common-lisp:nil :type
    (common-lisp:or live-pre-roll-configuration common-lisp:null))
   (log-configuration common-lisp:nil :type
    (common-lisp:or log-configuration common-lisp:null))
   (manifest-processing-rules common-lisp:nil :type
    (common-lisp:or manifest-processing-rules common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (personalization-threshold-seconds common-lisp:nil :type
    (common-lisp:or |__integerMin1| common-lisp:null))
   (playback-configuration-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (playback-endpoint-prefix common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (session-initialization-endpoint-prefix common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (slate-ad-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (transcode-profile-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (video-content-source-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-playback-configuration-response
                    'make-get-playback-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-decision-server-url))
      (common-lisp:list
       (common-lisp:cons "AdDecisionServerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avail-suppression))
      (common-lisp:list
       (common-lisp:cons "AvailSuppression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bumper))
      (common-lisp:list
       (common-lisp:cons "Bumper"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdn-configuration))
      (common-lisp:list
       (common-lisp:cons "CdnConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-aliases))
      (common-lisp:list
       (common-lisp:cons "ConfigurationAliases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-configuration))
      (common-lisp:list
       (common-lisp:cons "DashConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-configuration))
      (common-lisp:list
       (common-lisp:cons "HlsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'live-pre-roll-configuration))
      (common-lisp:list
       (common-lisp:cons "LivePreRollConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-configuration))
      (common-lisp:list
       (common-lisp:cons "LogConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-processing-rules))
      (common-lisp:list
       (common-lisp:cons "ManifestProcessingRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'personalization-threshold-seconds))
      (common-lisp:list
       (common-lisp:cons "PersonalizationThresholdSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "PlaybackEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'session-initialization-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "SessionInitializationEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slate-ad-url))
      (common-lisp:list
       (common-lisp:cons "SlateAdUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'transcode-profile-name))
      (common-lisp:list
       (common-lisp:cons "TranscodeProfileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'video-content-source-url))
      (common-lisp:list
       (common-lisp:cons "VideoContentSourceUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-prefetch-schedule-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-prefetch-schedule-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (playback-configuration-name
    (common-lisp:error ":playback-configuration-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-prefetch-schedule-request
                    'make-get-prefetch-schedule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-prefetch-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-prefetch-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-prefetch-schedule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-prefetch-schedule-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-prefetch-schedule-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (consumption common-lisp:nil :type
    (common-lisp:or prefetch-consumption common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (playback-configuration-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (retrieval common-lisp:nil :type
    (common-lisp:or prefetch-retrieval common-lisp:null))
   (stream-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-prefetch-schedule-response
                    'make-get-prefetch-schedule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-prefetch-schedule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-prefetch-schedule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'consumption))
      (common-lisp:list
       (common-lisp:cons "Consumption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-name))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieval))
      (common-lisp:list
       (common-lisp:cons "Retrieval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-prefetch-schedule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (hls-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-hls-configuration-"))
   (manifest-endpoint-prefix common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hls-configuration 'make-hls-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hls-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hls-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "ManifestEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hls-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (hls-playlist-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-hls-playlist-settings-"))
   (manifest-window-seconds common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hls-playlist-settings 'make-hls-playlist-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          hls-playlist-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          hls-playlist-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-window-seconds))
      (common-lisp:list
       (common-lisp:cons "ManifestWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          hls-playlist-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (http-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-http-configuration-"))
   (base-url (common-lisp:error ":base-url is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'http-configuration 'make-http-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input http-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input http-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-url))
      (common-lisp:list
       (common-lisp:cons "BaseUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input http-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (http-package-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-http-package-configuration-"))
   (path (common-lisp:error ":path is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (source-group (common-lisp:error ":source-group is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'http-package-configuration
                    'make-http-package-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          http-package-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          http-package-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-group))
      (common-lisp:list
       (common-lisp:cons "SourceGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          http-package-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype http-package-configurations ()
   '(trivial-types:proper-list http-package-configuration))
 (common-lisp:defun |make-http-package-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            http-package-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (list-alerts-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-alerts-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-alerts-request 'make-list-alerts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-alerts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-alerts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-alerts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-alerts-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-alerts-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfAlert| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-alerts-response 'make-list-alerts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-alerts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-alerts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-alerts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-channels-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-channels-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-channels-request 'make-list-channels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-channels-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-channels-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfChannel| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-channels-response 'make-list-channels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-live-sources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-live-sources-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-live-sources-request
                    'make-list-live-sources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-live-sources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-live-sources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-live-sources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-live-sources-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-live-sources-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfLiveSource| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-live-sources-response
                    'make-list-live-sources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-live-sources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-live-sources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-live-sources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-playback-configurations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-playback-configurations-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-playback-configurations-request
                    'make-list-playback-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-playback-configurations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-playback-configurations-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfPlaybackConfiguration| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-playback-configurations-response
                    'make-list-playback-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-prefetch-schedules-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-prefetch-schedules-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integerMin1Max100| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (playback-configuration-name
    (common-lisp:error ":playback-configuration-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (stream-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-prefetch-schedules-request
                    'make-list-prefetch-schedules-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-prefetch-schedules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-prefetch-schedules-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-prefetch-schedules-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-prefetch-schedules-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-prefetch-schedules-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfPrefetchSchedule| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-prefetch-schedules-response
                    'make-list-prefetch-schedules-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-prefetch-schedules-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-prefetch-schedules-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-prefetch-schedules-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-source-locations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-source-locations-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-source-locations-request
                    'make-list-source-locations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-source-locations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-source-locations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-source-locations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-source-locations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-source-locations-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfSourceLocation| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-source-locations-response
                    'make-list-source-locations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-source-locations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-source-locations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-source-locations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-vod-sources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-vod-sources-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-vod-sources-request 'make-list-vod-sources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-vod-sources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-vod-sources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-vod-sources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-vod-sources-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-vod-sources-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfVodSource| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-vod-sources-response
                    'make-list-vod-sources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-vod-sources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-vod-sources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-vod-sources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (live-pre-roll-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-live-pre-roll-configuration-"))
   (ad-decision-server-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (max-duration-seconds common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'live-pre-roll-configuration
                    'make-live-pre-roll-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          live-pre-roll-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          live-pre-roll-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-decision-server-url))
      (common-lisp:list
       (common-lisp:cons "AdDecisionServerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "MaxDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          live-pre-roll-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (live-source (:copier common-lisp:nil)
      (:conc-name "struct-shape-live-source-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (http-package-configurations
    (common-lisp:error ":http-package-configurations is required") :type
    (common-lisp:or http-package-configurations common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (live-source-name (common-lisp:error ":live-source-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'live-source 'make-live-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input live-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input live-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input live-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (log-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-log-configuration-"))
   (percent-enabled (common-lisp:error ":percent-enabled is required") :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'log-configuration 'make-log-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input log-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input log-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-enabled))
      (common-lisp:list
       (common-lisp:cons "PercentEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input log-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (log-configuration-for-channel (:copier common-lisp:nil)
      (:conc-name "struct-shape-log-configuration-for-channel-"))
   (log-types common-lisp:nil :type
    (common-lisp:or log-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'log-configuration-for-channel
                    'make-log-configuration-for-channel))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          log-configuration-for-channel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          log-configuration-for-channel))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-types))
      (common-lisp:list
       (common-lisp:cons "LogTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          log-configuration-for-channel))
   common-lisp:nil))
(common-lisp:deftype log-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype log-types () '(trivial-types:proper-list log-type))
 (common-lisp:defun |make-log-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list log-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (manifest-processing-rules (:copier common-lisp:nil)
      (:conc-name "struct-shape-manifest-processing-rules-"))
   (ad-marker-passthrough common-lisp:nil :type
    (common-lisp:or ad-marker-passthrough common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'manifest-processing-rules
                    'make-manifest-processing-rules))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          manifest-processing-rules))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          manifest-processing-rules))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-marker-passthrough))
      (common-lisp:list
       (common-lisp:cons "AdMarkerPassthrough"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          manifest-processing-rules))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype message-type () 'common-lisp:string)
(common-lisp:deftype mode () 'common-lisp:string)
(common-lisp:deftype operator () 'common-lisp:string)
(common-lisp:deftype origin-manifest-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (playback-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-playback-configuration-"))
   (ad-decision-server-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (avail-suppression common-lisp:nil :type
    (common-lisp:or avail-suppression common-lisp:null))
   (bumper common-lisp:nil :type (common-lisp:or bumper common-lisp:null))
   (cdn-configuration common-lisp:nil :type
    (common-lisp:or cdn-configuration common-lisp:null))
   (configuration-aliases common-lisp:nil :type
    (common-lisp:or configuration-aliases-response common-lisp:null))
   (dash-configuration common-lisp:nil :type
    (common-lisp:or dash-configuration common-lisp:null))
   (hls-configuration common-lisp:nil :type
    (common-lisp:or hls-configuration common-lisp:null))
   (live-pre-roll-configuration common-lisp:nil :type
    (common-lisp:or live-pre-roll-configuration common-lisp:null))
   (log-configuration common-lisp:nil :type
    (common-lisp:or log-configuration common-lisp:null))
   (manifest-processing-rules common-lisp:nil :type
    (common-lisp:or manifest-processing-rules common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (personalization-threshold-seconds common-lisp:nil :type
    (common-lisp:or |__integerMin1| common-lisp:null))
   (playback-configuration-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (playback-endpoint-prefix common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (session-initialization-endpoint-prefix common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (slate-ad-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (transcode-profile-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (video-content-source-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'playback-configuration 'make-playback-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          playback-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          playback-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-decision-server-url))
      (common-lisp:list
       (common-lisp:cons "AdDecisionServerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avail-suppression))
      (common-lisp:list
       (common-lisp:cons "AvailSuppression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bumper))
      (common-lisp:list
       (common-lisp:cons "Bumper"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdn-configuration))
      (common-lisp:list
       (common-lisp:cons "CdnConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-aliases))
      (common-lisp:list
       (common-lisp:cons "ConfigurationAliases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-configuration))
      (common-lisp:list
       (common-lisp:cons "DashConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-configuration))
      (common-lisp:list
       (common-lisp:cons "HlsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'live-pre-roll-configuration))
      (common-lisp:list
       (common-lisp:cons "LivePreRollConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-configuration))
      (common-lisp:list
       (common-lisp:cons "LogConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-processing-rules))
      (common-lisp:list
       (common-lisp:cons "ManifestProcessingRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'personalization-threshold-seconds))
      (common-lisp:list
       (common-lisp:cons "PersonalizationThresholdSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "PlaybackEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'session-initialization-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "SessionInitializationEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slate-ad-url))
      (common-lisp:list
       (common-lisp:cons "SlateAdUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'transcode-profile-name))
      (common-lisp:list
       (common-lisp:cons "TranscodeProfileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'video-content-source-url))
      (common-lisp:list
       (common-lisp:cons "VideoContentSourceUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          playback-configuration))
   common-lisp:nil))
(common-lisp:deftype playback-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (prefetch-consumption (:copier common-lisp:nil)
      (:conc-name "struct-shape-prefetch-consumption-"))
   (avail-matching-criteria common-lisp:nil :type
    (common-lisp:or |__listOfAvailMatchingCriteria| common-lisp:null))
   (end-time (common-lisp:error ":end-time is required") :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'prefetch-consumption 'make-prefetch-consumption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input prefetch-consumption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input prefetch-consumption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'avail-matching-criteria))
      (common-lisp:list
       (common-lisp:cons "AvailMatchingCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input prefetch-consumption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (prefetch-retrieval (:copier common-lisp:nil)
      (:conc-name "struct-shape-prefetch-retrieval-"))
   (dynamic-variables common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (end-time (common-lisp:error ":end-time is required") :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'prefetch-retrieval 'make-prefetch-retrieval))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input prefetch-retrieval))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input prefetch-retrieval))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamic-variables))
      (common-lisp:list
       (common-lisp:cons "DynamicVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input prefetch-retrieval))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (prefetch-schedule (:copier common-lisp:nil)
      (:conc-name "struct-shape-prefetch-schedule-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (consumption (common-lisp:error ":consumption is required") :type
    (common-lisp:or prefetch-consumption common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (playback-configuration-name
    (common-lisp:error ":playback-configuration-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (retrieval (common-lisp:error ":retrieval is required") :type
    (common-lisp:or prefetch-retrieval common-lisp:null))
   (stream-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'prefetch-schedule 'make-prefetch-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input prefetch-schedule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input prefetch-schedule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'consumption))
      (common-lisp:list
       (common-lisp:cons "Consumption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-name))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieval))
      (common-lisp:list
       (common-lisp:cons "Retrieval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input prefetch-schedule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-channel-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-channel-policy-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (policy (common-lisp:error ":policy is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-channel-policy-request
                    'make-put-channel-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-channel-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-channel-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'put-channel-policy-response
                    'make-put-channel-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-playback-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-playback-configuration-request-"))
   (ad-decision-server-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (avail-suppression common-lisp:nil :type
    (common-lisp:or avail-suppression common-lisp:null))
   (bumper common-lisp:nil :type (common-lisp:or bumper common-lisp:null))
   (cdn-configuration common-lisp:nil :type
    (common-lisp:or cdn-configuration common-lisp:null))
   (configuration-aliases common-lisp:nil :type
    (common-lisp:or configuration-aliases-request common-lisp:null))
   (dash-configuration common-lisp:nil :type
    (common-lisp:or dash-configuration-for-put common-lisp:null))
   (live-pre-roll-configuration common-lisp:nil :type
    (common-lisp:or live-pre-roll-configuration common-lisp:null))
   (manifest-processing-rules common-lisp:nil :type
    (common-lisp:or manifest-processing-rules common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (personalization-threshold-seconds common-lisp:nil :type
    (common-lisp:or |__integerMin1| common-lisp:null))
   (slate-ad-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (transcode-profile-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (video-content-source-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-playback-configuration-request
                    'make-put-playback-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-playback-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-playback-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-decision-server-url))
      (common-lisp:list
       (common-lisp:cons "AdDecisionServerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avail-suppression))
      (common-lisp:list
       (common-lisp:cons "AvailSuppression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bumper))
      (common-lisp:list
       (common-lisp:cons "Bumper"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdn-configuration))
      (common-lisp:list
       (common-lisp:cons "CdnConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-aliases))
      (common-lisp:list
       (common-lisp:cons "ConfigurationAliases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-configuration))
      (common-lisp:list
       (common-lisp:cons "DashConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'live-pre-roll-configuration))
      (common-lisp:list
       (common-lisp:cons "LivePreRollConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-processing-rules))
      (common-lisp:list
       (common-lisp:cons "ManifestProcessingRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'personalization-threshold-seconds))
      (common-lisp:list
       (common-lisp:cons "PersonalizationThresholdSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slate-ad-url))
      (common-lisp:list
       (common-lisp:cons "SlateAdUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'transcode-profile-name))
      (common-lisp:list
       (common-lisp:cons "TranscodeProfileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'video-content-source-url))
      (common-lisp:list
       (common-lisp:cons "VideoContentSourceUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-playback-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-playback-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-playback-configuration-response-"))
   (ad-decision-server-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (avail-suppression common-lisp:nil :type
    (common-lisp:or avail-suppression common-lisp:null))
   (bumper common-lisp:nil :type (common-lisp:or bumper common-lisp:null))
   (cdn-configuration common-lisp:nil :type
    (common-lisp:or cdn-configuration common-lisp:null))
   (configuration-aliases common-lisp:nil :type
    (common-lisp:or configuration-aliases-response common-lisp:null))
   (dash-configuration common-lisp:nil :type
    (common-lisp:or dash-configuration common-lisp:null))
   (hls-configuration common-lisp:nil :type
    (common-lisp:or hls-configuration common-lisp:null))
   (live-pre-roll-configuration common-lisp:nil :type
    (common-lisp:or live-pre-roll-configuration common-lisp:null))
   (log-configuration common-lisp:nil :type
    (common-lisp:or log-configuration common-lisp:null))
   (manifest-processing-rules common-lisp:nil :type
    (common-lisp:or manifest-processing-rules common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (personalization-threshold-seconds common-lisp:nil :type
    (common-lisp:or |__integerMin1| common-lisp:null))
   (playback-configuration-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (playback-endpoint-prefix common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (session-initialization-endpoint-prefix common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (slate-ad-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (transcode-profile-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (video-content-source-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-playback-configuration-response
                    'make-put-playback-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-playback-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-playback-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-decision-server-url))
      (common-lisp:list
       (common-lisp:cons "AdDecisionServerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avail-suppression))
      (common-lisp:list
       (common-lisp:cons "AvailSuppression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bumper))
      (common-lisp:list
       (common-lisp:cons "Bumper"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdn-configuration))
      (common-lisp:list
       (common-lisp:cons "CdnConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-aliases))
      (common-lisp:list
       (common-lisp:cons "ConfigurationAliases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-configuration))
      (common-lisp:list
       (common-lisp:cons "DashConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-configuration))
      (common-lisp:list
       (common-lisp:cons "HlsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'live-pre-roll-configuration))
      (common-lisp:list
       (common-lisp:cons "LivePreRollConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-configuration))
      (common-lisp:list
       (common-lisp:cons "LogConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-processing-rules))
      (common-lisp:list
       (common-lisp:cons "ManifestProcessingRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'personalization-threshold-seconds))
      (common-lisp:list
       (common-lisp:cons "PersonalizationThresholdSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "PlaybackEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'session-initialization-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "SessionInitializationEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slate-ad-url))
      (common-lisp:list
       (common-lisp:cons "SlateAdUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'transcode-profile-name))
      (common-lisp:list
       (common-lisp:cons "TranscodeProfileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'video-content-source-url))
      (common-lisp:list
       (common-lisp:cons "VideoContentSourceUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-playback-configuration-response))
   common-lisp:nil))
(common-lisp:deftype relative-position () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (request-output-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-request-output-item-"))
   (dash-playlist-settings common-lisp:nil :type
    (common-lisp:or dash-playlist-settings common-lisp:null))
   (hls-playlist-settings common-lisp:nil :type
    (common-lisp:or hls-playlist-settings common-lisp:null))
   (manifest-name (common-lisp:error ":manifest-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (source-group (common-lisp:error ":source-group is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-output-item 'make-request-output-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input request-output-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input request-output-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dash-playlist-settings))
      (common-lisp:list
       (common-lisp:cons "DashPlaylistSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hls-playlist-settings))
      (common-lisp:list
       (common-lisp:cons "HlsPlaylistSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-group))
      (common-lisp:list
       (common-lisp:cons "SourceGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input request-output-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype request-outputs ()
   '(trivial-types:proper-list request-output-item))
 (common-lisp:defun |make-request-outputs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list request-output-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (response-output-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-response-output-item-"))
   (dash-playlist-settings common-lisp:nil :type
    (common-lisp:or dash-playlist-settings common-lisp:null))
   (hls-playlist-settings common-lisp:nil :type
    (common-lisp:or hls-playlist-settings common-lisp:null))
   (manifest-name (common-lisp:error ":manifest-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (playback-url (common-lisp:error ":playback-url is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (source-group (common-lisp:error ":source-group is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'response-output-item 'make-response-output-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input response-output-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input response-output-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dash-playlist-settings))
      (common-lisp:list
       (common-lisp:cons "DashPlaylistSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hls-playlist-settings))
      (common-lisp:list
       (common-lisp:cons "HlsPlaylistSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-url))
      (common-lisp:list
       (common-lisp:cons "PlaybackUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-group))
      (common-lisp:list
       (common-lisp:cons "SourceGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input response-output-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype response-outputs ()
   '(trivial-types:proper-list response-output-item))
 (common-lisp:defun |make-response-outputs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list response-output-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (schedule-ad-break (:copier common-lisp:nil)
      (:conc-name "struct-shape-schedule-ad-break-"))
   (approximate-duration-seconds common-lisp:nil :type
    (common-lisp:or |__long| common-lisp:null))
   (approximate-start-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (vod-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schedule-ad-break 'make-schedule-ad-break))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input schedule-ad-break))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input schedule-ad-break))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "ApproximateDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-start-time))
      (common-lisp:list
       (common-lisp:cons "ApproximateStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input schedule-ad-break))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (schedule-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-schedule-configuration-"))
   (clip-range common-lisp:nil :type
    (common-lisp:or clip-range common-lisp:null))
   (transition (common-lisp:error ":transition is required") :type
    (common-lisp:or transition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schedule-configuration 'make-schedule-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          schedule-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          schedule-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clip-range))
      (common-lisp:list
       (common-lisp:cons "ClipRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transition))
      (common-lisp:list
       (common-lisp:cons "Transition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          schedule-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (schedule-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-schedule-entry-"))
   (approximate-duration-seconds common-lisp:nil :type
    (common-lisp:or |__long| common-lisp:null))
   (approximate-start-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (live-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (program-name (common-lisp:error ":program-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (schedule-ad-breaks common-lisp:nil :type
    (common-lisp:or |__listOfScheduleAdBreak| common-lisp:null))
   (schedule-entry-type common-lisp:nil :type
    (common-lisp:or schedule-entry-type common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (vod-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'schedule-entry 'make-schedule-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input schedule-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input schedule-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "ApproximateDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-start-time))
      (common-lisp:list
       (common-lisp:cons "ApproximateStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-name))
      (common-lisp:list
       (common-lisp:cons "ProgramName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-ad-breaks))
      (common-lisp:list
       (common-lisp:cons "ScheduleAdBreaks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-entry-type))
      (common-lisp:list
       (common-lisp:cons "ScheduleEntryType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input schedule-entry))
   common-lisp:nil))
(common-lisp:deftype schedule-entry-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (secrets-manager-access-token-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-secrets-manager-access-token-configuration-"))
   (header-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (secret-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (secret-string-key common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'secrets-manager-access-token-configuration
                    'make-secrets-manager-access-token-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          secrets-manager-access-token-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          secrets-manager-access-token-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'header-name))
      (common-lisp:list
       (common-lisp:cons "HeaderName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-arn))
      (common-lisp:list
       (common-lisp:cons "SecretArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-string-key))
      (common-lisp:list
       (common-lisp:cons "SecretStringKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          secrets-manager-access-token-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (segment-delivery-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-segment-delivery-configuration-"))
   (base-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-delivery-configuration
                    'make-segment-delivery-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          segment-delivery-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          segment-delivery-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-url))
      (common-lisp:list
       (common-lisp:cons "BaseUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          segment-delivery-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (segmentation-descriptor (:copier common-lisp:nil)
      (:conc-name "struct-shape-segmentation-descriptor-"))
   (segment-num common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (segmentation-event-id common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (segmentation-type-id common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (segmentation-upid common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (segmentation-upid-type common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (segments-expected common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (sub-segment-num common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (sub-segments-expected common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segmentation-descriptor 'make-segmentation-descriptor))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          segmentation-descriptor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          segmentation-descriptor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-num))
      (common-lisp:list
       (common-lisp:cons "SegmentNum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segmentation-event-id))
      (common-lisp:list
       (common-lisp:cons "SegmentationEventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segmentation-type-id))
      (common-lisp:list
       (common-lisp:cons "SegmentationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segmentation-upid))
      (common-lisp:list
       (common-lisp:cons "SegmentationUpid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segmentation-upid-type))
      (common-lisp:list
       (common-lisp:cons "SegmentationUpidType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segments-expected))
      (common-lisp:list
       (common-lisp:cons "SegmentsExpected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-segment-num))
      (common-lisp:list
       (common-lisp:cons "SubSegmentNum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sub-segments-expected))
      (common-lisp:list
       (common-lisp:cons "SubSegmentsExpected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          segmentation-descriptor))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype segmentation-descriptor-list ()
   '(trivial-types:proper-list segmentation-descriptor))
 (common-lisp:defun |make-segmentation-descriptor-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list segmentation-descriptor))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (slate-source (:copier common-lisp:nil)
      (:conc-name "struct-shape-slate-source-"))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (vod-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'slate-source 'make-slate-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input slate-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input slate-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input slate-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (source-location (:copier common-lisp:nil)
      (:conc-name "struct-shape-source-location-"))
   (access-configuration common-lisp:nil :type
    (common-lisp:or access-configuration common-lisp:null))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (default-segment-delivery-configuration common-lisp:nil :type
    (common-lisp:or default-segment-delivery-configuration common-lisp:null))
   (http-configuration (common-lisp:error ":http-configuration is required")
    :type (common-lisp:or http-configuration common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (segment-delivery-configurations common-lisp:nil :type
    (common-lisp:or |__listOfSegmentDeliveryConfiguration| common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'source-location 'make-source-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input source-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input source-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-configuration))
      (common-lisp:list
       (common-lisp:cons "AccessConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-segment-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "DefaultSegmentDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-configuration))
      (common-lisp:list
       (common-lisp:cons "HttpConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-delivery-configurations))
      (common-lisp:list
       (common-lisp:cons "SegmentDeliveryConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input source-location))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (splice-insert-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-splice-insert-message-"))
   (avail-num common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (avails-expected common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (splice-event-id common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (unique-program-id common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'splice-insert-message 'make-splice-insert-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          splice-insert-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          splice-insert-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avail-num))
      (common-lisp:list
       (common-lisp:cons "AvailNum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avails-expected))
      (common-lisp:list
       (common-lisp:cons "AvailsExpected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'splice-event-id))
      (common-lisp:list
       (common-lisp:cons "SpliceEventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unique-program-id))
      (common-lisp:list
       (common-lisp:cons "UniqueProgramId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          splice-insert-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-channel-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-channel-request 'make-start-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-channel-response-")))
 (common-lisp:export
  (common-lisp:list 'start-channel-response 'make-start-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-channel-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-channel-request 'make-stop-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-channel-response-")))
 (common-lisp:export
  (common-lisp:list 'stop-channel-response 'make-stop-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-channel-response))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:deftype tier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (time-signal-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-time-signal-message-"))
   (segmentation-descriptors common-lisp:nil :type
    (common-lisp:or segmentation-descriptor-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'time-signal-message 'make-time-signal-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input time-signal-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input time-signal-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segmentation-descriptors))
      (common-lisp:list
       (common-lisp:cons "SegmentationDescriptors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input time-signal-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (transition (:copier common-lisp:nil)
      (:conc-name "struct-shape-transition-"))
   (duration-millis common-lisp:nil :type
    (common-lisp:or |__long| common-lisp:null))
   (relative-position (common-lisp:error ":relative-position is required")
    :type (common-lisp:or relative-position common-lisp:null))
   (relative-program common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (scheduled-start-time-millis common-lisp:nil :type
    (common-lisp:or |__long| common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transition 'make-transition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input transition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input transition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-millis))
      (common-lisp:list
       (common-lisp:cons "DurationMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relative-position))
      (common-lisp:list
       (common-lisp:cons "RelativePosition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relative-program))
      (common-lisp:list
       (common-lisp:cons "RelativeProgram"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scheduled-start-time-millis))
      (common-lisp:list
       (common-lisp:cons "ScheduledStartTimeMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input transition))
   common-lisp:nil))
(common-lisp:deftype type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-channel-request-"))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (filler-slate common-lisp:nil :type
    (common-lisp:or slate-source common-lisp:null))
   (outputs (common-lisp:error ":outputs is required") :type
    (common-lisp:or request-outputs common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-channel-request 'make-update-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filler-slate))
      (common-lisp:list
       (common-lisp:cons "FillerSlate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-channel-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (channel-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (channel-state common-lisp:nil :type
    (common-lisp:or channel-state common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (filler-slate common-lisp:nil :type
    (common-lisp:or slate-source common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (outputs common-lisp:nil :type
    (common-lisp:or response-outputs common-lisp:null))
   (playback-mode common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (tier common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-channel-response 'make-update-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-state))
      (common-lisp:list
       (common-lisp:cons "ChannelState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filler-slate))
      (common-lisp:list
       (common-lisp:cons "FillerSlate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-mode))
      (common-lisp:list
       (common-lisp:cons "PlaybackMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tier))
      (common-lisp:list
       (common-lisp:cons "Tier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-live-source-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-live-source-request-"))
   (http-package-configurations
    (common-lisp:error ":http-package-configurations is required") :type
    (common-lisp:or http-package-configurations common-lisp:null))
   (live-source-name (common-lisp:error ":live-source-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-live-source-request
                    'make-update-live-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-live-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-live-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-live-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-live-source-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-live-source-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (http-package-configurations common-lisp:nil :type
    (common-lisp:or http-package-configurations common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (live-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-live-source-response
                    'make-update-live-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-live-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-live-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-live-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-program-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-program-request-"))
   (ad-breaks common-lisp:nil :type
    (common-lisp:or |__listOfAdBreak| common-lisp:null))
   (channel-name (common-lisp:error ":channel-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (program-name (common-lisp:error ":program-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (schedule-configuration
    (common-lisp:error ":schedule-configuration is required") :type
    (common-lisp:or update-program-schedule-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-program-request 'make-update-program-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-program-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-program-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-breaks))
      (common-lisp:list
       (common-lisp:cons "AdBreaks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'schedule-configuration))
      (common-lisp:list
       (common-lisp:cons "ScheduleConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-program-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-program-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-program-response-"))
   (ad-breaks common-lisp:nil :type
    (common-lisp:or |__listOfAdBreak| common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (channel-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (clip-range common-lisp:nil :type
    (common-lisp:or clip-range common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (duration-millis common-lisp:nil :type
    (common-lisp:or |__long| common-lisp:null))
   (live-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (program-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (scheduled-start-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (vod-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-program-response 'make-update-program-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-program-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-program-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-breaks))
      (common-lisp:list
       (common-lisp:cons "AdBreaks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clip-range))
      (common-lisp:list
       (common-lisp:cons "ClipRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-millis))
      (common-lisp:list
       (common-lisp:cons "DurationMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-name))
      (common-lisp:list
       (common-lisp:cons "ProgramName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scheduled-start-time))
      (common-lisp:list
       (common-lisp:cons "ScheduledStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-program-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-program-schedule-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-program-schedule-configuration-"))
   (clip-range common-lisp:nil :type
    (common-lisp:or clip-range common-lisp:null))
   (transition common-lisp:nil :type
    (common-lisp:or update-program-transition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-program-schedule-configuration
                    'make-update-program-schedule-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-program-schedule-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-program-schedule-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clip-range))
      (common-lisp:list
       (common-lisp:cons "ClipRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transition))
      (common-lisp:list
       (common-lisp:cons "Transition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-program-schedule-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-program-transition (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-program-transition-"))
   (duration-millis common-lisp:nil :type
    (common-lisp:or |__long| common-lisp:null))
   (scheduled-start-time-millis common-lisp:nil :type
    (common-lisp:or |__long| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-program-transition
                    'make-update-program-transition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-program-transition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-program-transition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-millis))
      (common-lisp:list
       (common-lisp:cons "DurationMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scheduled-start-time-millis))
      (common-lisp:list
       (common-lisp:cons "ScheduledStartTimeMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-program-transition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-source-location-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-source-location-request-"))
   (access-configuration common-lisp:nil :type
    (common-lisp:or access-configuration common-lisp:null))
   (default-segment-delivery-configuration common-lisp:nil :type
    (common-lisp:or default-segment-delivery-configuration common-lisp:null))
   (http-configuration (common-lisp:error ":http-configuration is required")
    :type (common-lisp:or http-configuration common-lisp:null))
   (segment-delivery-configurations common-lisp:nil :type
    (common-lisp:or |__listOfSegmentDeliveryConfiguration| common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-source-location-request
                    'make-update-source-location-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-source-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-source-location-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-configuration))
      (common-lisp:list
       (common-lisp:cons "AccessConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-segment-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "DefaultSegmentDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-configuration))
      (common-lisp:list
       (common-lisp:cons "HttpConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-delivery-configurations))
      (common-lisp:list
       (common-lisp:cons "SegmentDeliveryConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-source-location-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-source-location-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-source-location-response-"))
   (access-configuration common-lisp:nil :type
    (common-lisp:or access-configuration common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (default-segment-delivery-configuration common-lisp:nil :type
    (common-lisp:or default-segment-delivery-configuration common-lisp:null))
   (http-configuration common-lisp:nil :type
    (common-lisp:or http-configuration common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (segment-delivery-configurations common-lisp:nil :type
    (common-lisp:or |__listOfSegmentDeliveryConfiguration| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-source-location-response
                    'make-update-source-location-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-source-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-source-location-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-configuration))
      (common-lisp:list
       (common-lisp:cons "AccessConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-segment-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "DefaultSegmentDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-configuration))
      (common-lisp:list
       (common-lisp:cons "HttpConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-delivery-configurations))
      (common-lisp:list
       (common-lisp:cons "SegmentDeliveryConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-source-location-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-vod-source-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-vod-source-request-"))
   (http-package-configurations
    (common-lisp:error ":http-package-configurations is required") :type
    (common-lisp:or http-package-configurations common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (vod-source-name (common-lisp:error ":vod-source-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-vod-source-request
                    'make-update-vod-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vod-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vod-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vod-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-vod-source-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-vod-source-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (http-package-configurations common-lisp:nil :type
    (common-lisp:or http-package-configurations common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (source-location-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (vod-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-vod-source-response
                    'make-update-vod-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vod-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vod-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vod-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (vod-source (:copier common-lisp:nil)
      (:conc-name "struct-shape-vod-source-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (http-package-configurations
    (common-lisp:error ":http-package-configurations is required") :type
    (common-lisp:or http-package-configurations common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (source-location-name
    (common-lisp:error ":source-location-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (vod-source-name (common-lisp:error ":vod-source-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vod-source 'make-vod-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vod-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vod-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vod-source))
   common-lisp:nil))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max100| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfAdBreak| ()
   '(trivial-types:proper-list ad-break))
 (common-lisp:defun |make-__listofadbreak|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ad-break))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfAlert| () '(trivial-types:proper-list alert))
 (common-lisp:defun |make-__listofalert|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alert))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfAvailMatchingCriteria| ()
   '(trivial-types:proper-list avail-matching-criteria))
 (common-lisp:defun |make-__listofavailmatchingcriteria|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list avail-matching-criteria))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfChannel| ()
   '(trivial-types:proper-list channel))
 (common-lisp:defun |make-__listofchannel|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfLiveSource| ()
   '(trivial-types:proper-list live-source))
 (common-lisp:defun |make-__listoflivesource|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list live-source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfPlaybackConfiguration| ()
   '(trivial-types:proper-list playback-configuration))
 (common-lisp:defun |make-__listofplaybackconfiguration|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list playback-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfPrefetchSchedule| ()
   '(trivial-types:proper-list prefetch-schedule))
 (common-lisp:defun |make-__listofprefetchschedule|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list prefetch-schedule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfScheduleAdBreak| ()
   '(trivial-types:proper-list schedule-ad-break))
 (common-lisp:defun |make-__listofscheduleadbreak|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list schedule-ad-break))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfScheduleEntry| ()
   '(trivial-types:proper-list schedule-entry))
 (common-lisp:defun |make-__listofscheduleentry|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list schedule-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSegmentDeliveryConfiguration| ()
   '(trivial-types:proper-list segment-delivery-configuration))
 (common-lisp:defun |make-__listofsegmentdeliveryconfiguration|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            segment-delivery-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSourceLocation| ()
   '(trivial-types:proper-list source-location))
 (common-lisp:defun |make-__listofsourcelocation|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list source-location))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfVodSource| ()
   '(trivial-types:proper-list vod-source))
 (common-lisp:defun |make-__listofvodsource|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vod-source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun |make-__listof__string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__mapOf__string| () 'common-lisp:hash-table)
 (common-lisp:defun |make-__mapof__string|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun configure-logs-for-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name log-types)
   (common-lisp:declare (common-lisp:ignorable channel-name log-types))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-configure-logs-for-channel-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/configureLogs/channel"
                                                        "ConfigureLogsForChannel"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'configure-logs-for-channel))
(common-lisp:progn
 (common-lisp:defun configure-logs-for-playback-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key percent-enabled
                     playback-configuration-name)
   (common-lisp:declare
    (common-lisp:ignorable percent-enabled playback-configuration-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-configure-logs-for-playback-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/configureLogs/playbackConfiguration"
                                                        "ConfigureLogsForPlaybackConfiguration"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'configure-logs-for-playback-configuration))
(common-lisp:progn
 (common-lisp:defun create-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name filler-slate outputs
                     playback-mode tags tier)
   (common-lisp:declare
    (common-lisp:ignorable channel-name filler-slate outputs playback-mode tags
     tier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "CreateChannel"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-channel))
(common-lisp:progn
 (common-lisp:defun create-live-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key http-package-configurations
                     live-source-name source-location-name tags)
   (common-lisp:declare
    (common-lisp:ignorable http-package-configurations live-source-name
     source-location-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-live-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/liveSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'live-source-name))))
                                                        "CreateLiveSource"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-live-source))
(common-lisp:progn
 (common-lisp:defun create-prefetch-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key consumption name
                     playback-configuration-name retrieval stream-id)
   (common-lisp:declare
    (common-lisp:ignorable consumption name playback-configuration-name
     retrieval stream-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-prefetch-schedule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/prefetchSchedule/~A/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'playback-configuration-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "CreatePrefetchSchedule"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-prefetch-schedule))
(common-lisp:progn
 (common-lisp:defun create-program
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ad-breaks channel-name live-source-name
                     program-name schedule-configuration source-location-name
                     vod-source-name)
   (common-lisp:declare
    (common-lisp:ignorable ad-breaks channel-name live-source-name program-name
     schedule-configuration source-location-name vod-source-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-program-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/program/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'program-name))))
                                                        "CreateProgram"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-program))
(common-lisp:progn
 (common-lisp:defun create-source-location
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-configuration
                     default-segment-delivery-configuration http-configuration
                     segment-delivery-configurations source-location-name tags)
   (common-lisp:declare
    (common-lisp:ignorable access-configuration
     default-segment-delivery-configuration http-configuration
     segment-delivery-configurations source-location-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-source-location-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))))
                                                        "CreateSourceLocation"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-source-location))
(common-lisp:progn
 (common-lisp:defun create-vod-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key http-package-configurations
                     source-location-name tags vod-source-name)
   (common-lisp:declare
    (common-lisp:ignorable http-package-configurations source-location-name
     tags vod-source-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-vod-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/vodSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vod-source-name))))
                                                        "CreateVodSource"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-vod-source))
(common-lisp:progn
 (common-lisp:defun delete-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name)
   (common-lisp:declare (common-lisp:ignorable channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "DeleteChannel"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-channel))
(common-lisp:progn
 (common-lisp:defun delete-channel-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name)
   (common-lisp:declare (common-lisp:ignorable channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "DeleteChannelPolicy"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-channel-policy))
(common-lisp:progn
 (common-lisp:defun delete-live-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key live-source-name source-location-name)
   (common-lisp:declare
    (common-lisp:ignorable live-source-name source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-live-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/liveSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'live-source-name))))
                                                        "DeleteLiveSource"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-live-source))
(common-lisp:progn
 (common-lisp:defun delete-playback-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-playback-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/playbackConfiguration/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeletePlaybackConfiguration"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-playback-configuration))
(common-lisp:progn
 (common-lisp:defun delete-prefetch-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name playback-configuration-name)
   (common-lisp:declare
    (common-lisp:ignorable name playback-configuration-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-prefetch-schedule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/prefetchSchedule/~A/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'playback-configuration-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeletePrefetchSchedule"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-prefetch-schedule))
(common-lisp:progn
 (common-lisp:defun delete-program
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name program-name)
   (common-lisp:declare (common-lisp:ignorable channel-name program-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-program-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/program/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'program-name))))
                                                        "DeleteProgram"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-program))
(common-lisp:progn
 (common-lisp:defun delete-source-location
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-location-name)
   (common-lisp:declare (common-lisp:ignorable source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-source-location-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))))
                                                        "DeleteSourceLocation"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-source-location))
(common-lisp:progn
 (common-lisp:defun delete-vod-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-location-name vod-source-name)
   (common-lisp:declare
    (common-lisp:ignorable source-location-name vod-source-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vod-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/vodSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vod-source-name))))
                                                        "DeleteVodSource"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-vod-source))
(common-lisp:progn
 (common-lisp:defun describe-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name)
   (common-lisp:declare (common-lisp:ignorable channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "DescribeChannel"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-channel))
(common-lisp:progn
 (common-lisp:defun describe-live-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key live-source-name source-location-name)
   (common-lisp:declare
    (common-lisp:ignorable live-source-name source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-live-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/liveSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'live-source-name))))
                                                        "DescribeLiveSource"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-live-source))
(common-lisp:progn
 (common-lisp:defun describe-program
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name program-name)
   (common-lisp:declare (common-lisp:ignorable channel-name program-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-program-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/program/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'program-name))))
                                                        "DescribeProgram"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-program))
(common-lisp:progn
 (common-lisp:defun describe-source-location
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-location-name)
   (common-lisp:declare (common-lisp:ignorable source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-source-location-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))))
                                                        "DescribeSourceLocation"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-source-location))
(common-lisp:progn
 (common-lisp:defun describe-vod-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-location-name vod-source-name)
   (common-lisp:declare
    (common-lisp:ignorable source-location-name vod-source-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-vod-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/vodSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vod-source-name))))
                                                        "DescribeVodSource"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-vod-source))
(common-lisp:progn
 (common-lisp:defun get-channel-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name)
   (common-lisp:declare (common-lisp:ignorable channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-channel-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "GetChannelPolicy"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-channel-policy))
(common-lisp:progn
 (common-lisp:defun get-channel-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name duration-minutes max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable channel-name duration-minutes max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-channel-schedule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/schedule"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "GetChannelSchedule"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-channel-schedule))
(common-lisp:progn
 (common-lisp:defun get-playback-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-playback-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/playbackConfiguration/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetPlaybackConfiguration"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-playback-configuration))
(common-lisp:progn
 (common-lisp:defun get-prefetch-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name playback-configuration-name)
   (common-lisp:declare
    (common-lisp:ignorable name playback-configuration-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-prefetch-schedule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/prefetchSchedule/~A/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'playback-configuration-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetPrefetchSchedule"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-prefetch-schedule))
(common-lisp:progn
 (common-lisp:defun list-alerts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token resource-arn)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-alerts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/alerts"
                                                        "ListAlerts"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-alerts))
(common-lisp:progn
 (common-lisp:defun list-channels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/channels"
                                                        "ListChannels"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-channels))
(common-lisp:progn
 (common-lisp:defun list-live-sources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     source-location-name)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-live-sources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/liveSources"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))))
                                                        "ListLiveSources"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-live-sources))
(common-lisp:progn
 (common-lisp:defun list-playback-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-playback-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/playbackConfigurations"
                                                        "ListPlaybackConfigurations"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-playback-configurations))
(common-lisp:progn
 (common-lisp:defun list-prefetch-schedules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     playback-configuration-name stream-id)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token playback-configuration-name
     stream-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-prefetch-schedules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/prefetchSchedule/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'playback-configuration-name))))
                                                        "ListPrefetchSchedules"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-prefetch-schedules))
(common-lisp:progn
 (common-lisp:defun list-source-locations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-source-locations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/sourceLocations"
                                                        "ListSourceLocations"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-source-locations))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-vod-sources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     source-location-name)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-vod-sources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/vodSources"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))))
                                                        "ListVodSources"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-vod-sources))
(common-lisp:progn
 (common-lisp:defun put-channel-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name policy)
   (common-lisp:declare (common-lisp:ignorable channel-name policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-channel-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "PutChannelPolicy"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-channel-policy))
(common-lisp:progn
 (common-lisp:defun put-playback-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ad-decision-server-url avail-suppression
                     bumper cdn-configuration configuration-aliases
                     dash-configuration live-pre-roll-configuration
                     manifest-processing-rules name
                     personalization-threshold-seconds slate-ad-url tags
                     transcode-profile-name video-content-source-url)
   (common-lisp:declare
    (common-lisp:ignorable ad-decision-server-url avail-suppression bumper
     cdn-configuration configuration-aliases dash-configuration
     live-pre-roll-configuration manifest-processing-rules name
     personalization-threshold-seconds slate-ad-url tags transcode-profile-name
     video-content-source-url))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-playback-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/playbackConfiguration"
                                                        "PutPlaybackConfiguration"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-playback-configuration))
(common-lisp:progn
 (common-lisp:defun start-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name)
   (common-lisp:declare (common-lisp:ignorable channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/start"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "StartChannel"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-channel))
(common-lisp:progn
 (common-lisp:defun stop-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name)
   (common-lisp:declare (common-lisp:ignorable channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/stop"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "StopChannel"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-channel))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name filler-slate outputs)
   (common-lisp:declare
    (common-lisp:ignorable channel-name filler-slate outputs))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "UpdateChannel"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-channel))
(common-lisp:progn
 (common-lisp:defun update-live-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key http-package-configurations
                     live-source-name source-location-name)
   (common-lisp:declare
    (common-lisp:ignorable http-package-configurations live-source-name
     source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-live-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/liveSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'live-source-name))))
                                                        "UpdateLiveSource"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-live-source))
(common-lisp:progn
 (common-lisp:defun update-program
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ad-breaks channel-name program-name
                     schedule-configuration)
   (common-lisp:declare
    (common-lisp:ignorable ad-breaks channel-name program-name
     schedule-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-program-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/program/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'program-name))))
                                                        "UpdateProgram"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-program))
(common-lisp:progn
 (common-lisp:defun update-source-location
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-configuration
                     default-segment-delivery-configuration http-configuration
                     segment-delivery-configurations source-location-name)
   (common-lisp:declare
    (common-lisp:ignorable access-configuration
     default-segment-delivery-configuration http-configuration
     segment-delivery-configurations source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-source-location-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))))
                                                        "UpdateSourceLocation"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-source-location))
(common-lisp:progn
 (common-lisp:defun update-vod-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key http-package-configurations
                     source-location-name vod-source-name)
   (common-lisp:declare
    (common-lisp:ignorable http-package-configurations source-location-name
     vod-source-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-vod-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/vodSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vod-source-name))))
                                                        "UpdateVodSource"
                                                        "2018-04-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-vod-source))
