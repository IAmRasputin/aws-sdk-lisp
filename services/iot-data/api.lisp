;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/iot-data/api
  (:use)
  (:nicknames #:aws/iot-data)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/iot-data/api)
(common-lisp:progn
 (common-lisp:defclass iot-data-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "iot-data" :protocol
                        :rest-json))
 (common-lisp:export 'iot-data-request))
(common-lisp:progn
 (common-lisp:define-condition iot-data-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'iot-data-error))
(common-lisp:defvar *error-map*
  '(("ConflictException" . conflict-exception)
    ("InternalFailureException" . internal-failure-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("MethodNotAllowedException" . method-not-allowed-exception)
    ("RequestEntityTooLargeException" . request-entity-too-large-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottlingException" . throttling-exception)
    ("UnauthorizedException" . unauthorized-exception)
    ("UnsupportedDocumentEncodingException"
     . unsupported-document-encoding-exception)))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (iot-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:deftype content-type () 'common-lisp:string)
(common-lisp:deftype correlation-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-thing-shadow-request common-lisp:nil
                       ((shadow-name :initarg :|shadowName| :type
                         (common-lisp:or shadow-name common-lisp:null)
                         :accessor %delete-thing-shadow-request-shadow-name
                         :initform common-lisp:nil)
                        (thing-name :initarg :|thingName| :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         %delete-thing-shadow-request-thing-name :initform
                         (common-lisp:error ":thingname is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-thing-shadow-request
                    'make-delete-thing-shadow-request))
 (common-lisp:defun make-delete-thing-shadow-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key shadow-name thing-name)
   (common-lisp:apply #'common-lisp:make-instance 'delete-thing-shadow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-thing-shadow-response common-lisp:nil
                       ((payload :initarg :|payload| :type
                         (common-lisp:or json-document common-lisp:null)
                         :accessor %delete-thing-shadow-response-payload
                         :initform
                         (common-lisp:error ":payload is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-thing-shadow-response
                    'make-delete-thing-shadow-response))
 (common-lisp:defun make-delete-thing-shadow-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key payload)
   (common-lisp:apply #'common-lisp:make-instance 'delete-thing-shadow-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-response))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'payload))))
(common-lisp:progn
 (common-lisp:defclass get-retained-message-request common-lisp:nil
                       ((topic :initarg :|topic| :type
                         (common-lisp:or topic common-lisp:null) :accessor
                         %get-retained-message-request-topic :initform
                         (common-lisp:error ":topic is required"))))
 (common-lisp:export
  (common-lisp:list 'get-retained-message-request
                    'make-get-retained-message-request))
 (common-lisp:defun make-get-retained-message-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key topic)
   (common-lisp:apply #'common-lisp:make-instance 'get-retained-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-retained-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-retained-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-retained-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-retained-message-response common-lisp:nil
                       ((user-properties :initarg :|userProperties| :type
                         (common-lisp:or user-properties-blob common-lisp:null)
                         :accessor
                         %get-retained-message-response-user-properties
                         :initform common-lisp:nil)
                        (last-modified-time :initarg :|lastModifiedTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-retained-message-response-last-modified-time
                         :initform common-lisp:nil)
                        (qos :initarg :|qos| :type
                         (common-lisp:or qos common-lisp:null) :accessor
                         %get-retained-message-response-qos :initform
                         common-lisp:nil)
                        (payload :initarg :|payload| :type
                         (common-lisp:or payload common-lisp:null) :accessor
                         %get-retained-message-response-payload :initform
                         common-lisp:nil)
                        (topic :initarg :|topic| :type
                         (common-lisp:or topic common-lisp:null) :accessor
                         %get-retained-message-response-topic :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-retained-message-response
                    'make-get-retained-message-response))
 (common-lisp:defun make-get-retained-message-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key user-properties last-modified-time qos
                     payload topic)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-retained-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-retained-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-retained-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic))
      (common-lisp:list
       (common-lisp:cons "topic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qos))
      (common-lisp:list
       (common-lisp:cons "qos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "lastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-properties))
      (common-lisp:list
       (common-lisp:cons "userProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-retained-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-thing-shadow-request common-lisp:nil
                       ((shadow-name :initarg :|shadowName| :type
                         (common-lisp:or shadow-name common-lisp:null)
                         :accessor %get-thing-shadow-request-shadow-name
                         :initform common-lisp:nil)
                        (thing-name :initarg :|thingName| :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         %get-thing-shadow-request-thing-name :initform
                         (common-lisp:error ":thingname is required"))))
 (common-lisp:export
  (common-lisp:list 'get-thing-shadow-request 'make-get-thing-shadow-request))
 (common-lisp:defun make-get-thing-shadow-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key shadow-name thing-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-thing-shadow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-thing-shadow-response common-lisp:nil
                       ((payload :initarg :|payload| :type
                         (common-lisp:or json-document common-lisp:null)
                         :accessor %get-thing-shadow-response-payload :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-thing-shadow-response
                    'make-get-thing-shadow-response))
 (common-lisp:defun make-get-thing-shadow-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key payload)
   (common-lisp:apply #'common-lisp:make-instance 'get-thing-shadow-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-response))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'payload))))
(common-lisp:progn
 (common-lisp:define-condition internal-failure-exception
     (iot-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       internal-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-failure-exception
                    'internal-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (iot-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message)))
(common-lisp:deftype json-document ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defclass list-named-shadows-for-thing-request common-lisp:nil
                       ((page-size :initarg :|pageSize| :type
                         (common-lisp:or page-size common-lisp:null) :accessor
                         %list-named-shadows-for-thing-request-page-size
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-named-shadows-for-thing-request-next-token
                         :initform common-lisp:nil)
                        (thing-name :initarg :|thingName| :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         %list-named-shadows-for-thing-request-thing-name
                         :initform
                         (common-lisp:error ":thingname is required"))))
 (common-lisp:export
  (common-lisp:list 'list-named-shadows-for-thing-request
                    'make-list-named-shadows-for-thing-request))
 (common-lisp:defun make-list-named-shadows-for-thing-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key page-size next-token thing-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-named-shadows-for-thing-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-named-shadows-for-thing-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-named-shadows-for-thing-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-named-shadows-for-thing-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-named-shadows-for-thing-response common-lisp:nil
                       ((timestamp :initarg common-lisp:string :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %list-named-shadows-for-thing-response-timestamp
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-named-shadows-for-thing-response-next-token
                         :initform common-lisp:nil)
                        (results :initarg :|results| :type
                         (common-lisp:or named-shadow-list common-lisp:null)
                         :accessor
                         %list-named-shadows-for-thing-response-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-named-shadows-for-thing-response
                    'make-list-named-shadows-for-thing-response))
 (common-lisp:defun make-list-named-shadows-for-thing-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key timestamp next-token results)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-named-shadows-for-thing-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-named-shadows-for-thing-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-named-shadows-for-thing-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'results))
      (common-lisp:list
       (common-lisp:cons "results"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-named-shadows-for-thing-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-retained-messages-request common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-retained-messages-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-retained-messages-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-retained-messages-request
                    'make-list-retained-messages-request))
 (common-lisp:defun make-list-retained-messages-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-retained-messages-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-retained-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-retained-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-retained-messages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-retained-messages-response common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-retained-messages-response-next-token :initform
                         common-lisp:nil)
                        (retained-topics :initarg :|retainedTopics| :type
                         (common-lisp:or retained-message-list
                                         common-lisp:null)
                         :accessor
                         %list-retained-messages-response-retained-topics
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-retained-messages-response
                    'make-list-retained-messages-response))
 (common-lisp:defun make-list-retained-messages-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token retained-topics)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-retained-messages-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-retained-messages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-retained-messages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retained-topics))
      (common-lisp:list
       (common-lisp:cons "retainedTopics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-retained-messages-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype message-expiry () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition method-not-allowed-exception
     (iot-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       method-not-allowed-exception-message)))
 (common-lisp:export
  (common-lisp:list 'method-not-allowed-exception
                    'method-not-allowed-exception-message)))
(common-lisp:progn
 (common-lisp:deftype named-shadow-list ()
   '(trivial-types:proper-list shadow-name))
 (common-lisp:defun |make-named-shadow-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list shadow-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype page-size () 'common-lisp:integer)
(common-lisp:deftype payload ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype payload-format-indicator () 'common-lisp:string)
(common-lisp:deftype payload-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass publish-request common-lisp:nil
                       ((message-expiry :initarg :|messageExpiry| :type
                         (common-lisp:or message-expiry common-lisp:null)
                         :accessor %publish-request-message-expiry :initform
                         common-lisp:nil)
                        (correlation-data :initarg :|correlationData| :type
                         (common-lisp:or correlation-data common-lisp:null)
                         :accessor %publish-request-correlation-data :initform
                         common-lisp:nil)
                        (response-topic :initarg :|responseTopic| :type
                         (common-lisp:or response-topic common-lisp:null)
                         :accessor %publish-request-response-topic :initform
                         common-lisp:nil)
                        (content-type :initarg :|contentType| :type
                         (common-lisp:or content-type common-lisp:null)
                         :accessor %publish-request-content-type :initform
                         common-lisp:nil)
                        (payload-format-indicator :initarg
                         :|payloadFormatIndicator| :type
                         (common-lisp:or payload-format-indicator
                                         common-lisp:null)
                         :accessor %publish-request-payload-format-indicator
                         :initform common-lisp:nil)
                        (user-properties :initarg :|userProperties| :type
                         (common-lisp:or user-properties common-lisp:null)
                         :accessor %publish-request-user-properties :initform
                         common-lisp:nil)
                        (payload :initarg :|payload| :type
                         (common-lisp:or payload common-lisp:null) :accessor
                         %publish-request-payload :initform common-lisp:nil)
                        (retain :initarg :|retain| :type
                         (common-lisp:or retain common-lisp:null) :accessor
                         %publish-request-retain :initform common-lisp:nil)
                        (qos :initarg :|qos| :type
                         (common-lisp:or qos common-lisp:null) :accessor
                         %publish-request-qos :initform common-lisp:nil)
                        (topic :initarg :|topic| :type
                         (common-lisp:or topic common-lisp:null) :accessor
                         %publish-request-topic :initform
                         (common-lisp:error ":topic is required"))))
 (common-lisp:export (common-lisp:list 'publish-request 'make-publish-request))
 (common-lisp:defun make-publish-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key message-expiry correlation-data
                     response-topic content-type payload-format-indicator
                     user-properties payload retain qos topic)
   (common-lisp:apply #'common-lisp:make-instance 'publish-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input publish-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-properties))
      (common-lisp:cons "x-amz-mqtt5-user-properties"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-indicator))
      (common-lisp:cons "x-amz-mqtt5-payload-format-indicator"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'correlation-data))
      (common-lisp:cons "x-amz-mqtt5-correlation-data"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input publish-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input publish-request))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'payload))))
(common-lisp:deftype qos () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition request-entity-too-large-exception
     (iot-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       request-entity-too-large-exception-message)))
 (common-lisp:export
  (common-lisp:list 'request-entity-too-large-exception
                    'request-entity-too-large-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (iot-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype response-topic () 'common-lisp:string)
(common-lisp:deftype retain () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:deftype retained-message-list ()
   '(trivial-types:proper-list retained-message-summary))
 (common-lisp:defun |make-retained-message-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            retained-message-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass retained-message-summary common-lisp:nil
                       ((last-modified-time :initarg :|lastModifiedTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %retained-message-summary-last-modified-time :initform
                         common-lisp:nil)
                        (qos :initarg :|qos| :type
                         (common-lisp:or qos common-lisp:null) :accessor
                         %retained-message-summary-qos :initform
                         common-lisp:nil)
                        (payload-size :initarg :|payloadSize| :type
                         (common-lisp:or payload-size common-lisp:null)
                         :accessor %retained-message-summary-payload-size
                         :initform common-lisp:nil)
                        (topic :initarg :|topic| :type
                         (common-lisp:or topic common-lisp:null) :accessor
                         %retained-message-summary-topic :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'retained-message-summary 'make-retained-message-summary))
 (common-lisp:defun make-retained-message-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key last-modified-time qos payload-size
                     topic)
   (common-lisp:apply #'common-lisp:make-instance 'retained-message-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retained-message-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retained-message-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic))
      (common-lisp:list
       (common-lisp:cons "topic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload-size))
      (common-lisp:list
       (common-lisp:cons "payloadSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qos))
      (common-lisp:list
       (common-lisp:cons "qos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "lastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retained-message-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (iot-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:deftype shadow-name () 'common-lisp:string)
(common-lisp:deftype thing-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (iot-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:integer)
(common-lisp:deftype topic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unauthorized-exception
     (iot-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       unauthorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-exception 'unauthorized-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition unsupported-document-encoding-exception
     (iot-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       unsupported-document-encoding-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-document-encoding-exception
                    'unsupported-document-encoding-exception-message)))
(common-lisp:progn
 (common-lisp:defclass update-thing-shadow-request common-lisp:nil
                       ((payload :initarg :|payload| :type
                         (common-lisp:or json-document common-lisp:null)
                         :accessor %update-thing-shadow-request-payload
                         :initform (common-lisp:error ":payload is required"))
                        (shadow-name :initarg :|shadowName| :type
                         (common-lisp:or shadow-name common-lisp:null)
                         :accessor %update-thing-shadow-request-shadow-name
                         :initform common-lisp:nil)
                        (thing-name :initarg :|thingName| :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         %update-thing-shadow-request-thing-name :initform
                         (common-lisp:error ":thingname is required"))))
 (common-lisp:export
  (common-lisp:list 'update-thing-shadow-request
                    'make-update-thing-shadow-request))
 (common-lisp:defun make-update-thing-shadow-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key payload shadow-name thing-name)
   (common-lisp:apply #'common-lisp:make-instance 'update-thing-shadow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-request))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'payload))))
(common-lisp:progn
 (common-lisp:defclass update-thing-shadow-response common-lisp:nil
                       ((payload :initarg :|payload| :type
                         (common-lisp:or json-document common-lisp:null)
                         :accessor %update-thing-shadow-response-payload
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-thing-shadow-response
                    'make-update-thing-shadow-response))
 (common-lisp:defun make-update-thing-shadow-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key payload)
   (common-lisp:apply #'common-lisp:make-instance 'update-thing-shadow-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-response))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'payload))))
(common-lisp:deftype user-properties () 'common-lisp:string)
(common-lisp:deftype user-properties-blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun delete-thing-shadow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name shadow-name)
   (common-lisp:declare (common-lisp:ignorable thing-name shadow-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-thing-shadow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/things/~A/shadow"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "DeleteThingShadow"
                                                        "2015-05-28")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-thing-shadow))
(common-lisp:progn
 (common-lisp:defun get-retained-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic)
   (common-lisp:declare (common-lisp:ignorable topic))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-retained-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/retainedMessage/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'topic))))
                                                        "GetRetainedMessage"
                                                        "2015-05-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-retained-message))
(common-lisp:progn
 (common-lisp:defun get-thing-shadow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name shadow-name)
   (common-lisp:declare (common-lisp:ignorable thing-name shadow-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-thing-shadow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/things/~A/shadow"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "GetThingShadow"
                                                        "2015-05-28")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'get-thing-shadow))
(common-lisp:progn
 (common-lisp:defun list-named-shadows-for-thing
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name next-token page-size)
   (common-lisp:declare
    (common-lisp:ignorable thing-name next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-named-shadows-for-thing-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/api/things/shadow/ListNamedShadowsForThing/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "ListNamedShadowsForThing"
                                                        "2015-05-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-named-shadows-for-thing))
(common-lisp:progn
 (common-lisp:defun list-retained-messages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-retained-messages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/retainedMessage"
                                                        "ListRetainedMessages"
                                                        "2015-05-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-retained-messages))
(common-lisp:progn
 (common-lisp:defun publish
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic qos retain payload user-properties
                     payload-format-indicator content-type response-topic
                     correlation-data message-expiry)
   (common-lisp:declare
    (common-lisp:ignorable topic qos retain payload user-properties
     payload-format-indicator content-type response-topic correlation-data
     message-expiry))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-publish-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/topics/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'topic))))
                                                        "Publish"
                                                        "2015-05-28"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'publish))
(common-lisp:progn
 (common-lisp:defun update-thing-shadow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name shadow-name payload)
   (common-lisp:declare (common-lisp:ignorable thing-name shadow-name payload))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-thing-shadow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/things/~A/shadow"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "UpdateThingShadow"
                                                        "2015-05-28")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'update-thing-shadow))
