;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/servicecatalog-appregistry/api
  (:use)
  (:nicknames #:aws/servicecatalog-appregistry)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/servicecatalog-appregistry/api)
(common-lisp:progn
 (common-lisp:defclass servicecatalog-appregistry-request
                       (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "servicecatalog-appregistry"
                        :protocol :rest-json))
 (common-lisp:export 'servicecatalog-appregistry-request))
(common-lisp:progn
 (common-lisp:define-condition servicecatalog-appregistry-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'servicecatalog-appregistry-error))
(common-lisp:defvar *error-map*
  '(("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:defclass app-registry-configuration common-lisp:nil
                       ((tag-query-configuration :initarg
                         :|tagQueryConfiguration| :type
                         (common-lisp:or tag-query-configuration
                                         common-lisp:null)
                         :accessor
                         %app-registry-configuration-tag-query-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'app-registry-configuration
                    'make-app-registry-configuration))
 (common-lisp:defun make-app-registry-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-query-configuration)
   (common-lisp:apply #'common-lisp:make-instance 'app-registry-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-registry-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-registry-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tag-query-configuration))
      (common-lisp:list
       (common-lisp:cons "tagQueryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-registry-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass application common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %application-tags :initform common-lisp:nil)
                        (last-update-time :initarg :|lastUpdateTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %application-last-update-time :initform
                         common-lisp:nil)
                        (creation-time :initarg :|creationTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %application-creation-time :initform common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %application-description :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %application-name :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor %application-arn :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %application-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'application 'make-application))
 (common-lisp:defun make-application
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags last-update-time creation-time
                     description name arn id)
   (common-lisp:apply #'common-lisp:make-instance 'application
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input application))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input application))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input application))
   common-lisp:nil))
(common-lisp:deftype application-arn () 'common-lisp:string)
(common-lisp:deftype application-id () 'common-lisp:string)
(common-lisp:deftype application-specifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype application-summaries ()
   '(trivial-types:proper-list application-summary))
 (common-lisp:defun |make-application-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass application-summary common-lisp:nil
                       ((last-update-time :initarg :|lastUpdateTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %application-summary-last-update-time :initform
                         common-lisp:nil)
                        (creation-time :initarg :|creationTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %application-summary-creation-time :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %application-summary-description :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %application-summary-name :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor %application-summary-arn :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %application-summary-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'application-summary 'make-application-summary))
 (common-lisp:defun make-application-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key last-update-time creation-time
                     description name arn id)
   (common-lisp:apply #'common-lisp:make-instance 'application-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input application-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input application-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input application-summary))
   common-lisp:nil))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass associate-attribute-group-request common-lisp:nil
                       ((attribute-group :initarg :|attributeGroup| :type
                         (common-lisp:or attribute-group-specifier
                                         common-lisp:null)
                         :accessor
                         %associate-attribute-group-request-attribute-group
                         :initform
                         (common-lisp:error ":attributegroup is required"))
                        (application :initarg :|application| :type
                         (common-lisp:or application-specifier
                                         common-lisp:null)
                         :accessor
                         %associate-attribute-group-request-application
                         :initform
                         (common-lisp:error ":application is required"))))
 (common-lisp:export
  (common-lisp:list 'associate-attribute-group-request
                    'make-associate-attribute-group-request))
 (common-lisp:defun make-associate-attribute-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attribute-group application)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-attribute-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-attribute-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-attribute-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-attribute-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-attribute-group-response common-lisp:nil
                       ((attribute-group-arn :initarg :|attributeGroupArn|
                         :type
                         (common-lisp:or attribute-group-arn common-lisp:null)
                         :accessor
                         %associate-attribute-group-response-attribute-group-arn
                         :initform common-lisp:nil)
                        (application-arn :initarg :|applicationArn| :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         %associate-attribute-group-response-application-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'associate-attribute-group-response
                    'make-associate-attribute-group-response))
 (common-lisp:defun make-associate-attribute-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attribute-group-arn application-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-attribute-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-attribute-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-attribute-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "applicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-group-arn))
      (common-lisp:list
       (common-lisp:cons "attributeGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-attribute-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-resource-request common-lisp:nil
                       ((resource :initarg :|resource| :type
                         (common-lisp:or resource-specifier common-lisp:null)
                         :accessor %associate-resource-request-resource
                         :initform (common-lisp:error ":resource is required"))
                        (resource-type :initarg :|resourceType| :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor %associate-resource-request-resource-type
                         :initform
                         (common-lisp:error ":resourcetype is required"))
                        (application :initarg :|application| :type
                         (common-lisp:or application-specifier
                                         common-lisp:null)
                         :accessor %associate-resource-request-application
                         :initform
                         (common-lisp:error ":application is required"))))
 (common-lisp:export
  (common-lisp:list 'associate-resource-request
                    'make-associate-resource-request))
 (common-lisp:defun make-associate-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource resource-type application)
   (common-lisp:apply #'common-lisp:make-instance 'associate-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-resource-response common-lisp:nil
                       ((resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %associate-resource-response-resource-arn :initform
                         common-lisp:nil)
                        (application-arn :initarg :|applicationArn| :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor %associate-resource-response-application-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'associate-resource-response
                    'make-associate-resource-response))
 (common-lisp:defun make-associate-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn application-arn)
   (common-lisp:apply #'common-lisp:make-instance 'associate-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "applicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response))
   common-lisp:nil))
(common-lisp:deftype association-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass attribute-group common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %attribute-group-tags :initform common-lisp:nil)
                        (last-update-time :initarg :|lastUpdateTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %attribute-group-last-update-time :initform
                         common-lisp:nil)
                        (creation-time :initarg :|creationTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %attribute-group-creation-time :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %attribute-group-description :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %attribute-group-name :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or attribute-group-arn common-lisp:null)
                         :accessor %attribute-group-arn :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or attribute-group-id common-lisp:null)
                         :accessor %attribute-group-id :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'attribute-group 'make-attribute-group))
 (common-lisp:defun make-attribute-group
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags last-update-time creation-time
                     description name arn id)
   (common-lisp:apply #'common-lisp:make-instance 'attribute-group
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attribute-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attribute-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attribute-group))
   common-lisp:nil))
(common-lisp:deftype attribute-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass attribute-group-details common-lisp:nil
                       ((created-by :initarg :|createdBy| :type
                         (common-lisp:or created-by common-lisp:null) :accessor
                         %attribute-group-details-created-by :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %attribute-group-details-name :initform
                         common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or attribute-group-arn common-lisp:null)
                         :accessor %attribute-group-details-arn :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or attribute-group-id common-lisp:null)
                         :accessor %attribute-group-details-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'attribute-group-details 'make-attribute-group-details))
 (common-lisp:defun make-attribute-group-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key created-by name arn id)
   (common-lisp:apply #'common-lisp:make-instance 'attribute-group-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attribute-group-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attribute-group-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "createdBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attribute-group-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype attribute-group-details-list ()
   '(trivial-types:proper-list attribute-group-details))
 (common-lisp:defun |make-attribute-group-details-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-group-details))
   aws-sdk/generator/shape::members))
(common-lisp:deftype attribute-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attribute-group-ids ()
   '(trivial-types:proper-list attribute-group-id))
 (common-lisp:defun |make-attribute-group-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype attribute-group-specifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attribute-group-summaries ()
   '(trivial-types:proper-list attribute-group-summary))
 (common-lisp:defun |make-attribute-group-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-group-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass attribute-group-summary common-lisp:nil
                       ((created-by :initarg :|createdBy| :type
                         (common-lisp:or created-by common-lisp:null) :accessor
                         %attribute-group-summary-created-by :initform
                         common-lisp:nil)
                        (last-update-time :initarg :|lastUpdateTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %attribute-group-summary-last-update-time :initform
                         common-lisp:nil)
                        (creation-time :initarg :|creationTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %attribute-group-summary-creation-time :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %attribute-group-summary-description
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %attribute-group-summary-name :initform
                         common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or attribute-group-arn common-lisp:null)
                         :accessor %attribute-group-summary-arn :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or attribute-group-id common-lisp:null)
                         :accessor %attribute-group-summary-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'attribute-group-summary 'make-attribute-group-summary))
 (common-lisp:defun make-attribute-group-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key created-by last-update-time creation-time
                     description name arn id)
   (common-lisp:apply #'common-lisp:make-instance 'attribute-group-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attribute-group-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attribute-group-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "createdBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attribute-group-summary))
   common-lisp:nil))
(common-lisp:deftype attributes () 'common-lisp:string)
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (servicecatalog-appregistry-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-application-request common-lisp:nil
                       ((client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-application-request-client-token
                         :initform
                         (common-lisp:error ":clienttoken is required"))
                        (tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-application-request-tags :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %create-application-request-description
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %create-application-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-application-request
                    'make-create-application-request))
 (common-lisp:defun make-create-application-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key client-token tags description name)
   (common-lisp:apply #'common-lisp:make-instance 'create-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-application-response common-lisp:nil
                       ((application :initarg :|application| :type
                         (common-lisp:or application common-lisp:null)
                         :accessor %create-application-response-application
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-application-response
                    'make-create-application-response))
 (common-lisp:defun make-create-application-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key application)
   (common-lisp:apply #'common-lisp:make-instance 'create-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application))
      (common-lisp:list
       (common-lisp:cons "application"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-attribute-group-request common-lisp:nil
                       ((client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-attribute-group-request-client-token
                         :initform
                         (common-lisp:error ":clienttoken is required"))
                        (tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-attribute-group-request-tags :initform
                         common-lisp:nil)
                        (attributes :initarg :|attributes| :type
                         (common-lisp:or attributes common-lisp:null) :accessor
                         %create-attribute-group-request-attributes :initform
                         (common-lisp:error ":attributes is required"))
                        (description :initarg :|description| :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %create-attribute-group-request-description
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %create-attribute-group-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-attribute-group-request
                    'make-create-attribute-group-request))
 (common-lisp:defun make-create-attribute-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key client-token tags attributes description
                     name)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-attribute-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-attribute-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-attribute-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-attribute-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-attribute-group-response common-lisp:nil
                       ((attribute-group :initarg :|attributeGroup| :type
                         (common-lisp:or attribute-group common-lisp:null)
                         :accessor
                         %create-attribute-group-response-attribute-group
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-attribute-group-response
                    'make-create-attribute-group-response))
 (common-lisp:defun make-create-attribute-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attribute-group)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-attribute-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-attribute-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-attribute-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-group))
      (common-lisp:list
       (common-lisp:cons "attributeGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-attribute-group-response))
   common-lisp:nil))
(common-lisp:deftype created-by () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-application-request common-lisp:nil
                       ((application :initarg :|application| :type
                         (common-lisp:or application-specifier
                                         common-lisp:null)
                         :accessor %delete-application-request-application
                         :initform
                         (common-lisp:error ":application is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-application-request
                    'make-delete-application-request))
 (common-lisp:defun make-delete-application-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key application)
   (common-lisp:apply #'common-lisp:make-instance 'delete-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-application-response common-lisp:nil
                       ((application :initarg :|application| :type
                         (common-lisp:or application-summary common-lisp:null)
                         :accessor %delete-application-response-application
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-application-response
                    'make-delete-application-response))
 (common-lisp:defun make-delete-application-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key application)
   (common-lisp:apply #'common-lisp:make-instance 'delete-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application))
      (common-lisp:list
       (common-lisp:cons "application"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-attribute-group-request common-lisp:nil
                       ((attribute-group :initarg :|attributeGroup| :type
                         (common-lisp:or attribute-group-specifier
                                         common-lisp:null)
                         :accessor
                         %delete-attribute-group-request-attribute-group
                         :initform
                         (common-lisp:error ":attributegroup is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-attribute-group-request
                    'make-delete-attribute-group-request))
 (common-lisp:defun make-delete-attribute-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attribute-group)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-attribute-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-attribute-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-attribute-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-attribute-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-attribute-group-response common-lisp:nil
                       ((attribute-group :initarg :|attributeGroup| :type
                         (common-lisp:or attribute-group-summary
                                         common-lisp:null)
                         :accessor
                         %delete-attribute-group-response-attribute-group
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-attribute-group-response
                    'make-delete-attribute-group-response))
 (common-lisp:defun make-delete-attribute-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attribute-group)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-attribute-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-attribute-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-attribute-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-group))
      (common-lisp:list
       (common-lisp:cons "attributeGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-attribute-group-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass disassociate-attribute-group-request common-lisp:nil
                       ((attribute-group :initarg :|attributeGroup| :type
                         (common-lisp:or attribute-group-specifier
                                         common-lisp:null)
                         :accessor
                         %disassociate-attribute-group-request-attribute-group
                         :initform
                         (common-lisp:error ":attributegroup is required"))
                        (application :initarg :|application| :type
                         (common-lisp:or application-specifier
                                         common-lisp:null)
                         :accessor
                         %disassociate-attribute-group-request-application
                         :initform
                         (common-lisp:error ":application is required"))))
 (common-lisp:export
  (common-lisp:list 'disassociate-attribute-group-request
                    'make-disassociate-attribute-group-request))
 (common-lisp:defun make-disassociate-attribute-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attribute-group application)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-attribute-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-attribute-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-attribute-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-attribute-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-attribute-group-response common-lisp:nil
                       ((attribute-group-arn :initarg :|attributeGroupArn|
                         :type
                         (common-lisp:or attribute-group-arn common-lisp:null)
                         :accessor
                         %disassociate-attribute-group-response-attribute-group-arn
                         :initform common-lisp:nil)
                        (application-arn :initarg :|applicationArn| :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         %disassociate-attribute-group-response-application-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disassociate-attribute-group-response
                    'make-disassociate-attribute-group-response))
 (common-lisp:defun make-disassociate-attribute-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attribute-group-arn application-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-attribute-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-attribute-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-attribute-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "applicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-group-arn))
      (common-lisp:list
       (common-lisp:cons "attributeGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-attribute-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-resource-request common-lisp:nil
                       ((resource :initarg :|resource| :type
                         (common-lisp:or resource-specifier common-lisp:null)
                         :accessor %disassociate-resource-request-resource
                         :initform (common-lisp:error ":resource is required"))
                        (resource-type :initarg :|resourceType| :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor %disassociate-resource-request-resource-type
                         :initform
                         (common-lisp:error ":resourcetype is required"))
                        (application :initarg :|application| :type
                         (common-lisp:or application-specifier
                                         common-lisp:null)
                         :accessor %disassociate-resource-request-application
                         :initform
                         (common-lisp:error ":application is required"))))
 (common-lisp:export
  (common-lisp:list 'disassociate-resource-request
                    'make-disassociate-resource-request))
 (common-lisp:defun make-disassociate-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource resource-type application)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-resource-response common-lisp:nil
                       ((resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %disassociate-resource-response-resource-arn :initform
                         common-lisp:nil)
                        (application-arn :initarg :|applicationArn| :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         %disassociate-resource-response-application-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disassociate-resource-response
                    'make-disassociate-resource-response))
 (common-lisp:defun make-disassociate-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn application-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "applicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-request common-lisp:nil
                       ((application :initarg :|application| :type
                         (common-lisp:or application-specifier
                                         common-lisp:null)
                         :accessor %get-application-request-application
                         :initform
                         (common-lisp:error ":application is required"))))
 (common-lisp:export
  (common-lisp:list 'get-application-request 'make-get-application-request))
 (common-lisp:defun make-get-application-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key application)
   (common-lisp:apply #'common-lisp:make-instance 'get-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-response common-lisp:nil
                       ((integrations :initarg :|integrations| :type
                         (common-lisp:or integrations common-lisp:null)
                         :accessor %get-application-response-integrations
                         :initform common-lisp:nil)
                        (tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %get-application-response-tags :initform
                         common-lisp:nil)
                        (associated-resource-count :initarg
                         :|associatedResourceCount| :type
                         (common-lisp:or association-count common-lisp:null)
                         :accessor
                         %get-application-response-associated-resource-count
                         :initform common-lisp:nil)
                        (last-update-time :initarg :|lastUpdateTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-application-response-last-update-time :initform
                         common-lisp:nil)
                        (creation-time :initarg :|creationTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-application-response-creation-time :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %get-application-response-description
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %get-application-response-name :initform
                         common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor %get-application-response-arn :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %get-application-response-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-application-response 'make-get-application-response))
 (common-lisp:defun make-get-application-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key integrations tags
                     associated-resource-count last-update-time creation-time
                     description name arn id)
   (common-lisp:apply #'common-lisp:make-instance 'get-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'associated-resource-count))
      (common-lisp:list
       (common-lisp:cons "associatedResourceCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integrations))
      (common-lisp:list
       (common-lisp:cons "integrations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-associated-resource-request common-lisp:nil
                       ((resource :initarg :|resource| :type
                         (common-lisp:or resource-specifier common-lisp:null)
                         :accessor %get-associated-resource-request-resource
                         :initform (common-lisp:error ":resource is required"))
                        (resource-type :initarg :|resourceType| :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         %get-associated-resource-request-resource-type
                         :initform
                         (common-lisp:error ":resourcetype is required"))
                        (application :initarg :|application| :type
                         (common-lisp:or application-specifier
                                         common-lisp:null)
                         :accessor %get-associated-resource-request-application
                         :initform
                         (common-lisp:error ":application is required"))))
 (common-lisp:export
  (common-lisp:list 'get-associated-resource-request
                    'make-get-associated-resource-request))
 (common-lisp:defun make-get-associated-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource resource-type application)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-associated-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-associated-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-associated-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-associated-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-associated-resource-response common-lisp:nil
                       ((resource :initarg :|resource| :type
                         (common-lisp:or resource common-lisp:null) :accessor
                         %get-associated-resource-response-resource :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-associated-resource-response
                    'make-get-associated-resource-response))
 (common-lisp:defun make-get-associated-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-associated-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-associated-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-associated-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource))
      (common-lisp:list
       (common-lisp:cons "resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-associated-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-attribute-group-request common-lisp:nil
                       ((attribute-group :initarg :|attributeGroup| :type
                         (common-lisp:or attribute-group-specifier
                                         common-lisp:null)
                         :accessor %get-attribute-group-request-attribute-group
                         :initform
                         (common-lisp:error ":attributegroup is required"))))
 (common-lisp:export
  (common-lisp:list 'get-attribute-group-request
                    'make-get-attribute-group-request))
 (common-lisp:defun make-get-attribute-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attribute-group)
   (common-lisp:apply #'common-lisp:make-instance 'get-attribute-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-attribute-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-attribute-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-attribute-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-attribute-group-response common-lisp:nil
                       ((created-by :initarg :|createdBy| :type
                         (common-lisp:or created-by common-lisp:null) :accessor
                         %get-attribute-group-response-created-by :initform
                         common-lisp:nil)
                        (tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %get-attribute-group-response-tags :initform
                         common-lisp:nil)
                        (last-update-time :initarg :|lastUpdateTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-attribute-group-response-last-update-time
                         :initform common-lisp:nil)
                        (creation-time :initarg :|creationTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-attribute-group-response-creation-time :initform
                         common-lisp:nil)
                        (attributes :initarg :|attributes| :type
                         (common-lisp:or attributes common-lisp:null) :accessor
                         %get-attribute-group-response-attributes :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %get-attribute-group-response-description
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %get-attribute-group-response-name :initform
                         common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or attribute-group-arn common-lisp:null)
                         :accessor %get-attribute-group-response-arn :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or attribute-group-id common-lisp:null)
                         :accessor %get-attribute-group-response-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-attribute-group-response
                    'make-get-attribute-group-response))
 (common-lisp:defun make-get-attribute-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key created-by tags last-update-time
                     creation-time attributes description name arn id)
   (common-lisp:apply #'common-lisp:make-instance 'get-attribute-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-attribute-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-attribute-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "createdBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-attribute-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-configuration-response common-lisp:nil
                       ((configuration :initarg :|configuration| :type
                         (common-lisp:or app-registry-configuration
                                         common-lisp:null)
                         :accessor %get-configuration-response-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-configuration-response
                    'make-get-configuration-response))
 (common-lisp:defun make-get-configuration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key configuration)
   (common-lisp:apply #'common-lisp:make-instance 'get-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass integrations common-lisp:nil
                       ((resource-group :initarg :|resourceGroup| :type
                         (common-lisp:or resource-group common-lisp:null)
                         :accessor %integrations-resource-group :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'integrations 'make-integrations))
 (common-lisp:defun make-integrations
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-group)
   (common-lisp:apply #'common-lisp:make-instance 'integrations
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integrations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integrations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-group))
      (common-lisp:list
       (common-lisp:cons "resourceGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integrations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (servicecatalog-appregistry-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-applications-request common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-applications-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-applications-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-applications-request
                    'make-list-applications-request))
 (common-lisp:defun make-list-applications-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-applications-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-applications-response common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-applications-response-next-token :initform
                         common-lisp:nil)
                        (applications :initarg :|applications| :type
                         (common-lisp:or application-summaries
                                         common-lisp:null)
                         :accessor %list-applications-response-applications
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-applications-response
                    'make-list-applications-response))
 (common-lisp:defun make-list-applications-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token applications)
   (common-lisp:apply #'common-lisp:make-instance 'list-applications-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'applications))
      (common-lisp:list
       (common-lisp:cons "applications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-associated-attribute-groups-request common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %list-associated-attribute-groups-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-associated-attribute-groups-request-next-token
                         :initform common-lisp:nil)
                        (application :initarg :|application| :type
                         (common-lisp:or application-specifier
                                         common-lisp:null)
                         :accessor
                         %list-associated-attribute-groups-request-application
                         :initform
                         (common-lisp:error ":application is required"))))
 (common-lisp:export
  (common-lisp:list 'list-associated-attribute-groups-request
                    'make-list-associated-attribute-groups-request))
 (common-lisp:defun make-list-associated-attribute-groups-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token application)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-associated-attribute-groups-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-attribute-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-attribute-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-attribute-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-associated-attribute-groups-response
                       common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-associated-attribute-groups-response-next-token
                         :initform common-lisp:nil)
                        (attribute-groups :initarg :|attributeGroups| :type
                         (common-lisp:or attribute-group-ids common-lisp:null)
                         :accessor
                         %list-associated-attribute-groups-response-attribute-groups
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-associated-attribute-groups-response
                    'make-list-associated-attribute-groups-response))
 (common-lisp:defun make-list-associated-attribute-groups-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token attribute-groups)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-associated-attribute-groups-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-attribute-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-attribute-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-groups))
      (common-lisp:list
       (common-lisp:cons "attributeGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-attribute-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-associated-resources-request common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %list-associated-resources-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-associated-resources-request-next-token
                         :initform common-lisp:nil)
                        (application :initarg :|application| :type
                         (common-lisp:or application-specifier
                                         common-lisp:null)
                         :accessor
                         %list-associated-resources-request-application
                         :initform
                         (common-lisp:error ":application is required"))))
 (common-lisp:export
  (common-lisp:list 'list-associated-resources-request
                    'make-list-associated-resources-request))
 (common-lisp:defun make-list-associated-resources-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token application)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-associated-resources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-associated-resources-response common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-associated-resources-response-next-token
                         :initform common-lisp:nil)
                        (resources :initarg :|resources| :type
                         (common-lisp:or resources common-lisp:null) :accessor
                         %list-associated-resources-response-resources
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-associated-resources-response
                    'make-list-associated-resources-response))
 (common-lisp:defun make-list-associated-resources-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token resources)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-associated-resources-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-resources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-attribute-groups-for-application-request
                       common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %list-attribute-groups-for-application-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-attribute-groups-for-application-request-next-token
                         :initform common-lisp:nil)
                        (application :initarg :|application| :type
                         (common-lisp:or application-specifier
                                         common-lisp:null)
                         :accessor
                         %list-attribute-groups-for-application-request-application
                         :initform
                         (common-lisp:error ":application is required"))))
 (common-lisp:export
  (common-lisp:list 'list-attribute-groups-for-application-request
                    'make-list-attribute-groups-for-application-request))
 (common-lisp:defun make-list-attribute-groups-for-application-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token application)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-attribute-groups-for-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-attribute-groups-for-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-attribute-groups-for-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-attribute-groups-for-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-attribute-groups-for-application-response
                       common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-attribute-groups-for-application-response-next-token
                         :initform common-lisp:nil)
                        (attribute-groups-details :initarg
                         :|attributeGroupsDetails| :type
                         (common-lisp:or attribute-group-details-list
                                         common-lisp:null)
                         :accessor
                         %list-attribute-groups-for-application-response-attribute-groups-details
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-attribute-groups-for-application-response
                    'make-list-attribute-groups-for-application-response))
 (common-lisp:defun make-list-attribute-groups-for-application-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token attribute-groups-details)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-attribute-groups-for-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-attribute-groups-for-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-attribute-groups-for-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'attribute-groups-details))
      (common-lisp:list
       (common-lisp:cons "attributeGroupsDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-attribute-groups-for-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-attribute-groups-request common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-attribute-groups-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-attribute-groups-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-attribute-groups-request
                    'make-list-attribute-groups-request))
 (common-lisp:defun make-list-attribute-groups-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-attribute-groups-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-attribute-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-attribute-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-attribute-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-attribute-groups-response common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-attribute-groups-response-next-token :initform
                         common-lisp:nil)
                        (attribute-groups :initarg :|attributeGroups| :type
                         (common-lisp:or attribute-group-summaries
                                         common-lisp:null)
                         :accessor
                         %list-attribute-groups-response-attribute-groups
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-attribute-groups-response
                    'make-list-attribute-groups-response))
 (common-lisp:defun make-list-attribute-groups-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token attribute-groups)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-attribute-groups-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-attribute-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-attribute-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-groups))
      (common-lisp:list
       (common-lisp:cons "attributeGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-attribute-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %list-tags-for-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %list-tags-for-resource-response-tags :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defun make-list-tags-for-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-configuration-request common-lisp:nil
                       ((configuration :initarg :|configuration| :type
                         (common-lisp:or app-registry-configuration
                                         common-lisp:null)
                         :accessor %put-configuration-request-configuration
                         :initform
                         (common-lisp:error ":configuration is required"))))
 (common-lisp:export
  (common-lisp:list 'put-configuration-request
                    'make-put-configuration-request))
 (common-lisp:defun make-put-configuration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key configuration)
   (common-lisp:apply #'common-lisp:make-instance 'put-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource common-lisp:nil
                       ((integrations :initarg :|integrations| :type
                         (common-lisp:or resource-integrations
                                         common-lisp:null)
                         :accessor %resource-integrations :initform
                         common-lisp:nil)
                        (association-time :initarg :|associationTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %resource-association-time :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or stack-arn common-lisp:null) :accessor
                         %resource-arn :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or resource-specifier common-lisp:null)
                         :accessor %resource-name :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defun make-resource
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key integrations association-time arn name)
   (common-lisp:apply #'common-lisp:make-instance 'resource
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'association-time))
      (common-lisp:list
       (common-lisp:cons "associationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integrations))
      (common-lisp:list
       (common-lisp:cons "integrations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource-details common-lisp:nil
                       ((tag-value :initarg :|tagValue| :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         %resource-details-tag-value :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-details 'make-resource-details))
 (common-lisp:defun make-resource-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-value)
   (common-lisp:apply #'common-lisp:make-instance 'resource-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-value))
      (common-lisp:list
       (common-lisp:cons "tagValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource-group common-lisp:nil
                       ((error-message :initarg :|errorMessage| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %resource-group-error-message :initform
                         common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %resource-group-arn :initform common-lisp:nil)
                        (state :initarg :|state| :type
                         (common-lisp:or resource-group-state common-lisp:null)
                         :accessor %resource-group-state :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'resource-group 'make-resource-group))
 (common-lisp:defun make-resource-group
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key error-message arn state)
   (common-lisp:apply #'common-lisp:make-instance 'resource-group
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-group))
   common-lisp:nil))
(common-lisp:deftype resource-group-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass resource-info common-lisp:nil
                       ((resource-details :initarg :|resourceDetails| :type
                         (common-lisp:or resource-details common-lisp:null)
                         :accessor %resource-info-resource-details :initform
                         common-lisp:nil)
                        (resource-type :initarg :|resourceType| :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor %resource-info-resource-type :initform
                         common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %resource-info-arn :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or resource-specifier common-lisp:null)
                         :accessor %resource-info-name :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'resource-info 'make-resource-info))
 (common-lisp:defun make-resource-info
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-details resource-type arn name)
   (common-lisp:apply #'common-lisp:make-instance 'resource-info
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-details))
      (common-lisp:list
       (common-lisp:cons "resourceDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource-integrations common-lisp:nil
                       ((resource-group :initarg :|resourceGroup| :type
                         (common-lisp:or resource-group common-lisp:null)
                         :accessor %resource-integrations-resource-group
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-integrations 'make-resource-integrations))
 (common-lisp:defun make-resource-integrations
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-group)
   (common-lisp:apply #'common-lisp:make-instance 'resource-integrations
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-integrations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-integrations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-group))
      (common-lisp:list
       (common-lisp:cons "resourceGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-integrations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (servicecatalog-appregistry-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype resource-specifier () 'common-lisp:string)
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resources () '(trivial-types:proper-list resource-info))
 (common-lisp:defun |make-resources|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (servicecatalog-appregistry-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:deftype stack-arn () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype sync-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass sync-resource-request common-lisp:nil
                       ((resource :initarg :|resource| :type
                         (common-lisp:or resource-specifier common-lisp:null)
                         :accessor %sync-resource-request-resource :initform
                         (common-lisp:error ":resource is required"))
                        (resource-type :initarg :|resourceType| :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor %sync-resource-request-resource-type
                         :initform
                         (common-lisp:error ":resourcetype is required"))))
 (common-lisp:export
  (common-lisp:list 'sync-resource-request 'make-sync-resource-request))
 (common-lisp:defun make-sync-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource resource-type)
   (common-lisp:apply #'common-lisp:make-instance 'sync-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sync-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sync-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sync-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sync-resource-response common-lisp:nil
                       ((action-taken :initarg :|actionTaken| :type
                         (common-lisp:or sync-action common-lisp:null)
                         :accessor %sync-resource-response-action-taken
                         :initform common-lisp:nil)
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %sync-resource-response-resource-arn :initform
                         common-lisp:nil)
                        (application-arn :initarg :|applicationArn| :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor %sync-resource-response-application-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'sync-resource-response 'make-sync-resource-response))
 (common-lisp:defun make-sync-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key action-taken resource-arn
                     application-arn)
   (common-lisp:apply #'common-lisp:make-instance 'sync-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sync-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sync-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "applicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-taken))
      (common-lisp:list
       (common-lisp:cons "actionTaken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sync-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:deftype tag-key-config () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-query-configuration common-lisp:nil
                       ((tag-key :initarg :|tagKey| :type
                         (common-lisp:or tag-key-config common-lisp:null)
                         :accessor %tag-query-configuration-tag-key :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'tag-query-configuration 'make-tag-query-configuration))
 (common-lisp:defun make-tag-query-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-query-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-query-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-query-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-key))
      (common-lisp:list
       (common-lisp:cons "tagKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-query-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %tag-resource-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defun make-tag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () 'common-lisp:hash-table)
 (common-lisp:defun |make-tags| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (servicecatalog-appregistry-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       throttling-exception-message)
      (service-code :initarg :|serviceCode| :initform common-lisp:nil :reader
       throttling-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-service-code)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :|tagKeys| :type
                         (common-lisp:or tag-keys common-lisp:null) :accessor
                         %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tagkeys is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %untag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defun make-untag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-application-request common-lisp:nil
                       ((description :initarg :|description| :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %update-application-request-description
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %update-application-request-name :initform
                         common-lisp:nil)
                        (application :initarg :|application| :type
                         (common-lisp:or application-specifier
                                         common-lisp:null)
                         :accessor %update-application-request-application
                         :initform
                         (common-lisp:error ":application is required"))))
 (common-lisp:export
  (common-lisp:list 'update-application-request
                    'make-update-application-request))
 (common-lisp:defun make-update-application-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key description name application)
   (common-lisp:apply #'common-lisp:make-instance 'update-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-application-response common-lisp:nil
                       ((application :initarg :|application| :type
                         (common-lisp:or application common-lisp:null)
                         :accessor %update-application-response-application
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-application-response
                    'make-update-application-response))
 (common-lisp:defun make-update-application-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key application)
   (common-lisp:apply #'common-lisp:make-instance 'update-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application))
      (common-lisp:list
       (common-lisp:cons "application"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-attribute-group-request common-lisp:nil
                       ((attributes :initarg :|attributes| :type
                         (common-lisp:or attributes common-lisp:null) :accessor
                         %update-attribute-group-request-attributes :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %update-attribute-group-request-description
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %update-attribute-group-request-name :initform
                         common-lisp:nil)
                        (attribute-group :initarg :|attributeGroup| :type
                         (common-lisp:or attribute-group-specifier
                                         common-lisp:null)
                         :accessor
                         %update-attribute-group-request-attribute-group
                         :initform
                         (common-lisp:error ":attributegroup is required"))))
 (common-lisp:export
  (common-lisp:list 'update-attribute-group-request
                    'make-update-attribute-group-request))
 (common-lisp:defun make-update-attribute-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attributes description name
                     attribute-group)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-attribute-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-attribute-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-attribute-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-attribute-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-attribute-group-response common-lisp:nil
                       ((attribute-group :initarg :|attributeGroup| :type
                         (common-lisp:or attribute-group common-lisp:null)
                         :accessor
                         %update-attribute-group-response-attribute-group
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-attribute-group-response
                    'make-update-attribute-group-response))
 (common-lisp:defun make-update-attribute-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attribute-group)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-attribute-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-attribute-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-attribute-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-group))
      (common-lisp:list
       (common-lisp:cons "attributeGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-attribute-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (servicecatalog-appregistry-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defun associate-attribute-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application attribute-group)
   (common-lisp:declare (common-lisp:ignorable application attribute-group))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-attribute-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "PUT" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/applications/~A/attribute-groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'attribute-group))))
        "AssociateAttributeGroup" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-attribute-group))
(common-lisp:progn
 (common-lisp:defun associate-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application resource-type resource)
   (common-lisp:declare
    (common-lisp:ignorable application resource-type resource))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "PUT" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/applications/~A/resources/~A/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-type))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource))))
        "AssociateResource" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-resource))
(common-lisp:progn
 (common-lisp:defun create-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description tags client-token)
   (common-lisp:declare
    (common-lisp:ignorable name description tags client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "POST" :rest-json "/applications" "CreateApplication" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-application))
(common-lisp:progn
 (common-lisp:defun create-attribute-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description attributes tags
                     client-token)
   (common-lisp:declare
    (common-lisp:ignorable name description attributes tags client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-attribute-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "POST" :rest-json "/attribute-groups" "CreateAttributeGroup"
        "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-attribute-group))
(common-lisp:progn
 (common-lisp:defun delete-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application)
   (common-lisp:declare (common-lisp:ignorable application))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application))))
        "DeleteApplication" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-application))
(common-lisp:progn
 (common-lisp:defun delete-attribute-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attribute-group)
   (common-lisp:declare (common-lisp:ignorable attribute-group))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-attribute-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/attribute-groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'attribute-group))))
        "DeleteAttributeGroup" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-attribute-group))
(common-lisp:progn
 (common-lisp:defun disassociate-attribute-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application attribute-group)
   (common-lisp:declare (common-lisp:ignorable application attribute-group))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-attribute-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/applications/~A/attribute-groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'attribute-group))))
        "DisassociateAttributeGroup" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-attribute-group))
(common-lisp:progn
 (common-lisp:defun disassociate-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application resource-type resource)
   (common-lisp:declare
    (common-lisp:ignorable application resource-type resource))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/applications/~A/resources/~A/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-type))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource))))
        "DisassociateResource" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-resource))
(common-lisp:progn
 (common-lisp:defun get-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application)
   (common-lisp:declare (common-lisp:ignorable application))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application))))
        "GetApplication" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-application))
(common-lisp:progn
 (common-lisp:defun get-associated-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application resource-type resource)
   (common-lisp:declare
    (common-lisp:ignorable application resource-type resource))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-associated-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/applications/~A/resources/~A/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-type))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource))))
        "GetAssociatedResource" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-associated-resource))
(common-lisp:progn
 (common-lisp:defun get-attribute-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attribute-group)
   (common-lisp:declare (common-lisp:ignorable attribute-group))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-attribute-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/attribute-groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'attribute-group))))
        "GetAttributeGroup" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-attribute-group))
(common-lisp:progn
 (common-lisp:defun get-configuration ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'servicecatalog-appregistry-request :method
                                "GET" :path "/configuration" :protocol
                                :rest-json :operation "GetConfiguration"
                                :params
                                `(("Action" ,@"GetConfiguration")
                                  ("Version" ,@"2020-06-24"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-configuration))
(common-lisp:progn
 (common-lisp:defun list-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-applications-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "GET" :rest-json "/applications" "ListApplications" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-applications))
(common-lisp:progn
 (common-lisp:defun list-associated-attribute-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable application next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-associated-attribute-groups-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/applications/~A/attribute-groups"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application))))
        "ListAssociatedAttributeGroups" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-associated-attribute-groups))
(common-lisp:progn
 (common-lisp:defun list-associated-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable application next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-associated-resources-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/applications/~A/resources"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application))))
        "ListAssociatedResources" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-associated-resources))
(common-lisp:progn
 (common-lisp:defun list-attribute-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-attribute-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "GET" :rest-json "/attribute-groups" "ListAttributeGroups"
        "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-attribute-groups))
(common-lisp:progn
 (common-lisp:defun list-attribute-groups-for-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable application next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-attribute-groups-for-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/applications/~A/attribute-group-details"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application))))
        "ListAttributeGroupsForApplication" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-attribute-groups-for-application))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResource" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration)
   (common-lisp:declare (common-lisp:ignorable configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-configuration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "PUT" :rest-json "/configuration" "PutConfiguration" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-configuration))
(common-lisp:progn
 (common-lisp:defun sync-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type resource)
   (common-lisp:declare (common-lisp:ignorable resource-type resource))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-sync-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "POST" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sync/~A/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-type))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource))))
        "SyncResource" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'sync-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "POST" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application name description)
   (common-lisp:declare (common-lisp:ignorable application name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "PATCH" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application))))
        "UpdateApplication" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-application))
(common-lisp:progn
 (common-lisp:defun update-attribute-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attribute-group name description
                     attributes)
   (common-lisp:declare
    (common-lisp:ignorable attribute-group name description attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-attribute-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'servicecatalog-appregistry-request aws-sdk/generator/operation::input
        "PATCH" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/attribute-groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'attribute-group))))
        "UpdateAttributeGroup" "2020-06-24"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-attribute-group))
