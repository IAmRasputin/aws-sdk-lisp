;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cloudcontrol/api
  (:use)
  (:nicknames #:aws/cloudcontrol)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/cloudcontrol/api)
(common-lisp:progn
 (common-lisp:defclass cloudcontrol-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "cloudcontrol" :protocol
                        :json))
 (common-lisp:export 'cloudcontrol-request))
(common-lisp:progn
 (common-lisp:define-condition cloudcontrol-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'cloudcontrol-error))
(common-lisp:defvar *error-map*
  '(("AlreadyExistsException" . already-exists-exception)
    ("ClientTokenConflictException" . client-token-conflict-exception)
    ("ConcurrentModificationException" . concurrent-modification-exception)
    ("ConcurrentOperationException" . concurrent-operation-exception)
    ("GeneralServiceException" . general-service-exception)
    ("HandlerFailureException" . handler-failure-exception)
    ("HandlerInternalFailureException" . handler-internal-failure-exception)
    ("InvalidCredentialsException" . invalid-credentials-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("NetworkFailureException" . network-failure-exception)
    ("NotStabilizedException" . not-stabilized-exception)
    ("NotUpdatableException" . not-updatable-exception)
    ("PrivateTypeException" . private-type-exception)
    ("RequestTokenNotFoundException" . request-token-not-found-exception)
    ("ResourceConflictException" . resource-conflict-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceInternalErrorException" . service-internal-error-exception)
    ("ServiceLimitExceededException" . service-limit-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("TypeNotFoundException" . type-not-found-exception)
    ("UnsupportedActionException" . unsupported-action-exception)))
(common-lisp:progn
 (common-lisp:define-condition already-exists-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       already-exists-exception-message)))
 (common-lisp:export
  (common-lisp:list 'already-exists-exception
                    'already-exists-exception-message)))
(common-lisp:progn
 (common-lisp:defclass cancel-resource-request-input common-lisp:nil
                       ((request-token :initarg :request-token :type
                         (common-lisp:or request-token common-lisp:null)
                         :accessor %cancel-resource-request-input-request-token
                         :initform
                         (common-lisp:error ":request-token is required"))))
 (common-lisp:export
  (common-lisp:list 'cancel-resource-request-input
                    'make-cancel-resource-request-input))
 (common-lisp:defun make-cancel-resource-request-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key request-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'cancel-resource-request-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-resource-request-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-resource-request-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-token))
      (common-lisp:list
       (common-lisp:cons "RequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-resource-request-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cancel-resource-request-output common-lisp:nil
                       ((progress-event :initarg :progress-event :type
                         (common-lisp:or progress-event common-lisp:null)
                         :accessor
                         %cancel-resource-request-output-progress-event
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'cancel-resource-request-output
                    'make-cancel-resource-request-output))
 (common-lisp:defun make-cancel-resource-request-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key progress-event)
   (common-lisp:apply #'common-lisp:make-instance
                      'cancel-resource-request-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-resource-request-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-resource-request-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'progress-event))
      (common-lisp:list
       (common-lisp:cons "ProgressEvent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-resource-request-output))
   common-lisp:nil))
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition client-token-conflict-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       client-token-conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'client-token-conflict-exception
                    'client-token-conflict-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition concurrent-modification-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       concurrent-modification-exception-message)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'concurrent-modification-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition concurrent-operation-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       concurrent-operation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'concurrent-operation-exception
                    'concurrent-operation-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-resource-input common-lisp:nil
                       ((desired-state :initarg :desired-state :type
                         (common-lisp:or properties common-lisp:null) :accessor
                         %create-resource-input-desired-state :initform
                         (common-lisp:error ":desired-state is required"))
                        (client-token :initarg :client-token :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-resource-input-client-token
                         :initform common-lisp:nil)
                        (role-arn :initarg :role-arn :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %create-resource-input-role-arn :initform
                         common-lisp:nil)
                        (type-version-id :initarg :type-version-id :type
                         (common-lisp:or type-version-id common-lisp:null)
                         :accessor %create-resource-input-type-version-id
                         :initform common-lisp:nil)
                        (type-name :initarg :type-name :type
                         (common-lisp:or type-name common-lisp:null) :accessor
                         %create-resource-input-type-name :initform
                         (common-lisp:error ":type-name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-resource-input 'make-create-resource-input))
 (common-lisp:defun make-create-resource-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key desired-state client-token role-arn
                     type-version-id type-name)
   (common-lisp:apply #'common-lisp:make-instance 'create-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-name))
      (common-lisp:list
       (common-lisp:cons "TypeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-version-id))
      (common-lisp:list
       (common-lisp:cons "TypeVersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-state))
      (common-lisp:list
       (common-lisp:cons "DesiredState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-resource-output common-lisp:nil
                       ((progress-event :initarg :progress-event :type
                         (common-lisp:or progress-event common-lisp:null)
                         :accessor %create-resource-output-progress-event
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-resource-output 'make-create-resource-output))
 (common-lisp:defun make-create-resource-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key progress-event)
   (common-lisp:apply #'common-lisp:make-instance 'create-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'progress-event))
      (common-lisp:list
       (common-lisp:cons "ProgressEvent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-input common-lisp:nil
                       ((identifier :initarg :identifier :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         %delete-resource-input-identifier :initform
                         (common-lisp:error ":identifier is required"))
                        (client-token :initarg :client-token :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %delete-resource-input-client-token
                         :initform common-lisp:nil)
                        (role-arn :initarg :role-arn :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %delete-resource-input-role-arn :initform
                         common-lisp:nil)
                        (type-version-id :initarg :type-version-id :type
                         (common-lisp:or type-version-id common-lisp:null)
                         :accessor %delete-resource-input-type-version-id
                         :initform common-lisp:nil)
                        (type-name :initarg :type-name :type
                         (common-lisp:or type-name common-lisp:null) :accessor
                         %delete-resource-input-type-name :initform
                         (common-lisp:error ":type-name is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-resource-input 'make-delete-resource-input))
 (common-lisp:defun make-delete-resource-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key identifier client-token role-arn
                     type-version-id type-name)
   (common-lisp:apply #'common-lisp:make-instance 'delete-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-name))
      (common-lisp:list
       (common-lisp:cons "TypeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-version-id))
      (common-lisp:list
       (common-lisp:cons "TypeVersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-output common-lisp:nil
                       ((progress-event :initarg :progress-event :type
                         (common-lisp:or progress-event common-lisp:null)
                         :accessor %delete-resource-output-progress-event
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-resource-output 'make-delete-resource-output))
 (common-lisp:defun make-delete-resource-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key progress-event)
   (common-lisp:apply #'common-lisp:make-instance 'delete-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'progress-event))
      (common-lisp:list
       (common-lisp:cons "ProgressEvent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-output))
   common-lisp:nil))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition general-service-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       general-service-exception-message)))
 (common-lisp:export
  (common-lisp:list 'general-service-exception
                    'general-service-exception-message)))
(common-lisp:progn
 (common-lisp:defclass get-resource-input common-lisp:nil
                       ((identifier :initarg :identifier :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         %get-resource-input-identifier :initform
                         (common-lisp:error ":identifier is required"))
                        (role-arn :initarg :role-arn :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %get-resource-input-role-arn :initform
                         common-lisp:nil)
                        (type-version-id :initarg :type-version-id :type
                         (common-lisp:or type-version-id common-lisp:null)
                         :accessor %get-resource-input-type-version-id
                         :initform common-lisp:nil)
                        (type-name :initarg :type-name :type
                         (common-lisp:or type-name common-lisp:null) :accessor
                         %get-resource-input-type-name :initform
                         (common-lisp:error ":type-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-resource-input 'make-get-resource-input))
 (common-lisp:defun make-get-resource-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key identifier role-arn type-version-id
                     type-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-name))
      (common-lisp:list
       (common-lisp:cons "TypeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-version-id))
      (common-lisp:list
       (common-lisp:cons "TypeVersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-output common-lisp:nil
                       ((resource-description :initarg :resource-description
                         :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor %get-resource-output-resource-description
                         :initform common-lisp:nil)
                        (type-name :initarg :type-name :type
                         (common-lisp:or type-name common-lisp:null) :accessor
                         %get-resource-output-type-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-resource-output 'make-get-resource-output))
 (common-lisp:defun make-get-resource-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-description type-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-name))
      (common-lisp:list
       (common-lisp:cons "TypeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-description))
      (common-lisp:list
       (common-lisp:cons "ResourceDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-request-status-input common-lisp:nil
                       ((request-token :initarg :request-token :type
                         (common-lisp:or request-token common-lisp:null)
                         :accessor
                         %get-resource-request-status-input-request-token
                         :initform
                         (common-lisp:error ":request-token is required"))))
 (common-lisp:export
  (common-lisp:list 'get-resource-request-status-input
                    'make-get-resource-request-status-input))
 (common-lisp:defun make-get-resource-request-status-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key request-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-resource-request-status-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-request-status-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-request-status-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-token))
      (common-lisp:list
       (common-lisp:cons "RequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-request-status-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-request-status-output common-lisp:nil
                       ((progress-event :initarg :progress-event :type
                         (common-lisp:or progress-event common-lisp:null)
                         :accessor
                         %get-resource-request-status-output-progress-event
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-resource-request-status-output
                    'make-get-resource-request-status-output))
 (common-lisp:defun make-get-resource-request-status-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key progress-event)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-resource-request-status-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-request-status-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-request-status-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'progress-event))
      (common-lisp:list
       (common-lisp:cons "ProgressEvent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-request-status-output))
   common-lisp:nil))
(common-lisp:deftype handler-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition handler-failure-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       handler-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'handler-failure-exception
                    'handler-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition handler-internal-failure-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       handler-internal-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'handler-internal-failure-exception
                    'handler-internal-failure-exception-message)))
(common-lisp:deftype handler-next-token () 'common-lisp:string)
(common-lisp:deftype identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition invalid-credentials-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-credentials-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-credentials-exception
                    'invalid-credentials-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-resource-requests-input common-lisp:nil
                       ((resource-request-status-filter :initarg
                         :resource-request-status-filter :type
                         (common-lisp:or resource-request-status-filter
                                         common-lisp:null)
                         :accessor
                         %list-resource-requests-input-resource-request-status-filter
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-resource-requests-input-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-resource-requests-input-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-resource-requests-input
                    'make-list-resource-requests-input))
 (common-lisp:defun make-list-resource-requests-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-request-status-filter next-token
                     max-results)
   (common-lisp:apply #'common-lisp:make-instance 'list-resource-requests-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-requests-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-requests-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-request-status-filter))
      (common-lisp:list
       (common-lisp:cons "ResourceRequestStatusFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-requests-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resource-requests-output common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-resource-requests-output-next-token :initform
                         common-lisp:nil)
                        (resource-request-status-summaries :initarg
                         :resource-request-status-summaries :type
                         (common-lisp:or resource-request-status-summaries
                                         common-lisp:null)
                         :accessor
                         %list-resource-requests-output-resource-request-status-summaries
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-resource-requests-output
                    'make-list-resource-requests-output))
 (common-lisp:defun make-list-resource-requests-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token
                     resource-request-status-summaries)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resource-requests-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-requests-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-requests-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-request-status-summaries))
      (common-lisp:list
       (common-lisp:cons "ResourceRequestStatusSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-requests-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resources-input common-lisp:nil
                       ((resource-model :initarg :resource-model :type
                         (common-lisp:or properties common-lisp:null) :accessor
                         %list-resources-input-resource-model :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-resources-input-max-results :initform
                         common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or handler-next-token common-lisp:null)
                         :accessor %list-resources-input-next-token :initform
                         common-lisp:nil)
                        (role-arn :initarg :role-arn :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %list-resources-input-role-arn :initform
                         common-lisp:nil)
                        (type-version-id :initarg :type-version-id :type
                         (common-lisp:or type-version-id common-lisp:null)
                         :accessor %list-resources-input-type-version-id
                         :initform common-lisp:nil)
                        (type-name :initarg :type-name :type
                         (common-lisp:or type-name common-lisp:null) :accessor
                         %list-resources-input-type-name :initform
                         (common-lisp:error ":type-name is required"))))
 (common-lisp:export
  (common-lisp:list 'list-resources-input 'make-list-resources-input))
 (common-lisp:defun make-list-resources-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-model max-results next-token
                     role-arn type-version-id type-name)
   (common-lisp:apply #'common-lisp:make-instance 'list-resources-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-resources-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-resources-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-name))
      (common-lisp:list
       (common-lisp:cons "TypeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-version-id))
      (common-lisp:list
       (common-lisp:cons "TypeVersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-model))
      (common-lisp:list
       (common-lisp:cons "ResourceModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-resources-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resources-output common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or handler-next-token common-lisp:null)
                         :accessor %list-resources-output-next-token :initform
                         common-lisp:nil)
                        (resource-descriptions :initarg :resource-descriptions
                         :type
                         (common-lisp:or resource-descriptions
                                         common-lisp:null)
                         :accessor %list-resources-output-resource-descriptions
                         :initform common-lisp:nil)
                        (type-name :initarg :type-name :type
                         (common-lisp:or type-name common-lisp:null) :accessor
                         %list-resources-output-type-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-resources-output 'make-list-resources-output))
 (common-lisp:defun make-list-resources-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token resource-descriptions
                     type-name)
   (common-lisp:apply #'common-lisp:make-instance 'list-resources-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-name))
      (common-lisp:list
       (common-lisp:cons "TypeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-descriptions))
      (common-lisp:list
       (common-lisp:cons "ResourceDescriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-output))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition network-failure-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       network-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'network-failure-exception
                    'network-failure-exception-message)))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-stabilized-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-stabilized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-stabilized-exception
                    'not-stabilized-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition not-updatable-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-updatable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-updatable-exception 'not-updatable-exception-message)))
(common-lisp:deftype operation () 'common-lisp:string)
(common-lisp:deftype operation-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype operation-statuses ()
   '(trivial-types:proper-list operation-status))
 (common-lisp:defun |make-operation-statuses|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list operation-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype operations () '(trivial-types:proper-list operation))
 (common-lisp:defun |make-operations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list operation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype patch-document () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition private-type-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       private-type-exception-message)))
 (common-lisp:export
  (common-lisp:list 'private-type-exception 'private-type-exception-message)))
(common-lisp:progn
 (common-lisp:defclass progress-event common-lisp:nil
                       ((retry-after :initarg :retry-after :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %progress-event-retry-after :initform common-lisp:nil)
                        (error-code :initarg :error-code :type
                         (common-lisp:or handler-error-code common-lisp:null)
                         :accessor %progress-event-error-code :initform
                         common-lisp:nil)
                        (status-message :initarg :status-message :type
                         (common-lisp:or status-message common-lisp:null)
                         :accessor %progress-event-status-message :initform
                         common-lisp:nil)
                        (resource-model :initarg :resource-model :type
                         (common-lisp:or properties common-lisp:null) :accessor
                         %progress-event-resource-model :initform
                         common-lisp:nil)
                        (event-time :initarg :event-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %progress-event-event-time :initform common-lisp:nil)
                        (operation-status :initarg :operation-status :type
                         (common-lisp:or operation-status common-lisp:null)
                         :accessor %progress-event-operation-status :initform
                         common-lisp:nil)
                        (operation :initarg :operation :type
                         (common-lisp:or operation common-lisp:null) :accessor
                         %progress-event-operation :initform common-lisp:nil)
                        (request-token :initarg :request-token :type
                         (common-lisp:or request-token common-lisp:null)
                         :accessor %progress-event-request-token :initform
                         common-lisp:nil)
                        (identifier :initarg :identifier :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         %progress-event-identifier :initform common-lisp:nil)
                        (type-name :initarg :type-name :type
                         (common-lisp:or type-name common-lisp:null) :accessor
                         %progress-event-type-name :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'progress-event 'make-progress-event))
 (common-lisp:defun make-progress-event
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key retry-after error-code status-message
                     resource-model event-time operation-status operation
                     request-token identifier type-name)
   (common-lisp:apply #'common-lisp:make-instance 'progress-event
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input progress-event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input progress-event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-name))
      (common-lisp:list
       (common-lisp:cons "TypeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-token))
      (common-lisp:list
       (common-lisp:cons "RequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-status))
      (common-lisp:list
       (common-lisp:cons "OperationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-time))
      (common-lisp:list
       (common-lisp:cons "EventTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-model))
      (common-lisp:list
       (common-lisp:cons "ResourceModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retry-after))
      (common-lisp:list
       (common-lisp:cons "RetryAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input progress-event))
   common-lisp:nil))
(common-lisp:deftype properties () 'common-lisp:string)
(common-lisp:deftype request-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition request-token-not-found-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       request-token-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'request-token-not-found-exception
                    'request-token-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-conflict-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-conflict-exception
                    'resource-conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass resource-description common-lisp:nil
                       ((properties :initarg :properties :type
                         (common-lisp:or properties common-lisp:null) :accessor
                         %resource-description-properties :initform
                         common-lisp:nil)
                        (identifier :initarg :identifier :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         %resource-description-identifier :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-description 'make-resource-description))
 (common-lisp:defun make-resource-description
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key properties identifier)
   (common-lisp:apply #'common-lisp:make-instance 'resource-description
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "Properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-descriptions ()
   '(trivial-types:proper-list resource-description))
 (common-lisp:defun |make-resource-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass resource-request-status-filter common-lisp:nil
                       ((operation-statuses :initarg :operation-statuses :type
                         (common-lisp:or operation-statuses common-lisp:null)
                         :accessor
                         %resource-request-status-filter-operation-statuses
                         :initform common-lisp:nil)
                        (operations :initarg :operations :type
                         (common-lisp:or operations common-lisp:null) :accessor
                         %resource-request-status-filter-operations :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-request-status-filter
                    'make-resource-request-status-filter))
 (common-lisp:defun make-resource-request-status-filter
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key operation-statuses operations)
   (common-lisp:apply #'common-lisp:make-instance
                      'resource-request-status-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-request-status-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-request-status-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "Operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-statuses))
      (common-lisp:list
       (common-lisp:cons "OperationStatuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-request-status-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-request-status-summaries ()
   '(trivial-types:proper-list progress-event))
 (common-lisp:defun |make-resource-request-status-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list progress-event))
   aws-sdk/generator/shape::members))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-internal-error-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-internal-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-internal-error-exception
                    'service-internal-error-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition service-limit-exceeded-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-limit-exceeded-exception
                    'service-limit-exceeded-exception-message)))
(common-lisp:deftype status-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype type-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition type-not-found-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       type-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'type-not-found-exception
                    'type-not-found-exception-message)))
(common-lisp:deftype type-version-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unsupported-action-exception
     (cloudcontrol-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unsupported-action-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-action-exception
                    'unsupported-action-exception-message)))
(common-lisp:progn
 (common-lisp:defclass update-resource-input common-lisp:nil
                       ((patch-document :initarg :patch-document :type
                         (common-lisp:or patch-document common-lisp:null)
                         :accessor %update-resource-input-patch-document
                         :initform
                         (common-lisp:error ":patch-document is required"))
                        (identifier :initarg :identifier :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         %update-resource-input-identifier :initform
                         (common-lisp:error ":identifier is required"))
                        (client-token :initarg :client-token :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %update-resource-input-client-token
                         :initform common-lisp:nil)
                        (role-arn :initarg :role-arn :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %update-resource-input-role-arn :initform
                         common-lisp:nil)
                        (type-version-id :initarg :type-version-id :type
                         (common-lisp:or type-version-id common-lisp:null)
                         :accessor %update-resource-input-type-version-id
                         :initform common-lisp:nil)
                        (type-name :initarg :type-name :type
                         (common-lisp:or type-name common-lisp:null) :accessor
                         %update-resource-input-type-name :initform
                         (common-lisp:error ":type-name is required"))))
 (common-lisp:export
  (common-lisp:list 'update-resource-input 'make-update-resource-input))
 (common-lisp:defun make-update-resource-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-document identifier client-token
                     role-arn type-version-id type-name)
   (common-lisp:apply #'common-lisp:make-instance 'update-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-name))
      (common-lisp:list
       (common-lisp:cons "TypeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type-version-id))
      (common-lisp:list
       (common-lisp:cons "TypeVersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-document))
      (common-lisp:list
       (common-lisp:cons "PatchDocument"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-resource-output common-lisp:nil
                       ((progress-event :initarg :progress-event :type
                         (common-lisp:or progress-event common-lisp:null)
                         :accessor %update-resource-output-progress-event
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-resource-output 'make-update-resource-output))
 (common-lisp:defun make-update-resource-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key progress-event)
   (common-lisp:apply #'common-lisp:make-instance 'update-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'progress-event))
      (common-lisp:list
       (common-lisp:cons "ProgressEvent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun cancel-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key request-token)
   (common-lisp:declare (common-lisp:ignorable request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-resource-request-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudcontrol-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CancelResourceRequest"
                                                        "2021-09-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'cancel-resource-request))
(common-lisp:progn
 (common-lisp:defun create-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key type-name type-version-id role-arn
                     client-token desired-state)
   (common-lisp:declare
    (common-lisp:ignorable type-name type-version-id role-arn client-token
     desired-state))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudcontrol-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateResource"
                                                        "2021-09-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-resource))
(common-lisp:progn
 (common-lisp:defun delete-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key type-name type-version-id role-arn
                     client-token identifier)
   (common-lisp:declare
    (common-lisp:ignorable type-name type-version-id role-arn client-token
     identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudcontrol-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteResource"
                                                        "2021-09-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-resource))
(common-lisp:progn
 (common-lisp:defun get-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key type-name type-version-id role-arn
                     identifier)
   (common-lisp:declare
    (common-lisp:ignorable type-name type-version-id role-arn identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudcontrol-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetResource"
                                                        "2021-09-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource))
(common-lisp:progn
 (common-lisp:defun get-resource-request-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key request-token)
   (common-lisp:declare (common-lisp:ignorable request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-resource-request-status-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudcontrol-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetResourceRequestStatus"
                                                        "2021-09-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-request-status))
(common-lisp:progn
 (common-lisp:defun list-resource-requests
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     resource-request-status-filter)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token
     resource-request-status-filter))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-resource-requests-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudcontrol-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListResourceRequests"
                                                        "2021-09-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-resource-requests))
(common-lisp:progn
 (common-lisp:defun list-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key type-name type-version-id role-arn
                     next-token max-results resource-model)
   (common-lisp:declare
    (common-lisp:ignorable type-name type-version-id role-arn next-token
     max-results resource-model))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-resources-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudcontrol-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListResources"
                                                        "2021-09-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-resources))
(common-lisp:progn
 (common-lisp:defun update-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key type-name type-version-id role-arn
                     client-token identifier patch-document)
   (common-lisp:declare
    (common-lisp:ignorable type-name type-version-id role-arn client-token
     identifier patch-document))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudcontrol-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateResource"
                                                        "2021-09-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-resource))
