;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/mq/api
  (:use)
  (:nicknames #:aws/mq)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/mq/api)
(common-lisp:progn
 (common-lisp:defclass mq-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "mq"))
 (common-lisp:export 'mq-request))
(common-lisp:progn
 (common-lisp:define-condition mq-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'mq-error))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("ForbiddenException" . forbidden-exception)
    ("InternalServerErrorException" . internal-server-error-exception)
    ("NotFoundException" . not-found-exception)
    ("UnauthorizedException" . unauthorized-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (action-required (:copier common-lisp:nil)
      (:conc-name "struct-shape-action-required-"))
   (action-required-code common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (action-required-info common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'action-required 'make-action-required))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action-required))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action-required))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'action-required-code))
      (common-lisp:list
       (common-lisp:cons "ActionRequiredCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'action-required-info))
      (common-lisp:list
       (common-lisp:cons "ActionRequiredInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action-required))
   common-lisp:nil))
(common-lisp:deftype authentication-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (availability-zone (:copier common-lisp:nil)
      (:conc-name "struct-shape-availability-zone-"))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'availability-zone 'make-availability-zone))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input availability-zone))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input availability-zone))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input availability-zone))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (mq-error)
     ((error-attribute :initarg :error-attribute :initform common-lisp:nil
       :reader bad-request-exception-error-attribute)
      (message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception
                    'bad-request-exception-error-attribute
                    'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (broker-engine-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-broker-engine-type-"))
   (engine-type common-lisp:nil :type
    (common-lisp:or engine-type common-lisp:null))
   (engine-versions common-lisp:nil :type
    (common-lisp:or |__listOfEngineVersion| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'broker-engine-type 'make-broker-engine-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input broker-engine-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input broker-engine-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-versions))
      (common-lisp:list
       (common-lisp:cons "EngineVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input broker-engine-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (broker-engine-type-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-broker-engine-type-output-"))
   (broker-engine-types common-lisp:nil :type
    (common-lisp:or |__listOfBrokerEngineType| common-lisp:null))
   (max-results (common-lisp:error ":max-results is required") :type
    (common-lisp:or |__integerMin5Max100| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'broker-engine-type-output
                    'make-broker-engine-type-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          broker-engine-type-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          broker-engine-type-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-engine-types))
      (common-lisp:list
       (common-lisp:cons "BrokerEngineTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          broker-engine-type-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (broker-instance (:copier common-lisp:nil)
      (:conc-name "struct-shape-broker-instance-"))
   (console-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (endpoints common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'broker-instance 'make-broker-instance))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input broker-instance))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input broker-instance))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-url))
      (common-lisp:list
       (common-lisp:cons "ConsoleURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-address))
      (common-lisp:list
       (common-lisp:cons "IpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input broker-instance))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (broker-instance-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-broker-instance-option-"))
   (availability-zones common-lisp:nil :type
    (common-lisp:or |__listOfAvailabilityZone| common-lisp:null))
   (engine-type common-lisp:nil :type
    (common-lisp:or engine-type common-lisp:null))
   (host-instance-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (storage-type common-lisp:nil :type
    (common-lisp:or broker-storage-type common-lisp:null))
   (supported-deployment-modes common-lisp:nil :type
    (common-lisp:or |__listOfDeploymentMode| common-lisp:null))
   (supported-engine-versions common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'broker-instance-option 'make-broker-instance-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          broker-instance-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          broker-instance-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zones))
      (common-lisp:list
       (common-lisp:cons "AvailabilityZones"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-type))
      (common-lisp:list
       (common-lisp:cons "StorageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'supported-deployment-modes))
      (common-lisp:list
       (common-lisp:cons "SupportedDeploymentModes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'supported-engine-versions))
      (common-lisp:list
       (common-lisp:cons "SupportedEngineVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          broker-instance-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (broker-instance-options-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-broker-instance-options-output-"))
   (broker-instance-options common-lisp:nil :type
    (common-lisp:or |__listOfBrokerInstanceOption| common-lisp:null))
   (max-results (common-lisp:error ":max-results is required") :type
    (common-lisp:or |__integerMin5Max100| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'broker-instance-options-output
                    'make-broker-instance-options-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          broker-instance-options-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          broker-instance-options-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'broker-instance-options))
      (common-lisp:list
       (common-lisp:cons "BrokerInstanceOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          broker-instance-options-output))
   common-lisp:nil))
(common-lisp:deftype broker-state () 'common-lisp:string)
(common-lisp:deftype broker-storage-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (broker-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-broker-summary-"))
   (broker-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (broker-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (broker-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (broker-state common-lisp:nil :type
    (common-lisp:or broker-state common-lisp:null))
   (created common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (deployment-mode (common-lisp:error ":deployment-mode is required") :type
    (common-lisp:or deployment-mode common-lisp:null))
   (engine-type (common-lisp:error ":engine-type is required") :type
    (common-lisp:or engine-type common-lisp:null))
   (host-instance-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'broker-summary 'make-broker-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input broker-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input broker-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-arn))
      (common-lisp:list
       (common-lisp:cons "BrokerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-name))
      (common-lisp:list
       (common-lisp:cons "BrokerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-state))
      (common-lisp:list
       (common-lisp:cons "BrokerState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-mode))
      (common-lisp:list
       (common-lisp:cons "DeploymentMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input broker-summary))
   common-lisp:nil))
(common-lisp:deftype change-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-configuration-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (authentication-strategy
    (common-lisp:error ":authentication-strategy is required") :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (created (common-lisp:error ":created is required") :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (description (common-lisp:error ":description is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (engine-type (common-lisp:error ":engine-type is required") :type
    (common-lisp:or engine-type common-lisp:null))
   (engine-version (common-lisp:error ":engine-version is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (latest-revision (common-lisp:error ":latest-revision is required") :type
    (common-lisp:or configuration-revision common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'configuration 'make-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-revision))
      (common-lisp:list
       (common-lisp:cons "LatestRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (configuration-id (:copier common-lisp:nil)
      (:conc-name "struct-shape-configuration-id-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (revision common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configuration-id 'make-configuration-id))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input configuration-id))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input configuration-id))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision))
      (common-lisp:list
       (common-lisp:cons "Revision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input configuration-id))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (configuration-revision (:copier common-lisp:nil)
      (:conc-name "struct-shape-configuration-revision-"))
   (created (common-lisp:error ":created is required") :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (revision (common-lisp:error ":revision is required") :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configuration-revision 'make-configuration-revision))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configuration-revision))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configuration-revision))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision))
      (common-lisp:list
       (common-lisp:cons "Revision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configuration-revision))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (configurations (:copier common-lisp:nil)
      (:conc-name "struct-shape-configurations-"))
   (current common-lisp:nil :type
    (common-lisp:or configuration-id common-lisp:null))
   (history common-lisp:nil :type
    (common-lisp:or |__listOfConfigurationId| common-lisp:null))
   (pending common-lisp:nil :type
    (common-lisp:or configuration-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'configurations 'make-configurations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input configurations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input configurations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current))
      (common-lisp:list
       (common-lisp:cons "Current"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'history))
      (common-lisp:list
       (common-lisp:cons "History"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending))
      (common-lisp:list
       (common-lisp:cons "Pending"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input configurations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (mq-error)
     ((error-attribute :initarg :error-attribute :initform common-lisp:nil
       :reader conflict-exception-error-attribute)
      (message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-error-attribute
                    'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-broker-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-broker-input-"))
   (authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (auto-minor-version-upgrade
    (common-lisp:error ":auto-minor-version-upgrade is required") :type
    (common-lisp:or |__boolean| common-lisp:null))
   (broker-name (common-lisp:error ":broker-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (configuration common-lisp:nil :type
    (common-lisp:or configuration-id common-lisp:null))
   (creator-request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (deployment-mode (common-lisp:error ":deployment-mode is required") :type
    (common-lisp:or deployment-mode common-lisp:null))
   (encryption-options common-lisp:nil :type
    (common-lisp:or encryption-options common-lisp:null))
   (engine-type (common-lisp:error ":engine-type is required") :type
    (common-lisp:or engine-type common-lisp:null))
   (engine-version (common-lisp:error ":engine-version is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (host-instance-type (common-lisp:error ":host-instance-type is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (ldap-server-metadata common-lisp:nil :type
    (common-lisp:or ldap-server-metadata-input common-lisp:null))
   (logs common-lisp:nil :type (common-lisp:or logs common-lisp:null))
   (maintenance-window-start-time common-lisp:nil :type
    (common-lisp:or weekly-start-time common-lisp:null))
   (publicly-accessible (common-lisp:error ":publicly-accessible is required")
    :type (common-lisp:or |__boolean| common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (storage-type common-lisp:nil :type
    (common-lisp:or broker-storage-type common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (users (common-lisp:error ":users is required") :type
    (common-lisp:or |__listOfUser| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-broker-input 'make-create-broker-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-broker-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-broker-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-name))
      (common-lisp:list
       (common-lisp:cons "BrokerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-mode))
      (common-lisp:list
       (common-lisp:cons "DeploymentMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-options))
      (common-lisp:list
       (common-lisp:cons "EncryptionOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publicly-accessible))
      (common-lisp:list
       (common-lisp:cons "PubliclyAccessible"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-type))
      (common-lisp:list
       (common-lisp:cons "StorageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-broker-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-broker-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-broker-output-"))
   (broker-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (broker-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-broker-output 'make-create-broker-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-broker-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-broker-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-arn))
      (common-lisp:list
       (common-lisp:cons "BrokerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-broker-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-broker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-broker-request-"))
   (authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (auto-minor-version-upgrade
    (common-lisp:error ":auto-minor-version-upgrade is required") :type
    (common-lisp:or |__boolean| common-lisp:null))
   (broker-name (common-lisp:error ":broker-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (configuration common-lisp:nil :type
    (common-lisp:or configuration-id common-lisp:null))
   (creator-request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (deployment-mode (common-lisp:error ":deployment-mode is required") :type
    (common-lisp:or deployment-mode common-lisp:null))
   (encryption-options common-lisp:nil :type
    (common-lisp:or encryption-options common-lisp:null))
   (engine-type (common-lisp:error ":engine-type is required") :type
    (common-lisp:or engine-type common-lisp:null))
   (engine-version (common-lisp:error ":engine-version is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (host-instance-type (common-lisp:error ":host-instance-type is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (ldap-server-metadata common-lisp:nil :type
    (common-lisp:or ldap-server-metadata-input common-lisp:null))
   (logs common-lisp:nil :type (common-lisp:or logs common-lisp:null))
   (maintenance-window-start-time common-lisp:nil :type
    (common-lisp:or weekly-start-time common-lisp:null))
   (publicly-accessible (common-lisp:error ":publicly-accessible is required")
    :type (common-lisp:or |__boolean| common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (storage-type common-lisp:nil :type
    (common-lisp:or broker-storage-type common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (users (common-lisp:error ":users is required") :type
    (common-lisp:or |__listOfUser| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-broker-request 'make-create-broker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-broker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-name))
      (common-lisp:list
       (common-lisp:cons "BrokerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-mode))
      (common-lisp:list
       (common-lisp:cons "DeploymentMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-options))
      (common-lisp:list
       (common-lisp:cons "EncryptionOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publicly-accessible))
      (common-lisp:list
       (common-lisp:cons "PubliclyAccessible"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-type))
      (common-lisp:list
       (common-lisp:cons "StorageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-broker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-broker-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-broker-response-"))
   (broker-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (broker-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-broker-response 'make-create-broker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-broker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-broker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-arn))
      (common-lisp:list
       (common-lisp:cons "BrokerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-broker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-configuration-input-"))
   (authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (engine-type (common-lisp:error ":engine-type is required") :type
    (common-lisp:or engine-type common-lisp:null))
   (engine-version (common-lisp:error ":engine-version is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-input
                    'make-create-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-configuration-output-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (authentication-strategy
    (common-lisp:error ":authentication-strategy is required") :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (created (common-lisp:error ":created is required") :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (latest-revision common-lisp:nil :type
    (common-lisp:or configuration-revision common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-output
                    'make-create-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-revision))
      (common-lisp:list
       (common-lisp:cons "LatestRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-configuration-request-"))
   (authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (engine-type (common-lisp:error ":engine-type is required") :type
    (common-lisp:or engine-type common-lisp:null))
   (engine-version (common-lisp:error ":engine-version is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-request
                    'make-create-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-configuration-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (created common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (latest-revision common-lisp:nil :type
    (common-lisp:or configuration-revision common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-response
                    'make-create-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-revision))
      (common-lisp:list
       (common-lisp:cons "LatestRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-tags-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-tags-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tags-request 'make-create-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-tags-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-user-input-"))
   (console-access common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (password (common-lisp:error ":password is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-input 'make-create-user-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-user-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-user-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-user-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-user-request-"))
   (broker-id (common-lisp:error ":broker-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (console-access common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (password (common-lisp:error ":password is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-request 'make-create-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-user-response-")))
 (common-lisp:export
  (common-lisp:list 'create-user-response 'make-create-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-user-response))
   common-lisp:nil))
(common-lisp:deftype day-of-week () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-broker-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-broker-output-"))
   (broker-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-broker-output 'make-delete-broker-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-broker-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-broker-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-broker-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-broker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-broker-request-"))
   (broker-id (common-lisp:error ":broker-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-broker-request 'make-delete-broker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-broker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-broker-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-broker-response-"))
   (broker-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-broker-response 'make-delete-broker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-broker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-broker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-broker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-tags-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-tags-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tags-request 'make-delete-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-user-request-"))
   (broker-id (common-lisp:error ":broker-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-request 'make-delete-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-user-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-user-response 'make-delete-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-user-response))
   common-lisp:nil))
(common-lisp:deftype deployment-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (describe-broker-engine-types-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-broker-engine-types-request-"))
   (engine-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-broker-engine-types-request
                    'make-describe-broker-engine-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-engine-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-engine-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-engine-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-broker-engine-types-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-broker-engine-types-response-"))
   (broker-engine-types common-lisp:nil :type
    (common-lisp:or |__listOfBrokerEngineType| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integerMin5Max100| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-broker-engine-types-response
                    'make-describe-broker-engine-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-engine-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-engine-types-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-engine-types))
      (common-lisp:list
       (common-lisp:cons "BrokerEngineTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-engine-types-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-broker-instance-options-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-broker-instance-options-request-"))
   (engine-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (host-instance-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (storage-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-broker-instance-options-request
                    'make-describe-broker-instance-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-instance-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-instance-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-instance-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-broker-instance-options-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-broker-instance-options-response-"))
   (broker-instance-options common-lisp:nil :type
    (common-lisp:or |__listOfBrokerInstanceOption| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integerMin5Max100| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-broker-instance-options-response
                    'make-describe-broker-instance-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-instance-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-instance-options-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'broker-instance-options))
      (common-lisp:list
       (common-lisp:cons "BrokerInstanceOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-instance-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-broker-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-broker-output-"))
   (actions-required common-lisp:nil :type
    (common-lisp:or |__listOfActionRequired| common-lisp:null))
   (authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (auto-minor-version-upgrade
    (common-lisp:error ":auto-minor-version-upgrade is required") :type
    (common-lisp:or |__boolean| common-lisp:null))
   (broker-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (broker-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (broker-instances common-lisp:nil :type
    (common-lisp:or |__listOfBrokerInstance| common-lisp:null))
   (broker-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (broker-state common-lisp:nil :type
    (common-lisp:or broker-state common-lisp:null))
   (configurations common-lisp:nil :type
    (common-lisp:or configurations common-lisp:null))
   (created common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (deployment-mode (common-lisp:error ":deployment-mode is required") :type
    (common-lisp:or deployment-mode common-lisp:null))
   (encryption-options common-lisp:nil :type
    (common-lisp:or encryption-options common-lisp:null))
   (engine-type (common-lisp:error ":engine-type is required") :type
    (common-lisp:or engine-type common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (host-instance-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (ldap-server-metadata common-lisp:nil :type
    (common-lisp:or ldap-server-metadata-output common-lisp:null))
   (logs common-lisp:nil :type (common-lisp:or logs-summary common-lisp:null))
   (maintenance-window-start-time common-lisp:nil :type
    (common-lisp:or weekly-start-time common-lisp:null))
   (pending-authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (pending-engine-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (pending-host-instance-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (pending-ldap-server-metadata common-lisp:nil :type
    (common-lisp:or ldap-server-metadata-output common-lisp:null))
   (pending-security-groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (publicly-accessible (common-lisp:error ":publicly-accessible is required")
    :type (common-lisp:or |__boolean| common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (storage-type common-lisp:nil :type
    (common-lisp:or broker-storage-type common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (users common-lisp:nil :type
    (common-lisp:or |__listOfUserSummary| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-broker-output 'make-describe-broker-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions-required))
      (common-lisp:list
       (common-lisp:cons "ActionsRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-arn))
      (common-lisp:list
       (common-lisp:cons "BrokerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-instances))
      (common-lisp:list
       (common-lisp:cons "BrokerInstances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-name))
      (common-lisp:list
       (common-lisp:cons "BrokerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-state))
      (common-lisp:list
       (common-lisp:cons "BrokerState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configurations))
      (common-lisp:list
       (common-lisp:cons "Configurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-mode))
      (common-lisp:list
       (common-lisp:cons "DeploymentMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-options))
      (common-lisp:list
       (common-lisp:cons "EncryptionOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "PendingAuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-engine-version))
      (common-lisp:list
       (common-lisp:cons "PendingEngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-host-instance-type))
      (common-lisp:list
       (common-lisp:cons "PendingHostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "PendingLdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-security-groups))
      (common-lisp:list
       (common-lisp:cons "PendingSecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publicly-accessible))
      (common-lisp:list
       (common-lisp:cons "PubliclyAccessible"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-type))
      (common-lisp:list
       (common-lisp:cons "StorageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-broker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-broker-request-"))
   (broker-id (common-lisp:error ":broker-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-broker-request 'make-describe-broker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-broker-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-broker-response-"))
   (actions-required common-lisp:nil :type
    (common-lisp:or |__listOfActionRequired| common-lisp:null))
   (authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (auto-minor-version-upgrade common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (broker-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (broker-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (broker-instances common-lisp:nil :type
    (common-lisp:or |__listOfBrokerInstance| common-lisp:null))
   (broker-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (broker-state common-lisp:nil :type
    (common-lisp:or broker-state common-lisp:null))
   (configurations common-lisp:nil :type
    (common-lisp:or configurations common-lisp:null))
   (created common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (deployment-mode common-lisp:nil :type
    (common-lisp:or deployment-mode common-lisp:null))
   (encryption-options common-lisp:nil :type
    (common-lisp:or encryption-options common-lisp:null))
   (engine-type common-lisp:nil :type
    (common-lisp:or engine-type common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (host-instance-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (ldap-server-metadata common-lisp:nil :type
    (common-lisp:or ldap-server-metadata-output common-lisp:null))
   (logs common-lisp:nil :type (common-lisp:or logs-summary common-lisp:null))
   (maintenance-window-start-time common-lisp:nil :type
    (common-lisp:or weekly-start-time common-lisp:null))
   (pending-authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (pending-engine-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (pending-host-instance-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (pending-ldap-server-metadata common-lisp:nil :type
    (common-lisp:or ldap-server-metadata-output common-lisp:null))
   (pending-security-groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (publicly-accessible common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (storage-type common-lisp:nil :type
    (common-lisp:or broker-storage-type common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (users common-lisp:nil :type
    (common-lisp:or |__listOfUserSummary| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-broker-response 'make-describe-broker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions-required))
      (common-lisp:list
       (common-lisp:cons "ActionsRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-arn))
      (common-lisp:list
       (common-lisp:cons "BrokerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-instances))
      (common-lisp:list
       (common-lisp:cons "BrokerInstances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-name))
      (common-lisp:list
       (common-lisp:cons "BrokerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-state))
      (common-lisp:list
       (common-lisp:cons "BrokerState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configurations))
      (common-lisp:list
       (common-lisp:cons "Configurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-mode))
      (common-lisp:list
       (common-lisp:cons "DeploymentMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-options))
      (common-lisp:list
       (common-lisp:cons "EncryptionOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "PendingAuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-engine-version))
      (common-lisp:list
       (common-lisp:cons "PendingEngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-host-instance-type))
      (common-lisp:list
       (common-lisp:cons "PendingHostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "PendingLdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-security-groups))
      (common-lisp:list
       (common-lisp:cons "PendingSecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publicly-accessible))
      (common-lisp:list
       (common-lisp:cons "PubliclyAccessible"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-type))
      (common-lisp:list
       (common-lisp:cons "StorageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-configuration-request-"))
   (configuration-id (common-lisp:error ":configuration-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-request
                    'make-describe-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-configuration-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (created common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (engine-type common-lisp:nil :type
    (common-lisp:or engine-type common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (latest-revision common-lisp:nil :type
    (common-lisp:or configuration-revision common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-response
                    'make-describe-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-revision))
      (common-lisp:list
       (common-lisp:cons "LatestRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-configuration-revision-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-configuration-revision-output-"))
   (configuration-id (common-lisp:error ":configuration-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (created (common-lisp:error ":created is required") :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (data (common-lisp:error ":data is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-revision-output
                    'make-describe-configuration-revision-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-id))
      (common-lisp:list
       (common-lisp:cons "ConfigurationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-configuration-revision-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-configuration-revision-request-"))
   (configuration-id (common-lisp:error ":configuration-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (configuration-revision
    (common-lisp:error ":configuration-revision is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-revision-request
                    'make-describe-configuration-revision-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-configuration-revision-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-configuration-revision-response-"))
   (configuration-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (created common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (data common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-revision-response
                    'make-describe-configuration-revision-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-id))
      (common-lisp:list
       (common-lisp:cons "ConfigurationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-user-output-"))
   (broker-id (common-lisp:error ":broker-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (console-access common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (pending common-lisp:nil :type
    (common-lisp:or user-pending-changes common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-output 'make-describe-user-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input describe-user-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input describe-user-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending))
      (common-lisp:list
       (common-lisp:cons "Pending"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input describe-user-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-user-request-"))
   (broker-id (common-lisp:error ":broker-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-request 'make-describe-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-user-response-"))
   (broker-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (console-access common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (pending common-lisp:nil :type
    (common-lisp:or user-pending-changes common-lisp:null))
   (username common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-response 'make-describe-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending))
      (common-lisp:list
       (common-lisp:cons "Pending"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (encryption-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-encryption-options-"))
   (kms-key-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (use-aws-owned-key (common-lisp:error ":use-aws-owned-key is required")
    :type (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'encryption-options 'make-encryption-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input encryption-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input encryption-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use-aws-owned-key))
      (common-lisp:list
       (common-lisp:cons "UseAwsOwnedKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input encryption-options))
   common-lisp:nil))
(common-lisp:deftype engine-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (engine-version (:copier common-lisp:nil)
      (:conc-name "struct-shape-engine-version-"))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'engine-version 'make-engine-version))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input engine-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input engine-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input engine-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (error (:copier common-lisp:nil) (:conc-name "struct-shape-error-"))
   (error-attribute common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'error 'make-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-attribute))
      (common-lisp:list
       (common-lisp:cons "ErrorAttribute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (mq-error)
     ((error-attribute :initarg :error-attribute :initform common-lisp:nil
       :reader forbidden-exception-error-attribute)
      (message :initarg :message :initform common-lisp:nil :reader
       forbidden-exception-message)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'forbidden-exception-error-attribute
                    'forbidden-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition internal-server-error-exception
     (mq-error)
     ((error-attribute :initarg :error-attribute :initform common-lisp:nil
       :reader internal-server-error-exception-error-attribute)
      (message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error-exception
                    'internal-server-error-exception-error-attribute
                    'internal-server-error-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (ldap-server-metadata-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-ldap-server-metadata-input-"))
   (hosts (common-lisp:error ":hosts is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (role-base (common-lisp:error ":role-base is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (role-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (role-search-matching
    (common-lisp:error ":role-search-matching is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (role-search-subtree common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (service-account-password
    (common-lisp:error ":service-account-password is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (service-account-username
    (common-lisp:error ":service-account-username is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (user-base (common-lisp:error ":user-base is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (user-role-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (user-search-matching
    (common-lisp:error ":user-search-matching is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (user-search-subtree common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ldap-server-metadata-input
                    'make-ldap-server-metadata-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ldap-server-metadata-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ldap-server-metadata-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hosts))
      (common-lisp:list
       (common-lisp:cons "Hosts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-base))
      (common-lisp:list
       (common-lisp:cons "RoleBase"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-name))
      (common-lisp:list
       (common-lisp:cons "RoleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'role-search-matching))
      (common-lisp:list
       (common-lisp:cons "RoleSearchMatching"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-search-subtree))
      (common-lisp:list
       (common-lisp:cons "RoleSearchSubtree"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-account-password))
      (common-lisp:list
       (common-lisp:cons "ServiceAccountPassword"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-account-username))
      (common-lisp:list
       (common-lisp:cons "ServiceAccountUsername"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-base))
      (common-lisp:list
       (common-lisp:cons "UserBase"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-role-name))
      (common-lisp:list
       (common-lisp:cons "UserRoleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-search-matching))
      (common-lisp:list
       (common-lisp:cons "UserSearchMatching"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-search-subtree))
      (common-lisp:list
       (common-lisp:cons "UserSearchSubtree"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ldap-server-metadata-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (ldap-server-metadata-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-ldap-server-metadata-output-"))
   (hosts (common-lisp:error ":hosts is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (role-base (common-lisp:error ":role-base is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (role-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (role-search-matching
    (common-lisp:error ":role-search-matching is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (role-search-subtree common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (service-account-username
    (common-lisp:error ":service-account-username is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (user-base (common-lisp:error ":user-base is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (user-role-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (user-search-matching
    (common-lisp:error ":user-search-matching is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (user-search-subtree common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ldap-server-metadata-output
                    'make-ldap-server-metadata-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ldap-server-metadata-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ldap-server-metadata-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hosts))
      (common-lisp:list
       (common-lisp:cons "Hosts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-base))
      (common-lisp:list
       (common-lisp:cons "RoleBase"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-name))
      (common-lisp:list
       (common-lisp:cons "RoleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'role-search-matching))
      (common-lisp:list
       (common-lisp:cons "RoleSearchMatching"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-search-subtree))
      (common-lisp:list
       (common-lisp:cons "RoleSearchSubtree"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-account-username))
      (common-lisp:list
       (common-lisp:cons "ServiceAccountUsername"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-base))
      (common-lisp:list
       (common-lisp:cons "UserBase"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-role-name))
      (common-lisp:list
       (common-lisp:cons "UserRoleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-search-matching))
      (common-lisp:list
       (common-lisp:cons "UserSearchMatching"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-search-subtree))
      (common-lisp:list
       (common-lisp:cons "UserSearchSubtree"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ldap-server-metadata-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-brokers-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-brokers-output-"))
   (broker-summaries common-lisp:nil :type
    (common-lisp:or |__listOfBrokerSummary| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-brokers-output 'make-list-brokers-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-brokers-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-brokers-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-summaries))
      (common-lisp:list
       (common-lisp:cons "BrokerSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-brokers-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-brokers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-brokers-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-brokers-request 'make-list-brokers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-brokers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-brokers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-brokers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-brokers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-brokers-response-"))
   (broker-summaries common-lisp:nil :type
    (common-lisp:or |__listOfBrokerSummary| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-brokers-response 'make-list-brokers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-brokers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-brokers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-summaries))
      (common-lisp:list
       (common-lisp:cons "BrokerSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-brokers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configuration-revisions-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-configuration-revisions-output-"))
   (configuration-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (revisions common-lisp:nil :type
    (common-lisp:or |__listOfConfigurationRevision| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configuration-revisions-output
                    'make-list-configuration-revisions-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-id))
      (common-lisp:list
       (common-lisp:cons "ConfigurationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revisions))
      (common-lisp:list
       (common-lisp:cons "Revisions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configuration-revisions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-configuration-revisions-request-"))
   (configuration-id (common-lisp:error ":configuration-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configuration-revisions-request
                    'make-list-configuration-revisions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configuration-revisions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-configuration-revisions-response-"))
   (configuration-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (revisions common-lisp:nil :type
    (common-lisp:or |__listOfConfigurationRevision| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configuration-revisions-response
                    'make-list-configuration-revisions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-id))
      (common-lisp:list
       (common-lisp:cons "ConfigurationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revisions))
      (common-lisp:list
       (common-lisp:cons "Revisions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configurations-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-configurations-output-"))
   (configurations common-lisp:nil :type
    (common-lisp:or |__listOfConfiguration| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configurations-output
                    'make-list-configurations-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configurations))
      (common-lisp:list
       (common-lisp:cons "Configurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configurations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-configurations-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configurations-request
                    'make-list-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-configurations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-configurations-response-"))
   (configurations common-lisp:nil :type
    (common-lisp:or |__listOfConfiguration| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-configurations-response
                    'make-list-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configurations))
      (common-lisp:list
       (common-lisp:cons "Configurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-request 'make-list-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-response-"))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-response 'make-list-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tags-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tags-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tags-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-users-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-users-output-"))
   (broker-id (common-lisp:error ":broker-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results (common-lisp:error ":max-results is required") :type
    (common-lisp:or |__integerMin5Max100| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (users (common-lisp:error ":users is required") :type
    (common-lisp:or |__listOfUserSummary| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-users-output 'make-list-users-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-users-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-users-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-users-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-users-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-users-request-"))
   (broker-id (common-lisp:error ":broker-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-users-request 'make-list-users-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-users-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-users-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-users-response-"))
   (broker-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integerMin5Max100| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (users common-lisp:nil :type
    (common-lisp:or |__listOfUserSummary| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-users-response 'make-list-users-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-users-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-users-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-users-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (logs (:copier common-lisp:nil) (:conc-name "struct-shape-logs-"))
   (audit common-lisp:nil :type (common-lisp:or |__boolean| common-lisp:null))
   (general common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'logs 'make-logs))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input logs))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input logs))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audit))
      (common-lisp:list
       (common-lisp:cons "Audit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'general))
      (common-lisp:list
       (common-lisp:cons "General"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input logs))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (logs-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-logs-summary-"))
   (audit common-lisp:nil :type (common-lisp:or |__boolean| common-lisp:null))
   (audit-log-group common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (general (common-lisp:error ":general is required") :type
    (common-lisp:or |__boolean| common-lisp:null))
   (general-log-group (common-lisp:error ":general-log-group is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (pending common-lisp:nil :type
    (common-lisp:or pending-logs common-lisp:null)))
 (common-lisp:export (common-lisp:list 'logs-summary 'make-logs-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input logs-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input logs-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audit))
      (common-lisp:list
       (common-lisp:cons "Audit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audit-log-group))
      (common-lisp:list
       (common-lisp:cons "AuditLogGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'general))
      (common-lisp:list
       (common-lisp:cons "General"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'general-log-group))
      (common-lisp:list
       (common-lisp:cons "GeneralLogGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending))
      (common-lisp:list
       (common-lisp:cons "Pending"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input logs-summary))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (mq-error)
     ((error-attribute :initarg :error-attribute :initform common-lisp:nil
       :reader not-found-exception-error-attribute)
      (message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-error-attribute
                    'not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (pending-logs (:copier common-lisp:nil)
      (:conc-name "struct-shape-pending-logs-"))
   (audit common-lisp:nil :type (common-lisp:or |__boolean| common-lisp:null))
   (general common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'pending-logs 'make-pending-logs))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input pending-logs))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input pending-logs))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audit))
      (common-lisp:list
       (common-lisp:cons "Audit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'general))
      (common-lisp:list
       (common-lisp:cons "General"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input pending-logs))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reboot-broker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-reboot-broker-request-"))
   (broker-id (common-lisp:error ":broker-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reboot-broker-request 'make-reboot-broker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reboot-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reboot-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reboot-broker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reboot-broker-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-reboot-broker-response-")))
 (common-lisp:export
  (common-lisp:list 'reboot-broker-response 'make-reboot-broker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reboot-broker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reboot-broker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reboot-broker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sanitization-warning (:copier common-lisp:nil)
      (:conc-name "struct-shape-sanitization-warning-"))
   (attribute-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (element-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (reason (common-lisp:error ":reason is required") :type
    (common-lisp:or sanitization-warning-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sanitization-warning 'make-sanitization-warning))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sanitization-warning))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sanitization-warning))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "AttributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'element-name))
      (common-lisp:list
       (common-lisp:cons "ElementName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sanitization-warning))
   common-lisp:nil))
(common-lisp:deftype sanitization-warning-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tags (:copier common-lisp:nil) (:conc-name "struct-shape-tags-"))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tags 'make-tags))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tags))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tags))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tags))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition unauthorized-exception
     (mq-error)
     ((error-attribute :initarg :error-attribute :initform common-lisp:nil
       :reader unauthorized-exception-error-attribute)
      (message :initarg :message :initform common-lisp:nil :reader
       unauthorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-exception
                    'unauthorized-exception-error-attribute
                    'unauthorized-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-broker-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-broker-input-"))
   (authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (auto-minor-version-upgrade common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (configuration common-lisp:nil :type
    (common-lisp:or configuration-id common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (host-instance-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (ldap-server-metadata common-lisp:nil :type
    (common-lisp:or ldap-server-metadata-input common-lisp:null))
   (logs common-lisp:nil :type (common-lisp:or logs common-lisp:null))
   (maintenance-window-start-time common-lisp:nil :type
    (common-lisp:or weekly-start-time common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-broker-input 'make-update-broker-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-broker-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-broker-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-broker-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-broker-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-broker-output-"))
   (authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (auto-minor-version-upgrade common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (broker-id (common-lisp:error ":broker-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (configuration common-lisp:nil :type
    (common-lisp:or configuration-id common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (host-instance-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (ldap-server-metadata common-lisp:nil :type
    (common-lisp:or ldap-server-metadata-output common-lisp:null))
   (logs common-lisp:nil :type (common-lisp:or logs common-lisp:null))
   (maintenance-window-start-time common-lisp:nil :type
    (common-lisp:or weekly-start-time common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-broker-output 'make-update-broker-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-broker-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-broker-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-broker-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-broker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-broker-request-"))
   (authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (auto-minor-version-upgrade common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (broker-id (common-lisp:error ":broker-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (configuration common-lisp:nil :type
    (common-lisp:or configuration-id common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (host-instance-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (ldap-server-metadata common-lisp:nil :type
    (common-lisp:or ldap-server-metadata-input common-lisp:null))
   (logs common-lisp:nil :type (common-lisp:or logs common-lisp:null))
   (maintenance-window-start-time common-lisp:nil :type
    (common-lisp:or weekly-start-time common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-broker-request 'make-update-broker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-broker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-broker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-broker-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-broker-response-"))
   (authentication-strategy common-lisp:nil :type
    (common-lisp:or authentication-strategy common-lisp:null))
   (auto-minor-version-upgrade common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (broker-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (configuration common-lisp:nil :type
    (common-lisp:or configuration-id common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (host-instance-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (ldap-server-metadata common-lisp:nil :type
    (common-lisp:or ldap-server-metadata-output common-lisp:null))
   (logs common-lisp:nil :type (common-lisp:or logs common-lisp:null))
   (maintenance-window-start-time common-lisp:nil :type
    (common-lisp:or weekly-start-time common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-broker-response 'make-update-broker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-broker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-broker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-broker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-configuration-input-"))
   (data (common-lisp:error ":data is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-configuration-input
                    'make-update-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-configuration-output-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (created (common-lisp:error ":created is required") :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (latest-revision common-lisp:nil :type
    (common-lisp:or configuration-revision common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or |__listOfSanitizationWarning| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-configuration-output
                    'make-update-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-revision))
      (common-lisp:list
       (common-lisp:cons "LatestRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-configuration-request-"))
   (configuration-id (common-lisp:error ":configuration-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (data (common-lisp:error ":data is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-configuration-request
                    'make-update-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-configuration-response-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (created common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (latest-revision common-lisp:nil :type
    (common-lisp:or configuration-revision common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or |__listOfSanitizationWarning| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-configuration-response
                    'make-update-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-revision))
      (common-lisp:list
       (common-lisp:cons "LatestRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-user-input-"))
   (console-access common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (password common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-input 'make-update-user-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-user-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-user-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-user-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-user-request-"))
   (broker-id (common-lisp:error ":broker-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (console-access common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (password common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-request 'make-update-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-user-response-")))
 (common-lisp:export
  (common-lisp:list 'update-user-response 'make-update-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (user (:copier common-lisp:nil) (:conc-name "struct-shape-user-"))
   (console-access common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (password (common-lisp:error ":password is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user 'make-user))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (user-pending-changes (:copier common-lisp:nil)
      (:conc-name "struct-shape-user-pending-changes-"))
   (console-access common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (groups common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (pending-change (common-lisp:error ":pending-change is required") :type
    (common-lisp:or change-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-pending-changes 'make-user-pending-changes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user-pending-changes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user-pending-changes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending-change))
      (common-lisp:list
       (common-lisp:cons "PendingChange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user-pending-changes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (user-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-user-summary-"))
   (pending-change common-lisp:nil :type
    (common-lisp:or change-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-summary 'make-user-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending-change))
      (common-lisp:list
       (common-lisp:cons "PendingChange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (weekly-start-time (:copier common-lisp:nil)
      (:conc-name "struct-shape-weekly-start-time-"))
   (day-of-week (common-lisp:error ":day-of-week is required") :type
    (common-lisp:or day-of-week common-lisp:null))
   (time-of-day (common-lisp:error ":time-of-day is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (time-zone common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'weekly-start-time 'make-weekly-start-time))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input weekly-start-time))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input weekly-start-time))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-week))
      (common-lisp:list
       (common-lisp:cons "DayOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-of-day))
      (common-lisp:list
       (common-lisp:cons "TimeOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-zone))
      (common-lisp:list
       (common-lisp:cons "TimeZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input weekly-start-time))
   common-lisp:nil))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin5Max100| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfActionRequired| ()
   '(trivial-types:proper-list action-required))
 (common-lisp:defun |make-__listofactionrequired|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list action-required))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfAvailabilityZone| ()
   '(trivial-types:proper-list availability-zone))
 (common-lisp:defun |make-__listofavailabilityzone|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list availability-zone))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfBrokerEngineType| ()
   '(trivial-types:proper-list broker-engine-type))
 (common-lisp:defun |make-__listofbrokerenginetype|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list broker-engine-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfBrokerInstance| ()
   '(trivial-types:proper-list broker-instance))
 (common-lisp:defun |make-__listofbrokerinstance|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list broker-instance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfBrokerInstanceOption| ()
   '(trivial-types:proper-list broker-instance-option))
 (common-lisp:defun |make-__listofbrokerinstanceoption|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list broker-instance-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfBrokerSummary| ()
   '(trivial-types:proper-list broker-summary))
 (common-lisp:defun |make-__listofbrokersummary|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list broker-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfConfiguration| ()
   '(trivial-types:proper-list configuration))
 (common-lisp:defun |make-__listofconfiguration|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfConfigurationId| ()
   '(trivial-types:proper-list configuration-id))
 (common-lisp:defun |make-__listofconfigurationid|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfConfigurationRevision| ()
   '(trivial-types:proper-list configuration-revision))
 (common-lisp:defun |make-__listofconfigurationrevision|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration-revision))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDeploymentMode| ()
   '(trivial-types:proper-list deployment-mode))
 (common-lisp:defun |make-__listofdeploymentmode|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment-mode))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfEngineVersion| ()
   '(trivial-types:proper-list engine-version))
 (common-lisp:defun |make-__listofengineversion|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list engine-version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSanitizationWarning| ()
   '(trivial-types:proper-list sanitization-warning))
 (common-lisp:defun |make-__listofsanitizationwarning|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sanitization-warning))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfUser| () '(trivial-types:proper-list user))
 (common-lisp:defun |make-__listofuser|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfUserSummary| ()
   '(trivial-types:proper-list user-summary))
 (common-lisp:defun |make-__listofusersummary|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun |make-__listof__string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__mapOf__string| () 'common-lisp:hash-table)
 (common-lisp:defun |make-__mapof__string|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-broker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-strategy
                     auto-minor-version-upgrade broker-name configuration
                     creator-request-id deployment-mode encryption-options
                     engine-type engine-version host-instance-type
                     ldap-server-metadata logs maintenance-window-start-time
                     publicly-accessible security-groups storage-type
                     subnet-ids tags users)
   (common-lisp:declare
    (common-lisp:ignorable authentication-strategy auto-minor-version-upgrade
     broker-name configuration creator-request-id deployment-mode
     encryption-options engine-type engine-version host-instance-type
     ldap-server-metadata logs maintenance-window-start-time
     publicly-accessible security-groups storage-type subnet-ids tags users))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-broker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v1/brokers"
                                                        "CreateBroker"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-broker))
(common-lisp:progn
 (common-lisp:defun create-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-strategy engine-type
                     engine-version name tags)
   (common-lisp:declare
    (common-lisp:ignorable authentication-strategy engine-type engine-version
     name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-configuration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/configurations"
                                                        "CreateConfiguration"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-configuration))
(common-lisp:progn
 (common-lisp:defun create-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "CreateTags"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-tags))
(common-lisp:progn
 (common-lisp:defun create-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id console-access groups password
                     username)
   (common-lisp:declare
    (common-lisp:ignorable broker-id console-access groups password username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'username))))
                                                        "CreateUser"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-user))
(common-lisp:progn
 (common-lisp:defun delete-broker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id)
   (common-lisp:declare (common-lisp:ignorable broker-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-broker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))))
                                                        "DeleteBroker"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-broker))
(common-lisp:progn
 (common-lisp:defun delete-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "DeleteTags"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-tags))
(common-lisp:progn
 (common-lisp:defun delete-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id username)
   (common-lisp:declare (common-lisp:ignorable broker-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'username))))
                                                        "DeleteUser"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-user))
(common-lisp:progn
 (common-lisp:defun describe-broker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id)
   (common-lisp:declare (common-lisp:ignorable broker-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-broker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))))
                                                        "DescribeBroker"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-broker))
(common-lisp:progn
 (common-lisp:defun describe-broker-engine-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key engine-type max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable engine-type max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-broker-engine-types-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/broker-engine-types"
                                                        "DescribeBrokerEngineTypes"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-broker-engine-types))
(common-lisp:progn
 (common-lisp:defun describe-broker-instance-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key engine-type host-instance-type
                     max-results next-token storage-type)
   (common-lisp:declare
    (common-lisp:ignorable engine-type host-instance-type max-results
     next-token storage-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-broker-instance-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/broker-instance-options"
                                                        "DescribeBrokerInstanceOptions"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-broker-instance-options))
(common-lisp:progn
 (common-lisp:defun describe-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-id)
   (common-lisp:declare (common-lisp:ignorable configuration-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-configuration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/configurations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-id))))
                                                        "DescribeConfiguration"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-configuration))
(common-lisp:progn
 (common-lisp:defun describe-configuration-revision
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-id configuration-revision)
   (common-lisp:declare
    (common-lisp:ignorable configuration-id configuration-revision))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-configuration-revision-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/configurations/~A/revisions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-revision))))
                                                        "DescribeConfigurationRevision"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-configuration-revision))
(common-lisp:progn
 (common-lisp:defun describe-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id username)
   (common-lisp:declare (common-lisp:ignorable broker-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'username))))
                                                        "DescribeUser"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-user))
(common-lisp:progn
 (common-lisp:defun list-brokers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-brokers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/brokers"
                                                        "ListBrokers"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-brokers))
(common-lisp:progn
 (common-lisp:defun list-configuration-revisions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable configuration-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-configuration-revisions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/configurations/~A/revisions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-id))))
                                                        "ListConfigurationRevisions"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-configuration-revisions))
(common-lisp:progn
 (common-lisp:defun list-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-configurations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/configurations"
                                                        "ListConfigurations"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-configurations))
(common-lisp:progn
 (common-lisp:defun list-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTags"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags))
(common-lisp:progn
 (common-lisp:defun list-users
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable broker-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-users-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/users"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))))
                                                        "ListUsers"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-users))
(common-lisp:progn
 (common-lisp:defun reboot-broker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id)
   (common-lisp:declare (common-lisp:ignorable broker-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reboot-broker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/reboot"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))))
                                                        "RebootBroker"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'reboot-broker))
(common-lisp:progn
 (common-lisp:defun update-broker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-strategy
                     auto-minor-version-upgrade broker-id configuration
                     engine-version host-instance-type ldap-server-metadata
                     logs maintenance-window-start-time security-groups)
   (common-lisp:declare
    (common-lisp:ignorable authentication-strategy auto-minor-version-upgrade
     broker-id configuration engine-version host-instance-type
     ldap-server-metadata logs maintenance-window-start-time security-groups))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-broker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))))
                                                        "UpdateBroker"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-broker))
(common-lisp:progn
 (common-lisp:defun update-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-id data description)
   (common-lisp:declare
    (common-lisp:ignorable configuration-id data description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-configuration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/configurations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-id))))
                                                        "UpdateConfiguration"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-configuration))
(common-lisp:progn
 (common-lisp:defun update-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id console-access groups password
                     username)
   (common-lisp:declare
    (common-lisp:ignorable broker-id console-access groups password username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'username))))
                                                        "UpdateUser"
                                                        "2017-11-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-user))
