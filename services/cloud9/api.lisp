;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cloud9/api
  (:use)
  (:nicknames #:aws/cloud9)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/cloud9/api)
(common-lisp:progn
 (common-lisp:defclass cloud9-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "cloud9" :protocol :json))
 (common-lisp:export 'cloud9-request))
(common-lisp:progn
 (common-lisp:define-condition cloud9-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'cloud9-error))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConcurrentAccessException" . concurrent-access-exception)
    ("ConflictException" . conflict-exception)
    ("ForbiddenException" . forbidden-exception)
    ("InternalServerErrorException" . internal-server-error-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("NotFoundException" . not-found-exception)
    ("TooManyRequestsException" . too-many-requests-exception)))
(common-lisp:deftype automatic-stop-time-minutes () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (cloud9-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'bad-request-exception)))
(common-lisp:progn
 (common-lisp:deftype bounded-environment-id-list ()
   '(trivial-types:proper-list environment-id))
 (common-lisp:defun |make-bounded-environment-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype client-request-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition concurrent-access-exception
     (cloud9-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'concurrent-access-exception)))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (cloud9-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'conflict-exception)))
(common-lisp:deftype connection-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-environment-ec2request common-lisp:nil
                       ((dry-run :initarg :|dryRun| :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor %create-environment-ec2request-dry-run
                         :initform common-lisp:nil)
                        (connection-type :initarg :|connectionType| :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor
                         %create-environment-ec2request-connection-type
                         :initform common-lisp:nil)
                        (tags :initarg :|tags| :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %create-environment-ec2request-tags :initform
                         common-lisp:nil)
                        (owner-arn :initarg :|ownerArn| :type
                         (common-lisp:or user-arn common-lisp:null) :accessor
                         %create-environment-ec2request-owner-arn :initform
                         common-lisp:nil)
                        (automatic-stop-time-minutes :initarg
                         :|automaticStopTimeMinutes| :type
                         (common-lisp:or automatic-stop-time-minutes
                                         common-lisp:null)
                         :accessor
                         %create-environment-ec2request-automatic-stop-time-minutes
                         :initform common-lisp:nil)
                        (image-id :initarg :|imageId| :type
                         (common-lisp:or image-id common-lisp:null) :accessor
                         %create-environment-ec2request-image-id :initform
                         common-lisp:nil)
                        (subnet-id :initarg :|subnetId| :type
                         (common-lisp:or subnet-id common-lisp:null) :accessor
                         %create-environment-ec2request-subnet-id :initform
                         common-lisp:nil)
                        (instance-type :initarg :|instanceType| :type
                         (common-lisp:or instance-type common-lisp:null)
                         :accessor %create-environment-ec2request-instance-type
                         :initform
                         (common-lisp:error ":instancetype is required"))
                        (client-request-token :initarg :|clientRequestToken|
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         %create-environment-ec2request-client-request-token
                         :initform common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or environment-description
                                         common-lisp:null)
                         :accessor %create-environment-ec2request-description
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or environment-name common-lisp:null)
                         :accessor %create-environment-ec2request-name
                         :initform (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-environment-ec2request
                    'make-create-environment-ec2request))
 (common-lisp:defun make-create-environment-ec2request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key dry-run connection-type tags owner-arn
                     automatic-stop-time-minutes image-id subnet-id
                     instance-type client-request-token description name)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-environment-ec2request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-ec2request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-ec2request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "clientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-type))
      (common-lisp:list
       (common-lisp:cons "instanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "subnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-id))
      (common-lisp:list
       (common-lisp:cons "imageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'automatic-stop-time-minutes))
      (common-lisp:list
       (common-lisp:cons "automaticStopTimeMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-arn))
      (common-lisp:list
       (common-lisp:cons "ownerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "connectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dry-run))
      (common-lisp:list
       (common-lisp:cons "dryRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-ec2request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-environment-ec2result common-lisp:nil
                       ((environment-id :initarg :|environmentId| :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %create-environment-ec2result-environment-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-environment-ec2result
                    'make-create-environment-ec2result))
 (common-lisp:defun make-create-environment-ec2result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key environment-id)
   (common-lisp:apply #'common-lisp:make-instance 'create-environment-ec2result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-ec2result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-ec2result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "environmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-ec2result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-environment-membership-request common-lisp:nil
                       ((permissions :initarg :|permissions| :type
                         (common-lisp:or member-permissions common-lisp:null)
                         :accessor
                         %create-environment-membership-request-permissions
                         :initform
                         (common-lisp:error ":permissions is required"))
                        (user-arn :initarg :|userArn| :type
                         (common-lisp:or user-arn common-lisp:null) :accessor
                         %create-environment-membership-request-user-arn
                         :initform (common-lisp:error ":userarn is required"))
                        (environment-id :initarg :|environmentId| :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %create-environment-membership-request-environment-id
                         :initform
                         (common-lisp:error ":environmentid is required"))))
 (common-lisp:export
  (common-lisp:list 'create-environment-membership-request
                    'make-create-environment-membership-request))
 (common-lisp:defun make-create-environment-membership-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key permissions user-arn environment-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-environment-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-membership-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "environmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-arn))
      (common-lisp:list
       (common-lisp:cons "userArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-environment-membership-result common-lisp:nil
                       ((membership :initarg :|membership| :type
                         (common-lisp:or environment-member common-lisp:null)
                         :accessor
                         %create-environment-membership-result-membership
                         :initform
                         (common-lisp:error ":membership is required"))))
 (common-lisp:export
  (common-lisp:list 'create-environment-membership-result
                    'make-create-environment-membership-result))
 (common-lisp:defun make-create-environment-membership-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key membership)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-environment-membership-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-membership-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-membership-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'membership))
      (common-lisp:list
       (common-lisp:cons "membership"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-membership-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-environment-membership-request common-lisp:nil
                       ((user-arn :initarg :|userArn| :type
                         (common-lisp:or user-arn common-lisp:null) :accessor
                         %delete-environment-membership-request-user-arn
                         :initform (common-lisp:error ":userarn is required"))
                        (environment-id :initarg :|environmentId| :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %delete-environment-membership-request-environment-id
                         :initform
                         (common-lisp:error ":environmentid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-environment-membership-request
                    'make-delete-environment-membership-request))
 (common-lisp:defun make-delete-environment-membership-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key user-arn environment-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-environment-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-membership-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "environmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-arn))
      (common-lisp:list
       (common-lisp:cons "userArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-environment-membership-result common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-environment-membership-result
                    'make-delete-environment-membership-result))
 (common-lisp:defun make-delete-environment-membership-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-environment-membership-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-membership-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-membership-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-membership-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-environment-request common-lisp:nil
                       ((environment-id :initarg :|environmentId| :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %delete-environment-request-environment-id
                         :initform
                         (common-lisp:error ":environmentid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-environment-request
                    'make-delete-environment-request))
 (common-lisp:defun make-delete-environment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key environment-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-environment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "environmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-environment-result common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-environment-result
                    'make-delete-environment-result))
 (common-lisp:defun make-delete-environment-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-environment-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-environment-memberships-request common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %describe-environment-memberships-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %describe-environment-memberships-request-next-token
                         :initform common-lisp:nil)
                        (permissions :initarg :|permissions| :type
                         (common-lisp:or permissions-list common-lisp:null)
                         :accessor
                         %describe-environment-memberships-request-permissions
                         :initform common-lisp:nil)
                        (environment-id :initarg :|environmentId| :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %describe-environment-memberships-request-environment-id
                         :initform common-lisp:nil)
                        (user-arn :initarg :|userArn| :type
                         (common-lisp:or user-arn common-lisp:null) :accessor
                         %describe-environment-memberships-request-user-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-environment-memberships-request
                    'make-describe-environment-memberships-request))
 (common-lisp:defun make-describe-environment-memberships-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token permissions
                     environment-id user-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-environment-memberships-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-environment-memberships-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-environment-memberships-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-arn))
      (common-lisp:list
       (common-lisp:cons "userArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "environmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-environment-memberships-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-environment-memberships-result common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %describe-environment-memberships-result-next-token
                         :initform common-lisp:nil)
                        (memberships :initarg :|memberships| :type
                         (common-lisp:or environment-members-list
                                         common-lisp:null)
                         :accessor
                         %describe-environment-memberships-result-memberships
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-environment-memberships-result
                    'make-describe-environment-memberships-result))
 (common-lisp:defun make-describe-environment-memberships-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token memberships)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-environment-memberships-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-environment-memberships-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-environment-memberships-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memberships))
      (common-lisp:list
       (common-lisp:cons "memberships"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-environment-memberships-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-environment-status-request common-lisp:nil
                       ((environment-id :initarg :|environmentId| :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %describe-environment-status-request-environment-id
                         :initform
                         (common-lisp:error ":environmentid is required"))))
 (common-lisp:export
  (common-lisp:list 'describe-environment-status-request
                    'make-describe-environment-status-request))
 (common-lisp:defun make-describe-environment-status-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key environment-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-environment-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-environment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-environment-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "environmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-environment-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-environment-status-result common-lisp:nil
                       ((message :initarg :|message| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %describe-environment-status-result-message :initform
                         (common-lisp:error ":message is required"))
                        (status :initarg :|status| :type
                         (common-lisp:or environment-status common-lisp:null)
                         :accessor %describe-environment-status-result-status
                         :initform (common-lisp:error ":status is required"))))
 (common-lisp:export
  (common-lisp:list 'describe-environment-status-result
                    'make-describe-environment-status-result))
 (common-lisp:defun make-describe-environment-status-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key message status)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-environment-status-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-environment-status-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-environment-status-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-environment-status-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-environments-request common-lisp:nil
                       ((environment-ids :initarg :|environmentIds| :type
                         (common-lisp:or bounded-environment-id-list
                                         common-lisp:null)
                         :accessor
                         %describe-environments-request-environment-ids
                         :initform
                         (common-lisp:error ":environmentids is required"))))
 (common-lisp:export
  (common-lisp:list 'describe-environments-request
                    'make-describe-environments-request))
 (common-lisp:defun make-describe-environments-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key environment-ids)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-environments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-environments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-environments-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-ids))
      (common-lisp:list
       (common-lisp:cons "environmentIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-environments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-environments-result common-lisp:nil
                       ((environments :initarg :|environments| :type
                         (common-lisp:or environment-list common-lisp:null)
                         :accessor %describe-environments-result-environments
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-environments-result
                    'make-describe-environments-result))
 (common-lisp:defun make-describe-environments-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key environments)
   (common-lisp:apply #'common-lisp:make-instance 'describe-environments-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-environments-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-environments-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environments))
      (common-lisp:list
       (common-lisp:cons "environments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-environments-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass environment common-lisp:nil
                       ((managed-credentials-status :initarg
                         :|managedCredentialsStatus| :type
                         (common-lisp:or managed-credentials-status
                                         common-lisp:null)
                         :accessor %environment-managed-credentials-status
                         :initform common-lisp:nil)
                        (lifecycle :initarg :|lifecycle| :type
                         (common-lisp:or environment-lifecycle
                                         common-lisp:null)
                         :accessor %environment-lifecycle :initform
                         common-lisp:nil)
                        (owner-arn :initarg :|ownerArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %environment-owner-arn :initform
                         (common-lisp:error ":ownerarn is required"))
                        (arn :initarg :|arn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %environment-arn :initform
                         (common-lisp:error ":arn is required"))
                        (connection-type :initarg :|connectionType| :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor %environment-connection-type :initform
                         common-lisp:nil)
                        (type :initarg :|type| :type
                         (common-lisp:or environment-type common-lisp:null)
                         :accessor %environment-type :initform
                         (common-lisp:error ":type is required"))
                        (description :initarg :|description| :type
                         (common-lisp:or environment-description
                                         common-lisp:null)
                         :accessor %environment-description :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or environment-name common-lisp:null)
                         :accessor %environment-name :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %environment-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'environment 'make-environment))
 (common-lisp:defun make-environment
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key managed-credentials-status lifecycle
                     owner-arn arn connection-type type description name id)
   (common-lisp:apply #'common-lisp:make-instance 'environment
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input environment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input environment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "connectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-arn))
      (common-lisp:list
       (common-lisp:cons "ownerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle))
      (common-lisp:list
       (common-lisp:cons "lifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'managed-credentials-status))
      (common-lisp:list
       (common-lisp:cons "managedCredentialsStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input environment))
   common-lisp:nil))
(common-lisp:deftype environment-arn () 'common-lisp:string)
(common-lisp:deftype environment-description () 'common-lisp:string)
(common-lisp:deftype environment-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype environment-id-list ()
   '(trivial-types:proper-list environment-id))
 (common-lisp:defun |make-environment-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass environment-lifecycle common-lisp:nil
                       ((failure-resource :initarg :|failureResource| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %environment-lifecycle-failure-resource :initform
                         common-lisp:nil)
                        (reason :initarg :|reason| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %environment-lifecycle-reason :initform
                         common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or environment-lifecycle-status
                                         common-lisp:null)
                         :accessor %environment-lifecycle-status :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'environment-lifecycle 'make-environment-lifecycle))
 (common-lisp:defun make-environment-lifecycle
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key failure-resource reason status)
   (common-lisp:apply #'common-lisp:make-instance 'environment-lifecycle
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          environment-lifecycle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          environment-lifecycle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-resource))
      (common-lisp:list
       (common-lisp:cons "failureResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          environment-lifecycle))
   common-lisp:nil))
(common-lisp:deftype environment-lifecycle-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype environment-list ()
   '(trivial-types:proper-list environment))
 (common-lisp:defun |make-environment-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass environment-member common-lisp:nil
                       ((last-access :initarg :|lastAccess| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %environment-member-last-access :initform
                         common-lisp:nil)
                        (environment-id :initarg :|environmentId| :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %environment-member-environment-id :initform
                         (common-lisp:error ":environmentid is required"))
                        (user-arn :initarg :|userArn| :type
                         (common-lisp:or user-arn common-lisp:null) :accessor
                         %environment-member-user-arn :initform
                         (common-lisp:error ":userarn is required"))
                        (user-id :initarg :|userId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %environment-member-user-id :initform
                         (common-lisp:error ":userid is required"))
                        (permissions :initarg :|permissions| :type
                         (common-lisp:or permissions common-lisp:null)
                         :accessor %environment-member-permissions :initform
                         (common-lisp:error ":permissions is required"))))
 (common-lisp:export
  (common-lisp:list 'environment-member 'make-environment-member))
 (common-lisp:defun make-environment-member
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key last-access environment-id user-arn
                     user-id permissions)
   (common-lisp:apply #'common-lisp:make-instance 'environment-member
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input environment-member))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input environment-member))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-arn))
      (common-lisp:list
       (common-lisp:cons "userArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "environmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-access))
      (common-lisp:list
       (common-lisp:cons "lastAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input environment-member))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype environment-members-list ()
   '(trivial-types:proper-list environment-member))
 (common-lisp:defun |make-environment-members-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-member))
   aws-sdk/generator/shape::members))
(common-lisp:deftype environment-name () 'common-lisp:string)
(common-lisp:deftype environment-status () 'common-lisp:string)
(common-lisp:deftype environment-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (cloud9-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'forbidden-exception)))
(common-lisp:deftype image-id () 'common-lisp:string)
(common-lisp:deftype instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-error-exception
     (cloud9-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'internal-server-error-exception)))
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (cloud9-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'limit-exceeded-exception)))
(common-lisp:progn
 (common-lisp:defclass list-environments-request common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-environments-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-environments-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-environments-request
                    'make-list-environments-request))
 (common-lisp:defun make-list-environments-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-environments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-environments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-environments-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-environments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-environments-result common-lisp:nil
                       ((environment-ids :initarg :|environmentIds| :type
                         (common-lisp:or environment-id-list common-lisp:null)
                         :accessor %list-environments-result-environment-ids
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-environments-result-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-environments-result 'make-list-environments-result))
 (common-lisp:defun make-list-environments-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key environment-ids next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-environments-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-environments-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-environments-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-ids))
      (common-lisp:list
       (common-lisp:cons "environmentIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-environments-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or environment-arn common-lisp:null)
                         :accessor %list-tags-for-resource-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %list-tags-for-resource-response-tags :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defun make-list-tags-for-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype managed-credentials-action () 'common-lisp:string)
(common-lisp:deftype managed-credentials-status () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype member-permissions () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (cloud9-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'not-found-exception)))
(common-lisp:deftype nullable-boolean () 'common-lisp:boolean)
(common-lisp:deftype permissions () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype permissions-list ()
   '(trivial-types:proper-list permissions))
 (common-lisp:defun |make-permissions-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list permissions))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((value :initarg :value :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         %tag-value :initform
                         (common-lisp:error ":value is required"))
                        (key :initarg :key :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         %tag-key :initform
                         (common-lisp:error ":key is required"))))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defun make-tag
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value key)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %tag-resource-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or environment-arn common-lisp:null)
                         :accessor %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defun make-tag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (cloud9-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :tag-keys :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tag-keys is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or environment-arn common-lisp:null)
                         :accessor %untag-resource-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defun make-untag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-environment-membership-request common-lisp:nil
                       ((permissions :initarg :|permissions| :type
                         (common-lisp:or member-permissions common-lisp:null)
                         :accessor
                         %update-environment-membership-request-permissions
                         :initform
                         (common-lisp:error ":permissions is required"))
                        (user-arn :initarg :|userArn| :type
                         (common-lisp:or user-arn common-lisp:null) :accessor
                         %update-environment-membership-request-user-arn
                         :initform (common-lisp:error ":userarn is required"))
                        (environment-id :initarg :|environmentId| :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %update-environment-membership-request-environment-id
                         :initform
                         (common-lisp:error ":environmentid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-environment-membership-request
                    'make-update-environment-membership-request))
 (common-lisp:defun make-update-environment-membership-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key permissions user-arn environment-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-environment-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-environment-membership-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-environment-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "environmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-arn))
      (common-lisp:list
       (common-lisp:cons "userArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-environment-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-environment-membership-result common-lisp:nil
                       ((membership :initarg :|membership| :type
                         (common-lisp:or environment-member common-lisp:null)
                         :accessor
                         %update-environment-membership-result-membership
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-environment-membership-result
                    'make-update-environment-membership-result))
 (common-lisp:defun make-update-environment-membership-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key membership)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-environment-membership-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-environment-membership-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-environment-membership-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'membership))
      (common-lisp:list
       (common-lisp:cons "membership"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-environment-membership-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-environment-request common-lisp:nil
                       ((managed-credentials-action :initarg
                         :|managedCredentialsAction| :type
                         (common-lisp:or managed-credentials-action
                                         common-lisp:null)
                         :accessor
                         %update-environment-request-managed-credentials-action
                         :initform common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or environment-description
                                         common-lisp:null)
                         :accessor %update-environment-request-description
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or environment-name common-lisp:null)
                         :accessor %update-environment-request-name :initform
                         common-lisp:nil)
                        (environment-id :initarg :|environmentId| :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %update-environment-request-environment-id
                         :initform
                         (common-lisp:error ":environmentid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-environment-request
                    'make-update-environment-request))
 (common-lisp:defun make-update-environment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key managed-credentials-action description
                     name environment-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-environment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-environment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-environment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "environmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'managed-credentials-action))
      (common-lisp:list
       (common-lisp:cons "managedCredentialsAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-environment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-environment-result common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-environment-result
                    'make-update-environment-result))
 (common-lisp:defun make-update-environment-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'update-environment-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-environment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-environment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-environment-result))
   common-lisp:nil))
(common-lisp:deftype user-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-environment-ec2
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description client-request-token
                     instance-type subnet-id image-id
                     automatic-stop-time-minutes owner-arn tags connection-type
                     dry-run)
   (common-lisp:declare
    (common-lisp:ignorable name description client-request-token instance-type
     subnet-id image-id automatic-stop-time-minutes owner-arn tags
     connection-type dry-run))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-environment-ec2request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateEnvironmentEC2"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-environment-ec2))
(common-lisp:progn
 (common-lisp:defun create-environment-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id user-arn permissions)
   (common-lisp:declare
    (common-lisp:ignorable environment-id user-arn permissions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-environment-membership-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateEnvironmentMembership"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-environment-membership))
(common-lisp:progn
 (common-lisp:defun delete-environment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id)
   (common-lisp:declare (common-lisp:ignorable environment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-environment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteEnvironment"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-environment))
(common-lisp:progn
 (common-lisp:defun delete-environment-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id user-arn)
   (common-lisp:declare (common-lisp:ignorable environment-id user-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-environment-membership-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteEnvironmentMembership"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-environment-membership))
(common-lisp:progn
 (common-lisp:defun describe-environment-memberships
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-arn environment-id permissions
                     next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable user-arn environment-id permissions next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-environment-memberships-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeEnvironmentMemberships"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-environment-memberships))
(common-lisp:progn
 (common-lisp:defun describe-environment-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id)
   (common-lisp:declare (common-lisp:ignorable environment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-environment-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeEnvironmentStatus"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-environment-status))
(common-lisp:progn
 (common-lisp:defun describe-environments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-ids)
   (common-lisp:declare (common-lisp:ignorable environment-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-environments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeEnvironments"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-environments))
(common-lisp:progn
 (common-lisp:defun list-environments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-environments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListEnvironments"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-environments))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListTagsForResource"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "TagResource"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UntagResource"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-environment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id name description
                     managed-credentials-action)
   (common-lisp:declare
    (common-lisp:ignorable environment-id name description
     managed-credentials-action))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-environment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateEnvironment"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-environment))
(common-lisp:progn
 (common-lisp:defun update-environment-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-id user-arn permissions)
   (common-lisp:declare
    (common-lisp:ignorable environment-id user-arn permissions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-environment-membership-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloud9-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateEnvironmentMembership"
                                                        "2017-09-23"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-environment-membership))
