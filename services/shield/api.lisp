;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/shield/api
  (:use)
  (:nicknames #:aws/shield)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/shield/api)
(common-lisp:progn
 (common-lisp:defclass shield-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "shield" :protocol :json))
 (common-lisp:export 'shield-request))
(common-lisp:progn
 (common-lisp:define-condition shield-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'shield-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("AccessDeniedForDependencyException"
     . access-denied-for-dependency-exception)
    ("InternalErrorException" . internal-error-exception)
    ("InvalidOperationException" . invalid-operation-exception)
    ("InvalidPaginationTokenException" . invalid-pagination-token-exception)
    ("InvalidParameterException" . invalid-parameter-exception)
    ("InvalidResourceException" . invalid-resource-exception)
    ("LimitsExceededException" . limits-exceeded-exception)
    ("LockedSubscriptionException" . locked-subscription-exception)
    ("NoAssociatedRoleException" . no-associated-role-exception)
    ("OptimisticLockException" . optimistic-lock-exception)
    ("ResourceAlreadyExistsException" . resource-already-exists-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-for-dependency-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       access-denied-for-dependency-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-for-dependency-exception
                    'access-denied-for-dependency-exception-message)))
(common-lisp:progn
 (common-lisp:defclass application-layer-automatic-response-configuration
                       common-lisp:nil
                       ((action :initarg :action :type
                         (common-lisp:or response-action common-lisp:null)
                         :accessor
                         %application-layer-automatic-response-configuration-action
                         :initform (common-lisp:error ":action is required"))
                        (status :initarg :status :type
                         (common-lisp:or
                          application-layer-automatic-response-status
                          common-lisp:null)
                         :accessor
                         %application-layer-automatic-response-configuration-status
                         :initform (common-lisp:error ":status is required"))))
 (common-lisp:export
  (common-lisp:list 'application-layer-automatic-response-configuration
                    'make-application-layer-automatic-response-configuration))
 (common-lisp:defun make-application-layer-automatic-response-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key action status)
   (common-lisp:apply #'common-lisp:make-instance
                      'application-layer-automatic-response-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          application-layer-automatic-response-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          application-layer-automatic-response-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          application-layer-automatic-response-configuration))
   common-lisp:nil))
(common-lisp:deftype application-layer-automatic-response-status ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass associate-drtlog-bucket-request common-lisp:nil
                       ((log-bucket :initarg :log-bucket :type
                         (common-lisp:or log-bucket common-lisp:null) :accessor
                         %associate-drtlog-bucket-request-log-bucket :initform
                         (common-lisp:error ":log-bucket is required"))))
 (common-lisp:export
  (common-lisp:list 'associate-drtlog-bucket-request
                    'make-associate-drtlog-bucket-request))
 (common-lisp:defun make-associate-drtlog-bucket-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key log-bucket)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-drtlog-bucket-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-drtlog-bucket-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-drtlog-bucket-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-bucket))
      (common-lisp:list
       (common-lisp:cons "LogBucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-drtlog-bucket-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-drtlog-bucket-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'associate-drtlog-bucket-response
                    'make-associate-drtlog-bucket-response))
 (common-lisp:defun make-associate-drtlog-bucket-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-drtlog-bucket-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-drtlog-bucket-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-drtlog-bucket-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-drtlog-bucket-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-drtrole-request common-lisp:nil
                       ((role-arn :initarg :role-arn :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %associate-drtrole-request-role-arn :initform
                         (common-lisp:error ":role-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'associate-drtrole-request
                    'make-associate-drtrole-request))
 (common-lisp:defun make-associate-drtrole-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key role-arn)
   (common-lisp:apply #'common-lisp:make-instance 'associate-drtrole-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-drtrole-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-drtrole-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-drtrole-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-drtrole-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'associate-drtrole-response
                    'make-associate-drtrole-response))
 (common-lisp:defun make-associate-drtrole-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'associate-drtrole-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-drtrole-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-drtrole-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-drtrole-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-health-check-request common-lisp:nil
                       ((health-check-arn :initarg :health-check-arn :type
                         (common-lisp:or health-check-arn common-lisp:null)
                         :accessor
                         %associate-health-check-request-health-check-arn
                         :initform
                         (common-lisp:error ":health-check-arn is required"))
                        (protection-id :initarg :protection-id :type
                         (common-lisp:or protection-id common-lisp:null)
                         :accessor
                         %associate-health-check-request-protection-id
                         :initform
                         (common-lisp:error ":protection-id is required"))))
 (common-lisp:export
  (common-lisp:list 'associate-health-check-request
                    'make-associate-health-check-request))
 (common-lisp:defun make-associate-health-check-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key health-check-arn protection-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-health-check-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-health-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-health-check-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'health-check-arn))
      (common-lisp:list
       (common-lisp:cons "HealthCheckArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-health-check-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-health-check-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'associate-health-check-response
                    'make-associate-health-check-response))
 (common-lisp:defun make-associate-health-check-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-health-check-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-health-check-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-health-check-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-health-check-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-proactive-engagement-details-request
                       common-lisp:nil
                       ((emergency-contact-list :initarg
                         :emergency-contact-list :type
                         (common-lisp:or emergency-contact-list
                                         common-lisp:null)
                         :accessor
                         %associate-proactive-engagement-details-request-emergency-contact-list
                         :initform
                         (common-lisp:error
                          ":emergency-contact-list is required"))))
 (common-lisp:export
  (common-lisp:list 'associate-proactive-engagement-details-request
                    'make-associate-proactive-engagement-details-request))
 (common-lisp:defun make-associate-proactive-engagement-details-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key emergency-contact-list)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-proactive-engagement-details-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-proactive-engagement-details-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-proactive-engagement-details-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-contact-list))
      (common-lisp:list
       (common-lisp:cons "EmergencyContactList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-proactive-engagement-details-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-proactive-engagement-details-response
                       common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'associate-proactive-engagement-details-response
                    'make-associate-proactive-engagement-details-response))
 (common-lisp:defun make-associate-proactive-engagement-details-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-proactive-engagement-details-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-proactive-engagement-details-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-proactive-engagement-details-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-proactive-engagement-details-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass attack-detail common-lisp:nil
                       ((mitigations :initarg :mitigations :type
                         (common-lisp:or mitigation-list common-lisp:null)
                         :accessor %attack-detail-mitigations :initform
                         common-lisp:nil)
                        (attack-properties :initarg :attack-properties :type
                         (common-lisp:or attack-properties common-lisp:null)
                         :accessor %attack-detail-attack-properties :initform
                         common-lisp:nil)
                        (attack-counters :initarg :attack-counters :type
                         (common-lisp:or summarized-counter-list
                                         common-lisp:null)
                         :accessor %attack-detail-attack-counters :initform
                         common-lisp:nil)
                        (end-time :initarg :end-time :type
                         (common-lisp:or attack-timestamp common-lisp:null)
                         :accessor %attack-detail-end-time :initform
                         common-lisp:nil)
                        (start-time :initarg :start-time :type
                         (common-lisp:or attack-timestamp common-lisp:null)
                         :accessor %attack-detail-start-time :initform
                         common-lisp:nil)
                        (sub-resources :initarg :sub-resources :type
                         (common-lisp:or sub-resource-summary-list
                                         common-lisp:null)
                         :accessor %attack-detail-sub-resources :initform
                         common-lisp:nil)
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %attack-detail-resource-arn :initform
                         common-lisp:nil)
                        (attack-id :initarg :attack-id :type
                         (common-lisp:or attack-id common-lisp:null) :accessor
                         %attack-detail-attack-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'attack-detail 'make-attack-detail))
 (common-lisp:defun make-attack-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key mitigations attack-properties
                     attack-counters end-time start-time sub-resources
                     resource-arn attack-id)
   (common-lisp:apply #'common-lisp:make-instance 'attack-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attack-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attack-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-id))
      (common-lisp:list
       (common-lisp:cons "AttackId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-resources))
      (common-lisp:list
       (common-lisp:cons "SubResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-counters))
      (common-lisp:list
       (common-lisp:cons "AttackCounters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-properties))
      (common-lisp:list
       (common-lisp:cons "AttackProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mitigations))
      (common-lisp:list
       (common-lisp:cons "Mitigations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attack-detail))
   common-lisp:nil))
(common-lisp:deftype attack-id () 'common-lisp:string)
(common-lisp:deftype attack-layer () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attack-properties ()
   '(trivial-types:proper-list attack-property))
 (common-lisp:defun |make-attack-properties|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attack-property))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass attack-property common-lisp:nil
                       ((total :initarg :total :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %attack-property-total :initform common-lisp:nil)
                        (unit :initarg :unit :type
                         (common-lisp:or unit common-lisp:null) :accessor
                         %attack-property-unit :initform common-lisp:nil)
                        (top-contributors :initarg :top-contributors :type
                         (common-lisp:or top-contributors common-lisp:null)
                         :accessor %attack-property-top-contributors :initform
                         common-lisp:nil)
                        (attack-property-identifier :initarg
                         :attack-property-identifier :type
                         (common-lisp:or attack-property-identifier
                                         common-lisp:null)
                         :accessor %attack-property-attack-property-identifier
                         :initform common-lisp:nil)
                        (attack-layer :initarg :attack-layer :type
                         (common-lisp:or attack-layer common-lisp:null)
                         :accessor %attack-property-attack-layer :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'attack-property 'make-attack-property))
 (common-lisp:defun make-attack-property
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key total unit top-contributors
                     attack-property-identifier attack-layer)
   (common-lisp:apply #'common-lisp:make-instance 'attack-property
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attack-property))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attack-property))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-layer))
      (common-lisp:list
       (common-lisp:cons "AttackLayer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'attack-property-identifier))
      (common-lisp:list
       (common-lisp:cons "AttackPropertyIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'top-contributors))
      (common-lisp:list
       (common-lisp:cons "TopContributors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total))
      (common-lisp:list
       (common-lisp:cons "Total"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attack-property))
   common-lisp:nil))
(common-lisp:deftype attack-property-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass attack-statistics-data-item common-lisp:nil
                       ((attack-count :initarg :attack-count :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %attack-statistics-data-item-attack-count :initform
                         (common-lisp:error ":attack-count is required"))
                        (attack-volume :initarg :attack-volume :type
                         (common-lisp:or attack-volume common-lisp:null)
                         :accessor %attack-statistics-data-item-attack-volume
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'attack-statistics-data-item
                    'make-attack-statistics-data-item))
 (common-lisp:defun make-attack-statistics-data-item
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attack-count attack-volume)
   (common-lisp:apply #'common-lisp:make-instance 'attack-statistics-data-item
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attack-statistics-data-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attack-statistics-data-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-volume))
      (common-lisp:list
       (common-lisp:cons "AttackVolume"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-count))
      (common-lisp:list
       (common-lisp:cons "AttackCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attack-statistics-data-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype attack-statistics-data-list ()
   '(trivial-types:proper-list attack-statistics-data-item))
 (common-lisp:defun |make-attack-statistics-data-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            attack-statistics-data-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype attack-summaries ()
   '(trivial-types:proper-list attack-summary))
 (common-lisp:defun |make-attack-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attack-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass attack-summary common-lisp:nil
                       ((attack-vectors :initarg :attack-vectors :type
                         (common-lisp:or attack-vector-description-list
                                         common-lisp:null)
                         :accessor %attack-summary-attack-vectors :initform
                         common-lisp:nil)
                        (end-time :initarg :end-time :type
                         (common-lisp:or attack-timestamp common-lisp:null)
                         :accessor %attack-summary-end-time :initform
                         common-lisp:nil)
                        (start-time :initarg :start-time :type
                         (common-lisp:or attack-timestamp common-lisp:null)
                         :accessor %attack-summary-start-time :initform
                         common-lisp:nil)
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %attack-summary-resource-arn :initform
                         common-lisp:nil)
                        (attack-id :initarg :attack-id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %attack-summary-attack-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'attack-summary 'make-attack-summary))
 (common-lisp:defun make-attack-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attack-vectors end-time start-time
                     resource-arn attack-id)
   (common-lisp:apply #'common-lisp:make-instance 'attack-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attack-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attack-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-id))
      (common-lisp:list
       (common-lisp:cons "AttackId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-vectors))
      (common-lisp:list
       (common-lisp:cons "AttackVectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attack-summary))
   common-lisp:nil))
(common-lisp:deftype attack-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass attack-vector-description common-lisp:nil
                       ((vector-type :initarg :vector-type :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %attack-vector-description-vector-type :initform
                         (common-lisp:error ":vector-type is required"))))
 (common-lisp:export
  (common-lisp:list 'attack-vector-description
                    'make-attack-vector-description))
 (common-lisp:defun make-attack-vector-description
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vector-type)
   (common-lisp:apply #'common-lisp:make-instance 'attack-vector-description
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attack-vector-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attack-vector-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vector-type))
      (common-lisp:list
       (common-lisp:cons "VectorType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attack-vector-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype attack-vector-description-list ()
   '(trivial-types:proper-list attack-vector-description))
 (common-lisp:defun |make-attack-vector-description-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            attack-vector-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass attack-volume common-lisp:nil
                       ((requests-per-second :initarg :requests-per-second
                         :type
                         (common-lisp:or attack-volume-statistics
                                         common-lisp:null)
                         :accessor %attack-volume-requests-per-second :initform
                         common-lisp:nil)
                        (packets-per-second :initarg :packets-per-second :type
                         (common-lisp:or attack-volume-statistics
                                         common-lisp:null)
                         :accessor %attack-volume-packets-per-second :initform
                         common-lisp:nil)
                        (bits-per-second :initarg :bits-per-second :type
                         (common-lisp:or attack-volume-statistics
                                         common-lisp:null)
                         :accessor %attack-volume-bits-per-second :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'attack-volume 'make-attack-volume))
 (common-lisp:defun make-attack-volume
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key requests-per-second packets-per-second
                     bits-per-second)
   (common-lisp:apply #'common-lisp:make-instance 'attack-volume
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attack-volume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attack-volume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bits-per-second))
      (common-lisp:list
       (common-lisp:cons "BitsPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packets-per-second))
      (common-lisp:list
       (common-lisp:cons "PacketsPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'requests-per-second))
      (common-lisp:list
       (common-lisp:cons "RequestsPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attack-volume))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass attack-volume-statistics common-lisp:nil
                       ((max :initarg :max :type
                         (common-lisp:or double common-lisp:null) :accessor
                         %attack-volume-statistics-max :initform
                         (common-lisp:error ":max is required"))))
 (common-lisp:export
  (common-lisp:list 'attack-volume-statistics 'make-attack-volume-statistics))
 (common-lisp:defun make-attack-volume-statistics
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max)
   (common-lisp:apply #'common-lisp:make-instance 'attack-volume-statistics
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attack-volume-statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attack-volume-statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max))
      (common-lisp:list
       (common-lisp:cons "Max"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attack-volume-statistics))
   common-lisp:nil))
(common-lisp:deftype auto-renew () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass block-action common-lisp:nil common-lisp:nil)
 (common-lisp:export (common-lisp:list 'block-action 'make-block-action))
 (common-lisp:defun make-block-action
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'block-action
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input block-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input block-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input block-action))
   common-lisp:nil))
(common-lisp:deftype contact-notes () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass contributor common-lisp:nil
                       ((value :initarg :value :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %contributor-value :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %contributor-name :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'contributor 'make-contributor))
 (common-lisp:defun make-contributor
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value name)
   (common-lisp:apply #'common-lisp:make-instance 'contributor
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input contributor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input contributor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input contributor))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass count-action common-lisp:nil common-lisp:nil)
 (common-lisp:export (common-lisp:list 'count-action 'make-count-action))
 (common-lisp:defun make-count-action
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'count-action
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input count-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input count-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input count-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-protection-group-request common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %create-protection-group-request-tags :initform
                         common-lisp:nil)
                        (members :initarg :members :type
                         (common-lisp:or protection-group-members
                                         common-lisp:null)
                         :accessor %create-protection-group-request-members
                         :initform common-lisp:nil)
                        (resource-type :initarg :resource-type :type
                         (common-lisp:or protected-resource-type
                                         common-lisp:null)
                         :accessor
                         %create-protection-group-request-resource-type
                         :initform common-lisp:nil)
                        (pattern :initarg :pattern :type
                         (common-lisp:or protection-group-pattern
                                         common-lisp:null)
                         :accessor %create-protection-group-request-pattern
                         :initform (common-lisp:error ":pattern is required"))
                        (aggregation :initarg :aggregation :type
                         (common-lisp:or protection-group-aggregation
                                         common-lisp:null)
                         :accessor %create-protection-group-request-aggregation
                         :initform
                         (common-lisp:error ":aggregation is required"))
                        (protection-group-id :initarg :protection-group-id
                         :type
                         (common-lisp:or protection-group-id common-lisp:null)
                         :accessor
                         %create-protection-group-request-protection-group-id
                         :initform
                         (common-lisp:error
                          ":protection-group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'create-protection-group-request
                    'make-create-protection-group-request))
 (common-lisp:defun make-create-protection-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags members resource-type pattern
                     aggregation protection-group-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-protection-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-group-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggregation))
      (common-lisp:list
       (common-lisp:cons "Aggregation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pattern))
      (common-lisp:list
       (common-lisp:cons "Pattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'members))
      (common-lisp:list
       (common-lisp:cons "Members"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-protection-group-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'create-protection-group-response
                    'make-create-protection-group-response))
 (common-lisp:defun make-create-protection-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-protection-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-protection-request common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %create-protection-request-tags :initform
                         common-lisp:nil)
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %create-protection-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))
                        (name :initarg :name :type
                         (common-lisp:or protection-name common-lisp:null)
                         :accessor %create-protection-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-protection-request
                    'make-create-protection-request))
 (common-lisp:defun make-create-protection-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn name)
   (common-lisp:apply #'common-lisp:make-instance 'create-protection-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-protection-response common-lisp:nil
                       ((protection-id :initarg :protection-id :type
                         (common-lisp:or protection-id common-lisp:null)
                         :accessor %create-protection-response-protection-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-protection-response
                    'make-create-protection-response))
 (common-lisp:defun make-create-protection-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key protection-id)
   (common-lisp:apply #'common-lisp:make-instance 'create-protection-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-subscription-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'create-subscription-request
                    'make-create-subscription-request))
 (common-lisp:defun make-create-subscription-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'create-subscription-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-subscription-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'create-subscription-response
                    'make-create-subscription-response))
 (common-lisp:defun make-create-subscription-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'create-subscription-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-protection-group-request common-lisp:nil
                       ((protection-group-id :initarg :protection-group-id
                         :type
                         (common-lisp:or protection-group-id common-lisp:null)
                         :accessor
                         %delete-protection-group-request-protection-group-id
                         :initform
                         (common-lisp:error
                          ":protection-group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-protection-group-request
                    'make-delete-protection-group-request))
 (common-lisp:defun make-delete-protection-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key protection-group-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-protection-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-group-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-protection-group-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-protection-group-response
                    'make-delete-protection-group-response))
 (common-lisp:defun make-delete-protection-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-protection-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-protection-request common-lisp:nil
                       ((protection-id :initarg :protection-id :type
                         (common-lisp:or protection-id common-lisp:null)
                         :accessor %delete-protection-request-protection-id
                         :initform
                         (common-lisp:error ":protection-id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-protection-request
                    'make-delete-protection-request))
 (common-lisp:defun make-delete-protection-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key protection-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-protection-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-protection-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-protection-response
                    'make-delete-protection-response))
 (common-lisp:defun make-delete-protection-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-protection-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-subscription-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-subscription-request
                    'make-delete-subscription-request))
 (common-lisp:defun make-delete-subscription-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-subscription-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-subscription-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-subscription-response
                    'make-delete-subscription-response))
 (common-lisp:defun make-delete-subscription-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-subscription-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-attack-request common-lisp:nil
                       ((attack-id :initarg :attack-id :type
                         (common-lisp:or attack-id common-lisp:null) :accessor
                         %describe-attack-request-attack-id :initform
                         (common-lisp:error ":attack-id is required"))))
 (common-lisp:export
  (common-lisp:list 'describe-attack-request 'make-describe-attack-request))
 (common-lisp:defun make-describe-attack-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attack-id)
   (common-lisp:apply #'common-lisp:make-instance 'describe-attack-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-id))
      (common-lisp:list
       (common-lisp:cons "AttackId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-attack-response common-lisp:nil
                       ((attack :initarg :attack :type
                         (common-lisp:or attack-detail common-lisp:null)
                         :accessor %describe-attack-response-attack :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-attack-response 'make-describe-attack-response))
 (common-lisp:defun make-describe-attack-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attack)
   (common-lisp:apply #'common-lisp:make-instance 'describe-attack-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack))
      (common-lisp:list
       (common-lisp:cons "Attack"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-attack-statistics-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'describe-attack-statistics-request
                    'make-describe-attack-statistics-request))
 (common-lisp:defun make-describe-attack-statistics-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-attack-statistics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-statistics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-statistics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-statistics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-attack-statistics-response common-lisp:nil
                       ((data-items :initarg :data-items :type
                         (common-lisp:or attack-statistics-data-list
                                         common-lisp:null)
                         :accessor
                         %describe-attack-statistics-response-data-items
                         :initform
                         (common-lisp:error ":data-items is required"))
                        (time-range :initarg :time-range :type
                         (common-lisp:or time-range common-lisp:null) :accessor
                         %describe-attack-statistics-response-time-range
                         :initform
                         (common-lisp:error ":time-range is required"))))
 (common-lisp:export
  (common-lisp:list 'describe-attack-statistics-response
                    'make-describe-attack-statistics-response))
 (common-lisp:defun make-describe-attack-statistics-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key data-items time-range)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-attack-statistics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-statistics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-statistics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-range))
      (common-lisp:list
       (common-lisp:cons "TimeRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-items))
      (common-lisp:list
       (common-lisp:cons "DataItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-statistics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-drtaccess-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'describe-drtaccess-request
                    'make-describe-drtaccess-request))
 (common-lisp:defun make-describe-drtaccess-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'describe-drtaccess-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-drtaccess-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-drtaccess-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-drtaccess-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-drtaccess-response common-lisp:nil
                       ((log-bucket-list :initarg :log-bucket-list :type
                         (common-lisp:or log-bucket-list common-lisp:null)
                         :accessor %describe-drtaccess-response-log-bucket-list
                         :initform common-lisp:nil)
                        (role-arn :initarg :role-arn :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %describe-drtaccess-response-role-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-drtaccess-response
                    'make-describe-drtaccess-response))
 (common-lisp:defun make-describe-drtaccess-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key log-bucket-list role-arn)
   (common-lisp:apply #'common-lisp:make-instance 'describe-drtaccess-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-drtaccess-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-drtaccess-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-bucket-list))
      (common-lisp:list
       (common-lisp:cons "LogBucketList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-drtaccess-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-emergency-contact-settings-request
                       common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'describe-emergency-contact-settings-request
                    'make-describe-emergency-contact-settings-request))
 (common-lisp:defun make-describe-emergency-contact-settings-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-emergency-contact-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-emergency-contact-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-emergency-contact-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-emergency-contact-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-emergency-contact-settings-response
                       common-lisp:nil
                       ((emergency-contact-list :initarg
                         :emergency-contact-list :type
                         (common-lisp:or emergency-contact-list
                                         common-lisp:null)
                         :accessor
                         %describe-emergency-contact-settings-response-emergency-contact-list
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-emergency-contact-settings-response
                    'make-describe-emergency-contact-settings-response))
 (common-lisp:defun make-describe-emergency-contact-settings-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key emergency-contact-list)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-emergency-contact-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-emergency-contact-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-emergency-contact-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-contact-list))
      (common-lisp:list
       (common-lisp:cons "EmergencyContactList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-emergency-contact-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-protection-group-request common-lisp:nil
                       ((protection-group-id :initarg :protection-group-id
                         :type
                         (common-lisp:or protection-group-id common-lisp:null)
                         :accessor
                         %describe-protection-group-request-protection-group-id
                         :initform
                         (common-lisp:error
                          ":protection-group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'describe-protection-group-request
                    'make-describe-protection-group-request))
 (common-lisp:defun make-describe-protection-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key protection-group-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-protection-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-group-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-protection-group-response common-lisp:nil
                       ((protection-group :initarg :protection-group :type
                         (common-lisp:or protection-group common-lisp:null)
                         :accessor
                         %describe-protection-group-response-protection-group
                         :initform
                         (common-lisp:error ":protection-group is required"))))
 (common-lisp:export
  (common-lisp:list 'describe-protection-group-response
                    'make-describe-protection-group-response))
 (common-lisp:defun make-describe-protection-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key protection-group)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-protection-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-group))
      (common-lisp:list
       (common-lisp:cons "ProtectionGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-protection-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %describe-protection-request-resource-arn
                         :initform common-lisp:nil)
                        (protection-id :initarg :protection-id :type
                         (common-lisp:or protection-id common-lisp:null)
                         :accessor %describe-protection-request-protection-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-protection-request
                    'make-describe-protection-request))
 (common-lisp:defun make-describe-protection-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn protection-id)
   (common-lisp:apply #'common-lisp:make-instance 'describe-protection-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-protection-response common-lisp:nil
                       ((protection :initarg :protection :type
                         (common-lisp:or protection common-lisp:null) :accessor
                         %describe-protection-response-protection :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-protection-response
                    'make-describe-protection-response))
 (common-lisp:defun make-describe-protection-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key protection)
   (common-lisp:apply #'common-lisp:make-instance 'describe-protection-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection))
      (common-lisp:list
       (common-lisp:cons "Protection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-subscription-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'describe-subscription-request
                    'make-describe-subscription-request))
 (common-lisp:defun make-describe-subscription-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-subscription-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscription-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-subscription-response common-lisp:nil
                       ((subscription :initarg :subscription :type
                         (common-lisp:or subscription common-lisp:null)
                         :accessor %describe-subscription-response-subscription
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-subscription-response
                    'make-describe-subscription-response))
 (common-lisp:defun make-describe-subscription-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subscription)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-subscription-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscription-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription))
      (common-lisp:list
       (common-lisp:cons "Subscription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscription-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disable-application-layer-automatic-response-request
                       common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         %disable-application-layer-automatic-response-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'disable-application-layer-automatic-response-request
                    'make-disable-application-layer-automatic-response-request))
 (common-lisp:defun make-disable-application-layer-automatic-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'disable-application-layer-automatic-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-application-layer-automatic-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-application-layer-automatic-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-application-layer-automatic-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disable-application-layer-automatic-response-response
                       common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'disable-application-layer-automatic-response-response
                    'make-disable-application-layer-automatic-response-response))
 (common-lisp:defun make-disable-application-layer-automatic-response-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'disable-application-layer-automatic-response-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-application-layer-automatic-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-application-layer-automatic-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-application-layer-automatic-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disable-proactive-engagement-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'disable-proactive-engagement-request
                    'make-disable-proactive-engagement-request))
 (common-lisp:defun make-disable-proactive-engagement-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'disable-proactive-engagement-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-proactive-engagement-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-proactive-engagement-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-proactive-engagement-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disable-proactive-engagement-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'disable-proactive-engagement-response
                    'make-disable-proactive-engagement-response))
 (common-lisp:defun make-disable-proactive-engagement-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'disable-proactive-engagement-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-proactive-engagement-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-proactive-engagement-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-proactive-engagement-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-drtlog-bucket-request common-lisp:nil
                       ((log-bucket :initarg :log-bucket :type
                         (common-lisp:or log-bucket common-lisp:null) :accessor
                         %disassociate-drtlog-bucket-request-log-bucket
                         :initform
                         (common-lisp:error ":log-bucket is required"))))
 (common-lisp:export
  (common-lisp:list 'disassociate-drtlog-bucket-request
                    'make-disassociate-drtlog-bucket-request))
 (common-lisp:defun make-disassociate-drtlog-bucket-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key log-bucket)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-drtlog-bucket-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-drtlog-bucket-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-drtlog-bucket-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-bucket))
      (common-lisp:list
       (common-lisp:cons "LogBucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-drtlog-bucket-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-drtlog-bucket-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'disassociate-drtlog-bucket-response
                    'make-disassociate-drtlog-bucket-response))
 (common-lisp:defun make-disassociate-drtlog-bucket-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-drtlog-bucket-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-drtlog-bucket-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-drtlog-bucket-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-drtlog-bucket-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-drtrole-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'disassociate-drtrole-request
                    'make-disassociate-drtrole-request))
 (common-lisp:defun make-disassociate-drtrole-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'disassociate-drtrole-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-drtrole-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-drtrole-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-drtrole-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-drtrole-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'disassociate-drtrole-response
                    'make-disassociate-drtrole-response))
 (common-lisp:defun make-disassociate-drtrole-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-drtrole-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-drtrole-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-drtrole-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-drtrole-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-health-check-request common-lisp:nil
                       ((health-check-arn :initarg :health-check-arn :type
                         (common-lisp:or health-check-arn common-lisp:null)
                         :accessor
                         %disassociate-health-check-request-health-check-arn
                         :initform
                         (common-lisp:error ":health-check-arn is required"))
                        (protection-id :initarg :protection-id :type
                         (common-lisp:or protection-id common-lisp:null)
                         :accessor
                         %disassociate-health-check-request-protection-id
                         :initform
                         (common-lisp:error ":protection-id is required"))))
 (common-lisp:export
  (common-lisp:list 'disassociate-health-check-request
                    'make-disassociate-health-check-request))
 (common-lisp:defun make-disassociate-health-check-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key health-check-arn protection-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-health-check-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-health-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-health-check-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'health-check-arn))
      (common-lisp:list
       (common-lisp:cons "HealthCheckArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-health-check-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-health-check-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'disassociate-health-check-response
                    'make-disassociate-health-check-response))
 (common-lisp:defun make-disassociate-health-check-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-health-check-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-health-check-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-health-check-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-health-check-response))
   common-lisp:nil))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:deftype duration-in-seconds () 'common-lisp:integer)
(common-lisp:deftype email-address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass emergency-contact common-lisp:nil
                       ((contact-notes :initarg :contact-notes :type
                         (common-lisp:or contact-notes common-lisp:null)
                         :accessor %emergency-contact-contact-notes :initform
                         common-lisp:nil)
                        (phone-number :initarg :phone-number :type
                         (common-lisp:or phone-number common-lisp:null)
                         :accessor %emergency-contact-phone-number :initform
                         common-lisp:nil)
                        (email-address :initarg :email-address :type
                         (common-lisp:or email-address common-lisp:null)
                         :accessor %emergency-contact-email-address :initform
                         (common-lisp:error ":email-address is required"))))
 (common-lisp:export
  (common-lisp:list 'emergency-contact 'make-emergency-contact))
 (common-lisp:defun make-emergency-contact
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key contact-notes phone-number email-address)
   (common-lisp:apply #'common-lisp:make-instance 'emergency-contact
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input emergency-contact))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input emergency-contact))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "EmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contact-notes))
      (common-lisp:list
       (common-lisp:cons "ContactNotes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input emergency-contact))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype emergency-contact-list ()
   '(trivial-types:proper-list emergency-contact))
 (common-lisp:defun |make-emergency-contact-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list emergency-contact))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass enable-application-layer-automatic-response-request
                       common-lisp:nil
                       ((action :initarg :action :type
                         (common-lisp:or response-action common-lisp:null)
                         :accessor
                         %enable-application-layer-automatic-response-request-action
                         :initform (common-lisp:error ":action is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         %enable-application-layer-automatic-response-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'enable-application-layer-automatic-response-request
                    'make-enable-application-layer-automatic-response-request))
 (common-lisp:defun make-enable-application-layer-automatic-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key action resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'enable-application-layer-automatic-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-application-layer-automatic-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-application-layer-automatic-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-application-layer-automatic-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass enable-application-layer-automatic-response-response
                       common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'enable-application-layer-automatic-response-response
                    'make-enable-application-layer-automatic-response-response))
 (common-lisp:defun make-enable-application-layer-automatic-response-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'enable-application-layer-automatic-response-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-application-layer-automatic-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-application-layer-automatic-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-application-layer-automatic-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass enable-proactive-engagement-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'enable-proactive-engagement-request
                    'make-enable-proactive-engagement-request))
 (common-lisp:defun make-enable-proactive-engagement-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'enable-proactive-engagement-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-proactive-engagement-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-proactive-engagement-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-proactive-engagement-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass enable-proactive-engagement-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'enable-proactive-engagement-response
                    'make-enable-proactive-engagement-response))
 (common-lisp:defun make-enable-proactive-engagement-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'enable-proactive-engagement-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-proactive-engagement-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-proactive-engagement-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-proactive-engagement-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-subscription-state-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'get-subscription-state-request
                    'make-get-subscription-state-request))
 (common-lisp:defun make-get-subscription-state-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-subscription-state-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-state-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-state-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-state-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-subscription-state-response common-lisp:nil
                       ((subscription-state :initarg :subscription-state :type
                         (common-lisp:or subscription-state common-lisp:null)
                         :accessor
                         %get-subscription-state-response-subscription-state
                         :initform
                         (common-lisp:error
                          ":subscription-state is required"))))
 (common-lisp:export
  (common-lisp:list 'get-subscription-state-response
                    'make-get-subscription-state-response))
 (common-lisp:defun make-get-subscription-state-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subscription-state)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-subscription-state-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-state-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-state-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-state))
      (common-lisp:list
       (common-lisp:cons "SubscriptionState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-state-response))
   common-lisp:nil))
(common-lisp:deftype health-check-arn () 'common-lisp:string)
(common-lisp:deftype health-check-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype health-check-ids ()
   '(trivial-types:proper-list health-check-id))
 (common-lisp:defun |make-health-check-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list health-check-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass inclusion-protection-filters common-lisp:nil
                       ((resource-types :initarg :resource-types :type
                         (common-lisp:or protected-resource-type-filters
                                         common-lisp:null)
                         :accessor %inclusion-protection-filters-resource-types
                         :initform common-lisp:nil)
                        (protection-names :initarg :protection-names :type
                         (common-lisp:or protection-name-filters
                                         common-lisp:null)
                         :accessor
                         %inclusion-protection-filters-protection-names
                         :initform common-lisp:nil)
                        (resource-arns :initarg :resource-arns :type
                         (common-lisp:or resource-arn-filters common-lisp:null)
                         :accessor %inclusion-protection-filters-resource-arns
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'inclusion-protection-filters
                    'make-inclusion-protection-filters))
 (common-lisp:defun make-inclusion-protection-filters
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-types protection-names
                     resource-arns)
   (common-lisp:apply #'common-lisp:make-instance 'inclusion-protection-filters
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          inclusion-protection-filters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          inclusion-protection-filters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "ResourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-names))
      (common-lisp:list
       (common-lisp:cons "ProtectionNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-types))
      (common-lisp:list
       (common-lisp:cons "ResourceTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          inclusion-protection-filters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass inclusion-protection-group-filters common-lisp:nil
                       ((aggregations :initarg :aggregations :type
                         (common-lisp:or protection-group-aggregation-filters
                                         common-lisp:null)
                         :accessor
                         %inclusion-protection-group-filters-aggregations
                         :initform common-lisp:nil)
                        (resource-types :initarg :resource-types :type
                         (common-lisp:or protected-resource-type-filters
                                         common-lisp:null)
                         :accessor
                         %inclusion-protection-group-filters-resource-types
                         :initform common-lisp:nil)
                        (patterns :initarg :patterns :type
                         (common-lisp:or protection-group-pattern-filters
                                         common-lisp:null)
                         :accessor %inclusion-protection-group-filters-patterns
                         :initform common-lisp:nil)
                        (protection-group-ids :initarg :protection-group-ids
                         :type
                         (common-lisp:or protection-group-id-filters
                                         common-lisp:null)
                         :accessor
                         %inclusion-protection-group-filters-protection-group-ids
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'inclusion-protection-group-filters
                    'make-inclusion-protection-group-filters))
 (common-lisp:defun make-inclusion-protection-group-filters
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key aggregations resource-types patterns
                     protection-group-ids)
   (common-lisp:apply #'common-lisp:make-instance
                      'inclusion-protection-group-filters
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          inclusion-protection-group-filters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          inclusion-protection-group-filters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'protection-group-ids))
      (common-lisp:list
       (common-lisp:cons "ProtectionGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patterns))
      (common-lisp:list
       (common-lisp:cons "Patterns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-types))
      (common-lisp:list
       (common-lisp:cons "ResourceTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggregations))
      (common-lisp:list
       (common-lisp:cons "Aggregations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          inclusion-protection-group-filters))
   common-lisp:nil))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-error-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       internal-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-error-exception
                    'internal-error-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-operation-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       invalid-operation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-operation-exception
                    'invalid-operation-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-pagination-token-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       invalid-pagination-token-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-pagination-token-exception
                    'invalid-pagination-token-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       invalid-parameter-exception-message)
      (reason :initarg :|reason| :initform common-lisp:nil :reader
       invalid-parameter-exception-reason)
      (fields :initarg :|fields| :initform common-lisp:nil :reader
       invalid-parameter-exception-fields)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'invalid-parameter-exception-message
                    'invalid-parameter-exception-reason
                    'invalid-parameter-exception-fields)))
(common-lisp:progn
 (common-lisp:define-condition invalid-resource-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       invalid-resource-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-resource-exception
                    'invalid-resource-exception-message)))
(common-lisp:progn
 (common-lisp:defclass limit common-lisp:nil
                       ((max :initarg :max :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %limit-max :initform common-lisp:nil)
                        (type :initarg :type :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %limit-type :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'limit 'make-limit))
 (common-lisp:defun make-limit
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max type)
   (common-lisp:apply #'common-lisp:make-instance 'limit
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input limit))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input limit))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max))
      (common-lisp:list
       (common-lisp:cons "Max"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input limit))
   common-lisp:nil))
(common-lisp:deftype limit-number () 'common-lisp:integer)
(common-lisp:deftype limit-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype limits () '(trivial-types:proper-list limit))
 (common-lisp:defun |make-limits|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list limit))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition limits-exceeded-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       limits-exceeded-exception-message)
      (type :initarg :type :initform common-lisp:nil :reader
       limits-exceeded-exception-type)
      (limit :initarg :limit :initform common-lisp:nil :reader
       limits-exceeded-exception-limit)))
 (common-lisp:export
  (common-lisp:list 'limits-exceeded-exception
                    'limits-exceeded-exception-message
                    'limits-exceeded-exception-type
                    'limits-exceeded-exception-limit)))
(common-lisp:progn
 (common-lisp:defclass list-attacks-request common-lisp:nil
                       ((max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-attacks-request-max-results :initform
                         common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-attacks-request-next-token :initform
                         common-lisp:nil)
                        (end-time :initarg :end-time :type
                         (common-lisp:or time-range common-lisp:null) :accessor
                         %list-attacks-request-end-time :initform
                         common-lisp:nil)
                        (start-time :initarg :start-time :type
                         (common-lisp:or time-range common-lisp:null) :accessor
                         %list-attacks-request-start-time :initform
                         common-lisp:nil)
                        (resource-arns :initarg :resource-arns :type
                         (common-lisp:or resource-arn-filter-list
                                         common-lisp:null)
                         :accessor %list-attacks-request-resource-arns
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-attacks-request 'make-list-attacks-request))
 (common-lisp:defun make-list-attacks-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token end-time
                     start-time resource-arns)
   (common-lisp:apply #'common-lisp:make-instance 'list-attacks-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-attacks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-attacks-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "ResourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-attacks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-attacks-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-attacks-response-next-token :initform
                         common-lisp:nil)
                        (attack-summaries :initarg :attack-summaries :type
                         (common-lisp:or attack-summaries common-lisp:null)
                         :accessor %list-attacks-response-attack-summaries
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-attacks-response 'make-list-attacks-response))
 (common-lisp:defun make-list-attacks-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token attack-summaries)
   (common-lisp:apply #'common-lisp:make-instance 'list-attacks-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-attacks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-attacks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-summaries))
      (common-lisp:list
       (common-lisp:cons "AttackSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-attacks-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-protection-groups-request common-lisp:nil
                       ((inclusion-filters :initarg :inclusion-filters :type
                         (common-lisp:or inclusion-protection-group-filters
                                         common-lisp:null)
                         :accessor
                         %list-protection-groups-request-inclusion-filters
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-protection-groups-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-protection-groups-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-protection-groups-request
                    'make-list-protection-groups-request))
 (common-lisp:defun make-list-protection-groups-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key inclusion-filters max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-protection-groups-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-protection-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-protection-groups-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inclusion-filters))
      (common-lisp:list
       (common-lisp:cons "InclusionFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-protection-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-protection-groups-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-protection-groups-response-next-token :initform
                         common-lisp:nil)
                        (protection-groups :initarg :protection-groups :type
                         (common-lisp:or protection-groups common-lisp:null)
                         :accessor
                         %list-protection-groups-response-protection-groups
                         :initform
                         (common-lisp:error
                          ":protection-groups is required"))))
 (common-lisp:export
  (common-lisp:list 'list-protection-groups-response
                    'make-list-protection-groups-response))
 (common-lisp:defun make-list-protection-groups-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token protection-groups)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-protection-groups-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-protection-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-protection-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-groups))
      (common-lisp:list
       (common-lisp:cons "ProtectionGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-protection-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-protections-request common-lisp:nil
                       ((inclusion-filters :initarg :inclusion-filters :type
                         (common-lisp:or inclusion-protection-filters
                                         common-lisp:null)
                         :accessor %list-protections-request-inclusion-filters
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-protections-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-protections-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-protections-request 'make-list-protections-request))
 (common-lisp:defun make-list-protections-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key inclusion-filters max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-protections-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-protections-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-protections-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inclusion-filters))
      (common-lisp:list
       (common-lisp:cons "InclusionFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-protections-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-protections-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-protections-response-next-token :initform
                         common-lisp:nil)
                        (protections :initarg :protections :type
                         (common-lisp:or protections common-lisp:null)
                         :accessor %list-protections-response-protections
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-protections-response
                    'make-list-protections-response))
 (common-lisp:defun make-list-protections-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token protections)
   (common-lisp:apply #'common-lisp:make-instance 'list-protections-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-protections-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-protections-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protections))
      (common-lisp:list
       (common-lisp:cons "Protections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-protections-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resources-in-protection-group-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %list-resources-in-protection-group-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-resources-in-protection-group-request-next-token
                         :initform common-lisp:nil)
                        (protection-group-id :initarg :protection-group-id
                         :type
                         (common-lisp:or protection-group-id common-lisp:null)
                         :accessor
                         %list-resources-in-protection-group-request-protection-group-id
                         :initform
                         (common-lisp:error
                          ":protection-group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'list-resources-in-protection-group-request
                    'make-list-resources-in-protection-group-request))
 (common-lisp:defun make-list-resources-in-protection-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token
                     protection-group-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resources-in-protection-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-in-protection-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-in-protection-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-group-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-in-protection-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resources-in-protection-group-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-resources-in-protection-group-response-next-token
                         :initform common-lisp:nil)
                        (resource-arns :initarg :resource-arns :type
                         (common-lisp:or resource-arn-list common-lisp:null)
                         :accessor
                         %list-resources-in-protection-group-response-resource-arns
                         :initform
                         (common-lisp:error ":resource-arns is required"))))
 (common-lisp:export
  (common-lisp:list 'list-resources-in-protection-group-response
                    'make-list-resources-in-protection-group-response))
 (common-lisp:defun make-list-resources-in-protection-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token resource-arns)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resources-in-protection-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-in-protection-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-in-protection-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "ResourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-in-protection-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %list-tags-for-resource-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %list-tags-for-resource-response-tags :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defun make-list-tags-for-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition locked-subscription-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       locked-subscription-exception-message)))
 (common-lisp:export
  (common-lisp:list 'locked-subscription-exception
                    'locked-subscription-exception-message)))
(common-lisp:deftype log-bucket () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype log-bucket-list ()
   '(trivial-types:proper-list log-bucket))
 (common-lisp:defun |make-log-bucket-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list log-bucket))
   aws-sdk/generator/shape::members))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass mitigation common-lisp:nil
                       ((mitigation-name :initarg :mitigation-name :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %mitigation-mitigation-name :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'mitigation 'make-mitigation))
 (common-lisp:defun make-mitigation
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key mitigation-name)
   (common-lisp:apply #'common-lisp:make-instance 'mitigation
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mitigation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mitigation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mitigation-name))
      (common-lisp:list
       (common-lisp:cons "MitigationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mitigation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype mitigation-list ()
   '(trivial-types:proper-list mitigation))
 (common-lisp:defun |make-mitigation-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list mitigation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition no-associated-role-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       no-associated-role-exception-message)))
 (common-lisp:export
  (common-lisp:list 'no-associated-role-exception
                    'no-associated-role-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition optimistic-lock-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       optimistic-lock-exception-message)))
 (common-lisp:export
  (common-lisp:list 'optimistic-lock-exception
                    'optimistic-lock-exception-message)))
(common-lisp:deftype phone-number () 'common-lisp:string)
(common-lisp:deftype proactive-engagement-status () 'common-lisp:string)
(common-lisp:deftype protected-resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype protected-resource-type-filters ()
   '(trivial-types:proper-list protected-resource-type))
 (common-lisp:defun |make-protected-resource-type-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list protected-resource-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass protection common-lisp:nil
                       ((application-layer-automatic-response-configuration
                         :initarg
                         :application-layer-automatic-response-configuration
                         :type
                         (common-lisp:or
                          application-layer-automatic-response-configuration
                          common-lisp:null)
                         :accessor
                         %protection-application-layer-automatic-response-configuration
                         :initform common-lisp:nil)
                        (protection-arn :initarg :protection-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %protection-protection-arn :initform
                         common-lisp:nil)
                        (health-check-ids :initarg :health-check-ids :type
                         (common-lisp:or health-check-ids common-lisp:null)
                         :accessor %protection-health-check-ids :initform
                         common-lisp:nil)
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %protection-resource-arn :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or protection-name common-lisp:null)
                         :accessor %protection-name :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or protection-id common-lisp:null)
                         :accessor %protection-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'protection 'make-protection))
 (common-lisp:defun make-protection
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key
                     application-layer-automatic-response-configuration
                     protection-arn health-check-ids resource-arn name id)
   (common-lisp:apply #'common-lisp:make-instance 'protection
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input protection))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input protection))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'health-check-ids))
      (common-lisp:list
       (common-lisp:cons "HealthCheckIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-arn))
      (common-lisp:list
       (common-lisp:cons "ProtectionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-layer-automatic-response-configuration))
      (common-lisp:list
       (common-lisp:cons "ApplicationLayerAutomaticResponseConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input protection))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass protection-group common-lisp:nil
                       ((protection-group-arn :initarg :protection-group-arn
                         :type (common-lisp:or resource-arn common-lisp:null)
                         :accessor %protection-group-protection-group-arn
                         :initform common-lisp:nil)
                        (members :initarg :members :type
                         (common-lisp:or protection-group-members
                                         common-lisp:null)
                         :accessor %protection-group-members :initform
                         (common-lisp:error ":members is required"))
                        (resource-type :initarg :resource-type :type
                         (common-lisp:or protected-resource-type
                                         common-lisp:null)
                         :accessor %protection-group-resource-type :initform
                         common-lisp:nil)
                        (pattern :initarg :pattern :type
                         (common-lisp:or protection-group-pattern
                                         common-lisp:null)
                         :accessor %protection-group-pattern :initform
                         (common-lisp:error ":pattern is required"))
                        (aggregation :initarg :aggregation :type
                         (common-lisp:or protection-group-aggregation
                                         common-lisp:null)
                         :accessor %protection-group-aggregation :initform
                         (common-lisp:error ":aggregation is required"))
                        (protection-group-id :initarg :protection-group-id
                         :type
                         (common-lisp:or protection-group-id common-lisp:null)
                         :accessor %protection-group-protection-group-id
                         :initform
                         (common-lisp:error
                          ":protection-group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'protection-group 'make-protection-group))
 (common-lisp:defun make-protection-group
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key protection-group-arn members
                     resource-type pattern aggregation protection-group-id)
   (common-lisp:apply #'common-lisp:make-instance 'protection-group
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input protection-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input protection-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-group-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggregation))
      (common-lisp:list
       (common-lisp:cons "Aggregation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pattern))
      (common-lisp:list
       (common-lisp:cons "Pattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'members))
      (common-lisp:list
       (common-lisp:cons "Members"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'protection-group-arn))
      (common-lisp:list
       (common-lisp:cons "ProtectionGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input protection-group))
   common-lisp:nil))
(common-lisp:deftype protection-group-aggregation () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype protection-group-aggregation-filters ()
   '(trivial-types:proper-list protection-group-aggregation))
 (common-lisp:defun |make-protection-group-aggregation-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            protection-group-aggregation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass protection-group-arbitrary-pattern-limits
                       common-lisp:nil
                       ((max-members :initarg :max-members :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %protection-group-arbitrary-pattern-limits-max-members
                         :initform
                         (common-lisp:error ":max-members is required"))))
 (common-lisp:export
  (common-lisp:list 'protection-group-arbitrary-pattern-limits
                    'make-protection-group-arbitrary-pattern-limits))
 (common-lisp:defun make-protection-group-arbitrary-pattern-limits
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-members)
   (common-lisp:apply #'common-lisp:make-instance
                      'protection-group-arbitrary-pattern-limits
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          protection-group-arbitrary-pattern-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          protection-group-arbitrary-pattern-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-members))
      (common-lisp:list
       (common-lisp:cons "MaxMembers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          protection-group-arbitrary-pattern-limits))
   common-lisp:nil))
(common-lisp:deftype protection-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype protection-group-id-filters ()
   '(trivial-types:proper-list protection-group-id))
 (common-lisp:defun |make-protection-group-id-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list protection-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass protection-group-limits common-lisp:nil
                       ((pattern-type-limits :initarg :pattern-type-limits
                         :type
                         (common-lisp:or protection-group-pattern-type-limits
                                         common-lisp:null)
                         :accessor %protection-group-limits-pattern-type-limits
                         :initform
                         (common-lisp:error
                          ":pattern-type-limits is required"))
                        (max-protection-groups :initarg :max-protection-groups
                         :type (common-lisp:or long common-lisp:null) :accessor
                         %protection-group-limits-max-protection-groups
                         :initform
                         (common-lisp:error
                          ":max-protection-groups is required"))))
 (common-lisp:export
  (common-lisp:list 'protection-group-limits 'make-protection-group-limits))
 (common-lisp:defun make-protection-group-limits
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key pattern-type-limits
                     max-protection-groups)
   (common-lisp:apply #'common-lisp:make-instance 'protection-group-limits
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          protection-group-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          protection-group-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-protection-groups))
      (common-lisp:list
       (common-lisp:cons "MaxProtectionGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pattern-type-limits))
      (common-lisp:list
       (common-lisp:cons "PatternTypeLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          protection-group-limits))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype protection-group-members ()
   '(trivial-types:proper-list resource-arn))
 (common-lisp:defun |make-protection-group-members|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype protection-group-pattern () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype protection-group-pattern-filters ()
   '(trivial-types:proper-list protection-group-pattern))
 (common-lisp:defun |make-protection-group-pattern-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            protection-group-pattern))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass protection-group-pattern-type-limits common-lisp:nil
                       ((arbitrary-pattern-limits :initarg
                         :arbitrary-pattern-limits :type
                         (common-lisp:or
                          protection-group-arbitrary-pattern-limits
                          common-lisp:null)
                         :accessor
                         %protection-group-pattern-type-limits-arbitrary-pattern-limits
                         :initform
                         (common-lisp:error
                          ":arbitrary-pattern-limits is required"))))
 (common-lisp:export
  (common-lisp:list 'protection-group-pattern-type-limits
                    'make-protection-group-pattern-type-limits))
 (common-lisp:defun make-protection-group-pattern-type-limits
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arbitrary-pattern-limits)
   (common-lisp:apply #'common-lisp:make-instance
                      'protection-group-pattern-type-limits
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          protection-group-pattern-type-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          protection-group-pattern-type-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'arbitrary-pattern-limits))
      (common-lisp:list
       (common-lisp:cons "ArbitraryPatternLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          protection-group-pattern-type-limits))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype protection-groups ()
   '(trivial-types:proper-list protection-group))
 (common-lisp:defun |make-protection-groups|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list protection-group))
   aws-sdk/generator/shape::members))
(common-lisp:deftype protection-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass protection-limits common-lisp:nil
                       ((protected-resource-type-limits :initarg
                         :protected-resource-type-limits :type
                         (common-lisp:or limits common-lisp:null) :accessor
                         %protection-limits-protected-resource-type-limits
                         :initform
                         (common-lisp:error
                          ":protected-resource-type-limits is required"))))
 (common-lisp:export
  (common-lisp:list 'protection-limits 'make-protection-limits))
 (common-lisp:defun make-protection-limits
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key protected-resource-type-limits)
   (common-lisp:apply #'common-lisp:make-instance 'protection-limits
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input protection-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input protection-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'protected-resource-type-limits))
      (common-lisp:list
       (common-lisp:cons "ProtectedResourceTypeLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input protection-limits))
   common-lisp:nil))
(common-lisp:deftype protection-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype protection-name-filters ()
   '(trivial-types:proper-list protection-name))
 (common-lisp:defun |make-protection-name-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list protection-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype protections () '(trivial-types:proper-list protection))
 (common-lisp:defun |make-protections|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list protection))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-already-exists-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       resource-already-exists-exception-message)
      (resource-type :initarg :|resourceType| :initform common-lisp:nil :reader
       resource-already-exists-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-already-exists-exception
                    'resource-already-exists-exception-message
                    'resource-already-exists-exception-resource-type)))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-arn-filter-list ()
   '(trivial-types:proper-list resource-arn))
 (common-lisp:defun |make-resource-arn-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype resource-arn-filters ()
   '(trivial-types:proper-list resource-arn))
 (common-lisp:defun |make-resource-arn-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype resource-arn-list ()
   '(trivial-types:proper-list resource-arn))
 (common-lisp:defun |make-resource-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (shield-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-type :initarg :|resourceType| :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-type)))
(common-lisp:progn
 (common-lisp:defclass response-action common-lisp:nil
                       ((count :initarg :count :type
                         (common-lisp:or count-action common-lisp:null)
                         :accessor %response-action-count :initform
                         common-lisp:nil)
                        (block :initarg :block :type
                         (common-lisp:or block-action common-lisp:null)
                         :accessor %response-action-block :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'response-action 'make-response-action))
 (common-lisp:defun make-response-action
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key count block)
   (common-lisp:apply #'common-lisp:make-instance 'response-action
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input response-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input response-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block))
      (common-lisp:list
       (common-lisp:cons "Block"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "Count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input response-action))
   common-lisp:nil))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass sub-resource-summary common-lisp:nil
                       ((counters :initarg :counters :type
                         (common-lisp:or summarized-counter-list
                                         common-lisp:null)
                         :accessor %sub-resource-summary-counters :initform
                         common-lisp:nil)
                        (attack-vectors :initarg :attack-vectors :type
                         (common-lisp:or summarized-attack-vector-list
                                         common-lisp:null)
                         :accessor %sub-resource-summary-attack-vectors
                         :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %sub-resource-summary-id :initform common-lisp:nil)
                        (type :initarg :type :type
                         (common-lisp:or sub-resource-type common-lisp:null)
                         :accessor %sub-resource-summary-type :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'sub-resource-summary 'make-sub-resource-summary))
 (common-lisp:defun make-sub-resource-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key counters attack-vectors id type)
   (common-lisp:apply #'common-lisp:make-instance 'sub-resource-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sub-resource-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sub-resource-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-vectors))
      (common-lisp:list
       (common-lisp:cons "AttackVectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'counters))
      (common-lisp:list
       (common-lisp:cons "Counters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sub-resource-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sub-resource-summary-list ()
   '(trivial-types:proper-list sub-resource-summary))
 (common-lisp:defun |make-sub-resource-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sub-resource-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sub-resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass subscription common-lisp:nil
                       ((subscription-arn :initarg :subscription-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %subscription-subscription-arn :initform
                         common-lisp:nil)
                        (subscription-limits :initarg :subscription-limits
                         :type
                         (common-lisp:or subscription-limits common-lisp:null)
                         :accessor %subscription-subscription-limits :initform
                         (common-lisp:error
                          ":subscription-limits is required"))
                        (proactive-engagement-status :initarg
                         :proactive-engagement-status :type
                         (common-lisp:or proactive-engagement-status
                                         common-lisp:null)
                         :accessor %subscription-proactive-engagement-status
                         :initform common-lisp:nil)
                        (limits :initarg :limits :type
                         (common-lisp:or limits common-lisp:null) :accessor
                         %subscription-limits :initform common-lisp:nil)
                        (auto-renew :initarg :auto-renew :type
                         (common-lisp:or auto-renew common-lisp:null) :accessor
                         %subscription-auto-renew :initform common-lisp:nil)
                        (time-commitment-in-seconds :initarg
                         :time-commitment-in-seconds :type
                         (common-lisp:or duration-in-seconds common-lisp:null)
                         :accessor %subscription-time-commitment-in-seconds
                         :initform common-lisp:nil)
                        (end-time :initarg :end-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %subscription-end-time :initform common-lisp:nil)
                        (start-time :initarg :start-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %subscription-start-time :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'subscription 'make-subscription))
 (common-lisp:defun make-subscription
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key subscription-arn subscription-limits
                     proactive-engagement-status limits auto-renew
                     time-commitment-in-seconds end-time start-time)
   (common-lisp:apply #'common-lisp:make-instance 'subscription
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subscription))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subscription))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'time-commitment-in-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeCommitmentInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-renew))
      (common-lisp:list
       (common-lisp:cons "AutoRenew"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limits))
      (common-lisp:list
       (common-lisp:cons "Limits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'proactive-engagement-status))
      (common-lisp:list
       (common-lisp:cons "ProactiveEngagementStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-limits))
      (common-lisp:list
       (common-lisp:cons "SubscriptionLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subscription))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass subscription-limits common-lisp:nil
                       ((protection-group-limits :initarg
                         :protection-group-limits :type
                         (common-lisp:or protection-group-limits
                                         common-lisp:null)
                         :accessor %subscription-limits-protection-group-limits
                         :initform
                         (common-lisp:error
                          ":protection-group-limits is required"))
                        (protection-limits :initarg :protection-limits :type
                         (common-lisp:or protection-limits common-lisp:null)
                         :accessor %subscription-limits-protection-limits
                         :initform
                         (common-lisp:error
                          ":protection-limits is required"))))
 (common-lisp:export
  (common-lisp:list 'subscription-limits 'make-subscription-limits))
 (common-lisp:defun make-subscription-limits
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key protection-group-limits
                     protection-limits)
   (common-lisp:apply #'common-lisp:make-instance 'subscription-limits
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subscription-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subscription-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-limits))
      (common-lisp:list
       (common-lisp:cons "ProtectionLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'protection-group-limits))
      (common-lisp:list
       (common-lisp:cons "ProtectionGroupLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subscription-limits))
   common-lisp:nil))
(common-lisp:deftype subscription-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass summarized-attack-vector common-lisp:nil
                       ((vector-counters :initarg :vector-counters :type
                         (common-lisp:or summarized-counter-list
                                         common-lisp:null)
                         :accessor %summarized-attack-vector-vector-counters
                         :initform common-lisp:nil)
                        (vector-type :initarg :vector-type :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %summarized-attack-vector-vector-type :initform
                         (common-lisp:error ":vector-type is required"))))
 (common-lisp:export
  (common-lisp:list 'summarized-attack-vector 'make-summarized-attack-vector))
 (common-lisp:defun make-summarized-attack-vector
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vector-counters vector-type)
   (common-lisp:apply #'common-lisp:make-instance 'summarized-attack-vector
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          summarized-attack-vector))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          summarized-attack-vector))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vector-type))
      (common-lisp:list
       (common-lisp:cons "VectorType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vector-counters))
      (common-lisp:list
       (common-lisp:cons "VectorCounters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          summarized-attack-vector))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype summarized-attack-vector-list ()
   '(trivial-types:proper-list summarized-attack-vector))
 (common-lisp:defun |make-summarized-attack-vector-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            summarized-attack-vector))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass summarized-counter common-lisp:nil
                       ((unit :initarg :unit :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %summarized-counter-unit :initform common-lisp:nil)
                        (n :initarg :n :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %summarized-counter-n :initform common-lisp:nil)
                        (sum :initarg :sum :type
                         (common-lisp:or double common-lisp:null) :accessor
                         %summarized-counter-sum :initform common-lisp:nil)
                        (average :initarg :average :type
                         (common-lisp:or double common-lisp:null) :accessor
                         %summarized-counter-average :initform common-lisp:nil)
                        (max :initarg :max :type
                         (common-lisp:or double common-lisp:null) :accessor
                         %summarized-counter-max :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %summarized-counter-name :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'summarized-counter 'make-summarized-counter))
 (common-lisp:defun make-summarized-counter
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key unit n sum average max name)
   (common-lisp:apply #'common-lisp:make-instance 'summarized-counter
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input summarized-counter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input summarized-counter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max))
      (common-lisp:list
       (common-lisp:cons "Max"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'average))
      (common-lisp:list
       (common-lisp:cons "Average"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sum))
      (common-lisp:list
       (common-lisp:cons "Sum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'n))
      (common-lisp:list
       (common-lisp:cons "N"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input summarized-counter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype summarized-counter-list ()
   '(trivial-types:proper-list summarized-counter))
 (common-lisp:defun |make-summarized-counter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list summarized-counter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((value :initarg :value :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         %tag-value :initform common-lisp:nil)
                        (key :initarg :key :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         %tag-key :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defun make-tag
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value key)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %tag-resource-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defun make-tag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass time-range common-lisp:nil
                       ((to-exclusive :initarg :to-exclusive :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %time-range-to-exclusive :initform common-lisp:nil)
                        (from-inclusive :initarg :from-inclusive :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %time-range-from-inclusive :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'time-range 'make-time-range))
 (common-lisp:defun make-time-range
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key to-exclusive from-inclusive)
   (common-lisp:apply #'common-lisp:make-instance 'time-range
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input time-range))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input time-range))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-inclusive))
      (common-lisp:list
       (common-lisp:cons "FromInclusive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-exclusive))
      (common-lisp:list
       (common-lisp:cons "ToExclusive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input time-range))
   common-lisp:nil))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype top-contributors ()
   '(trivial-types:proper-list contributor))
 (common-lisp:defun |make-top-contributors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list contributor))
   aws-sdk/generator/shape::members))
(common-lisp:deftype unit () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :tag-keys :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tag-keys is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %untag-resource-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defun make-untag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-application-layer-automatic-response-request
                       common-lisp:nil
                       ((action :initarg :action :type
                         (common-lisp:or response-action common-lisp:null)
                         :accessor
                         %update-application-layer-automatic-response-request-action
                         :initform (common-lisp:error ":action is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         %update-application-layer-automatic-response-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'update-application-layer-automatic-response-request
                    'make-update-application-layer-automatic-response-request))
 (common-lisp:defun make-update-application-layer-automatic-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key action resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-application-layer-automatic-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-layer-automatic-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-layer-automatic-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-layer-automatic-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-application-layer-automatic-response-response
                       common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-application-layer-automatic-response-response
                    'make-update-application-layer-automatic-response-response))
 (common-lisp:defun make-update-application-layer-automatic-response-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-application-layer-automatic-response-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-layer-automatic-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-layer-automatic-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-layer-automatic-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-emergency-contact-settings-request
                       common-lisp:nil
                       ((emergency-contact-list :initarg
                         :emergency-contact-list :type
                         (common-lisp:or emergency-contact-list
                                         common-lisp:null)
                         :accessor
                         %update-emergency-contact-settings-request-emergency-contact-list
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-emergency-contact-settings-request
                    'make-update-emergency-contact-settings-request))
 (common-lisp:defun make-update-emergency-contact-settings-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key emergency-contact-list)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-emergency-contact-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-emergency-contact-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-emergency-contact-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-contact-list))
      (common-lisp:list
       (common-lisp:cons "EmergencyContactList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-emergency-contact-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-emergency-contact-settings-response
                       common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-emergency-contact-settings-response
                    'make-update-emergency-contact-settings-response))
 (common-lisp:defun make-update-emergency-contact-settings-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-emergency-contact-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-emergency-contact-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-emergency-contact-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-emergency-contact-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-protection-group-request common-lisp:nil
                       ((members :initarg :members :type
                         (common-lisp:or protection-group-members
                                         common-lisp:null)
                         :accessor %update-protection-group-request-members
                         :initform common-lisp:nil)
                        (resource-type :initarg :resource-type :type
                         (common-lisp:or protected-resource-type
                                         common-lisp:null)
                         :accessor
                         %update-protection-group-request-resource-type
                         :initform common-lisp:nil)
                        (pattern :initarg :pattern :type
                         (common-lisp:or protection-group-pattern
                                         common-lisp:null)
                         :accessor %update-protection-group-request-pattern
                         :initform (common-lisp:error ":pattern is required"))
                        (aggregation :initarg :aggregation :type
                         (common-lisp:or protection-group-aggregation
                                         common-lisp:null)
                         :accessor %update-protection-group-request-aggregation
                         :initform
                         (common-lisp:error ":aggregation is required"))
                        (protection-group-id :initarg :protection-group-id
                         :type
                         (common-lisp:or protection-group-id common-lisp:null)
                         :accessor
                         %update-protection-group-request-protection-group-id
                         :initform
                         (common-lisp:error
                          ":protection-group-id is required"))))
 (common-lisp:export
  (common-lisp:list 'update-protection-group-request
                    'make-update-protection-group-request))
 (common-lisp:defun make-update-protection-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key members resource-type pattern aggregation
                     protection-group-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-protection-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-protection-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-protection-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-group-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggregation))
      (common-lisp:list
       (common-lisp:cons "Aggregation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pattern))
      (common-lisp:list
       (common-lisp:cons "Pattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'members))
      (common-lisp:list
       (common-lisp:cons "Members"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-protection-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-protection-group-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-protection-group-response
                    'make-update-protection-group-response))
 (common-lisp:defun make-update-protection-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-protection-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-protection-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-protection-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-protection-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-subscription-request common-lisp:nil
                       ((auto-renew :initarg :auto-renew :type
                         (common-lisp:or auto-renew common-lisp:null) :accessor
                         %update-subscription-request-auto-renew :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-subscription-request
                    'make-update-subscription-request))
 (common-lisp:defun make-update-subscription-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key auto-renew)
   (common-lisp:apply #'common-lisp:make-instance 'update-subscription-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-subscription-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-renew))
      (common-lisp:list
       (common-lisp:cons "AutoRenew"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-subscription-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-subscription-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-subscription-response
                    'make-update-subscription-response))
 (common-lisp:defun make-update-subscription-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'update-subscription-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-subscription-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass validation-exception-field common-lisp:nil
                       ((message :initarg :|message| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %validation-exception-field-message :initform
                         (common-lisp:error ":message is required"))
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %validation-exception-field-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'validation-exception-field
                    'make-validation-exception-field))
 (common-lisp:defun make-validation-exception-field
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key message name)
   (common-lisp:apply #'common-lisp:make-instance 'validation-exception-field
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype validation-exception-field-list ()
   '(trivial-types:proper-list validation-exception-field))
 (common-lisp:defun |make-validation-exception-field-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            validation-exception-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype validation-exception-reason () 'common-lisp:string)
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun associate-drtlog-bucket
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-bucket)
   (common-lisp:declare (common-lisp:ignorable log-bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-drtlog-bucket-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "AssociateDRTLogBucket"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-drtlog-bucket))
(common-lisp:progn
 (common-lisp:defun associate-drtrole
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key role-arn)
   (common-lisp:declare (common-lisp:ignorable role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-drtrole-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "AssociateDRTRole"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-drtrole))
(common-lisp:progn
 (common-lisp:defun associate-health-check
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protection-id health-check-arn)
   (common-lisp:declare (common-lisp:ignorable protection-id health-check-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-health-check-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "AssociateHealthCheck"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-health-check))
(common-lisp:progn
 (common-lisp:defun associate-proactive-engagement-details
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key emergency-contact-list)
   (common-lisp:declare (common-lisp:ignorable emergency-contact-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-proactive-engagement-details-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "AssociateProactiveEngagementDetails"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-proactive-engagement-details))
(common-lisp:progn
 (common-lisp:defun create-protection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable name resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-protection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateProtection"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-protection))
(common-lisp:progn
 (common-lisp:defun create-protection-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protection-group-id aggregation pattern
                     resource-type members tags)
   (common-lisp:declare
    (common-lisp:ignorable protection-group-id aggregation pattern
     resource-type members tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-protection-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateProtectionGroup"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-protection-group))
(common-lisp:progn
 (common-lisp:defun create-subscription ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :protocol :json :operation "CreateSubscription"
                                :params
                                `(("Action" ,@"CreateSubscription")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'create-subscription))
(common-lisp:progn
 (common-lisp:defun delete-protection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protection-id)
   (common-lisp:declare (common-lisp:ignorable protection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-protection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteProtection"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-protection))
(common-lisp:progn
 (common-lisp:defun delete-protection-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protection-group-id)
   (common-lisp:declare (common-lisp:ignorable protection-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-protection-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteProtectionGroup"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-protection-group))
(common-lisp:progn
 (common-lisp:defun delete-subscription ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :protocol :json :operation "DeleteSubscription"
                                :params
                                `(("Action" ,@"DeleteSubscription")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'delete-subscription))
(common-lisp:progn
 (common-lisp:defun describe-attack
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attack-id)
   (common-lisp:declare (common-lisp:ignorable attack-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-attack-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeAttack"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-attack))
(common-lisp:progn
 (common-lisp:defun describe-attack-statistics ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :protocol :json :operation
                                "DescribeAttackStatistics" :params
                                `(("Action" ,@"DescribeAttackStatistics")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'describe-attack-statistics))
(common-lisp:progn
 (common-lisp:defun describe-drtaccess ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :protocol :json :operation "DescribeDRTAccess"
                                :params
                                `(("Action" ,@"DescribeDRTAccess")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'describe-drtaccess))
(common-lisp:progn
 (common-lisp:defun describe-emergency-contact-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :protocol :json :operation
                                "DescribeEmergencyContactSettings" :params
                                `(("Action"
                                   ,@"DescribeEmergencyContactSettings")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'describe-emergency-contact-settings))
(common-lisp:progn
 (common-lisp:defun describe-protection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protection-id resource-arn)
   (common-lisp:declare (common-lisp:ignorable protection-id resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-protection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeProtection"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-protection))
(common-lisp:progn
 (common-lisp:defun describe-protection-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protection-group-id)
   (common-lisp:declare (common-lisp:ignorable protection-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-protection-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeProtectionGroup"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-protection-group))
(common-lisp:progn
 (common-lisp:defun describe-subscription ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :protocol :json :operation
                                "DescribeSubscription" :params
                                `(("Action" ,@"DescribeSubscription")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'describe-subscription))
(common-lisp:progn
 (common-lisp:defun disable-application-layer-automatic-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disable-application-layer-automatic-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DisableApplicationLayerAutomaticResponse"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disable-application-layer-automatic-response))
(common-lisp:progn
 (common-lisp:defun disable-proactive-engagement ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :protocol :json :operation
                                "DisableProactiveEngagement" :params
                                `(("Action" ,@"DisableProactiveEngagement")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'disable-proactive-engagement))
(common-lisp:progn
 (common-lisp:defun disassociate-drtlog-bucket
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key log-bucket)
   (common-lisp:declare (common-lisp:ignorable log-bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-drtlog-bucket-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DisassociateDRTLogBucket"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-drtlog-bucket))
(common-lisp:progn
 (common-lisp:defun disassociate-drtrole ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :protocol :json :operation
                                "DisassociateDRTRole" :params
                                `(("Action" ,@"DisassociateDRTRole")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'disassociate-drtrole))
(common-lisp:progn
 (common-lisp:defun disassociate-health-check
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protection-id health-check-arn)
   (common-lisp:declare (common-lisp:ignorable protection-id health-check-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-health-check-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DisassociateHealthCheck"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-health-check))
(common-lisp:progn
 (common-lisp:defun enable-application-layer-automatic-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn action)
   (common-lisp:declare (common-lisp:ignorable resource-arn action))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-enable-application-layer-automatic-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "EnableApplicationLayerAutomaticResponse"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'enable-application-layer-automatic-response))
(common-lisp:progn
 (common-lisp:defun enable-proactive-engagement ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :protocol :json :operation
                                "EnableProactiveEngagement" :params
                                `(("Action" ,@"EnableProactiveEngagement")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'enable-proactive-engagement))
(common-lisp:progn
 (common-lisp:defun get-subscription-state ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :protocol :json :operation
                                "GetSubscriptionState" :params
                                `(("Action" ,@"GetSubscriptionState")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-subscription-state))
(common-lisp:progn
 (common-lisp:defun list-attacks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arns start-time end-time
                     next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-arns start-time end-time next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-attacks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListAttacks"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-attacks))
(common-lisp:progn
 (common-lisp:defun list-protection-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results inclusion-filters)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results inclusion-filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-protection-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListProtectionGroups"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-protection-groups))
(common-lisp:progn
 (common-lisp:defun list-protections
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results inclusion-filters)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results inclusion-filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-protections-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListProtections"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-protections))
(common-lisp:progn
 (common-lisp:defun list-resources-in-protection-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protection-group-id next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable protection-group-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-resources-in-protection-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListResourcesInProtectionGroup"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-resources-in-protection-group))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListTagsForResource"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "TagResource"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UntagResource"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-application-layer-automatic-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn action)
   (common-lisp:declare (common-lisp:ignorable resource-arn action))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-application-layer-automatic-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateApplicationLayerAutomaticResponse"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-application-layer-automatic-response))
(common-lisp:progn
 (common-lisp:defun update-emergency-contact-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key emergency-contact-list)
   (common-lisp:declare (common-lisp:ignorable emergency-contact-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-emergency-contact-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateEmergencyContactSettings"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-emergency-contact-settings))
(common-lisp:progn
 (common-lisp:defun update-protection-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protection-group-id aggregation pattern
                     resource-type members)
   (common-lisp:declare
    (common-lisp:ignorable protection-group-id aggregation pattern
     resource-type members))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-protection-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateProtectionGroup"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-protection-group))
(common-lisp:progn
 (common-lisp:defun update-subscription
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-renew)
   (common-lisp:declare (common-lisp:ignorable auto-renew))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-subscription-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateSubscription"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-subscription))
