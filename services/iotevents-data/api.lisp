;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/iotevents-data/api
  (:use)
  (:nicknames #:aws/iotevents-data)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/iotevents-data/api)
(common-lisp:progn
 (common-lisp:define-condition iotevents-data-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'iotevents-data-error))
(common-lisp:progn
 (common-lisp:defclass iotevents-data-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "iotevents-data"
                        :api-version "2018-10-23" :host-prefix "data.iotevents"
                        :signing-name "ioteventsdata" :global-host
                        common-lisp:nil))
 (common-lisp:export 'iotevents-data-request))
(common-lisp:defvar *error-map*
  '(("InternalFailureException" . internal-failure-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottlingException" . throttling-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (acknowledge-action-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-acknowledge-action-configuration-"))
   (note common-lisp:nil :type (common-lisp:or note common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'acknowledge-action-configuration
                    'make-acknowledge-action-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          acknowledge-action-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          acknowledge-action-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'note))
      (common-lisp:list
       (common-lisp:cons "note"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          acknowledge-action-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (acknowledge-alarm-action-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-acknowledge-alarm-action-request-"))
   (request-id (common-lisp:error ":requestid is required") :type
    (common-lisp:or request-id common-lisp:null))
   (alarm-model-name (common-lisp:error ":alarmmodelname is required") :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null))
   (note common-lisp:nil :type (common-lisp:or note common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'acknowledge-alarm-action-request
                    'make-acknowledge-alarm-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          acknowledge-alarm-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          acknowledge-alarm-action-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "requestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'note))
      (common-lisp:list
       (common-lisp:cons "note"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          acknowledge-alarm-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype acknowledge-alarm-action-requests ()
   '(trivial-types:proper-list acknowledge-alarm-action-request))
 (common-lisp:defun make-acknowledge-alarm-action-requests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            acknowledge-alarm-action-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (alarm (:copier common-lisp:nil) (:conc-name "struct-shape-alarm-"))
   (alarm-model-name common-lisp:nil :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (alarm-model-version common-lisp:nil :type
    (common-lisp:or alarm-model-version common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null))
   (alarm-state common-lisp:nil :type
    (common-lisp:or alarm-state common-lisp:null))
   (severity common-lisp:nil :type (common-lisp:or severity common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alarm 'make-alarm))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-version))
      (common-lisp:list
       (common-lisp:cons "alarmModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-state))
      (common-lisp:list
       (common-lisp:cons "alarmState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'severity))
      (common-lisp:list
       (common-lisp:cons "severity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm))
   common-lisp:nil))
(common-lisp:deftype alarm-model-name () 'common-lisp:string)
(common-lisp:deftype alarm-model-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (alarm-state (:copier common-lisp:nil)
      (:conc-name "struct-shape-alarm-state-"))
   (state-name common-lisp:nil :type
    (common-lisp:or alarm-state-name common-lisp:null))
   (rule-evaluation common-lisp:nil :type
    (common-lisp:or rule-evaluation common-lisp:null))
   (customer-action common-lisp:nil :type
    (common-lisp:or customer-action common-lisp:null))
   (system-event common-lisp:nil :type
    (common-lisp:or system-event common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alarm-state 'make-alarm-state))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-state))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-state))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-name))
      (common-lisp:list
       (common-lisp:cons "stateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-evaluation))
      (common-lisp:list
       (common-lisp:cons "ruleEvaluation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customer-action))
      (common-lisp:list
       (common-lisp:cons "customerAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'system-event))
      (common-lisp:list
       (common-lisp:cons "systemEvent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-state))
   common-lisp:nil))
(common-lisp:deftype alarm-state-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype alarm-summaries ()
   '(trivial-types:proper-list alarm-summary))
 (common-lisp:defun make-alarm-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alarm-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (alarm-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-alarm-summary-"))
   (alarm-model-name common-lisp:nil :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (alarm-model-version common-lisp:nil :type
    (common-lisp:or alarm-model-version common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null))
   (state-name common-lisp:nil :type
    (common-lisp:or alarm-state-name common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alarm-summary 'make-alarm-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-version))
      (common-lisp:list
       (common-lisp:cons "alarmModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-name))
      (common-lisp:list
       (common-lisp:cons "stateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-acknowledge-alarm-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-acknowledge-alarm-request-"))
   (acknowledge-action-requests
    (common-lisp:error ":acknowledgeactionrequests is required") :type
    (common-lisp:or acknowledge-alarm-action-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-acknowledge-alarm-request
                    'make-batch-acknowledge-alarm-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-acknowledge-alarm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-acknowledge-alarm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'acknowledge-action-requests))
      (common-lisp:list
       (common-lisp:cons "acknowledgeActionRequests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-acknowledge-alarm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-acknowledge-alarm-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-acknowledge-alarm-response-"))
   (error-entries common-lisp:nil :type
    (common-lisp:or batch-alarm-action-error-entries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-acknowledge-alarm-response
                    'make-batch-acknowledge-alarm-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-acknowledge-alarm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-acknowledge-alarm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-entries))
      (common-lisp:list
       (common-lisp:cons "errorEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-acknowledge-alarm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-alarm-action-error-entries ()
   '(trivial-types:proper-list batch-alarm-action-error-entry))
 (common-lisp:defun make-batch-alarm-action-error-entries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-alarm-action-error-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-alarm-action-error-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-alarm-action-error-entry-"))
   (request-id common-lisp:nil :type
    (common-lisp:or request-id common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-alarm-action-error-entry
                    'make-batch-alarm-action-error-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-alarm-action-error-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-alarm-action-error-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "requestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-alarm-action-error-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-delete-detector-error-entries ()
   '(trivial-types:proper-list batch-delete-detector-error-entry))
 (common-lisp:defun make-batch-delete-detector-error-entries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-delete-detector-error-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-delete-detector-error-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-delete-detector-error-entry-"))
   (message-id common-lisp:nil :type
    (common-lisp:or message-id common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-delete-detector-error-entry
                    'make-batch-delete-detector-error-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-detector-error-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-detector-error-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "messageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-detector-error-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-delete-detector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-delete-detector-request-"))
   (detectors (common-lisp:error ":detectors is required") :type
    (common-lisp:or delete-detector-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-delete-detector-request
                    'make-batch-delete-detector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-detector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detectors))
      (common-lisp:list
       (common-lisp:cons "detectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-detector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-delete-detector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-delete-detector-response-"))
   (batch-delete-detector-error-entries common-lisp:nil :type
    (common-lisp:or batch-delete-detector-error-entries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-delete-detector-response
                    'make-batch-delete-detector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-detector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'batch-delete-detector-error-entries))
      (common-lisp:list
       (common-lisp:cons "batchDeleteDetectorErrorEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-detector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-disable-alarm-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-disable-alarm-request-"))
   (disable-action-requests
    (common-lisp:error ":disableactionrequests is required") :type
    (common-lisp:or disable-alarm-action-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-disable-alarm-request
                    'make-batch-disable-alarm-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-disable-alarm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-disable-alarm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-action-requests))
      (common-lisp:list
       (common-lisp:cons "disableActionRequests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-disable-alarm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-disable-alarm-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-disable-alarm-response-"))
   (error-entries common-lisp:nil :type
    (common-lisp:or batch-alarm-action-error-entries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-disable-alarm-response
                    'make-batch-disable-alarm-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-disable-alarm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-disable-alarm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-entries))
      (common-lisp:list
       (common-lisp:cons "errorEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-disable-alarm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-enable-alarm-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-enable-alarm-request-"))
   (enable-action-requests
    (common-lisp:error ":enableactionrequests is required") :type
    (common-lisp:or enable-alarm-action-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-enable-alarm-request
                    'make-batch-enable-alarm-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-enable-alarm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-enable-alarm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-action-requests))
      (common-lisp:list
       (common-lisp:cons "enableActionRequests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-enable-alarm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-enable-alarm-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-enable-alarm-response-"))
   (error-entries common-lisp:nil :type
    (common-lisp:or batch-alarm-action-error-entries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-enable-alarm-response
                    'make-batch-enable-alarm-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-enable-alarm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-enable-alarm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-entries))
      (common-lisp:list
       (common-lisp:cons "errorEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-enable-alarm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-put-message-error-entries ()
   '(trivial-types:proper-list batch-put-message-error-entry))
 (common-lisp:defun make-batch-put-message-error-entries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-put-message-error-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-put-message-error-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-put-message-error-entry-"))
   (message-id common-lisp:nil :type
    (common-lisp:or message-id common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-put-message-error-entry
                    'make-batch-put-message-error-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-put-message-error-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-put-message-error-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "messageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-put-message-error-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-put-message-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-put-message-request-"))
   (messages (common-lisp:error ":messages is required") :type
    (common-lisp:or messages common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-put-message-request
                    'make-batch-put-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-put-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-put-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages))
      (common-lisp:list
       (common-lisp:cons "messages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-put-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-put-message-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-put-message-response-"))
   (batch-put-message-error-entries common-lisp:nil :type
    (common-lisp:or batch-put-message-error-entries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-put-message-response
                    'make-batch-put-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-put-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-put-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'batch-put-message-error-entries))
      (common-lisp:list
       (common-lisp:cons "BatchPutMessageErrorEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-put-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-reset-alarm-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-reset-alarm-request-"))
   (reset-action-requests
    (common-lisp:error ":resetactionrequests is required") :type
    (common-lisp:or reset-alarm-action-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-reset-alarm-request
                    'make-batch-reset-alarm-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-reset-alarm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-reset-alarm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reset-action-requests))
      (common-lisp:list
       (common-lisp:cons "resetActionRequests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-reset-alarm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-reset-alarm-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-reset-alarm-response-"))
   (error-entries common-lisp:nil :type
    (common-lisp:or batch-alarm-action-error-entries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-reset-alarm-response
                    'make-batch-reset-alarm-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-reset-alarm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-reset-alarm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-entries))
      (common-lisp:list
       (common-lisp:cons "errorEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-reset-alarm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-snooze-alarm-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-snooze-alarm-request-"))
   (snooze-action-requests
    (common-lisp:error ":snoozeactionrequests is required") :type
    (common-lisp:or snooze-alarm-action-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-snooze-alarm-request
                    'make-batch-snooze-alarm-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-snooze-alarm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-snooze-alarm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snooze-action-requests))
      (common-lisp:list
       (common-lisp:cons "snoozeActionRequests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-snooze-alarm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-snooze-alarm-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-snooze-alarm-response-"))
   (error-entries common-lisp:nil :type
    (common-lisp:or batch-alarm-action-error-entries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-snooze-alarm-response
                    'make-batch-snooze-alarm-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-snooze-alarm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-snooze-alarm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-entries))
      (common-lisp:list
       (common-lisp:cons "errorEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-snooze-alarm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-update-detector-error-entries ()
   '(trivial-types:proper-list batch-update-detector-error-entry))
 (common-lisp:defun make-batch-update-detector-error-entries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-update-detector-error-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-update-detector-error-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-update-detector-error-entry-"))
   (message-id common-lisp:nil :type
    (common-lisp:or message-id common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-update-detector-error-entry
                    'make-batch-update-detector-error-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-detector-error-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-detector-error-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "messageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-detector-error-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-update-detector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-update-detector-request-"))
   (detectors (common-lisp:error ":detectors is required") :type
    (common-lisp:or update-detector-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-update-detector-request
                    'make-batch-update-detector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-detector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detectors))
      (common-lisp:list
       (common-lisp:cons "detectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-detector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-update-detector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-batch-update-detector-response-"))
   (batch-update-detector-error-entries common-lisp:nil :type
    (common-lisp:or batch-update-detector-error-entries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-update-detector-response
                    'make-batch-update-detector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-detector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'batch-update-detector-error-entries))
      (common-lisp:list
       (common-lisp:cons "batchUpdateDetectorErrorEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-detector-response))
   common-lisp:nil))
(common-lisp:deftype comparison-operator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (customer-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-customer-action-"))
   (action-name common-lisp:nil :type
    (common-lisp:or customer-action-name common-lisp:null))
   (snooze-action-configuration common-lisp:nil :type
    (common-lisp:or snooze-action-configuration common-lisp:null))
   (enable-action-configuration common-lisp:nil :type
    (common-lisp:or enable-action-configuration common-lisp:null))
   (disable-action-configuration common-lisp:nil :type
    (common-lisp:or disable-action-configuration common-lisp:null))
   (acknowledge-action-configuration common-lisp:nil :type
    (common-lisp:or acknowledge-action-configuration common-lisp:null))
   (reset-action-configuration common-lisp:nil :type
    (common-lisp:or reset-action-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'customer-action 'make-customer-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input customer-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input customer-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-name))
      (common-lisp:list
       (common-lisp:cons "actionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snooze-action-configuration))
      (common-lisp:list
       (common-lisp:cons "snoozeActionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-action-configuration))
      (common-lisp:list
       (common-lisp:cons "enableActionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-action-configuration))
      (common-lisp:list
       (common-lisp:cons "disableActionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'acknowledge-action-configuration))
      (common-lisp:list
       (common-lisp:cons "acknowledgeActionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reset-action-configuration))
      (common-lisp:list
       (common-lisp:cons "resetActionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input customer-action))
   common-lisp:nil))
(common-lisp:deftype customer-action-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-detector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-detector-request-"))
   (message-id (common-lisp:error ":messageid is required") :type
    (common-lisp:or message-id common-lisp:null))
   (detector-model-name (common-lisp:error ":detectormodelname is required")
    :type (common-lisp:or detector-model-name common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-detector-request 'make-delete-detector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "messageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype delete-detector-requests ()
   '(trivial-types:proper-list delete-detector-request))
 (common-lisp:defun make-delete-detector-requests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list delete-detector-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-alarm-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-alarm-request-"))
   (alarm-model-name (common-lisp:error ":alarmmodelname is required") :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alarm-request 'make-describe-alarm-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-alarm-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-alarm-response-"))
   (alarm common-lisp:nil :type (common-lisp:or alarm common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alarm-response 'make-describe-alarm-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm))
      (common-lisp:list
       (common-lisp:cons "alarm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-detector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-detector-request-"))
   (detector-model-name (common-lisp:error ":detectormodelname is required")
    :type (common-lisp:or detector-model-name common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-detector-request
                    'make-describe-detector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-detector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-detector-response-"))
   (detector common-lisp:nil :type (common-lisp:or detector common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-detector-response
                    'make-describe-detector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector))
      (common-lisp:list
       (common-lisp:cons "detector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detector (:copier common-lisp:nil) (:conc-name "struct-shape-detector-"))
   (detector-model-name common-lisp:nil :type
    (common-lisp:or detector-model-name common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null))
   (detector-model-version common-lisp:nil :type
    (common-lisp:or detector-model-version common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or detector-state common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'detector 'make-detector))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input detector))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input detector))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-version))
      (common-lisp:list
       (common-lisp:cons "detectorModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input detector))
   common-lisp:nil))
(common-lisp:deftype detector-model-name () 'common-lisp:string)
(common-lisp:deftype detector-model-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (detector-state (:copier common-lisp:nil)
      (:conc-name "struct-shape-detector-state-"))
   (state-name (common-lisp:error ":statename is required") :type
    (common-lisp:or state-name common-lisp:null))
   (variables (common-lisp:error ":variables is required") :type
    (common-lisp:or variables common-lisp:null))
   (timers (common-lisp:error ":timers is required") :type
    (common-lisp:or timers common-lisp:null)))
 (common-lisp:export (common-lisp:list 'detector-state 'make-detector-state))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input detector-state))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input detector-state))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-name))
      (common-lisp:list
       (common-lisp:cons "stateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variables))
      (common-lisp:list
       (common-lisp:cons "variables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timers))
      (common-lisp:list
       (common-lisp:cons "timers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input detector-state))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detector-state-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-detector-state-definition-"))
   (state-name (common-lisp:error ":statename is required") :type
    (common-lisp:or state-name common-lisp:null))
   (variables (common-lisp:error ":variables is required") :type
    (common-lisp:or variable-definitions common-lisp:null))
   (timers (common-lisp:error ":timers is required") :type
    (common-lisp:or timer-definitions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detector-state-definition
                    'make-detector-state-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detector-state-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detector-state-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-name))
      (common-lisp:list
       (common-lisp:cons "stateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variables))
      (common-lisp:list
       (common-lisp:cons "variables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timers))
      (common-lisp:list
       (common-lisp:cons "timers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detector-state-definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detector-state-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-detector-state-summary-"))
   (state-name common-lisp:nil :type
    (common-lisp:or state-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detector-state-summary 'make-detector-state-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detector-state-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detector-state-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-name))
      (common-lisp:list
       (common-lisp:cons "stateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detector-state-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype detector-summaries ()
   '(trivial-types:proper-list detector-summary))
 (common-lisp:defun make-detector-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list detector-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (detector-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-detector-summary-"))
   (detector-model-name common-lisp:nil :type
    (common-lisp:or detector-model-name common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null))
   (detector-model-version common-lisp:nil :type
    (common-lisp:or detector-model-version common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or detector-state-summary common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detector-summary 'make-detector-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input detector-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input detector-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-version))
      (common-lisp:list
       (common-lisp:cons "detectorModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input detector-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disable-action-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-disable-action-configuration-"))
   (note common-lisp:nil :type (common-lisp:or note common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-action-configuration
                    'make-disable-action-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-action-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-action-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'note))
      (common-lisp:list
       (common-lisp:cons "note"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-action-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disable-alarm-action-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-disable-alarm-action-request-"))
   (request-id (common-lisp:error ":requestid is required") :type
    (common-lisp:or request-id common-lisp:null))
   (alarm-model-name (common-lisp:error ":alarmmodelname is required") :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null))
   (note common-lisp:nil :type (common-lisp:or note common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-alarm-action-request
                    'make-disable-alarm-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-alarm-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-alarm-action-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "requestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'note))
      (common-lisp:list
       (common-lisp:cons "note"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-alarm-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype disable-alarm-action-requests ()
   '(trivial-types:proper-list disable-alarm-action-request))
 (common-lisp:defun make-disable-alarm-action-requests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            disable-alarm-action-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (enable-action-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-enable-action-configuration-"))
   (note common-lisp:nil :type (common-lisp:or note common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-action-configuration
                    'make-enable-action-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-action-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-action-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'note))
      (common-lisp:list
       (common-lisp:cons "note"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-action-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (enable-alarm-action-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-enable-alarm-action-request-"))
   (request-id (common-lisp:error ":requestid is required") :type
    (common-lisp:or request-id common-lisp:null))
   (alarm-model-name (common-lisp:error ":alarmmodelname is required") :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null))
   (note common-lisp:nil :type (common-lisp:or note common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-alarm-action-request
                    'make-enable-alarm-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-alarm-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-alarm-action-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "requestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'note))
      (common-lisp:list
       (common-lisp:cons "note"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-alarm-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype enable-alarm-action-requests ()
   '(trivial-types:proper-list enable-alarm-action-request))
 (common-lisp:defun make-enable-alarm-action-requests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            enable-alarm-action-request))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ephemeral-input-name () 'common-lisp:string)
(common-lisp:deftype epoch-milli-timestamp () 'common-lisp:integer)
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:deftype input-property-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-failure-exception
     (iotevents-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-failure-exception
                    'internal-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (iotevents-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message)))
(common-lisp:deftype key-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-alarms-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-alarms-request-"))
   (alarm-model-name (common-lisp:error ":alarmmodelname is required") :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-alarms-request 'make-list-alarms-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-alarms-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-alarms-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-alarms-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-alarms-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-alarms-response-"))
   (alarm-summaries common-lisp:nil :type
    (common-lisp:or alarm-summaries common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-alarms-response 'make-list-alarms-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-alarms-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-alarms-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-summaries))
      (common-lisp:list
       (common-lisp:cons "alarmSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-alarms-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-detectors-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-detectors-request-"))
   (detector-model-name (common-lisp:error ":detectormodelname is required")
    :type (common-lisp:or detector-model-name common-lisp:null))
   (state-name common-lisp:nil :type
    (common-lisp:or state-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-detectors-request 'make-list-detectors-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-detectors-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-detectors-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-detectors-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-detectors-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-detectors-response-"))
   (detector-summaries common-lisp:nil :type
    (common-lisp:or detector-summaries common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-detectors-response 'make-list-detectors-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-detectors-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-detectors-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-summaries))
      (common-lisp:list
       (common-lisp:cons "detectorSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-detectors-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (message (:copier common-lisp:nil) (:conc-name "struct-shape-message-"))
   (message-id (common-lisp:error ":messageid is required") :type
    (common-lisp:or message-id common-lisp:null))
   (input-name (common-lisp:error ":inputname is required") :type
    (common-lisp:or ephemeral-input-name common-lisp:null))
   (payload (common-lisp:error ":payload is required") :type
    (common-lisp:or payload common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "messageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-name))
      (common-lisp:list
       (common-lisp:cons "inputName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message))
   common-lisp:nil))
(common-lisp:deftype message-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype messages () '(trivial-types:proper-list message))
 (common-lisp:defun make-messages
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list message))
   aws-sdk/generator/shape::members))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype note () 'common-lisp:string)
(common-lisp:deftype payload ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype request-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (reset-action-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-reset-action-configuration-"))
   (note common-lisp:nil :type (common-lisp:or note common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reset-action-configuration
                    'make-reset-action-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-action-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-action-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'note))
      (common-lisp:list
       (common-lisp:cons "note"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-action-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reset-alarm-action-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-reset-alarm-action-request-"))
   (request-id (common-lisp:error ":requestid is required") :type
    (common-lisp:or request-id common-lisp:null))
   (alarm-model-name (common-lisp:error ":alarmmodelname is required") :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null))
   (note common-lisp:nil :type (common-lisp:or note common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reset-alarm-action-request
                    'make-reset-alarm-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-alarm-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-alarm-action-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "requestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'note))
      (common-lisp:list
       (common-lisp:cons "note"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-alarm-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype reset-alarm-action-requests ()
   '(trivial-types:proper-list reset-alarm-action-request))
 (common-lisp:defun make-reset-alarm-action-requests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            reset-alarm-action-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (iotevents-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (rule-evaluation (:copier common-lisp:nil)
      (:conc-name "struct-shape-rule-evaluation-"))
   (simple-rule-evaluation common-lisp:nil :type
    (common-lisp:or simple-rule-evaluation common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule-evaluation 'make-rule-evaluation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule-evaluation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule-evaluation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'simple-rule-evaluation))
      (common-lisp:list
       (common-lisp:cons "simpleRuleEvaluation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule-evaluation))
   common-lisp:nil))
(common-lisp:deftype seconds () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (iotevents-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:deftype severity () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (simple-rule-evaluation (:copier common-lisp:nil)
      (:conc-name "struct-shape-simple-rule-evaluation-"))
   (input-property-value common-lisp:nil :type
    (common-lisp:or input-property-value common-lisp:null))
   (operator common-lisp:nil :type
    (common-lisp:or comparison-operator common-lisp:null))
   (threshold-value common-lisp:nil :type
    (common-lisp:or threshold-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'simple-rule-evaluation 'make-simple-rule-evaluation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          simple-rule-evaluation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          simple-rule-evaluation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'input-property-value))
      (common-lisp:list
       (common-lisp:cons "inputPropertyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operator))
      (common-lisp:list
       (common-lisp:cons "operator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'threshold-value))
      (common-lisp:list
       (common-lisp:cons "thresholdValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          simple-rule-evaluation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (snooze-action-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-snooze-action-configuration-"))
   (snooze-duration common-lisp:nil :type
    (common-lisp:or snooze-duration common-lisp:null))
   (note common-lisp:nil :type (common-lisp:or note common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'snooze-action-configuration
                    'make-snooze-action-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          snooze-action-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          snooze-action-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snooze-duration))
      (common-lisp:list
       (common-lisp:cons "snoozeDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'note))
      (common-lisp:list
       (common-lisp:cons "note"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          snooze-action-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (snooze-alarm-action-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-snooze-alarm-action-request-"))
   (request-id (common-lisp:error ":requestid is required") :type
    (common-lisp:or request-id common-lisp:null))
   (alarm-model-name (common-lisp:error ":alarmmodelname is required") :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null))
   (note common-lisp:nil :type (common-lisp:or note common-lisp:null))
   (snooze-duration (common-lisp:error ":snoozeduration is required") :type
    (common-lisp:or snooze-duration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'snooze-alarm-action-request
                    'make-snooze-alarm-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          snooze-alarm-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          snooze-alarm-action-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "requestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'note))
      (common-lisp:list
       (common-lisp:cons "note"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snooze-duration))
      (common-lisp:list
       (common-lisp:cons "snoozeDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          snooze-alarm-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype snooze-alarm-action-requests ()
   '(trivial-types:proper-list snooze-alarm-action-request))
 (common-lisp:defun make-snooze-alarm-action-requests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            snooze-alarm-action-request))
   aws-sdk/generator/shape::members))
(common-lisp:deftype snooze-duration () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (state-change-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-state-change-configuration-"))
   (trigger-type common-lisp:nil :type
    (common-lisp:or trigger-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'state-change-configuration
                    'make-state-change-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          state-change-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          state-change-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-type))
      (common-lisp:list
       (common-lisp:cons "triggerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          state-change-configuration))
   common-lisp:nil))
(common-lisp:deftype state-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (system-event (:copier common-lisp:nil)
      (:conc-name "struct-shape-system-event-"))
   (event-type common-lisp:nil :type
    (common-lisp:or event-type common-lisp:null))
   (state-change-configuration common-lisp:nil :type
    (common-lisp:or state-change-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'system-event 'make-system-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input system-event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input system-event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type))
      (common-lisp:list
       (common-lisp:cons "eventType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'state-change-configuration))
      (common-lisp:list
       (common-lisp:cons "stateChangeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input system-event))
   common-lisp:nil))
(common-lisp:deftype threshold-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (iotevents-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (timer (:copier common-lisp:nil) (:conc-name "struct-shape-timer-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or timer-name common-lisp:null))
   (timestamp (common-lisp:error ":string is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'timer 'make-timer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input timer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input timer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input timer))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (timer-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-timer-definition-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or timer-name common-lisp:null))
   (seconds (common-lisp:error ":seconds is required") :type
    (common-lisp:or seconds common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'timer-definition 'make-timer-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input timer-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input timer-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'seconds))
      (common-lisp:list
       (common-lisp:cons "seconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input timer-definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype timer-definitions ()
   '(trivial-types:proper-list timer-definition))
 (common-lisp:defun make-timer-definitions
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list timer-definition))
   aws-sdk/generator/shape::members))
(common-lisp:deftype timer-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype timers () '(trivial-types:proper-list timer))
 (common-lisp:defun make-timers
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list timer))
   aws-sdk/generator/shape::members))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (timestamp-value (:copier common-lisp:nil)
      (:conc-name "struct-shape-timestamp-value-"))
   (time-in-millis common-lisp:nil :type
    (common-lisp:or epoch-milli-timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'timestamp-value 'make-timestamp-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input timestamp-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input timestamp-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-in-millis))
      (common-lisp:list
       (common-lisp:cons "timeInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input timestamp-value))
   common-lisp:nil))
(common-lisp:deftype trigger-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-detector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-detector-request-"))
   (message-id (common-lisp:error ":messageid is required") :type
    (common-lisp:or message-id common-lisp:null))
   (detector-model-name (common-lisp:error ":detectormodelname is required")
    :type (common-lisp:or detector-model-name common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null))
   (state (common-lisp:error ":state is required") :type
    (common-lisp:or detector-state-definition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-detector-request 'make-update-detector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "messageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype update-detector-requests ()
   '(trivial-types:proper-list update-detector-request))
 (common-lisp:defun make-update-detector-requests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list update-detector-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (variable (:copier common-lisp:nil) (:conc-name "struct-shape-variable-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or variable-name common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or variable-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'variable 'make-variable))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input variable))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input variable))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input variable))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (variable-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-variable-definition-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or variable-name common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or variable-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'variable-definition 'make-variable-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input variable-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input variable-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input variable-definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype variable-definitions ()
   '(trivial-types:proper-list variable-definition))
 (common-lisp:defun make-variable-definitions
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list variable-definition))
   aws-sdk/generator/shape::members))
(common-lisp:deftype variable-name () 'common-lisp:string)
(common-lisp:deftype variable-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype variables () '(trivial-types:proper-list variable))
 (common-lisp:defun make-variables
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list variable))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun batch-acknowledge-alarm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key acknowledge-action-requests)
   (common-lisp:declare (common-lisp:ignorable acknowledge-action-requests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-acknowledge-alarm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/alarms/acknowledge"
                                                        "BatchAcknowledgeAlarm"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-acknowledge-alarm))
(common-lisp:progn
 (common-lisp:defun batch-delete-detector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detectors)
   (common-lisp:declare (common-lisp:ignorable detectors))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-delete-detector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/detectors/delete"
                                                        "BatchDeleteDetector"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-delete-detector))
(common-lisp:progn
 (common-lisp:defun batch-disable-alarm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key disable-action-requests)
   (common-lisp:declare (common-lisp:ignorable disable-action-requests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-disable-alarm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/alarms/disable"
                                                        "BatchDisableAlarm"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-disable-alarm))
(common-lisp:progn
 (common-lisp:defun batch-enable-alarm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key enable-action-requests)
   (common-lisp:declare (common-lisp:ignorable enable-action-requests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-enable-alarm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/alarms/enable"
                                                        "BatchEnableAlarm"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-enable-alarm))
(common-lisp:progn
 (common-lisp:defun batch-put-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key messages)
   (common-lisp:declare (common-lisp:ignorable messages))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-put-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/inputs/messages"
                                                        "BatchPutMessage"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-put-message))
(common-lisp:progn
 (common-lisp:defun batch-reset-alarm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key reset-action-requests)
   (common-lisp:declare (common-lisp:ignorable reset-action-requests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-reset-alarm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/alarms/reset"
                                                        "BatchResetAlarm"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-reset-alarm))
(common-lisp:progn
 (common-lisp:defun batch-snooze-alarm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key snooze-action-requests)
   (common-lisp:declare (common-lisp:ignorable snooze-action-requests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-snooze-alarm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/alarms/snooze"
                                                        "BatchSnoozeAlarm"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-snooze-alarm))
(common-lisp:progn
 (common-lisp:defun batch-update-detector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detectors)
   (common-lisp:declare (common-lisp:ignorable detectors))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-update-detector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/detectors"
                                                        "BatchUpdateDetector"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-update-detector))
(common-lisp:progn
 (common-lisp:defun describe-alarm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-model-name key-value)
   (common-lisp:declare (common-lisp:ignorable alarm-model-name key-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-alarm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/alarms/~A/keyValues/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alarm-model-name))))
                                                        "DescribeAlarm"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-alarm))
(common-lisp:progn
 (common-lisp:defun describe-detector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-name key-value)
   (common-lisp:declare (common-lisp:ignorable detector-model-name key-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-detector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/detectors/~A/keyValues/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'detector-model-name))))
                                                        "DescribeDetector"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-detector))
(common-lisp:progn
 (common-lisp:defun list-alarms
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-model-name next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable alarm-model-name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-alarms-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/alarms/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alarm-model-name))))
                                                        "ListAlarms"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-alarms))
(common-lisp:progn
 (common-lisp:defun list-detectors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-name state-name next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable detector-model-name state-name next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-detectors-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/detectors/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'detector-model-name))))
                                                        "ListDetectors"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-detectors))
