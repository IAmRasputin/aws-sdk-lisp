;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/backup/api
  (:use)
  (:nicknames #:aws/backup)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/backup/api)
(common-lisp:progn
 (common-lisp:defclass backup-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "backup"))
 (common-lisp:export 'backup-request))
(common-lisp:progn
 (common-lisp:define-condition backup-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'backup-error))
(common-lisp:defvar *error-map*
  '(("AlreadyExistsException" . already-exists-exception)
    ("ConflictException" . conflict-exception)
    ("DependencyFailureException" . dependency-failure-exception)
    ("InvalidParameterValueException" . invalid-parameter-value-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("InvalidResourceStateException" . invalid-resource-state-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("MissingParameterValueException" . missing-parameter-value-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (advanced-backup-setting (:copier common-lisp:nil)
      (:conc-name "struct-shape-advanced-backup-setting-"))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (backup-options common-lisp:nil :type
    (common-lisp:or backup-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'advanced-backup-setting 'make-advanced-backup-setting))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          advanced-backup-setting))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          advanced-backup-setting))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-options))
      (common-lisp:list
       (common-lisp:cons "BackupOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          advanced-backup-setting))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype advanced-backup-settings ()
   '(trivial-types:proper-list advanced-backup-setting))
 (common-lisp:defun |make-advanced-backup-settings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list advanced-backup-setting))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition already-exists-exception
     (backup-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       already-exists-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       already-exists-exception-message)
      (creator-request-id :initarg :creator-request-id :initform
       common-lisp:nil :reader already-exists-exception-creator-request-id)
      (arn :initarg :arn :initform common-lisp:nil :reader
       already-exists-exception-arn)
      (type :initarg :type :initform common-lisp:nil :reader
       already-exists-exception-type)
      (context :initarg :context :initform common-lisp:nil :reader
       already-exists-exception-context)))
 (common-lisp:export
  (common-lisp:list 'already-exists-exception 'already-exists-exception-code
                    'already-exists-exception-message
                    'already-exists-exception-creator-request-id
                    'already-exists-exception-arn
                    'already-exists-exception-type
                    'already-exists-exception-context)))
(common-lisp:progn
 (common-lisp:defstruct
     (backup-job (:copier common-lisp:nil)
      (:conc-name "struct-shape-backup-job-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (backup-job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-vault-name common-lisp:nil :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (resource-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or backup-job-state common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (percent-done common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-size-in-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or iamrole-arn common-lisp:null))
   (created-by common-lisp:nil :type
    (common-lisp:or recovery-point-creator common-lisp:null))
   (expected-completion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (start-by common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (bytes-transferred common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (backup-options common-lisp:nil :type
    (common-lisp:or backup-options common-lisp:null))
   (backup-type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (parent-job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-parent common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'backup-job 'make-backup-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input backup-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input backup-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-job-id))
      (common-lisp:list
       (common-lisp:cons "BackupJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "BackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "BackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-date))
      (common-lisp:list
       (common-lisp:cons "CompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-done))
      (common-lisp:list
       (common-lisp:cons "PercentDone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "BackupSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'expected-completion-date))
      (common-lisp:list
       (common-lisp:cons "ExpectedCompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-by))
      (common-lisp:list
       (common-lisp:cons "StartBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes-transferred))
      (common-lisp:list
       (common-lisp:cons "BytesTransferred"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-options))
      (common-lisp:list
       (common-lisp:cons "BackupOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-type))
      (common-lisp:list
       (common-lisp:cons "BackupType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parent-job-id))
      (common-lisp:list
       (common-lisp:cons "ParentJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-parent))
      (common-lisp:list
       (common-lisp:cons "IsParent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input backup-job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype backup-job-child-jobs-in-state ()
   'common-lisp:hash-table)
 (common-lisp:defun |make-backup-job-child-jobs-in-state|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype backup-job-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype backup-jobs-list ()
   '(trivial-types:proper-list backup-job))
 (common-lisp:defun |make-backup-jobs-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list backup-job))
   aws-sdk/generator/shape::members))
(common-lisp:deftype backup-option-key () 'common-lisp:string)
(common-lisp:deftype backup-option-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype backup-options () 'common-lisp:hash-table)
 (common-lisp:defun |make-backup-options| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (backup-plan (:copier common-lisp:nil)
      (:conc-name "struct-shape-backup-plan-"))
   (backup-plan-name (common-lisp:error ":backup-plan-name is required") :type
    (common-lisp:or backup-plan-name common-lisp:null))
   (rules (common-lisp:error ":rules is required") :type
    (common-lisp:or backup-rules common-lisp:null))
   (advanced-backup-settings common-lisp:nil :type
    (common-lisp:or advanced-backup-settings common-lisp:null)))
 (common-lisp:export (common-lisp:list 'backup-plan 'make-backup-plan))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input backup-plan))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input backup-plan))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-name))
      (common-lisp:list
       (common-lisp:cons "BackupPlanName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules))
      (common-lisp:list
       (common-lisp:cons "Rules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'advanced-backup-settings))
      (common-lisp:list
       (common-lisp:cons "AdvancedBackupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input backup-plan))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backup-plan-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-backup-plan-input-"))
   (backup-plan-name (common-lisp:error ":backup-plan-name is required") :type
    (common-lisp:or backup-plan-name common-lisp:null))
   (rules (common-lisp:error ":rules is required") :type
    (common-lisp:or backup-rules-input common-lisp:null))
   (advanced-backup-settings common-lisp:nil :type
    (common-lisp:or advanced-backup-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backup-plan-input 'make-backup-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input backup-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input backup-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-name))
      (common-lisp:list
       (common-lisp:cons "BackupPlanName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules))
      (common-lisp:list
       (common-lisp:cons "Rules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'advanced-backup-settings))
      (common-lisp:list
       (common-lisp:cons "AdvancedBackupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input backup-plan-input))
   common-lisp:nil))
(common-lisp:deftype backup-plan-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype backup-plan-templates-list ()
   '(trivial-types:proper-list backup-plan-templates-list-member))
 (common-lisp:defun |make-backup-plan-templates-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            backup-plan-templates-list-member))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (backup-plan-templates-list-member (:copier common-lisp:nil)
      (:conc-name "struct-shape-backup-plan-templates-list-member-"))
   (backup-plan-template-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plan-template-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backup-plan-templates-list-member
                    'make-backup-plan-templates-list-member))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backup-plan-templates-list-member))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backup-plan-templates-list-member))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-plan-template-id))
      (common-lisp:list
       (common-lisp:cons "BackupPlanTemplateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-plan-template-name))
      (common-lisp:list
       (common-lisp:cons "BackupPlanTemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backup-plan-templates-list-member))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype backup-plan-versions-list ()
   '(trivial-types:proper-list backup-plans-list-member))
 (common-lisp:defun |make-backup-plan-versions-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            backup-plans-list-member))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype backup-plans-list ()
   '(trivial-types:proper-list backup-plans-list-member))
 (common-lisp:defun |make-backup-plans-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            backup-plans-list-member))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (backup-plans-list-member (:copier common-lisp:nil)
      (:conc-name "struct-shape-backup-plans-list-member-"))
   (backup-plan-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (backup-plan-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (deletion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plan-name common-lisp:nil :type
    (common-lisp:or backup-plan-name common-lisp:null))
   (creator-request-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (last-execution-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (advanced-backup-settings common-lisp:nil :type
    (common-lisp:or advanced-backup-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backup-plans-list-member 'make-backup-plans-list-member))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backup-plans-list-member))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backup-plans-list-member))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-arn))
      (common-lisp:list
       (common-lisp:cons "BackupPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-id))
      (common-lisp:list
       (common-lisp:cons "BackupPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deletion-date))
      (common-lisp:list
       (common-lisp:cons "DeletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-id))
      (common-lisp:list
       (common-lisp:cons "VersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-name))
      (common-lisp:list
       (common-lisp:cons "BackupPlanName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-execution-date))
      (common-lisp:list
       (common-lisp:cons "LastExecutionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'advanced-backup-settings))
      (common-lisp:list
       (common-lisp:cons "AdvancedBackupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backup-plans-list-member))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backup-rule (:copier common-lisp:nil)
      (:conc-name "struct-shape-backup-rule-"))
   (rule-name (common-lisp:error ":rule-name is required") :type
    (common-lisp:or backup-rule-name common-lisp:null))
   (target-backup-vault-name
    (common-lisp:error ":target-backup-vault-name is required") :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (schedule-expression common-lisp:nil :type
    (common-lisp:or cron-expression common-lisp:null))
   (start-window-minutes common-lisp:nil :type
    (common-lisp:or window-minutes common-lisp:null))
   (completion-window-minutes common-lisp:nil :type
    (common-lisp:or window-minutes common-lisp:null))
   (lifecycle common-lisp:nil :type
    (common-lisp:or lifecycle common-lisp:null))
   (recovery-point-tags common-lisp:nil :type
    (common-lisp:or tags common-lisp:null))
   (rule-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (copy-actions common-lisp:nil :type
    (common-lisp:or copy-actions common-lisp:null))
   (enable-continuous-backup common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'backup-rule 'make-backup-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input backup-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input backup-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-name))
      (common-lisp:list
       (common-lisp:cons "RuleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "TargetBackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-expression))
      (common-lisp:list
       (common-lisp:cons "ScheduleExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'start-window-minutes))
      (common-lisp:list
       (common-lisp:cons "StartWindowMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'completion-window-minutes))
      (common-lisp:list
       (common-lisp:cons "CompletionWindowMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle))
      (common-lisp:list
       (common-lisp:cons "Lifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-tags))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-id))
      (common-lisp:list
       (common-lisp:cons "RuleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'copy-actions))
      (common-lisp:list
       (common-lisp:cons "CopyActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-continuous-backup))
      (common-lisp:list
       (common-lisp:cons "EnableContinuousBackup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input backup-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backup-rule-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-backup-rule-input-"))
   (rule-name (common-lisp:error ":rule-name is required") :type
    (common-lisp:or backup-rule-name common-lisp:null))
   (target-backup-vault-name
    (common-lisp:error ":target-backup-vault-name is required") :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (schedule-expression common-lisp:nil :type
    (common-lisp:or cron-expression common-lisp:null))
   (start-window-minutes common-lisp:nil :type
    (common-lisp:or window-minutes common-lisp:null))
   (completion-window-minutes common-lisp:nil :type
    (common-lisp:or window-minutes common-lisp:null))
   (lifecycle common-lisp:nil :type
    (common-lisp:or lifecycle common-lisp:null))
   (recovery-point-tags common-lisp:nil :type
    (common-lisp:or tags common-lisp:null))
   (copy-actions common-lisp:nil :type
    (common-lisp:or copy-actions common-lisp:null))
   (enable-continuous-backup common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backup-rule-input 'make-backup-rule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input backup-rule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input backup-rule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-name))
      (common-lisp:list
       (common-lisp:cons "RuleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "TargetBackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-expression))
      (common-lisp:list
       (common-lisp:cons "ScheduleExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'start-window-minutes))
      (common-lisp:list
       (common-lisp:cons "StartWindowMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'completion-window-minutes))
      (common-lisp:list
       (common-lisp:cons "CompletionWindowMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle))
      (common-lisp:list
       (common-lisp:cons "Lifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-tags))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'copy-actions))
      (common-lisp:list
       (common-lisp:cons "CopyActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-continuous-backup))
      (common-lisp:list
       (common-lisp:cons "EnableContinuousBackup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input backup-rule-input))
   common-lisp:nil))
(common-lisp:deftype backup-rule-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype backup-rules () '(trivial-types:proper-list backup-rule))
 (common-lisp:defun |make-backup-rules|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list backup-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype backup-rules-input ()
   '(trivial-types:proper-list backup-rule-input))
 (common-lisp:defun |make-backup-rules-input|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list backup-rule-input))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (backup-selection (:copier common-lisp:nil)
      (:conc-name "struct-shape-backup-selection-"))
   (selection-name (common-lisp:error ":selection-name is required") :type
    (common-lisp:or backup-selection-name common-lisp:null))
   (iam-role-arn (common-lisp:error ":iam-role-arn is required") :type
    (common-lisp:or iamrole-arn common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or resource-arns common-lisp:null))
   (list-of-tags common-lisp:nil :type
    (common-lisp:or list-of-tags common-lisp:null))
   (not-resources common-lisp:nil :type
    (common-lisp:or resource-arns common-lisp:null))
   (conditions common-lisp:nil :type
    (common-lisp:or conditions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backup-selection 'make-backup-selection))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input backup-selection))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input backup-selection))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selection-name))
      (common-lisp:list
       (common-lisp:cons "SelectionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'list-of-tags))
      (common-lisp:list
       (common-lisp:cons "ListOfTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'not-resources))
      (common-lisp:list
       (common-lisp:cons "NotResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'conditions))
      (common-lisp:list
       (common-lisp:cons "Conditions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input backup-selection))
   common-lisp:nil))
(common-lisp:deftype backup-selection-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype backup-selections-list ()
   '(trivial-types:proper-list backup-selections-list-member))
 (common-lisp:defun |make-backup-selections-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            backup-selections-list-member))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (backup-selections-list-member (:copier common-lisp:nil)
      (:conc-name "struct-shape-backup-selections-list-member-"))
   (selection-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (selection-name common-lisp:nil :type
    (common-lisp:or backup-selection-name common-lisp:null))
   (backup-plan-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creator-request-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or iamrole-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backup-selections-list-member
                    'make-backup-selections-list-member))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backup-selections-list-member))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backup-selections-list-member))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selection-id))
      (common-lisp:list
       (common-lisp:cons "SelectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selection-name))
      (common-lisp:list
       (common-lisp:cons "SelectionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-id))
      (common-lisp:list
       (common-lisp:cons "BackupPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backup-selections-list-member))
   common-lisp:nil))
(common-lisp:deftype backup-vault-event () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype backup-vault-events ()
   '(trivial-types:proper-list backup-vault-event))
 (common-lisp:defun |make-backup-vault-events|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list backup-vault-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype backup-vault-list ()
   '(trivial-types:proper-list backup-vault-list-member))
 (common-lisp:defun |make-backup-vault-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            backup-vault-list-member))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (backup-vault-list-member (:copier common-lisp:nil)
      (:conc-name "struct-shape-backup-vault-list-member-"))
   (backup-vault-name common-lisp:nil :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (encryption-key-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creator-request-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (number-of-recovery-points common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (locked common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (min-retention-days common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (max-retention-days common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (lock-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backup-vault-list-member 'make-backup-vault-list-member))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backup-vault-list-member))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backup-vault-list-member))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "BackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "BackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-key-arn))
      (common-lisp:list
       (common-lisp:cons "EncryptionKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-recovery-points))
      (common-lisp:list
       (common-lisp:cons "NumberOfRecoveryPoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locked))
      (common-lisp:list
       (common-lisp:cons "Locked"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-retention-days))
      (common-lisp:list
       (common-lisp:cons "MinRetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-retention-days))
      (common-lisp:list
       (common-lisp:cons "MaxRetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-date))
      (common-lisp:list
       (common-lisp:cons "LockDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backup-vault-list-member))
   common-lisp:nil))
(common-lisp:deftype backup-vault-name () 'common-lisp:string)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (calculated-lifecycle (:copier common-lisp:nil)
      (:conc-name "struct-shape-calculated-lifecycle-"))
   (move-to-cold-storage-at common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (delete-at common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'calculated-lifecycle 'make-calculated-lifecycle))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input calculated-lifecycle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input calculated-lifecycle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'move-to-cold-storage-at))
      (common-lisp:list
       (common-lisp:cons "MoveToColdStorageAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delete-at))
      (common-lisp:list
       (common-lisp:cons "DeleteAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input calculated-lifecycle))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-legal-hold-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-legal-hold-input-"))
   (legal-hold-id (common-lisp:error ":legal-hold-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (cancel-description (common-lisp:error ":cancel-description is required")
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (retain-record-in-days common-lisp:nil :type
    (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-legal-hold-input 'make-cancel-legal-hold-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-legal-hold-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-legal-hold-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-legal-hold-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-legal-hold-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-legal-hold-output-")))
 (common-lisp:export
  (common-lisp:list 'cancel-legal-hold-output 'make-cancel-legal-hold-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-legal-hold-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-legal-hold-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-legal-hold-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype compliance-resource-id-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-compliance-resource-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (condition (:copier common-lisp:nil)
      (:conc-name "struct-shape-condition-"))
   (condition-type (common-lisp:error ":condition-type is required") :type
    (common-lisp:or condition-type common-lisp:null))
   (condition-key (common-lisp:error ":condition-key is required") :type
    (common-lisp:or condition-key common-lisp:null))
   (condition-value (common-lisp:error ":condition-value is required") :type
    (common-lisp:or condition-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'condition 'make-condition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition-type))
      (common-lisp:list
       (common-lisp:cons "ConditionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition-key))
      (common-lisp:list
       (common-lisp:cons "ConditionKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition-value))
      (common-lisp:list
       (common-lisp:cons "ConditionValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input condition))
   common-lisp:nil))
(common-lisp:deftype condition-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (condition-parameter (:copier common-lisp:nil)
      (:conc-name "struct-shape-condition-parameter-"))
   (condition-key common-lisp:nil :type
    (common-lisp:or condition-key common-lisp:null))
   (condition-value common-lisp:nil :type
    (common-lisp:or condition-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'condition-parameter 'make-condition-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input condition-parameter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input condition-parameter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition-key))
      (common-lisp:list
       (common-lisp:cons "ConditionKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition-value))
      (common-lisp:list
       (common-lisp:cons "ConditionValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input condition-parameter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype condition-parameters ()
   '(trivial-types:proper-list condition-parameter))
 (common-lisp:defun |make-condition-parameters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list condition-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype condition-type () 'common-lisp:string)
(common-lisp:deftype condition-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (conditions (:copier common-lisp:nil)
      (:conc-name "struct-shape-conditions-"))
   (string-equals common-lisp:nil :type
    (common-lisp:or condition-parameters common-lisp:null))
   (string-not-equals common-lisp:nil :type
    (common-lisp:or condition-parameters common-lisp:null))
   (string-like common-lisp:nil :type
    (common-lisp:or condition-parameters common-lisp:null))
   (string-not-like common-lisp:nil :type
    (common-lisp:or condition-parameters common-lisp:null)))
 (common-lisp:export (common-lisp:list 'conditions 'make-conditions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input conditions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input conditions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-equals))
      (common-lisp:list
       (common-lisp:cons "StringEquals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-not-equals))
      (common-lisp:list
       (common-lisp:cons "StringNotEquals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-like))
      (common-lisp:list
       (common-lisp:cons "StringLike"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-not-like))
      (common-lisp:list
       (common-lisp:cons "StringNotLike"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input conditions))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (backup-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       conflict-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (type :initarg :type :initform common-lisp:nil :reader
       conflict-exception-type)
      (context :initarg :context :initform common-lisp:nil :reader
       conflict-exception-context)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-code
                    'conflict-exception-message 'conflict-exception-type
                    'conflict-exception-context)))
(common-lisp:progn
 (common-lisp:defstruct
     (control-input-parameter (:copier common-lisp:nil)
      (:conc-name "struct-shape-control-input-parameter-"))
   (parameter-name common-lisp:nil :type
    (common-lisp:or parameter-name common-lisp:null))
   (parameter-value common-lisp:nil :type
    (common-lisp:or parameter-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'control-input-parameter 'make-control-input-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          control-input-parameter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          control-input-parameter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parameter-name))
      (common-lisp:list
       (common-lisp:cons "ParameterName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parameter-value))
      (common-lisp:list
       (common-lisp:cons "ParameterValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          control-input-parameter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype control-input-parameters ()
   '(trivial-types:proper-list control-input-parameter))
 (common-lisp:defun |make-control-input-parameters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list control-input-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype control-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (control-scope (:copier common-lisp:nil)
      (:conc-name "struct-shape-control-scope-"))
   (compliance-resource-ids common-lisp:nil :type
    (common-lisp:or compliance-resource-id-list common-lisp:null))
   (compliance-resource-types common-lisp:nil :type
    (common-lisp:or resource-type-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or |stringMap| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'control-scope 'make-control-scope))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input control-scope))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input control-scope))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'compliance-resource-ids))
      (common-lisp:list
       (common-lisp:cons "ComplianceResourceIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'compliance-resource-types))
      (common-lisp:list
       (common-lisp:cons "ComplianceResourceTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input control-scope))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (copy-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-copy-action-"))
   (lifecycle common-lisp:nil :type
    (common-lisp:or lifecycle common-lisp:null))
   (destination-backup-vault-arn
    (common-lisp:error ":destination-backup-vault-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'copy-action 'make-copy-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input copy-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input copy-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle))
      (common-lisp:list
       (common-lisp:cons "Lifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationBackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input copy-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype copy-actions () '(trivial-types:proper-list copy-action))
 (common-lisp:defun |make-copy-actions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list copy-action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (copy-job (:copier common-lisp:nil) (:conc-name "struct-shape-copy-job-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (copy-job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (source-backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (source-recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (destination-backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (destination-recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (resource-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or copy-job-state common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-size-in-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or iamrole-arn common-lisp:null))
   (created-by common-lisp:nil :type
    (common-lisp:or recovery-point-creator common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (parent-job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-parent common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (composite-member-identifier common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (number-of-child-jobs common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (child-jobs-in-state common-lisp:nil :type
    (common-lisp:or copy-job-child-jobs-in-state common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'copy-job 'make-copy-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input copy-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input copy-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'copy-job-id))
      (common-lisp:list
       (common-lisp:cons "CopyJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "SourceBackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "SourceRecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationBackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationRecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-date))
      (common-lisp:list
       (common-lisp:cons "CompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "BackupSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parent-job-id))
      (common-lisp:list
       (common-lisp:cons "ParentJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-parent))
      (common-lisp:list
       (common-lisp:cons "IsParent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'composite-member-identifier))
      (common-lisp:list
       (common-lisp:cons "CompositeMemberIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-child-jobs))
      (common-lisp:list
       (common-lisp:cons "NumberOfChildJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-jobs-in-state))
      (common-lisp:list
       (common-lisp:cons "ChildJobsInState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input copy-job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype copy-job-child-jobs-in-state () 'common-lisp:hash-table)
 (common-lisp:defun |make-copy-job-child-jobs-in-state|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype copy-job-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype copy-jobs-list () '(trivial-types:proper-list copy-job))
 (common-lisp:defun |make-copy-jobs-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list copy-job))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backup-plan-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backup-plan-input-"))
   (backup-plan (common-lisp:error ":backup-plan is required") :type
    (common-lisp:or backup-plan-input common-lisp:null))
   (backup-plan-tags common-lisp:nil :type
    (common-lisp:or tags common-lisp:null))
   (creator-request-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backup-plan-input 'make-create-backup-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan))
      (common-lisp:list
       (common-lisp:cons "BackupPlan"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-tags))
      (common-lisp:list
       (common-lisp:cons "BackupPlanTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backup-plan-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backup-plan-output-"))
   (backup-plan-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plan-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (advanced-backup-settings common-lisp:nil :type
    (common-lisp:or advanced-backup-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backup-plan-output
                    'make-create-backup-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-id))
      (common-lisp:list
       (common-lisp:cons "BackupPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-arn))
      (common-lisp:list
       (common-lisp:cons "BackupPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-id))
      (common-lisp:list
       (common-lisp:cons "VersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'advanced-backup-settings))
      (common-lisp:list
       (common-lisp:cons "AdvancedBackupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backup-selection-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backup-selection-input-"))
   (backup-plan-id (common-lisp:error ":backup-plan-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-selection (common-lisp:error ":backup-selection is required") :type
    (common-lisp:or backup-selection common-lisp:null))
   (creator-request-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backup-selection-input
                    'make-create-backup-selection-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-selection-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-selection-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-selection))
      (common-lisp:list
       (common-lisp:cons "BackupSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-selection-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backup-selection-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backup-selection-output-"))
   (selection-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plan-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backup-selection-output
                    'make-create-backup-selection-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-selection-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-selection-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selection-id))
      (common-lisp:list
       (common-lisp:cons "SelectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-id))
      (common-lisp:list
       (common-lisp:cons "BackupPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-selection-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backup-vault-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backup-vault-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null))
   (backup-vault-tags common-lisp:nil :type
    (common-lisp:or tags common-lisp:null))
   (encryption-key-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creator-request-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backup-vault-input
                    'make-create-backup-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-vault-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-tags))
      (common-lisp:list
       (common-lisp:cons "BackupVaultTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-key-arn))
      (common-lisp:list
       (common-lisp:cons "EncryptionKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-vault-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backup-vault-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backup-vault-output-"))
   (backup-vault-name common-lisp:nil :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backup-vault-output
                    'make-create-backup-vault-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-vault-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-vault-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "BackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "BackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backup-vault-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-framework-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-framework-input-"))
   (framework-name (common-lisp:error ":framework-name is required") :type
    (common-lisp:or framework-name common-lisp:null))
   (framework-description common-lisp:nil :type
    (common-lisp:or framework-description common-lisp:null))
   (framework-controls (common-lisp:error ":framework-controls is required")
    :type (common-lisp:or framework-controls common-lisp:null))
   (idempotency-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (framework-tags common-lisp:nil :type
    (common-lisp:or |stringMap| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-framework-input 'make-create-framework-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-framework-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-framework-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-name))
      (common-lisp:list
       (common-lisp:cons "FrameworkName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framework-description))
      (common-lisp:list
       (common-lisp:cons "FrameworkDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-controls))
      (common-lisp:list
       (common-lisp:cons "FrameworkControls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idempotency-token))
      (common-lisp:list
       (common-lisp:cons "IdempotencyToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-tags))
      (common-lisp:list
       (common-lisp:cons "FrameworkTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-framework-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-framework-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-framework-output-"))
   (framework-name common-lisp:nil :type
    (common-lisp:or framework-name common-lisp:null))
   (framework-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-framework-output 'make-create-framework-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-framework-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-framework-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-name))
      (common-lisp:list
       (common-lisp:cons "FrameworkName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-arn))
      (common-lisp:list
       (common-lisp:cons "FrameworkArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-framework-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-legal-hold-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-legal-hold-input-"))
   (title (common-lisp:error ":title is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (description (common-lisp:error ":description is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (idempotency-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (recovery-point-selection common-lisp:nil :type
    (common-lisp:or recovery-point-selection common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-legal-hold-input 'make-create-legal-hold-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-legal-hold-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-legal-hold-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idempotency-token))
      (common-lisp:list
       (common-lisp:cons "IdempotencyToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recovery-point-selection))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-legal-hold-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-legal-hold-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-legal-hold-output-"))
   (title common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or legal-hold-status common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (legal-hold-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (legal-hold-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (recovery-point-selection common-lisp:nil :type
    (common-lisp:or recovery-point-selection common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-legal-hold-output 'make-create-legal-hold-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-legal-hold-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-legal-hold-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'legal-hold-id))
      (common-lisp:list
       (common-lisp:cons "LegalHoldId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'legal-hold-arn))
      (common-lisp:list
       (common-lisp:cons "LegalHoldArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recovery-point-selection))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-legal-hold-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-report-plan-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-report-plan-input-"))
   (report-plan-name (common-lisp:error ":report-plan-name is required") :type
    (common-lisp:or report-plan-name common-lisp:null))
   (report-plan-description common-lisp:nil :type
    (common-lisp:or report-plan-description common-lisp:null))
   (report-delivery-channel
    (common-lisp:error ":report-delivery-channel is required") :type
    (common-lisp:or report-delivery-channel common-lisp:null))
   (report-setting (common-lisp:error ":report-setting is required") :type
    (common-lisp:or report-setting common-lisp:null))
   (report-plan-tags common-lisp:nil :type
    (common-lisp:or |stringMap| common-lisp:null))
   (idempotency-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-report-plan-input 'make-create-report-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-report-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-report-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-plan-name))
      (common-lisp:list
       (common-lisp:cons "ReportPlanName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'report-plan-description))
      (common-lisp:list
       (common-lisp:cons "ReportPlanDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'report-delivery-channel))
      (common-lisp:list
       (common-lisp:cons "ReportDeliveryChannel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-setting))
      (common-lisp:list
       (common-lisp:cons "ReportSetting"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-plan-tags))
      (common-lisp:list
       (common-lisp:cons "ReportPlanTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idempotency-token))
      (common-lisp:list
       (common-lisp:cons "IdempotencyToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-report-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-report-plan-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-report-plan-output-"))
   (report-plan-name common-lisp:nil :type
    (common-lisp:or report-plan-name common-lisp:null))
   (report-plan-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-report-plan-output
                    'make-create-report-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-report-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-report-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-plan-name))
      (common-lisp:list
       (common-lisp:cons "ReportPlanName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-plan-arn))
      (common-lisp:list
       (common-lisp:cons "ReportPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-report-plan-output))
   common-lisp:nil))
(common-lisp:deftype cron-expression () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (date-range (:copier common-lisp:nil)
      (:conc-name "struct-shape-date-range-"))
   (from-date (common-lisp:error ":from-date is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (to-date (common-lisp:error ":to-date is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'date-range 'make-date-range))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input date-range))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input date-range))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-date))
      (common-lisp:list
       (common-lisp:cons "FromDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-date))
      (common-lisp:list
       (common-lisp:cons "ToDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input date-range))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backup-plan-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backup-plan-input-"))
   (backup-plan-id (common-lisp:error ":backup-plan-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backup-plan-input 'make-delete-backup-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backup-plan-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backup-plan-output-"))
   (backup-plan-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plan-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (deletion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backup-plan-output
                    'make-delete-backup-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-id))
      (common-lisp:list
       (common-lisp:cons "BackupPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-arn))
      (common-lisp:list
       (common-lisp:cons "BackupPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deletion-date))
      (common-lisp:list
       (common-lisp:cons "DeletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-id))
      (common-lisp:list
       (common-lisp:cons "VersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backup-selection-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backup-selection-input-"))
   (backup-plan-id (common-lisp:error ":backup-plan-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (selection-id (common-lisp:error ":selection-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backup-selection-input
                    'make-delete-backup-selection-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-selection-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-selection-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-selection-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backup-vault-access-policy-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backup-vault-access-policy-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backup-vault-access-policy-input
                    'make-delete-backup-vault-access-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-vault-access-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-vault-access-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-vault-access-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backup-vault-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backup-vault-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backup-vault-input
                    'make-delete-backup-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-vault-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backup-vault-lock-configuration-input (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-backup-vault-lock-configuration-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backup-vault-lock-configuration-input
                    'make-delete-backup-vault-lock-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-vault-lock-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-vault-lock-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-vault-lock-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backup-vault-notifications-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backup-vault-notifications-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backup-vault-notifications-input
                    'make-delete-backup-vault-notifications-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-vault-notifications-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-vault-notifications-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backup-vault-notifications-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-framework-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-framework-input-"))
   (framework-name (common-lisp:error ":framework-name is required") :type
    (common-lisp:or framework-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-framework-input 'make-delete-framework-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-framework-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-framework-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-framework-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-recovery-point-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-recovery-point-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null))
   (recovery-point-arn (common-lisp:error ":recovery-point-arn is required")
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-recovery-point-input
                    'make-delete-recovery-point-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-recovery-point-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-recovery-point-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-recovery-point-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-report-plan-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-report-plan-input-"))
   (report-plan-name (common-lisp:error ":report-plan-name is required") :type
    (common-lisp:or report-plan-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-report-plan-input 'make-delete-report-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-report-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-report-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-report-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition dependency-failure-exception
     (backup-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       dependency-failure-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       dependency-failure-exception-message)
      (type :initarg :type :initform common-lisp:nil :reader
       dependency-failure-exception-type)
      (context :initarg :context :initform common-lisp:nil :reader
       dependency-failure-exception-context)))
 (common-lisp:export
  (common-lisp:list 'dependency-failure-exception
                    'dependency-failure-exception-code
                    'dependency-failure-exception-message
                    'dependency-failure-exception-type
                    'dependency-failure-exception-context)))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-backup-job-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-backup-job-input-"))
   (backup-job-id (common-lisp:error ":backup-job-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-backup-job-input
                    'make-describe-backup-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-backup-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-backup-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-backup-job-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-backup-job-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-backup-job-output-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (backup-job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-vault-name common-lisp:nil :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (resource-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or backup-job-state common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (percent-done common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-size-in-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or iamrole-arn common-lisp:null))
   (created-by common-lisp:nil :type
    (common-lisp:or recovery-point-creator common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (bytes-transferred common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (expected-completion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (start-by common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-options common-lisp:nil :type
    (common-lisp:or backup-options common-lisp:null))
   (backup-type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (parent-job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-parent common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (number-of-child-jobs common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (child-jobs-in-state common-lisp:nil :type
    (common-lisp:or backup-job-child-jobs-in-state common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-backup-job-output
                    'make-describe-backup-job-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-backup-job-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-backup-job-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-job-id))
      (common-lisp:list
       (common-lisp:cons "BackupJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "BackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "BackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-date))
      (common-lisp:list
       (common-lisp:cons "CompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-done))
      (common-lisp:list
       (common-lisp:cons "PercentDone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "BackupSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes-transferred))
      (common-lisp:list
       (common-lisp:cons "BytesTransferred"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'expected-completion-date))
      (common-lisp:list
       (common-lisp:cons "ExpectedCompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-by))
      (common-lisp:list
       (common-lisp:cons "StartBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-options))
      (common-lisp:list
       (common-lisp:cons "BackupOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-type))
      (common-lisp:list
       (common-lisp:cons "BackupType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parent-job-id))
      (common-lisp:list
       (common-lisp:cons "ParentJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-parent))
      (common-lisp:list
       (common-lisp:cons "IsParent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-child-jobs))
      (common-lisp:list
       (common-lisp:cons "NumberOfChildJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-jobs-in-state))
      (common-lisp:list
       (common-lisp:cons "ChildJobsInState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-backup-job-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-backup-vault-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-backup-vault-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-backup-vault-input
                    'make-describe-backup-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-backup-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-backup-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-backup-vault-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-backup-vault-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-backup-vault-output-"))
   (backup-vault-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (encryption-key-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creator-request-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (number-of-recovery-points common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (locked common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (min-retention-days common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (max-retention-days common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (lock-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-backup-vault-output
                    'make-describe-backup-vault-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-backup-vault-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-backup-vault-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "BackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "BackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-key-arn))
      (common-lisp:list
       (common-lisp:cons "EncryptionKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-recovery-points))
      (common-lisp:list
       (common-lisp:cons "NumberOfRecoveryPoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locked))
      (common-lisp:list
       (common-lisp:cons "Locked"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-retention-days))
      (common-lisp:list
       (common-lisp:cons "MinRetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-retention-days))
      (common-lisp:list
       (common-lisp:cons "MaxRetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-date))
      (common-lisp:list
       (common-lisp:cons "LockDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-backup-vault-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-copy-job-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-copy-job-input-"))
   (copy-job-id (common-lisp:error ":copy-job-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-copy-job-input 'make-describe-copy-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-copy-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-copy-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-copy-job-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-copy-job-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-copy-job-output-"))
   (copy-job common-lisp:nil :type (common-lisp:or copy-job common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-copy-job-output 'make-describe-copy-job-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-copy-job-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-copy-job-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'copy-job))
      (common-lisp:list
       (common-lisp:cons "CopyJob"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-copy-job-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-framework-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-framework-input-"))
   (framework-name (common-lisp:error ":framework-name is required") :type
    (common-lisp:or framework-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-framework-input 'make-describe-framework-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-framework-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-framework-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-framework-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-framework-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-framework-output-"))
   (framework-name common-lisp:nil :type
    (common-lisp:or framework-name common-lisp:null))
   (framework-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (framework-description common-lisp:nil :type
    (common-lisp:or framework-description common-lisp:null))
   (framework-controls common-lisp:nil :type
    (common-lisp:or framework-controls common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (deployment-status common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (framework-status common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (idempotency-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-framework-output
                    'make-describe-framework-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-framework-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-framework-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-name))
      (common-lisp:list
       (common-lisp:cons "FrameworkName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-arn))
      (common-lisp:list
       (common-lisp:cons "FrameworkArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framework-description))
      (common-lisp:list
       (common-lisp:cons "FrameworkDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-controls))
      (common-lisp:list
       (common-lisp:cons "FrameworkControls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-status))
      (common-lisp:list
       (common-lisp:cons "FrameworkStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idempotency-token))
      (common-lisp:list
       (common-lisp:cons "IdempotencyToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-framework-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-global-settings-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-global-settings-input-")))
 (common-lisp:export
  (common-lisp:list 'describe-global-settings-input
                    'make-describe-global-settings-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-global-settings-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-global-settings-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-global-settings-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-global-settings-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-global-settings-output-"))
   (global-settings common-lisp:nil :type
    (common-lisp:or global-settings common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-global-settings-output
                    'make-describe-global-settings-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-global-settings-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-global-settings-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'global-settings))
      (common-lisp:list
       (common-lisp:cons "GlobalSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-global-settings-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-protected-resource-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-protected-resource-input-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-protected-resource-input
                    'make-describe-protected-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-protected-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-protected-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-protected-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-protected-resource-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-protected-resource-output-"))
   (resource-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (last-backup-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-protected-resource-output
                    'make-describe-protected-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-protected-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-protected-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-backup-time))
      (common-lisp:list
       (common-lisp:cons "LastBackupTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-protected-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-recovery-point-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-recovery-point-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null))
   (recovery-point-arn (common-lisp:error ":recovery-point-arn is required")
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-recovery-point-input
                    'make-describe-recovery-point-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-recovery-point-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-recovery-point-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-recovery-point-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-recovery-point-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-recovery-point-output-"))
   (recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (backup-vault-name common-lisp:nil :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (source-backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (resource-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (created-by common-lisp:nil :type
    (common-lisp:or recovery-point-creator common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or iamrole-arn common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or recovery-point-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-size-in-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (calculated-lifecycle common-lisp:nil :type
    (common-lisp:or calculated-lifecycle common-lisp:null))
   (lifecycle common-lisp:nil :type
    (common-lisp:or lifecycle common-lisp:null))
   (encryption-key-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (is-encrypted common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null))
   (last-restore-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (parent-recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (composite-member-identifier common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-parent common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-recovery-point-output
                    'make-describe-recovery-point-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-recovery-point-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-recovery-point-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "BackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "BackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "SourceBackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-date))
      (common-lisp:list
       (common-lisp:cons "CompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "BackupSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'calculated-lifecycle))
      (common-lisp:list
       (common-lisp:cons "CalculatedLifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle))
      (common-lisp:list
       (common-lisp:cons "Lifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-key-arn))
      (common-lisp:list
       (common-lisp:cons "EncryptionKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-encrypted))
      (common-lisp:list
       (common-lisp:cons "IsEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-class))
      (common-lisp:list
       (common-lisp:cons "StorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-restore-time))
      (common-lisp:list
       (common-lisp:cons "LastRestoreTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "ParentRecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'composite-member-identifier))
      (common-lisp:list
       (common-lisp:cons "CompositeMemberIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-parent))
      (common-lisp:list
       (common-lisp:cons "IsParent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-recovery-point-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-region-settings-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-region-settings-input-")))
 (common-lisp:export
  (common-lisp:list 'describe-region-settings-input
                    'make-describe-region-settings-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-region-settings-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-region-settings-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-region-settings-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-region-settings-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-region-settings-output-"))
   (resource-type-opt-in-preference common-lisp:nil :type
    (common-lisp:or resource-type-opt-in-preference common-lisp:null))
   (resource-type-management-preference common-lisp:nil :type
    (common-lisp:or resource-type-management-preference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-region-settings-output
                    'make-describe-region-settings-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-region-settings-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-region-settings-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-type-opt-in-preference))
      (common-lisp:list
       (common-lisp:cons "ResourceTypeOptInPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-type-management-preference))
      (common-lisp:list
       (common-lisp:cons "ResourceTypeManagementPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-region-settings-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-report-job-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-report-job-input-"))
   (report-job-id (common-lisp:error ":report-job-id is required") :type
    (common-lisp:or report-job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-report-job-input
                    'make-describe-report-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-job-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-report-job-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-report-job-output-"))
   (report-job common-lisp:nil :type
    (common-lisp:or report-job common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-report-job-output
                    'make-describe-report-job-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-job-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-job-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-job))
      (common-lisp:list
       (common-lisp:cons "ReportJob"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-job-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-report-plan-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-report-plan-input-"))
   (report-plan-name (common-lisp:error ":report-plan-name is required") :type
    (common-lisp:or report-plan-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-report-plan-input
                    'make-describe-report-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-report-plan-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-report-plan-output-"))
   (report-plan common-lisp:nil :type
    (common-lisp:or report-plan common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-report-plan-output
                    'make-describe-report-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-plan))
      (common-lisp:list
       (common-lisp:cons "ReportPlan"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-report-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-restore-job-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-restore-job-input-"))
   (restore-job-id (common-lisp:error ":restore-job-id is required") :type
    (common-lisp:or restore-job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-restore-job-input
                    'make-describe-restore-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-restore-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-restore-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-restore-job-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-restore-job-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-restore-job-output-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (restore-job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or restore-job-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (percent-done common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-size-in-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or iamrole-arn common-lisp:null))
   (expected-completion-time-minutes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (created-resource-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-restore-job-output
                    'make-describe-restore-job-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-restore-job-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-restore-job-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'restore-job-id))
      (common-lisp:list
       (common-lisp:cons "RestoreJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-date))
      (common-lisp:list
       (common-lisp:cons "CompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-done))
      (common-lisp:list
       (common-lisp:cons "PercentDone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "BackupSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'expected-completion-time-minutes))
      (common-lisp:list
       (common-lisp:cons "ExpectedCompletionTimeMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'created-resource-arn))
      (common-lisp:list
       (common-lisp:cons "CreatedResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-restore-job-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-recovery-point-from-parent-input (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-recovery-point-from-parent-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null))
   (recovery-point-arn (common-lisp:error ":recovery-point-arn is required")
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-recovery-point-from-parent-input
                    'make-disassociate-recovery-point-from-parent-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-recovery-point-from-parent-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-recovery-point-from-parent-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-recovery-point-from-parent-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-recovery-point-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-recovery-point-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null))
   (recovery-point-arn (common-lisp:error ":recovery-point-arn is required")
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-recovery-point-input
                    'make-disassociate-recovery-point-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-recovery-point-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-recovery-point-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-recovery-point-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-backup-plan-template-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-backup-plan-template-input-"))
   (backup-plan-id (common-lisp:error ":backup-plan-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-backup-plan-template-input
                    'make-export-backup-plan-template-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-backup-plan-template-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-backup-plan-template-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-backup-plan-template-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-backup-plan-template-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-backup-plan-template-output-"))
   (backup-plan-template-json common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-backup-plan-template-output
                    'make-export-backup-plan-template-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-backup-plan-template-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-backup-plan-template-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-plan-template-json))
      (common-lisp:list
       (common-lisp:cons "BackupPlanTemplateJson"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-backup-plan-template-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype format-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-format-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (framework (:copier common-lisp:nil)
      (:conc-name "struct-shape-framework-"))
   (framework-name common-lisp:nil :type
    (common-lisp:or framework-name common-lisp:null))
   (framework-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (framework-description common-lisp:nil :type
    (common-lisp:or framework-description common-lisp:null))
   (number-of-controls common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (deployment-status common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'framework 'make-framework))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input framework))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input framework))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-name))
      (common-lisp:list
       (common-lisp:cons "FrameworkName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-arn))
      (common-lisp:list
       (common-lisp:cons "FrameworkArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framework-description))
      (common-lisp:list
       (common-lisp:cons "FrameworkDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-controls))
      (common-lisp:list
       (common-lisp:cons "NumberOfControls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input framework))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (framework-control (:copier common-lisp:nil)
      (:conc-name "struct-shape-framework-control-"))
   (control-name (common-lisp:error ":control-name is required") :type
    (common-lisp:or control-name common-lisp:null))
   (control-input-parameters common-lisp:nil :type
    (common-lisp:or control-input-parameters common-lisp:null))
   (control-scope common-lisp:nil :type
    (common-lisp:or control-scope common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'framework-control 'make-framework-control))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input framework-control))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input framework-control))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-name))
      (common-lisp:list
       (common-lisp:cons "ControlName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'control-input-parameters))
      (common-lisp:list
       (common-lisp:cons "ControlInputParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-scope))
      (common-lisp:list
       (common-lisp:cons "ControlScope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input framework-control))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype framework-controls ()
   '(trivial-types:proper-list framework-control))
 (common-lisp:defun |make-framework-controls|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list framework-control))
   aws-sdk/generator/shape::members))
(common-lisp:deftype framework-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype framework-list () '(trivial-types:proper-list framework))
 (common-lisp:defun |make-framework-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list framework))
   aws-sdk/generator/shape::members))
(common-lisp:deftype framework-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-backup-plan-from-jsoninput (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backup-plan-from-jsoninput-"))
   (backup-plan-template-json
    (common-lisp:error ":backup-plan-template-json is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backup-plan-from-jsoninput
                    'make-get-backup-plan-from-jsoninput))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-from-jsoninput))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-from-jsoninput))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-plan-template-json))
      (common-lisp:list
       (common-lisp:cons "BackupPlanTemplateJson"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-from-jsoninput))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backup-plan-from-jsonoutput (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backup-plan-from-jsonoutput-"))
   (backup-plan common-lisp:nil :type
    (common-lisp:or backup-plan common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backup-plan-from-jsonoutput
                    'make-get-backup-plan-from-jsonoutput))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-from-jsonoutput))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-from-jsonoutput))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan))
      (common-lisp:list
       (common-lisp:cons "BackupPlan"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-from-jsonoutput))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backup-plan-from-template-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backup-plan-from-template-input-"))
   (backup-plan-template-id
    (common-lisp:error ":backup-plan-template-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backup-plan-from-template-input
                    'make-get-backup-plan-from-template-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-from-template-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-from-template-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-from-template-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backup-plan-from-template-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backup-plan-from-template-output-"))
   (backup-plan-document common-lisp:nil :type
    (common-lisp:or backup-plan common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backup-plan-from-template-output
                    'make-get-backup-plan-from-template-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-from-template-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-from-template-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-plan-document))
      (common-lisp:list
       (common-lisp:cons "BackupPlanDocument"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-from-template-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backup-plan-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backup-plan-input-"))
   (backup-plan-id (common-lisp:error ":backup-plan-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backup-plan-input 'make-get-backup-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backup-plan-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backup-plan-output-"))
   (backup-plan common-lisp:nil :type
    (common-lisp:or backup-plan common-lisp:null))
   (backup-plan-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plan-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creator-request-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (deletion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (last-execution-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (advanced-backup-settings common-lisp:nil :type
    (common-lisp:or advanced-backup-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backup-plan-output 'make-get-backup-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan))
      (common-lisp:list
       (common-lisp:cons "BackupPlan"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-id))
      (common-lisp:list
       (common-lisp:cons "BackupPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-arn))
      (common-lisp:list
       (common-lisp:cons "BackupPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-id))
      (common-lisp:list
       (common-lisp:cons "VersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deletion-date))
      (common-lisp:list
       (common-lisp:cons "DeletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-execution-date))
      (common-lisp:list
       (common-lisp:cons "LastExecutionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'advanced-backup-settings))
      (common-lisp:list
       (common-lisp:cons "AdvancedBackupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backup-selection-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backup-selection-input-"))
   (backup-plan-id (common-lisp:error ":backup-plan-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (selection-id (common-lisp:error ":selection-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backup-selection-input
                    'make-get-backup-selection-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-selection-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-selection-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-selection-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backup-selection-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backup-selection-output-"))
   (backup-selection common-lisp:nil :type
    (common-lisp:or backup-selection common-lisp:null))
   (selection-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plan-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creator-request-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backup-selection-output
                    'make-get-backup-selection-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-selection-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-selection-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-selection))
      (common-lisp:list
       (common-lisp:cons "BackupSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selection-id))
      (common-lisp:list
       (common-lisp:cons "SelectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-id))
      (common-lisp:list
       (common-lisp:cons "BackupPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-selection-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backup-vault-access-policy-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backup-vault-access-policy-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backup-vault-access-policy-input
                    'make-get-backup-vault-access-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-vault-access-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-vault-access-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-vault-access-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backup-vault-access-policy-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backup-vault-access-policy-output-"))
   (backup-vault-name common-lisp:nil :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (policy common-lisp:nil :type (common-lisp:or iampolicy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backup-vault-access-policy-output
                    'make-get-backup-vault-access-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-vault-access-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-vault-access-policy-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "BackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "BackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-vault-access-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backup-vault-notifications-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backup-vault-notifications-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backup-vault-notifications-input
                    'make-get-backup-vault-notifications-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-vault-notifications-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-vault-notifications-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-vault-notifications-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backup-vault-notifications-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backup-vault-notifications-output-"))
   (backup-vault-name common-lisp:nil :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (snstopic-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (backup-vault-events common-lisp:nil :type
    (common-lisp:or backup-vault-events common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backup-vault-notifications-output
                    'make-get-backup-vault-notifications-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-vault-notifications-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-vault-notifications-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "BackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "BackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snstopic-arn))
      (common-lisp:list
       (common-lisp:cons "SNSTopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-events))
      (common-lisp:list
       (common-lisp:cons "BackupVaultEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backup-vault-notifications-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-legal-hold-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-legal-hold-input-"))
   (legal-hold-id (common-lisp:error ":legal-hold-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-legal-hold-input 'make-get-legal-hold-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-legal-hold-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-legal-hold-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-legal-hold-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-legal-hold-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-legal-hold-output-"))
   (title common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or legal-hold-status common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (cancel-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (legal-hold-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (legal-hold-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (cancellation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (retain-record-until common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (recovery-point-selection common-lisp:nil :type
    (common-lisp:or recovery-point-selection common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-legal-hold-output 'make-get-legal-hold-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-legal-hold-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-legal-hold-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cancel-description))
      (common-lisp:list
       (common-lisp:cons "CancelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'legal-hold-id))
      (common-lisp:list
       (common-lisp:cons "LegalHoldId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'legal-hold-arn))
      (common-lisp:list
       (common-lisp:cons "LegalHoldArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cancellation-date))
      (common-lisp:list
       (common-lisp:cons "CancellationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retain-record-until))
      (common-lisp:list
       (common-lisp:cons "RetainRecordUntil"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recovery-point-selection))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-legal-hold-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-recovery-point-restore-metadata-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-recovery-point-restore-metadata-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null))
   (recovery-point-arn (common-lisp:error ":recovery-point-arn is required")
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-recovery-point-restore-metadata-input
                    'make-get-recovery-point-restore-metadata-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-point-restore-metadata-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-point-restore-metadata-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-point-restore-metadata-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-recovery-point-restore-metadata-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-recovery-point-restore-metadata-output-"))
   (backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (restore-metadata common-lisp:nil :type
    (common-lisp:or metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-recovery-point-restore-metadata-output
                    'make-get-recovery-point-restore-metadata-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-point-restore-metadata-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-point-restore-metadata-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "BackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'restore-metadata))
      (common-lisp:list
       (common-lisp:cons "RestoreMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-point-restore-metadata-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-supported-resource-types-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-supported-resource-types-output-"))
   (resource-types common-lisp:nil :type
    (common-lisp:or resource-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-supported-resource-types-output
                    'make-get-supported-resource-types-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-supported-resource-types-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-supported-resource-types-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-types))
      (common-lisp:list
       (common-lisp:cons "ResourceTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-supported-resource-types-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype global-settings () 'common-lisp:hash-table)
 (common-lisp:defun |make-global-settings|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype global-settings-name () 'common-lisp:string)
(common-lisp:deftype global-settings-value () 'common-lisp:string)
(common-lisp:deftype iampolicy () 'common-lisp:string)
(common-lisp:deftype iamrole-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-value-exception
     (backup-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       invalid-parameter-value-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-value-exception-message)
      (type :initarg :type :initform common-lisp:nil :reader
       invalid-parameter-value-exception-type)
      (context :initarg :context :initform common-lisp:nil :reader
       invalid-parameter-value-exception-context)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'invalid-parameter-value-exception-code
                    'invalid-parameter-value-exception-message
                    'invalid-parameter-value-exception-type
                    'invalid-parameter-value-exception-context)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (backup-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       invalid-request-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)
      (type :initarg :type :initform common-lisp:nil :reader
       invalid-request-exception-type)
      (context :initarg :context :initform common-lisp:nil :reader
       invalid-request-exception-context)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception 'invalid-request-exception-code
                    'invalid-request-exception-message
                    'invalid-request-exception-type
                    'invalid-request-exception-context)))
(common-lisp:progn
 (common-lisp:define-condition invalid-resource-state-exception
     (backup-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       invalid-resource-state-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       invalid-resource-state-exception-message)
      (type :initarg :type :initform common-lisp:nil :reader
       invalid-resource-state-exception-type)
      (context :initarg :context :initform common-lisp:nil :reader
       invalid-resource-state-exception-context)))
 (common-lisp:export
  (common-lisp:list 'invalid-resource-state-exception
                    'invalid-resource-state-exception-code
                    'invalid-resource-state-exception-message
                    'invalid-resource-state-exception-type
                    'invalid-resource-state-exception-context)))
(common-lisp:deftype is-enabled () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (legal-hold (:copier common-lisp:nil)
      (:conc-name "struct-shape-legal-hold-"))
   (title common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or legal-hold-status common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (legal-hold-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (legal-hold-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (cancellation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'legal-hold 'make-legal-hold))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input legal-hold))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input legal-hold))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'legal-hold-id))
      (common-lisp:list
       (common-lisp:cons "LegalHoldId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'legal-hold-arn))
      (common-lisp:list
       (common-lisp:cons "LegalHoldArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cancellation-date))
      (common-lisp:list
       (common-lisp:cons "CancellationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input legal-hold))
   common-lisp:nil))
(common-lisp:deftype legal-hold-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype legal-holds-list ()
   '(trivial-types:proper-list legal-hold))
 (common-lisp:defun |make-legal-holds-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list legal-hold))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lifecycle (:copier common-lisp:nil)
      (:conc-name "struct-shape-lifecycle-"))
   (move-to-cold-storage-after-days common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (delete-after-days common-lisp:nil :type
    (common-lisp:or long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lifecycle 'make-lifecycle))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lifecycle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lifecycle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'move-to-cold-storage-after-days))
      (common-lisp:list
       (common-lisp:cons "MoveToColdStorageAfterDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delete-after-days))
      (common-lisp:list
       (common-lisp:cons "DeleteAfterDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lifecycle))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (backup-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       limit-exceeded-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)
      (type :initarg :type :initform common-lisp:nil :reader
       limit-exceeded-exception-type)
      (context :initarg :context :initform common-lisp:nil :reader
       limit-exceeded-exception-context)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'limit-exceeded-exception-code
                    'limit-exceeded-exception-message
                    'limit-exceeded-exception-type
                    'limit-exceeded-exception-context)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backup-jobs-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backup-jobs-input-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (by-resource-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (by-state common-lisp:nil :type
    (common-lisp:or backup-job-state common-lisp:null))
   (by-backup-vault-name common-lisp:nil :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (by-created-before common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-created-after common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (by-account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (by-complete-after common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-complete-before common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-parent-job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backup-jobs-input 'make-list-backup-jobs-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-jobs-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-jobs-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-jobs-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backup-jobs-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backup-jobs-output-"))
   (backup-jobs common-lisp:nil :type
    (common-lisp:or backup-jobs-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backup-jobs-output 'make-list-backup-jobs-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-jobs-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-jobs-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-jobs))
      (common-lisp:list
       (common-lisp:cons "BackupJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-jobs-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backup-plan-templates-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backup-plan-templates-input-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backup-plan-templates-input
                    'make-list-backup-plan-templates-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plan-templates-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plan-templates-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plan-templates-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backup-plan-templates-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backup-plan-templates-output-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plan-templates-list common-lisp:nil :type
    (common-lisp:or backup-plan-templates-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backup-plan-templates-output
                    'make-list-backup-plan-templates-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plan-templates-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plan-templates-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-plan-templates-list))
      (common-lisp:list
       (common-lisp:cons "BackupPlanTemplatesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plan-templates-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backup-plan-versions-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backup-plan-versions-input-"))
   (backup-plan-id (common-lisp:error ":backup-plan-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backup-plan-versions-input
                    'make-list-backup-plan-versions-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plan-versions-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plan-versions-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plan-versions-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backup-plan-versions-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backup-plan-versions-output-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plan-versions-list common-lisp:nil :type
    (common-lisp:or backup-plan-versions-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backup-plan-versions-output
                    'make-list-backup-plan-versions-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plan-versions-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plan-versions-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-plan-versions-list))
      (common-lisp:list
       (common-lisp:cons "BackupPlanVersionsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plan-versions-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backup-plans-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backup-plans-input-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (include-deleted common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backup-plans-input 'make-list-backup-plans-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plans-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plans-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plans-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backup-plans-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backup-plans-output-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plans-list common-lisp:nil :type
    (common-lisp:or backup-plans-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backup-plans-output 'make-list-backup-plans-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plans-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plans-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plans-list))
      (common-lisp:list
       (common-lisp:cons "BackupPlansList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-plans-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backup-selections-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backup-selections-input-"))
   (backup-plan-id (common-lisp:error ":backup-plan-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backup-selections-input
                    'make-list-backup-selections-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-selections-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-selections-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-selections-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backup-selections-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backup-selections-output-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-selections-list common-lisp:nil :type
    (common-lisp:or backup-selections-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backup-selections-output
                    'make-list-backup-selections-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-selections-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-selections-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-selections-list))
      (common-lisp:list
       (common-lisp:cons "BackupSelectionsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-selections-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backup-vaults-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backup-vaults-input-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backup-vaults-input 'make-list-backup-vaults-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-vaults-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-vaults-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-vaults-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backup-vaults-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backup-vaults-output-"))
   (backup-vault-list common-lisp:nil :type
    (common-lisp:or backup-vault-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backup-vaults-output
                    'make-list-backup-vaults-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-vaults-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-vaults-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-list))
      (common-lisp:list
       (common-lisp:cons "BackupVaultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backup-vaults-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-copy-jobs-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-copy-jobs-input-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (by-resource-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (by-state common-lisp:nil :type
    (common-lisp:or copy-job-state common-lisp:null))
   (by-created-before common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-created-after common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (by-destination-vault-arn common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (by-complete-before common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-complete-after common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-parent-job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-copy-jobs-input 'make-list-copy-jobs-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-copy-jobs-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-copy-jobs-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-copy-jobs-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-copy-jobs-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-copy-jobs-output-"))
   (copy-jobs common-lisp:nil :type
    (common-lisp:or copy-jobs-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-copy-jobs-output 'make-list-copy-jobs-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-copy-jobs-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-copy-jobs-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'copy-jobs))
      (common-lisp:list
       (common-lisp:cons "CopyJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-copy-jobs-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-frameworks-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-frameworks-input-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-framework-inputs common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-frameworks-input 'make-list-frameworks-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-frameworks-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-frameworks-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-frameworks-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-frameworks-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-frameworks-output-"))
   (frameworks common-lisp:nil :type
    (common-lisp:or framework-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-frameworks-output 'make-list-frameworks-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-frameworks-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-frameworks-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'frameworks))
      (common-lisp:list
       (common-lisp:cons "Frameworks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-frameworks-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-legal-holds-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-legal-holds-input-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-legal-holds-input 'make-list-legal-holds-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-legal-holds-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-legal-holds-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-legal-holds-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-legal-holds-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-legal-holds-output-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (legal-holds common-lisp:nil :type
    (common-lisp:or legal-holds-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-legal-holds-output 'make-list-legal-holds-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-legal-holds-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-legal-holds-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'legal-holds))
      (common-lisp:list
       (common-lisp:cons "LegalHolds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-legal-holds-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-of-tags () '(trivial-types:proper-list condition))
 (common-lisp:defun |make-list-of-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list condition))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-protected-resources-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-protected-resources-input-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-protected-resources-input
                    'make-list-protected-resources-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-protected-resources-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-protected-resources-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-protected-resources-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-protected-resources-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-protected-resources-output-"))
   (results common-lisp:nil :type
    (common-lisp:or protected-resources-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-protected-resources-output
                    'make-list-protected-resources-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-protected-resources-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-protected-resources-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'results))
      (common-lisp:list
       (common-lisp:cons "Results"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-protected-resources-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-recovery-points-by-backup-vault-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-recovery-points-by-backup-vault-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (by-resource-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (by-resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (by-backup-plan-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-created-before common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-created-after common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-parent-recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-recovery-points-by-backup-vault-input
                    'make-list-recovery-points-by-backup-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-backup-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-backup-vault-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-backup-vault-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-recovery-points-by-backup-vault-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-recovery-points-by-backup-vault-output-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (recovery-points common-lisp:nil :type
    (common-lisp:or recovery-point-by-backup-vault-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-recovery-points-by-backup-vault-output
                    'make-list-recovery-points-by-backup-vault-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-backup-vault-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-backup-vault-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-points))
      (common-lisp:list
       (common-lisp:cons "RecoveryPoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-backup-vault-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-recovery-points-by-legal-hold-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-recovery-points-by-legal-hold-input-"))
   (legal-hold-id (common-lisp:error ":legal-hold-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-recovery-points-by-legal-hold-input
                    'make-list-recovery-points-by-legal-hold-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-legal-hold-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-legal-hold-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-legal-hold-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-recovery-points-by-legal-hold-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-recovery-points-by-legal-hold-output-"))
   (recovery-points common-lisp:nil :type
    (common-lisp:or recovery-points-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-recovery-points-by-legal-hold-output
                    'make-list-recovery-points-by-legal-hold-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-legal-hold-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-legal-hold-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-points))
      (common-lisp:list
       (common-lisp:cons "RecoveryPoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-legal-hold-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-recovery-points-by-resource-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-recovery-points-by-resource-input-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-recovery-points-by-resource-input
                    'make-list-recovery-points-by-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-recovery-points-by-resource-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-recovery-points-by-resource-output-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (recovery-points common-lisp:nil :type
    (common-lisp:or recovery-point-by-resource-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-recovery-points-by-resource-output
                    'make-list-recovery-points-by-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-points))
      (common-lisp:list
       (common-lisp:cons "RecoveryPoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-points-by-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-report-jobs-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-report-jobs-input-"))
   (by-report-plan-name common-lisp:nil :type
    (common-lisp:or report-plan-name common-lisp:null))
   (by-creation-before common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-creation-after common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-status common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-report-jobs-input 'make-list-report-jobs-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-report-jobs-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-report-jobs-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-report-jobs-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-report-jobs-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-report-jobs-output-"))
   (report-jobs common-lisp:nil :type
    (common-lisp:or report-job-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-report-jobs-output 'make-list-report-jobs-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-report-jobs-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-report-jobs-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-jobs))
      (common-lisp:list
       (common-lisp:cons "ReportJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-report-jobs-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-report-plans-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-report-plans-input-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-report-plans-input 'make-list-report-plans-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-report-plans-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-report-plans-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-report-plans-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-report-plans-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-report-plans-output-"))
   (report-plans common-lisp:nil :type
    (common-lisp:or report-plan-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-report-plans-output 'make-list-report-plans-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-report-plans-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-report-plans-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-plans))
      (common-lisp:list
       (common-lisp:cons "ReportPlans"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-report-plans-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-restore-jobs-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-restore-jobs-input-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (by-account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (by-created-before common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-created-after common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-status common-lisp:nil :type
    (common-lisp:or restore-job-status common-lisp:null))
   (by-complete-before common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (by-complete-after common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-restore-jobs-input 'make-list-restore-jobs-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-restore-jobs-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-restore-jobs-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-restore-jobs-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-restore-jobs-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-restore-jobs-output-"))
   (restore-jobs common-lisp:nil :type
    (common-lisp:or restore-jobs-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-restore-jobs-output 'make-list-restore-jobs-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-restore-jobs-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-restore-jobs-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'restore-jobs))
      (common-lisp:list
       (common-lisp:cons "RestoreJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-restore-jobs-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-input-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export (common-lisp:list 'list-tags-input 'make-list-tags-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tags-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tags-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tags-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-output-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-output 'make-list-tags-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tags-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tags-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tags-output))
   common-lisp:nil))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:deftype max-framework-inputs () 'common-lisp:integer)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype metadata () 'common-lisp:hash-table)
 (common-lisp:defun |make-metadata| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype metadata-key () 'common-lisp:string)
(common-lisp:deftype metadata-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition missing-parameter-value-exception
     (backup-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       missing-parameter-value-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       missing-parameter-value-exception-message)
      (type :initarg :type :initform common-lisp:nil :reader
       missing-parameter-value-exception-type)
      (context :initarg :context :initform common-lisp:nil :reader
       missing-parameter-value-exception-context)))
 (common-lisp:export
  (common-lisp:list 'missing-parameter-value-exception
                    'missing-parameter-value-exception-code
                    'missing-parameter-value-exception-message
                    'missing-parameter-value-exception-type
                    'missing-parameter-value-exception-context)))
(common-lisp:deftype parameter-name () 'common-lisp:string)
(common-lisp:deftype parameter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (protected-resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-protected-resource-"))
   (resource-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (last-backup-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'protected-resource 'make-protected-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input protected-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input protected-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-backup-time))
      (common-lisp:list
       (common-lisp:cons "LastBackupTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input protected-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype protected-resources-list ()
   '(trivial-types:proper-list protected-resource))
 (common-lisp:defun |make-protected-resources-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list protected-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (put-backup-vault-access-policy-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-backup-vault-access-policy-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null))
   (policy common-lisp:nil :type (common-lisp:or iampolicy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-backup-vault-access-policy-input
                    'make-put-backup-vault-access-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-backup-vault-access-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-backup-vault-access-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-backup-vault-access-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-backup-vault-lock-configuration-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-backup-vault-lock-configuration-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null))
   (min-retention-days common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (max-retention-days common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (changeable-for-days common-lisp:nil :type
    (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-backup-vault-lock-configuration-input
                    'make-put-backup-vault-lock-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-backup-vault-lock-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-backup-vault-lock-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-retention-days))
      (common-lisp:list
       (common-lisp:cons "MinRetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-retention-days))
      (common-lisp:list
       (common-lisp:cons "MaxRetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'changeable-for-days))
      (common-lisp:list
       (common-lisp:cons "ChangeableForDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-backup-vault-lock-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-backup-vault-notifications-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-backup-vault-notifications-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null))
   (snstopic-arn (common-lisp:error ":snstopic-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (backup-vault-events (common-lisp:error ":backup-vault-events is required")
    :type (common-lisp:or backup-vault-events common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-backup-vault-notifications-input
                    'make-put-backup-vault-notifications-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-backup-vault-notifications-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-backup-vault-notifications-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snstopic-arn))
      (common-lisp:list
       (common-lisp:cons "SNSTopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-events))
      (common-lisp:list
       (common-lisp:cons "BackupVaultEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-backup-vault-notifications-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (recovery-point-by-backup-vault (:copier common-lisp:nil)
      (:conc-name "struct-shape-recovery-point-by-backup-vault-"))
   (recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (backup-vault-name common-lisp:nil :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (source-backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (resource-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (created-by common-lisp:nil :type
    (common-lisp:or recovery-point-creator common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or iamrole-arn common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or recovery-point-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-size-in-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (calculated-lifecycle common-lisp:nil :type
    (common-lisp:or calculated-lifecycle common-lisp:null))
   (lifecycle common-lisp:nil :type
    (common-lisp:or lifecycle common-lisp:null))
   (encryption-key-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (is-encrypted common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (last-restore-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (parent-recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (composite-member-identifier common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-parent common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recovery-point-by-backup-vault
                    'make-recovery-point-by-backup-vault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-by-backup-vault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-by-backup-vault))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "BackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "BackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "SourceBackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-date))
      (common-lisp:list
       (common-lisp:cons "CompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "BackupSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'calculated-lifecycle))
      (common-lisp:list
       (common-lisp:cons "CalculatedLifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle))
      (common-lisp:list
       (common-lisp:cons "Lifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-key-arn))
      (common-lisp:list
       (common-lisp:cons "EncryptionKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-encrypted))
      (common-lisp:list
       (common-lisp:cons "IsEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-restore-time))
      (common-lisp:list
       (common-lisp:cons "LastRestoreTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "ParentRecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'composite-member-identifier))
      (common-lisp:list
       (common-lisp:cons "CompositeMemberIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-parent))
      (common-lisp:list
       (common-lisp:cons "IsParent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-by-backup-vault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recovery-point-by-backup-vault-list ()
   '(trivial-types:proper-list recovery-point-by-backup-vault))
 (common-lisp:defun |make-recovery-point-by-backup-vault-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recovery-point-by-backup-vault))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (recovery-point-by-resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-recovery-point-by-resource-"))
   (recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or recovery-point-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (encryption-key-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (backup-size-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (backup-vault-name common-lisp:nil :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (is-parent common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (parent-recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recovery-point-by-resource
                    'make-recovery-point-by-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-by-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-by-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-key-arn))
      (common-lisp:list
       (common-lisp:cons "EncryptionKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-size-bytes))
      (common-lisp:list
       (common-lisp:cons "BackupSizeBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "BackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-parent))
      (common-lisp:list
       (common-lisp:cons "IsParent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "ParentRecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-by-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recovery-point-by-resource-list ()
   '(trivial-types:proper-list recovery-point-by-resource))
 (common-lisp:defun |make-recovery-point-by-resource-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recovery-point-by-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (recovery-point-creator (:copier common-lisp:nil)
      (:conc-name "struct-shape-recovery-point-creator-"))
   (backup-plan-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plan-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (backup-plan-version common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-rule-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recovery-point-creator 'make-recovery-point-creator))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-creator))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-creator))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-id))
      (common-lisp:list
       (common-lisp:cons "BackupPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-arn))
      (common-lisp:list
       (common-lisp:cons "BackupPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-version))
      (common-lisp:list
       (common-lisp:cons "BackupPlanVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-rule-id))
      (common-lisp:list
       (common-lisp:cons "BackupRuleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-creator))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (recovery-point-member (:copier common-lisp:nil)
      (:conc-name "struct-shape-recovery-point-member-"))
   (recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recovery-point-member 'make-recovery-point-member))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-member))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-member))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-member))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (recovery-point-selection (:copier common-lisp:nil)
      (:conc-name "struct-shape-recovery-point-selection-"))
   (vault-names common-lisp:nil :type
    (common-lisp:or vault-names common-lisp:null))
   (resource-identifiers common-lisp:nil :type
    (common-lisp:or resource-identifiers common-lisp:null))
   (date-range common-lisp:nil :type
    (common-lisp:or date-range common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recovery-point-selection 'make-recovery-point-selection))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-selection))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-selection))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vault-names))
      (common-lisp:list
       (common-lisp:cons "VaultNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-identifiers))
      (common-lisp:list
       (common-lisp:cons "ResourceIdentifiers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'date-range))
      (common-lisp:list
       (common-lisp:cons "DateRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recovery-point-selection))
   common-lisp:nil))
(common-lisp:deftype recovery-point-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recovery-points-list ()
   '(trivial-types:proper-list recovery-point-member))
 (common-lisp:defun |make-recovery-points-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recovery-point-member))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (report-delivery-channel (:copier common-lisp:nil)
      (:conc-name "struct-shape-report-delivery-channel-"))
   (s3bucket-name (common-lisp:error ":s3bucket-name is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (s3key-prefix common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (formats common-lisp:nil :type
    (common-lisp:or format-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'report-delivery-channel 'make-report-delivery-channel))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          report-delivery-channel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          report-delivery-channel))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket-name))
      (common-lisp:list
       (common-lisp:cons "S3BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3key-prefix))
      (common-lisp:list
       (common-lisp:cons "S3KeyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'formats))
      (common-lisp:list
       (common-lisp:cons "Formats"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          report-delivery-channel))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (report-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-report-destination-"))
   (s3bucket-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (s3keys common-lisp:nil :type
    (common-lisp:or |stringList| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'report-destination 'make-report-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input report-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input report-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket-name))
      (common-lisp:list
       (common-lisp:cons "S3BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3keys))
      (common-lisp:list
       (common-lisp:cons "S3Keys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input report-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (report-job (:copier common-lisp:nil)
      (:conc-name "struct-shape-report-job-"))
   (report-job-id common-lisp:nil :type
    (common-lisp:or report-job-id common-lisp:null))
   (report-plan-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (report-template common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completion-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (report-destination common-lisp:nil :type
    (common-lisp:or report-destination common-lisp:null)))
 (common-lisp:export (common-lisp:list 'report-job 'make-report-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input report-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input report-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-job-id))
      (common-lisp:list
       (common-lisp:cons "ReportJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-plan-arn))
      (common-lisp:list
       (common-lisp:cons "ReportPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-template))
      (common-lisp:list
       (common-lisp:cons "ReportTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-time))
      (common-lisp:list
       (common-lisp:cons "CompletionTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-destination))
      (common-lisp:list
       (common-lisp:cons "ReportDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input report-job))
   common-lisp:nil))
(common-lisp:deftype report-job-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype report-job-list ()
   '(trivial-types:proper-list report-job))
 (common-lisp:defun |make-report-job-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list report-job))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (report-plan (:copier common-lisp:nil)
      (:conc-name "struct-shape-report-plan-"))
   (report-plan-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (report-plan-name common-lisp:nil :type
    (common-lisp:or report-plan-name common-lisp:null))
   (report-plan-description common-lisp:nil :type
    (common-lisp:or report-plan-description common-lisp:null))
   (report-setting common-lisp:nil :type
    (common-lisp:or report-setting common-lisp:null))
   (report-delivery-channel common-lisp:nil :type
    (common-lisp:or report-delivery-channel common-lisp:null))
   (deployment-status common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (last-attempted-execution-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (last-successful-execution-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'report-plan 'make-report-plan))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input report-plan))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input report-plan))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-plan-arn))
      (common-lisp:list
       (common-lisp:cons "ReportPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-plan-name))
      (common-lisp:list
       (common-lisp:cons "ReportPlanName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'report-plan-description))
      (common-lisp:list
       (common-lisp:cons "ReportPlanDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-setting))
      (common-lisp:list
       (common-lisp:cons "ReportSetting"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'report-delivery-channel))
      (common-lisp:list
       (common-lisp:cons "ReportDeliveryChannel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-attempted-execution-time))
      (common-lisp:list
       (common-lisp:cons "LastAttemptedExecutionTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-successful-execution-time))
      (common-lisp:list
       (common-lisp:cons "LastSuccessfulExecutionTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input report-plan))
   common-lisp:nil))
(common-lisp:deftype report-plan-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype report-plan-list ()
   '(trivial-types:proper-list report-plan))
 (common-lisp:defun |make-report-plan-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list report-plan))
   aws-sdk/generator/shape::members))
(common-lisp:deftype report-plan-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (report-setting (:copier common-lisp:nil)
      (:conc-name "struct-shape-report-setting-"))
   (report-template (common-lisp:error ":report-template is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (framework-arns common-lisp:nil :type
    (common-lisp:or |stringList| common-lisp:null))
   (number-of-frameworks common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (accounts common-lisp:nil :type
    (common-lisp:or |stringList| common-lisp:null))
   (organization-units common-lisp:nil :type
    (common-lisp:or |stringList| common-lisp:null))
   (regions common-lisp:nil :type
    (common-lisp:or |stringList| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'report-setting 'make-report-setting))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input report-setting))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input report-setting))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-template))
      (common-lisp:list
       (common-lisp:cons "ReportTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-arns))
      (common-lisp:list
       (common-lisp:cons "FrameworkArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-frameworks))
      (common-lisp:list
       (common-lisp:cons "NumberOfFrameworks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accounts))
      (common-lisp:list
       (common-lisp:cons "Accounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'organization-units))
      (common-lisp:list
       (common-lisp:cons "OrganizationUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'regions))
      (common-lisp:list
       (common-lisp:cons "Regions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input report-setting))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-arns () '(trivial-types:proper-list arn))
 (common-lisp:defun |make-resource-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype resource-identifiers ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-resource-identifiers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (backup-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       resource-not-found-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (type :initarg :type :initform common-lisp:nil :reader
       resource-not-found-exception-type)
      (context :initarg :context :initform common-lisp:nil :reader
       resource-not-found-exception-context)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-code
                    'resource-not-found-exception-message
                    'resource-not-found-exception-type
                    'resource-not-found-exception-context)))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-type-list () '(trivial-types:proper-list arn))
 (common-lisp:defun |make-resource-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype resource-type-management-preference ()
   'common-lisp:hash-table)
 (common-lisp:defun |make-resource-type-management-preference|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype resource-type-opt-in-preference ()
   'common-lisp:hash-table)
 (common-lisp:defun |make-resource-type-opt-in-preference|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype resource-types ()
   '(trivial-types:proper-list resource-type))
 (common-lisp:defun |make-resource-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype restore-job-id () 'common-lisp:string)
(common-lisp:deftype restore-job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype restore-jobs-list ()
   '(trivial-types:proper-list restore-jobs-list-member))
 (common-lisp:defun |make-restore-jobs-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            restore-jobs-list-member))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (restore-jobs-list-member (:copier common-lisp:nil)
      (:conc-name "struct-shape-restore-jobs-list-member-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (restore-job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or restore-job-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (percent-done common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-size-in-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or iamrole-arn common-lisp:null))
   (expected-completion-time-minutes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (created-resource-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'restore-jobs-list-member 'make-restore-jobs-list-member))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          restore-jobs-list-member))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          restore-jobs-list-member))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'restore-job-id))
      (common-lisp:list
       (common-lisp:cons "RestoreJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-date))
      (common-lisp:list
       (common-lisp:cons "CompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-done))
      (common-lisp:list
       (common-lisp:cons "PercentDone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backup-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "BackupSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'expected-completion-time-minutes))
      (common-lisp:list
       (common-lisp:cons "ExpectedCompletionTimeMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'created-resource-arn))
      (common-lisp:list
       (common-lisp:cons "CreatedResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          restore-jobs-list-member))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (backup-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       service-unavailable-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)
      (type :initarg :type :initform common-lisp:nil :reader
       service-unavailable-exception-type)
      (context :initarg :context :initform common-lisp:nil :reader
       service-unavailable-exception-context)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-code
                    'service-unavailable-exception-message
                    'service-unavailable-exception-type
                    'service-unavailable-exception-context)))
(common-lisp:progn
 (common-lisp:defstruct
     (start-backup-job-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-backup-job-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (iam-role-arn (common-lisp:error ":iam-role-arn is required") :type
    (common-lisp:or iamrole-arn common-lisp:null))
   (idempotency-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (start-window-minutes common-lisp:nil :type
    (common-lisp:or window-minutes common-lisp:null))
   (complete-window-minutes common-lisp:nil :type
    (common-lisp:or window-minutes common-lisp:null))
   (lifecycle common-lisp:nil :type
    (common-lisp:or lifecycle common-lisp:null))
   (recovery-point-tags common-lisp:nil :type
    (common-lisp:or tags common-lisp:null))
   (backup-options common-lisp:nil :type
    (common-lisp:or backup-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-backup-job-input 'make-start-backup-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-backup-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-backup-job-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "BackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idempotency-token))
      (common-lisp:list
       (common-lisp:cons "IdempotencyToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'start-window-minutes))
      (common-lisp:list
       (common-lisp:cons "StartWindowMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'complete-window-minutes))
      (common-lisp:list
       (common-lisp:cons "CompleteWindowMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle))
      (common-lisp:list
       (common-lisp:cons "Lifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-tags))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-options))
      (common-lisp:list
       (common-lisp:cons "BackupOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-backup-job-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-backup-job-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-backup-job-output-"))
   (backup-job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-parent common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-backup-job-output 'make-start-backup-job-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-backup-job-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-backup-job-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-job-id))
      (common-lisp:list
       (common-lisp:cons "BackupJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-parent))
      (common-lisp:list
       (common-lisp:cons "IsParent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-backup-job-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-copy-job-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-copy-job-input-"))
   (recovery-point-arn (common-lisp:error ":recovery-point-arn is required")
    :type (common-lisp:or arn common-lisp:null))
   (source-backup-vault-name
    (common-lisp:error ":source-backup-vault-name is required") :type
    (common-lisp:or backup-vault-name common-lisp:null))
   (destination-backup-vault-arn
    (common-lisp:error ":destination-backup-vault-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (iam-role-arn (common-lisp:error ":iam-role-arn is required") :type
    (common-lisp:or iamrole-arn common-lisp:null))
   (idempotency-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (lifecycle common-lisp:nil :type
    (common-lisp:or lifecycle common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-copy-job-input 'make-start-copy-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-copy-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-copy-job-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-backup-vault-name))
      (common-lisp:list
       (common-lisp:cons "SourceBackupVaultName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationBackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idempotency-token))
      (common-lisp:list
       (common-lisp:cons "IdempotencyToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle))
      (common-lisp:list
       (common-lisp:cons "Lifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-copy-job-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-copy-job-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-copy-job-output-"))
   (copy-job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-parent common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-copy-job-output 'make-start-copy-job-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-copy-job-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-copy-job-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'copy-job-id))
      (common-lisp:list
       (common-lisp:cons "CopyJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-parent))
      (common-lisp:list
       (common-lisp:cons "IsParent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-copy-job-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-report-job-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-report-job-input-"))
   (report-plan-name (common-lisp:error ":report-plan-name is required") :type
    (common-lisp:or report-plan-name common-lisp:null))
   (idempotency-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-report-job-input 'make-start-report-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-report-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-report-job-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idempotency-token))
      (common-lisp:list
       (common-lisp:cons "IdempotencyToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-report-job-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-report-job-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-report-job-output-"))
   (report-job-id common-lisp:nil :type
    (common-lisp:or report-job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-report-job-output 'make-start-report-job-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-report-job-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-report-job-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-job-id))
      (common-lisp:list
       (common-lisp:cons "ReportJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-report-job-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-restore-job-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-restore-job-input-"))
   (recovery-point-arn (common-lisp:error ":recovery-point-arn is required")
    :type (common-lisp:or arn common-lisp:null))
   (metadata (common-lisp:error ":metadata is required") :type
    (common-lisp:or metadata common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or iamrole-arn common-lisp:null))
   (idempotency-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-restore-job-input 'make-start-restore-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-restore-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-restore-job-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idempotency-token))
      (common-lisp:list
       (common-lisp:cons "IdempotencyToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-restore-job-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-restore-job-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-restore-job-output-"))
   (restore-job-id common-lisp:nil :type
    (common-lisp:or restore-job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-restore-job-output 'make-start-restore-job-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-restore-job-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-restore-job-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'restore-job-id))
      (common-lisp:list
       (common-lisp:cons "RestoreJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-restore-job-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-backup-job-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-backup-job-input-"))
   (backup-job-id (common-lisp:error ":backup-job-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-backup-job-input 'make-stop-backup-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-backup-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-backup-job-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-backup-job-input))
   common-lisp:nil))
(common-lisp:deftype storage-class () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-input-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-input 'make-tag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-input))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () 'common-lisp:hash-table)
 (common-lisp:defun |make-tags| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-input-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (tag-key-list (common-lisp:error ":tag-key-list is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-input 'make-untag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-key-list))
      (common-lisp:list
       (common-lisp:cons "TagKeyList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input untag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backup-plan-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backup-plan-input-"))
   (backup-plan-id (common-lisp:error ":backup-plan-id is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plan (common-lisp:error ":backup-plan is required") :type
    (common-lisp:or backup-plan-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backup-plan-input 'make-update-backup-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backup-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backup-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan))
      (common-lisp:list
       (common-lisp:cons "BackupPlan"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backup-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backup-plan-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backup-plan-output-"))
   (backup-plan-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (backup-plan-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (advanced-backup-settings common-lisp:nil :type
    (common-lisp:or advanced-backup-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backup-plan-output
                    'make-update-backup-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backup-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backup-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-id))
      (common-lisp:list
       (common-lisp:cons "BackupPlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-plan-arn))
      (common-lisp:list
       (common-lisp:cons "BackupPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-id))
      (common-lisp:list
       (common-lisp:cons "VersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'advanced-backup-settings))
      (common-lisp:list
       (common-lisp:cons "AdvancedBackupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backup-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-framework-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-framework-input-"))
   (framework-name (common-lisp:error ":framework-name is required") :type
    (common-lisp:or framework-name common-lisp:null))
   (framework-description common-lisp:nil :type
    (common-lisp:or framework-description common-lisp:null))
   (framework-controls common-lisp:nil :type
    (common-lisp:or framework-controls common-lisp:null))
   (idempotency-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-framework-input 'make-update-framework-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-framework-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-framework-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framework-description))
      (common-lisp:list
       (common-lisp:cons "FrameworkDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-controls))
      (common-lisp:list
       (common-lisp:cons "FrameworkControls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idempotency-token))
      (common-lisp:list
       (common-lisp:cons "IdempotencyToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-framework-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-framework-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-framework-output-"))
   (framework-name common-lisp:nil :type
    (common-lisp:or framework-name common-lisp:null))
   (framework-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-framework-output 'make-update-framework-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-framework-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-framework-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-name))
      (common-lisp:list
       (common-lisp:cons "FrameworkName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framework-arn))
      (common-lisp:list
       (common-lisp:cons "FrameworkArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-framework-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-global-settings-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-global-settings-input-"))
   (global-settings common-lisp:nil :type
    (common-lisp:or global-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-global-settings-input
                    'make-update-global-settings-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-global-settings-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-global-settings-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'global-settings))
      (common-lisp:list
       (common-lisp:cons "GlobalSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-global-settings-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-recovery-point-lifecycle-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-recovery-point-lifecycle-input-"))
   (backup-vault-name (common-lisp:error ":backup-vault-name is required")
    :type (common-lisp:or backup-vault-name common-lisp:null))
   (recovery-point-arn (common-lisp:error ":recovery-point-arn is required")
    :type (common-lisp:or arn common-lisp:null))
   (lifecycle common-lisp:nil :type
    (common-lisp:or lifecycle common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-recovery-point-lifecycle-input
                    'make-update-recovery-point-lifecycle-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-point-lifecycle-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-point-lifecycle-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle))
      (common-lisp:list
       (common-lisp:cons "Lifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-point-lifecycle-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-recovery-point-lifecycle-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-recovery-point-lifecycle-output-"))
   (backup-vault-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (recovery-point-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (lifecycle common-lisp:nil :type
    (common-lisp:or lifecycle common-lisp:null))
   (calculated-lifecycle common-lisp:nil :type
    (common-lisp:or calculated-lifecycle common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-recovery-point-lifecycle-output
                    'make-update-recovery-point-lifecycle-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-point-lifecycle-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-point-lifecycle-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'backup-vault-arn))
      (common-lisp:list
       (common-lisp:cons "BackupVaultArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-point-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle))
      (common-lisp:list
       (common-lisp:cons "Lifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'calculated-lifecycle))
      (common-lisp:list
       (common-lisp:cons "CalculatedLifecycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-point-lifecycle-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-region-settings-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-region-settings-input-"))
   (resource-type-opt-in-preference common-lisp:nil :type
    (common-lisp:or resource-type-opt-in-preference common-lisp:null))
   (resource-type-management-preference common-lisp:nil :type
    (common-lisp:or resource-type-management-preference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-region-settings-input
                    'make-update-region-settings-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-region-settings-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-region-settings-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-type-opt-in-preference))
      (common-lisp:list
       (common-lisp:cons "ResourceTypeOptInPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-type-management-preference))
      (common-lisp:list
       (common-lisp:cons "ResourceTypeManagementPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-region-settings-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-report-plan-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-report-plan-input-"))
   (report-plan-name (common-lisp:error ":report-plan-name is required") :type
    (common-lisp:or report-plan-name common-lisp:null))
   (report-plan-description common-lisp:nil :type
    (common-lisp:or report-plan-description common-lisp:null))
   (report-delivery-channel common-lisp:nil :type
    (common-lisp:or report-delivery-channel common-lisp:null))
   (report-setting common-lisp:nil :type
    (common-lisp:or report-setting common-lisp:null))
   (idempotency-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-report-plan-input 'make-update-report-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-report-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-report-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'report-plan-description))
      (common-lisp:list
       (common-lisp:cons "ReportPlanDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'report-delivery-channel))
      (common-lisp:list
       (common-lisp:cons "ReportDeliveryChannel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-setting))
      (common-lisp:list
       (common-lisp:cons "ReportSetting"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idempotency-token))
      (common-lisp:list
       (common-lisp:cons "IdempotencyToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-report-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-report-plan-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-report-plan-output-"))
   (report-plan-name common-lisp:nil :type
    (common-lisp:or report-plan-name common-lisp:null))
   (report-plan-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-report-plan-output
                    'make-update-report-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-report-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-report-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-plan-name))
      (common-lisp:list
       (common-lisp:cons "ReportPlanName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-plan-arn))
      (common-lisp:list
       (common-lisp:cons "ReportPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-report-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype vault-names ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-vault-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype window-minutes () 'common-lisp:integer)
common-lisp:nil
common-lisp:nil
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:deftype |stringList| ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-stringlist|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |stringMap| () 'common-lisp:hash-table)
 (common-lisp:defun |make-stringmap| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun cancel-legal-hold
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key legal-hold-id cancel-description
                     retain-record-in-days)
   (common-lisp:declare
    (common-lisp:ignorable legal-hold-id cancel-description
     retain-record-in-days))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-legal-hold-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/legal-holds/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'legal-hold-id))))
                                                        "CancelLegalHold"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'cancel-legal-hold))
(common-lisp:progn
 (common-lisp:defun create-backup-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-plan backup-plan-tags
                     creator-request-id)
   (common-lisp:declare
    (common-lisp:ignorable backup-plan backup-plan-tags creator-request-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-backup-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" "/backup/plans/"
                                                        "CreateBackupPlan"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-backup-plan))
(common-lisp:progn
 (common-lisp:defun create-backup-selection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-plan-id backup-selection
                     creator-request-id)
   (common-lisp:declare
    (common-lisp:ignorable backup-plan-id backup-selection creator-request-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-backup-selection-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup/plans/~A/selections/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-plan-id))))
                                                        "CreateBackupSelection"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-backup-selection))
(common-lisp:progn
 (common-lisp:defun create-backup-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name backup-vault-tags
                     encryption-key-arn creator-request-id)
   (common-lisp:declare
    (common-lisp:ignorable backup-vault-name backup-vault-tags
     encryption-key-arn creator-request-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-backup-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))))
                                                        "CreateBackupVault"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-backup-vault))
(common-lisp:progn
 (common-lisp:defun create-framework
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key framework-name framework-description
                     framework-controls idempotency-token framework-tags)
   (common-lisp:declare
    (common-lisp:ignorable framework-name framework-description
     framework-controls idempotency-token framework-tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-framework-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/audit/frameworks"
                                                        "CreateFramework"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-framework))
(common-lisp:progn
 (common-lisp:defun create-legal-hold
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key title description idempotency-token
                     recovery-point-selection tags)
   (common-lisp:declare
    (common-lisp:ignorable title description idempotency-token
     recovery-point-selection tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-legal-hold-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/legal-holds/"
                                                        "CreateLegalHold"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-legal-hold))
(common-lisp:progn
 (common-lisp:defun create-report-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-plan-name report-plan-description
                     report-delivery-channel report-setting report-plan-tags
                     idempotency-token)
   (common-lisp:declare
    (common-lisp:ignorable report-plan-name report-plan-description
     report-delivery-channel report-setting report-plan-tags
     idempotency-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-report-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/audit/report-plans"
                                                        "CreateReportPlan"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-report-plan))
(common-lisp:progn
 (common-lisp:defun delete-backup-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-plan-id)
   (common-lisp:declare (common-lisp:ignorable backup-plan-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-backup-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup/plans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-plan-id))))
                                                        "DeleteBackupPlan"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-backup-plan))
(common-lisp:progn
 (common-lisp:defun delete-backup-selection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-plan-id selection-id)
   (common-lisp:declare (common-lisp:ignorable backup-plan-id selection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-backup-selection-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup/plans/~A/selections/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-plan-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'selection-id))))
                                                        "DeleteBackupSelection"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-backup-selection))
(common-lisp:progn
 (common-lisp:defun delete-backup-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name)
   (common-lisp:declare (common-lisp:ignorable backup-vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-backup-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))))
                                                        "DeleteBackupVault"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-backup-vault))
(common-lisp:progn
 (common-lisp:defun delete-backup-vault-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name)
   (common-lisp:declare (common-lisp:ignorable backup-vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-backup-vault-access-policy-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/access-policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))))
                                                        "DeleteBackupVaultAccessPolicy"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-backup-vault-access-policy))
(common-lisp:progn
 (common-lisp:defun delete-backup-vault-lock-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name)
   (common-lisp:declare (common-lisp:ignorable backup-vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-backup-vault-lock-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/vault-lock"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))))
                                                        "DeleteBackupVaultLockConfiguration"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-backup-vault-lock-configuration))
(common-lisp:progn
 (common-lisp:defun delete-backup-vault-notifications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name)
   (common-lisp:declare (common-lisp:ignorable backup-vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-backup-vault-notifications-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/notification-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))))
                                                        "DeleteBackupVaultNotifications"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-backup-vault-notifications))
(common-lisp:progn
 (common-lisp:defun delete-framework
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key framework-name)
   (common-lisp:declare (common-lisp:ignorable framework-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-framework-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/audit/frameworks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'framework-name))))
                                                        "DeleteFramework"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-framework))
(common-lisp:progn
 (common-lisp:defun delete-recovery-point
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name recovery-point-arn)
   (common-lisp:declare
    (common-lisp:ignorable backup-vault-name recovery-point-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-recovery-point-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/recovery-points/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'recovery-point-arn))))
                                                        "DeleteRecoveryPoint"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-recovery-point))
(common-lisp:progn
 (common-lisp:defun delete-report-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-plan-name)
   (common-lisp:declare (common-lisp:ignorable report-plan-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-report-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/audit/report-plans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'report-plan-name))))
                                                        "DeleteReportPlan"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-report-plan))
(common-lisp:progn
 (common-lisp:defun describe-backup-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-job-id)
   (common-lisp:declare (common-lisp:ignorable backup-job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-backup-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-job-id))))
                                                        "DescribeBackupJob"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-backup-job))
(common-lisp:progn
 (common-lisp:defun describe-backup-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name)
   (common-lisp:declare (common-lisp:ignorable backup-vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-backup-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))))
                                                        "DescribeBackupVault"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-backup-vault))
(common-lisp:progn
 (common-lisp:defun describe-copy-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key copy-job-id)
   (common-lisp:declare (common-lisp:ignorable copy-job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-copy-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/copy-jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'copy-job-id))))
                                                        "DescribeCopyJob"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-copy-job))
(common-lisp:progn
 (common-lisp:defun describe-framework
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key framework-name)
   (common-lisp:declare (common-lisp:ignorable framework-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-framework-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/audit/frameworks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'framework-name))))
                                                        "DescribeFramework"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-framework))
(common-lisp:progn
 (common-lisp:defun describe-global-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'backup-request :method "GET" :path
                                "/global-settings" :params
                                `(("Action" ,@"DescribeGlobalSettings")
                                  ("Version" ,@"2018-11-15"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'describe-global-settings))
(common-lisp:progn
 (common-lisp:defun describe-protected-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-protected-resource-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "DescribeProtectedResource"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-protected-resource))
(common-lisp:progn
 (common-lisp:defun describe-recovery-point
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name recovery-point-arn)
   (common-lisp:declare
    (common-lisp:ignorable backup-vault-name recovery-point-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-recovery-point-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/recovery-points/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'recovery-point-arn))))
                                                        "DescribeRecoveryPoint"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-recovery-point))
(common-lisp:progn
 (common-lisp:defun describe-region-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'backup-request :method "GET" :path
                                "/account-settings" :params
                                `(("Action" ,@"DescribeRegionSettings")
                                  ("Version" ,@"2018-11-15"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'describe-region-settings))
(common-lisp:progn
 (common-lisp:defun describe-report-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-job-id)
   (common-lisp:declare (common-lisp:ignorable report-job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-report-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/audit/report-jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'report-job-id))))
                                                        "DescribeReportJob"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-report-job))
(common-lisp:progn
 (common-lisp:defun describe-report-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-plan-name)
   (common-lisp:declare (common-lisp:ignorable report-plan-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-report-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/audit/report-plans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'report-plan-name))))
                                                        "DescribeReportPlan"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-report-plan))
(common-lisp:progn
 (common-lisp:defun describe-restore-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key restore-job-id)
   (common-lisp:declare (common-lisp:ignorable restore-job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-restore-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restore-jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restore-job-id))))
                                                        "DescribeRestoreJob"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-restore-job))
(common-lisp:progn
 (common-lisp:defun disassociate-recovery-point
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name recovery-point-arn)
   (common-lisp:declare
    (common-lisp:ignorable backup-vault-name recovery-point-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-recovery-point-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/recovery-points/~A/disassociate"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'recovery-point-arn))))
                                                        "DisassociateRecoveryPoint"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-recovery-point))
(common-lisp:progn
 (common-lisp:defun disassociate-recovery-point-from-parent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name recovery-point-arn)
   (common-lisp:declare
    (common-lisp:ignorable backup-vault-name recovery-point-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-recovery-point-from-parent-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/recovery-points/~A/parentAssociation"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'recovery-point-arn))))
                                                        "DisassociateRecoveryPointFromParent"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-recovery-point-from-parent))
(common-lisp:progn
 (common-lisp:defun export-backup-plan-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-plan-id)
   (common-lisp:declare (common-lisp:ignorable backup-plan-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-backup-plan-template-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup/plans/~A/toTemplate/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-plan-id))))
                                                        "ExportBackupPlanTemplate"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-backup-plan-template))
(common-lisp:progn
 (common-lisp:defun get-backup-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-plan-id version-id)
   (common-lisp:declare (common-lisp:ignorable backup-plan-id version-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-backup-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup/plans/~A/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-plan-id))))
                                                        "GetBackupPlan"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-backup-plan))
(common-lisp:progn
 (common-lisp:defun get-backup-plan-from-json
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-plan-template-json)
   (common-lisp:declare (common-lisp:ignorable backup-plan-template-json))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-backup-plan-from-jsoninput
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/backup/template/json/toPlan"
                                                        "GetBackupPlanFromJSON"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-backup-plan-from-json))
(common-lisp:progn
 (common-lisp:defun get-backup-plan-from-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-plan-template-id)
   (common-lisp:declare (common-lisp:ignorable backup-plan-template-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-backup-plan-from-template-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup/template/plans/~A/toPlan"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-id))))
                                                        "GetBackupPlanFromTemplate"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-backup-plan-from-template))
(common-lisp:progn
 (common-lisp:defun get-backup-selection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-plan-id selection-id)
   (common-lisp:declare (common-lisp:ignorable backup-plan-id selection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-backup-selection-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup/plans/~A/selections/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-plan-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'selection-id))))
                                                        "GetBackupSelection"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-backup-selection))
(common-lisp:progn
 (common-lisp:defun get-backup-vault-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name)
   (common-lisp:declare (common-lisp:ignorable backup-vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-backup-vault-access-policy-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/access-policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))))
                                                        "GetBackupVaultAccessPolicy"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-backup-vault-access-policy))
(common-lisp:progn
 (common-lisp:defun get-backup-vault-notifications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name)
   (common-lisp:declare (common-lisp:ignorable backup-vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-backup-vault-notifications-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/notification-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))))
                                                        "GetBackupVaultNotifications"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-backup-vault-notifications))
(common-lisp:progn
 (common-lisp:defun get-legal-hold
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key legal-hold-id)
   (common-lisp:declare (common-lisp:ignorable legal-hold-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-legal-hold-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/legal-holds/~A/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'legal-hold-id))))
                                                        "GetLegalHold"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-legal-hold))
(common-lisp:progn
 (common-lisp:defun get-recovery-point-restore-metadata
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name recovery-point-arn)
   (common-lisp:declare
    (common-lisp:ignorable backup-vault-name recovery-point-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-recovery-point-restore-metadata-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/recovery-points/~A/restore-metadata"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'recovery-point-arn))))
                                                        "GetRecoveryPointRestoreMetadata"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-recovery-point-restore-metadata))
(common-lisp:progn
 (common-lisp:defun get-supported-resource-types ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'backup-request :method "GET" :path
                                "/supported-resource-types" :params
                                `(("Action" ,@"GetSupportedResourceTypes")
                                  ("Version" ,@"2018-11-15"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-supported-resource-types))
(common-lisp:progn
 (common-lisp:defun list-backup-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results by-resource-arn
                     by-state by-backup-vault-name by-created-before
                     by-created-after by-resource-type by-account-id
                     by-complete-after by-complete-before by-parent-job-id)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results by-resource-arn by-state
     by-backup-vault-name by-created-before by-created-after by-resource-type
     by-account-id by-complete-after by-complete-before by-parent-job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-backup-jobs-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/backup-jobs/"
                                                        "ListBackupJobs"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-backup-jobs))
(common-lisp:progn
 (common-lisp:defun list-backup-plan-templates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-backup-plan-templates-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/backup/template/plans"
                                                        "ListBackupPlanTemplates"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-backup-plan-templates))
(common-lisp:progn
 (common-lisp:defun list-backup-plan-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-plan-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable backup-plan-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-backup-plan-versions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup/plans/~A/versions/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-plan-id))))
                                                        "ListBackupPlanVersions"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-backup-plan-versions))
(common-lisp:progn
 (common-lisp:defun list-backup-plans
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results include-deleted)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results include-deleted))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-backup-plans-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/backup/plans/"
                                                        "ListBackupPlans"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-backup-plans))
(common-lisp:progn
 (common-lisp:defun list-backup-selections
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-plan-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable backup-plan-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-backup-selections-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup/plans/~A/selections/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-plan-id))))
                                                        "ListBackupSelections"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-backup-selections))
(common-lisp:progn
 (common-lisp:defun list-backup-vaults
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-backup-vaults-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/backup-vaults/"
                                                        "ListBackupVaults"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-backup-vaults))
(common-lisp:progn
 (common-lisp:defun list-copy-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results by-resource-arn
                     by-state by-created-before by-created-after
                     by-resource-type by-destination-vault-arn by-account-id
                     by-complete-before by-complete-after by-parent-job-id)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results by-resource-arn by-state
     by-created-before by-created-after by-resource-type
     by-destination-vault-arn by-account-id by-complete-before
     by-complete-after by-parent-job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-copy-jobs-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/copy-jobs/"
                                                        "ListCopyJobs"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-copy-jobs))
(common-lisp:progn
 (common-lisp:defun list-frameworks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-frameworks-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/audit/frameworks"
                                                        "ListFrameworks"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-frameworks))
(common-lisp:progn
 (common-lisp:defun list-legal-holds
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-legal-holds-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/legal-holds/"
                                                        "ListLegalHolds"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-legal-holds))
(common-lisp:progn
 (common-lisp:defun list-protected-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-protected-resources-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/resources/"
                                                        "ListProtectedResources"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-protected-resources))
(common-lisp:progn
 (common-lisp:defun list-recovery-points-by-backup-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name next-token max-results
                     by-resource-arn by-resource-type by-backup-plan-id
                     by-created-before by-created-after
                     by-parent-recovery-point-arn)
   (common-lisp:declare
    (common-lisp:ignorable backup-vault-name next-token max-results
     by-resource-arn by-resource-type by-backup-plan-id by-created-before
     by-created-after by-parent-recovery-point-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-recovery-points-by-backup-vault-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/recovery-points/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))))
                                                        "ListRecoveryPointsByBackupVault"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-recovery-points-by-backup-vault))
(common-lisp:progn
 (common-lisp:defun list-recovery-points-by-legal-hold
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key legal-hold-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable legal-hold-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-recovery-points-by-legal-hold-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/legal-holds/~A/recovery-points"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'legal-hold-id))))
                                                        "ListRecoveryPointsByLegalHold"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-recovery-points-by-legal-hold))
(common-lisp:progn
 (common-lisp:defun list-recovery-points-by-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-recovery-points-by-resource-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/resources/~A/recovery-points/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListRecoveryPointsByResource"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-recovery-points-by-resource))
(common-lisp:progn
 (common-lisp:defun list-report-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key by-report-plan-name by-creation-before
                     by-creation-after by-status max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable by-report-plan-name by-creation-before
     by-creation-after by-status max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-report-jobs-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/audit/report-jobs"
                                                        "ListReportJobs"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-report-jobs))
(common-lisp:progn
 (common-lisp:defun list-report-plans
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-report-plans-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/audit/report-plans"
                                                        "ListReportPlans"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-report-plans))
(common-lisp:progn
 (common-lisp:defun list-restore-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results by-account-id
                     by-created-before by-created-after by-status
                     by-complete-before by-complete-after)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results by-account-id
     by-created-before by-created-after by-status by-complete-before
     by-complete-after))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-restore-jobs-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/restore-jobs/"
                                                        "ListRestoreJobs"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-restore-jobs))
(common-lisp:progn
 (common-lisp:defun list-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTags"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags))
(common-lisp:progn
 (common-lisp:defun put-backup-vault-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name policy)
   (common-lisp:declare (common-lisp:ignorable backup-vault-name policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-backup-vault-access-policy-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/access-policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))))
                                                        "PutBackupVaultAccessPolicy"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-backup-vault-access-policy))
(common-lisp:progn
 (common-lisp:defun put-backup-vault-lock-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name min-retention-days
                     max-retention-days changeable-for-days)
   (common-lisp:declare
    (common-lisp:ignorable backup-vault-name min-retention-days
     max-retention-days changeable-for-days))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-backup-vault-lock-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/vault-lock"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))))
                                                        "PutBackupVaultLockConfiguration"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-backup-vault-lock-configuration))
(common-lisp:progn
 (common-lisp:defun put-backup-vault-notifications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name snstopic-arn
                     backup-vault-events)
   (common-lisp:declare
    (common-lisp:ignorable backup-vault-name snstopic-arn backup-vault-events))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-backup-vault-notifications-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/notification-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))))
                                                        "PutBackupVaultNotifications"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-backup-vault-notifications))
(common-lisp:progn
 (common-lisp:defun start-backup-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name resource-arn
                     iam-role-arn idempotency-token start-window-minutes
                     complete-window-minutes lifecycle recovery-point-tags
                     backup-options)
   (common-lisp:declare
    (common-lisp:ignorable backup-vault-name resource-arn iam-role-arn
     idempotency-token start-window-minutes complete-window-minutes lifecycle
     recovery-point-tags backup-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-backup-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" "/backup-jobs"
                                                        "StartBackupJob"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-backup-job))
(common-lisp:progn
 (common-lisp:defun start-copy-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recovery-point-arn
                     source-backup-vault-name destination-backup-vault-arn
                     iam-role-arn idempotency-token lifecycle)
   (common-lisp:declare
    (common-lisp:ignorable recovery-point-arn source-backup-vault-name
     destination-backup-vault-arn iam-role-arn idempotency-token lifecycle))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-copy-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" "/copy-jobs"
                                                        "StartCopyJob"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-copy-job))
(common-lisp:progn
 (common-lisp:defun start-report-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-plan-name idempotency-token)
   (common-lisp:declare
    (common-lisp:ignorable report-plan-name idempotency-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-report-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/audit/report-jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'report-plan-name))))
                                                        "StartReportJob"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-report-job))
(common-lisp:progn
 (common-lisp:defun start-restore-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recovery-point-arn metadata iam-role-arn
                     idempotency-token resource-type)
   (common-lisp:declare
    (common-lisp:ignorable recovery-point-arn metadata iam-role-arn
     idempotency-token resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-restore-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" "/restore-jobs"
                                                        "StartRestoreJob"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-restore-job))
(common-lisp:progn
 (common-lisp:defun stop-backup-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-job-id)
   (common-lisp:declare (common-lisp:ignorable backup-job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-backup-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-job-id))))
                                                        "StopBackupJob"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-backup-job))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-key-list)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-key-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/untag/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-backup-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-plan-id backup-plan)
   (common-lisp:declare (common-lisp:ignorable backup-plan-id backup-plan))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-backup-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup/plans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-plan-id))))
                                                        "UpdateBackupPlan"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-backup-plan))
(common-lisp:progn
 (common-lisp:defun update-framework
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key framework-name framework-description
                     framework-controls idempotency-token)
   (common-lisp:declare
    (common-lisp:ignorable framework-name framework-description
     framework-controls idempotency-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-framework-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/audit/frameworks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'framework-name))))
                                                        "UpdateFramework"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-framework))
(common-lisp:progn
 (common-lisp:defun update-global-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key global-settings)
   (common-lisp:declare (common-lisp:ignorable global-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-global-settings-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/global-settings"
                                                        "UpdateGlobalSettings"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-global-settings))
(common-lisp:progn
 (common-lisp:defun update-recovery-point-lifecycle
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-vault-name recovery-point-arn
                     lifecycle)
   (common-lisp:declare
    (common-lisp:ignorable backup-vault-name recovery-point-arn lifecycle))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-recovery-point-lifecycle-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-vaults/~A/recovery-points/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backup-vault-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'recovery-point-arn))))
                                                        "UpdateRecoveryPointLifecycle"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-recovery-point-lifecycle))
(common-lisp:progn
 (common-lisp:defun update-region-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type-opt-in-preference
                     resource-type-management-preference)
   (common-lisp:declare
    (common-lisp:ignorable resource-type-opt-in-preference
     resource-type-management-preference))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-region-settings-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/account-settings"
                                                        "UpdateRegionSettings"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-region-settings))
(common-lisp:progn
 (common-lisp:defun update-report-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-plan-name report-plan-description
                     report-delivery-channel report-setting idempotency-token)
   (common-lisp:declare
    (common-lisp:ignorable report-plan-name report-plan-description
     report-delivery-channel report-setting idempotency-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-report-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/audit/report-plans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'report-plan-name))))
                                                        "UpdateReportPlan"
                                                        "2018-11-15"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-report-plan))
