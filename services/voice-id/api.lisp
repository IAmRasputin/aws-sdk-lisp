;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/voice-id/api
  (:use)
  (:nicknames #:aws/voice-id)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/voice-id/api)
(common-lisp:progn
 (common-lisp:defclass voice-id-request (aws-sdk/request:request)
                       common-lisp:nil (:default-initargs :service "voice-id"))
 (common-lisp:export 'voice-id-request))
(common-lisp:progn
 (common-lisp:define-condition voice-id-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'voice-id-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (voice-id-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (associate-fraudster-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-fraudster-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (fraudster-id (common-lisp:error ":fraudster-id is required") :type
    (common-lisp:or fraudster-id common-lisp:null))
   (watchlist-id (common-lisp:error ":watchlist-id is required") :type
    (common-lisp:or watchlist-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-fraudster-request
                    'make-associate-fraudster-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-fraudster-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-fraudster-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fraudster-id))
      (common-lisp:list
       (common-lisp:cons "FraudsterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-id))
      (common-lisp:list
       (common-lisp:cons "WatchlistId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-fraudster-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-fraudster-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-fraudster-response-"))
   (fraudster common-lisp:nil :type
    (common-lisp:or fraudster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-fraudster-response
                    'make-associate-fraudster-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-fraudster-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-fraudster-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fraudster))
      (common-lisp:list
       (common-lisp:cons "Fraudster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-fraudster-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (authentication-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-authentication-configuration-"))
   (acceptance-threshold
    (common-lisp:error ":acceptance-threshold is required") :type
    (common-lisp:or score common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'authentication-configuration
                    'make-authentication-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authentication-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authentication-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'acceptance-threshold))
      (common-lisp:list
       (common-lisp:cons "AcceptanceThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authentication-configuration))
   common-lisp:nil))
(common-lisp:deftype authentication-decision () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (authentication-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-authentication-result-"))
   (audio-aggregation-ended-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (audio-aggregation-started-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (authentication-result-id common-lisp:nil :type
    (common-lisp:or unique-id-large common-lisp:null))
   (configuration common-lisp:nil :type
    (common-lisp:or authentication-configuration common-lisp:null))
   (customer-speaker-id common-lisp:nil :type
    (common-lisp:or customer-speaker-id common-lisp:null))
   (decision common-lisp:nil :type
    (common-lisp:or authentication-decision common-lisp:null))
   (generated-speaker-id common-lisp:nil :type
    (common-lisp:or generated-speaker-id common-lisp:null))
   (score common-lisp:nil :type (common-lisp:or score common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'authentication-result 'make-authentication-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authentication-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authentication-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-aggregation-ended-at))
      (common-lisp:list
       (common-lisp:cons "AudioAggregationEndedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-aggregation-started-at))
      (common-lisp:list
       (common-lisp:cons "AudioAggregationStartedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-result-id))
      (common-lisp:list
       (common-lisp:cons "AuthenticationResultId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customer-speaker-id))
      (common-lisp:list
       (common-lisp:cons "CustomerSpeakerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'decision))
      (common-lisp:list
       (common-lisp:cons "Decision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generated-speaker-id))
      (common-lisp:list
       (common-lisp:cons "GeneratedSpeakerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authentication-result))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype client-token-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (voice-id-error)
     ((conflict-type :initarg :conflict-type :initform common-lisp:nil :reader
       conflict-exception-conflict-type)
      (message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-conflict-type
                    'conflict-exception-message)))
(common-lisp:deftype conflict-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-domain-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token-string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (server-side-encryption-configuration
    (common-lisp:error ":server-side-encryption-configuration is required")
    :type
    (common-lisp:or server-side-encryption-configuration common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-request 'make-create-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-side-encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerSideEncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-domain-response-"))
   (domain common-lisp:nil :type (common-lisp:or domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-response 'make-create-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-watchlist-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-watchlist-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token-string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or watchlist-description common-lisp:null))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or watchlist-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-watchlist-request 'make-create-watchlist-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-watchlist-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-watchlist-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-watchlist-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-watchlist-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-watchlist-response-"))
   (watchlist common-lisp:nil :type
    (common-lisp:or watchlist common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-watchlist-response
                    'make-create-watchlist-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-watchlist-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-watchlist-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist))
      (common-lisp:list
       (common-lisp:cons "Watchlist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-watchlist-response))
   common-lisp:nil))
(common-lisp:deftype customer-speaker-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-domain-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-request 'make-delete-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-fraudster-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-fraudster-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (fraudster-id (common-lisp:error ":fraudster-id is required") :type
    (common-lisp:or fraudster-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-fraudster-request 'make-delete-fraudster-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-fraudster-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-fraudster-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fraudster-id))
      (common-lisp:list
       (common-lisp:cons "FraudsterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-fraudster-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-speaker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-speaker-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (speaker-id (common-lisp:error ":speaker-id is required") :type
    (common-lisp:or speaker-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-speaker-request 'make-delete-speaker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-speaker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-speaker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speaker-id))
      (common-lisp:list
       (common-lisp:cons "SpeakerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-speaker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-watchlist-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-watchlist-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (watchlist-id (common-lisp:error ":watchlist-id is required") :type
    (common-lisp:or watchlist-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-watchlist-request 'make-delete-watchlist-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-watchlist-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-watchlist-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-id))
      (common-lisp:list
       (common-lisp:cons "WatchlistId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-watchlist-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-domain-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-domain-request 'make-describe-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-domain-response-"))
   (domain common-lisp:nil :type (common-lisp:or domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-domain-response 'make-describe-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fraudster-registration-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-fraudster-registration-job-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fraudster-registration-job-request
                    'make-describe-fraudster-registration-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-fraudster-registration-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-fraudster-registration-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-fraudster-registration-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fraudster-registration-job-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-fraudster-registration-job-response-"))
   (job common-lisp:nil :type
    (common-lisp:or fraudster-registration-job common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fraudster-registration-job-response
                    'make-describe-fraudster-registration-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-fraudster-registration-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-fraudster-registration-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job))
      (common-lisp:list
       (common-lisp:cons "Job"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-fraudster-registration-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fraudster-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-fraudster-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (fraudster-id (common-lisp:error ":fraudster-id is required") :type
    (common-lisp:or fraudster-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fraudster-request
                    'make-describe-fraudster-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-fraudster-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-fraudster-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fraudster-id))
      (common-lisp:list
       (common-lisp:cons "FraudsterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-fraudster-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-fraudster-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-fraudster-response-"))
   (fraudster common-lisp:nil :type
    (common-lisp:or fraudster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-fraudster-response
                    'make-describe-fraudster-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-fraudster-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-fraudster-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fraudster))
      (common-lisp:list
       (common-lisp:cons "Fraudster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-fraudster-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-speaker-enrollment-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-speaker-enrollment-job-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or job-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-speaker-enrollment-job-request
                    'make-describe-speaker-enrollment-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-speaker-enrollment-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-speaker-enrollment-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-speaker-enrollment-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-speaker-enrollment-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-speaker-enrollment-job-response-"))
   (job common-lisp:nil :type
    (common-lisp:or speaker-enrollment-job common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-speaker-enrollment-job-response
                    'make-describe-speaker-enrollment-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-speaker-enrollment-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-speaker-enrollment-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job))
      (common-lisp:list
       (common-lisp:cons "Job"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-speaker-enrollment-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-speaker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-speaker-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (speaker-id (common-lisp:error ":speaker-id is required") :type
    (common-lisp:or speaker-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-speaker-request 'make-describe-speaker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-speaker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-speaker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speaker-id))
      (common-lisp:list
       (common-lisp:cons "SpeakerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-speaker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-speaker-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-speaker-response-"))
   (speaker common-lisp:nil :type (common-lisp:or speaker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-speaker-response
                    'make-describe-speaker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-speaker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-speaker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speaker))
      (common-lisp:list
       (common-lisp:cons "Speaker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-speaker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-watchlist-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-watchlist-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (watchlist-id (common-lisp:error ":watchlist-id is required") :type
    (common-lisp:or watchlist-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-watchlist-request
                    'make-describe-watchlist-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-watchlist-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-watchlist-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-id))
      (common-lisp:list
       (common-lisp:cons "WatchlistId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-watchlist-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-watchlist-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-watchlist-response-"))
   (watchlist common-lisp:nil :type
    (common-lisp:or watchlist common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-watchlist-response
                    'make-describe-watchlist-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-watchlist-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-watchlist-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist))
      (common-lisp:list
       (common-lisp:cons "Watchlist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-watchlist-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-fraudster-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-fraudster-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (fraudster-id (common-lisp:error ":fraudster-id is required") :type
    (common-lisp:or fraudster-id common-lisp:null))
   (watchlist-id (common-lisp:error ":watchlist-id is required") :type
    (common-lisp:or watchlist-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-fraudster-request
                    'make-disassociate-fraudster-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-fraudster-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-fraudster-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fraudster-id))
      (common-lisp:list
       (common-lisp:cons "FraudsterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-id))
      (common-lisp:list
       (common-lisp:cons "WatchlistId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-fraudster-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-fraudster-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-fraudster-response-"))
   (fraudster common-lisp:nil :type
    (common-lisp:or fraudster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-fraudster-response
                    'make-disassociate-fraudster-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-fraudster-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-fraudster-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fraudster))
      (common-lisp:list
       (common-lisp:cons "Fraudster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-fraudster-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (domain (:copier common-lisp:nil) (:conc-name "struct-shape-domain-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (domain-status common-lisp:nil :type
    (common-lisp:or domain-status common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or domain-name common-lisp:null))
   (server-side-encryption-configuration common-lisp:nil :type
    (common-lisp:or server-side-encryption-configuration common-lisp:null))
   (server-side-encryption-update-details common-lisp:nil :type
    (common-lisp:or server-side-encryption-update-details common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (watchlist-details common-lisp:nil :type
    (common-lisp:or watchlist-details common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain 'make-domain))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-status))
      (common-lisp:list
       (common-lisp:cons "DomainStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-side-encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerSideEncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-side-encryption-update-details))
      (common-lisp:list
       (common-lisp:cons "ServerSideEncryptionUpdateDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-details))
      (common-lisp:list
       (common-lisp:cons "WatchlistDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain))
   common-lisp:nil))
(common-lisp:deftype domain-id () 'common-lisp:string)
(common-lisp:deftype domain-name () 'common-lisp:string)
(common-lisp:deftype domain-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype domain-summaries ()
   '(trivial-types:proper-list domain-summary))
 (common-lisp:defun |make-domain-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (domain-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-summary-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (domain-status common-lisp:nil :type
    (common-lisp:or domain-status common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or domain-name common-lisp:null))
   (server-side-encryption-configuration common-lisp:nil :type
    (common-lisp:or server-side-encryption-configuration common-lisp:null))
   (server-side-encryption-update-details common-lisp:nil :type
    (common-lisp:or server-side-encryption-update-details common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (watchlist-details common-lisp:nil :type
    (common-lisp:or watchlist-details common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-summary 'make-domain-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-status))
      (common-lisp:list
       (common-lisp:cons "DomainStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-side-encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerSideEncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-side-encryption-update-details))
      (common-lisp:list
       (common-lisp:cons "ServerSideEncryptionUpdateDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-details))
      (common-lisp:list
       (common-lisp:cons "WatchlistDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-summary))
   common-lisp:nil))
(common-lisp:deftype duplicate-registration-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (enrollment-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-enrollment-config-"))
   (existing-enrollment-action common-lisp:nil :type
    (common-lisp:or existing-enrollment-action common-lisp:null))
   (fraud-detection-config common-lisp:nil :type
    (common-lisp:or enrollment-job-fraud-detection-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enrollment-config 'make-enrollment-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input enrollment-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input enrollment-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'existing-enrollment-action))
      (common-lisp:list
       (common-lisp:cons "ExistingEnrollmentAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fraud-detection-config))
      (common-lisp:list
       (common-lisp:cons "FraudDetectionConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input enrollment-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (enrollment-job-fraud-detection-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-enrollment-job-fraud-detection-config-"))
   (fraud-detection-action common-lisp:nil :type
    (common-lisp:or fraud-detection-action common-lisp:null))
   (risk-threshold common-lisp:nil :type
    (common-lisp:or score common-lisp:null))
   (watchlist-ids common-lisp:nil :type
    (common-lisp:or enrollment-job-fraud-detection-config-watchlist-ids
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enrollment-job-fraud-detection-config
                    'make-enrollment-job-fraud-detection-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enrollment-job-fraud-detection-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enrollment-job-fraud-detection-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fraud-detection-action))
      (common-lisp:list
       (common-lisp:cons "FraudDetectionAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'risk-threshold))
      (common-lisp:list
       (common-lisp:cons "RiskThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-ids))
      (common-lisp:list
       (common-lisp:cons "WatchlistIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enrollment-job-fraud-detection-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype enrollment-job-fraud-detection-config-watchlist-ids ()
   '(trivial-types:proper-list watchlist-id))
 (common-lisp:defun |make-enrollment-job-fraud-detection-config-watchlist-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list watchlist-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (evaluate-session-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-evaluate-session-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (session-name-or-id (common-lisp:error ":session-name-or-id is required")
    :type (common-lisp:or session-name-or-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'evaluate-session-request 'make-evaluate-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          evaluate-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          evaluate-session-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-name-or-id))
      (common-lisp:list
       (common-lisp:cons "SessionNameOrId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          evaluate-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (evaluate-session-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-evaluate-session-response-"))
   (authentication-result common-lisp:nil :type
    (common-lisp:or authentication-result common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (fraud-detection-result common-lisp:nil :type
    (common-lisp:or fraud-detection-result common-lisp:null))
   (session-id common-lisp:nil :type
    (common-lisp:or session-id common-lisp:null))
   (session-name common-lisp:nil :type
    (common-lisp:or session-name common-lisp:null))
   (streaming-status common-lisp:nil :type
    (common-lisp:or streaming-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'evaluate-session-response
                    'make-evaluate-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          evaluate-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          evaluate-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-result))
      (common-lisp:list
       (common-lisp:cons "AuthenticationResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fraud-detection-result))
      (common-lisp:list
       (common-lisp:cons "FraudDetectionResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-id))
      (common-lisp:list
       (common-lisp:cons "SessionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-name))
      (common-lisp:list
       (common-lisp:cons "SessionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'streaming-status))
      (common-lisp:list
       (common-lisp:cons "StreamingStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          evaluate-session-response))
   common-lisp:nil))
(common-lisp:deftype existing-enrollment-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (failure-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-failure-details-"))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'failure-details 'make-failure-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input failure-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input failure-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "StatusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input failure-details))
   common-lisp:nil))
(common-lisp:deftype fraud-detection-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (fraud-detection-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-fraud-detection-configuration-"))
   (risk-threshold common-lisp:nil :type
    (common-lisp:or score common-lisp:null))
   (watchlist-id common-lisp:nil :type
    (common-lisp:or watchlist-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fraud-detection-configuration
                    'make-fraud-detection-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          fraud-detection-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          fraud-detection-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'risk-threshold))
      (common-lisp:list
       (common-lisp:cons "RiskThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-id))
      (common-lisp:list
       (common-lisp:cons "WatchlistId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          fraud-detection-configuration))
   common-lisp:nil))
(common-lisp:deftype fraud-detection-decision () 'common-lisp:string)
(common-lisp:deftype fraud-detection-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype fraud-detection-reasons ()
   '(trivial-types:proper-list fraud-detection-reason))
 (common-lisp:defun |make-fraud-detection-reasons|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list fraud-detection-reason))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (fraud-detection-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-fraud-detection-result-"))
   (audio-aggregation-ended-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (audio-aggregation-started-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (configuration common-lisp:nil :type
    (common-lisp:or fraud-detection-configuration common-lisp:null))
   (decision common-lisp:nil :type
    (common-lisp:or fraud-detection-decision common-lisp:null))
   (fraud-detection-result-id common-lisp:nil :type
    (common-lisp:or unique-id-large common-lisp:null))
   (reasons common-lisp:nil :type
    (common-lisp:or fraud-detection-reasons common-lisp:null))
   (risk-details common-lisp:nil :type
    (common-lisp:or fraud-risk-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fraud-detection-result 'make-fraud-detection-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          fraud-detection-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          fraud-detection-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-aggregation-ended-at))
      (common-lisp:list
       (common-lisp:cons "AudioAggregationEndedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-aggregation-started-at))
      (common-lisp:list
       (common-lisp:cons "AudioAggregationStartedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'decision))
      (common-lisp:list
       (common-lisp:cons "Decision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fraud-detection-result-id))
      (common-lisp:list
       (common-lisp:cons "FraudDetectionResultId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reasons))
      (common-lisp:list
       (common-lisp:cons "Reasons"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'risk-details))
      (common-lisp:list
       (common-lisp:cons "RiskDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          fraud-detection-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (fraud-risk-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-fraud-risk-details-"))
   (known-fraudster-risk
    (common-lisp:error ":known-fraudster-risk is required") :type
    (common-lisp:or known-fraudster-risk common-lisp:null))
   (voice-spoofing-risk (common-lisp:error ":voice-spoofing-risk is required")
    :type (common-lisp:or voice-spoofing-risk common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fraud-risk-details 'make-fraud-risk-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fraud-risk-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fraud-risk-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'known-fraudster-risk))
      (common-lisp:list
       (common-lisp:cons "KnownFraudsterRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-spoofing-risk))
      (common-lisp:list
       (common-lisp:cons "VoiceSpoofingRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fraud-risk-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (fraudster (:copier common-lisp:nil)
      (:conc-name "struct-shape-fraudster-"))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (generated-fraudster-id common-lisp:nil :type
    (common-lisp:or generated-fraudster-id common-lisp:null))
   (watchlist-ids common-lisp:nil :type
    (common-lisp:or response-watchlist-ids common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fraudster 'make-fraudster))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fraudster))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fraudster))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generated-fraudster-id))
      (common-lisp:list
       (common-lisp:cons "GeneratedFraudsterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-ids))
      (common-lisp:list
       (common-lisp:cons "WatchlistIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fraudster))
   common-lisp:nil))
(common-lisp:deftype fraudster-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (fraudster-registration-job (:copier common-lisp:nil)
      (:conc-name "struct-shape-fraudster-registration-job-"))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (ended-at common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (failure-details common-lisp:nil :type
    (common-lisp:or failure-details common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or input-data-config common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-progress common-lisp:nil :type
    (common-lisp:or job-progress common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or fraudster-registration-job-status common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or output-data-config common-lisp:null))
   (registration-config common-lisp:nil :type
    (common-lisp:or registration-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fraudster-registration-job
                    'make-fraudster-registration-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          fraudster-registration-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          fraudster-registration-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ended-at))
      (common-lisp:list
       (common-lisp:cons "EndedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-details))
      (common-lisp:list
       (common-lisp:cons "FailureDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-progress))
      (common-lisp:list
       (common-lisp:cons "JobProgress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registration-config))
      (common-lisp:list
       (common-lisp:cons "RegistrationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          fraudster-registration-job))
   common-lisp:nil))
(common-lisp:deftype fraudster-registration-job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype fraudster-registration-job-summaries ()
   '(trivial-types:proper-list fraudster-registration-job-summary))
 (common-lisp:defun |make-fraudster-registration-job-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            fraudster-registration-job-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (fraudster-registration-job-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-fraudster-registration-job-summary-"))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (ended-at common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (failure-details common-lisp:nil :type
    (common-lisp:or failure-details common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-progress common-lisp:nil :type
    (common-lisp:or job-progress common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or fraudster-registration-job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fraudster-registration-job-summary
                    'make-fraudster-registration-job-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          fraudster-registration-job-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          fraudster-registration-job-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ended-at))
      (common-lisp:list
       (common-lisp:cons "EndedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-details))
      (common-lisp:list
       (common-lisp:cons "FailureDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-progress))
      (common-lisp:list
       (common-lisp:cons "JobProgress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          fraudster-registration-job-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype fraudster-summaries ()
   '(trivial-types:proper-list fraudster-summary))
 (common-lisp:defun |make-fraudster-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list fraudster-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (fraudster-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-fraudster-summary-"))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (generated-fraudster-id common-lisp:nil :type
    (common-lisp:or generated-fraudster-id common-lisp:null))
   (watchlist-ids common-lisp:nil :type
    (common-lisp:or response-watchlist-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fraudster-summary 'make-fraudster-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fraudster-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fraudster-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generated-fraudster-id))
      (common-lisp:list
       (common-lisp:cons "GeneratedFraudsterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-ids))
      (common-lisp:list
       (common-lisp:cons "WatchlistIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fraudster-summary))
   common-lisp:nil))
(common-lisp:deftype generated-fraudster-id () 'common-lisp:string)
(common-lisp:deftype generated-speaker-id () 'common-lisp:string)
(common-lisp:deftype iam-role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (input-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-data-config-"))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-data-config 'make-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-data-config))
   common-lisp:nil))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (voice-id-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype job-id () 'common-lisp:string)
(common-lisp:deftype job-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (job-progress (:copier common-lisp:nil)
      (:conc-name "struct-shape-job-progress-"))
   (percent-complete common-lisp:nil :type
    (common-lisp:or score common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-progress 'make-job-progress))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-progress))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-progress))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-complete))
      (common-lisp:list
       (common-lisp:cons "PercentComplete"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-progress))
   common-lisp:nil))
(common-lisp:deftype kms-key-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (known-fraudster-risk (:copier common-lisp:nil)
      (:conc-name "struct-shape-known-fraudster-risk-"))
   (generated-fraudster-id common-lisp:nil :type
    (common-lisp:or generated-fraudster-id common-lisp:null))
   (risk-score (common-lisp:error ":risk-score is required") :type
    (common-lisp:or score common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'known-fraudster-risk 'make-known-fraudster-risk))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input known-fraudster-risk))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input known-fraudster-risk))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generated-fraudster-id))
      (common-lisp:list
       (common-lisp:cons "GeneratedFraudsterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'risk-score))
      (common-lisp:list
       (common-lisp:cons "RiskScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input known-fraudster-risk))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-domains-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-domains-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-for-list-domain-fe common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domains-request 'make-list-domains-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-domains-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-domains-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-domains-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-domains-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-domains-response-"))
   (domain-summaries common-lisp:nil :type
    (common-lisp:or domain-summaries common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domains-response 'make-list-domains-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-domains-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-domains-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-summaries))
      (common-lisp:list
       (common-lisp:cons "DomainSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-domains-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-fraudster-registration-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-fraudster-registration-jobs-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or fraudster-registration-job-status common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-for-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-fraudster-registration-jobs-request
                    'make-list-fraudster-registration-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-fraudster-registration-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-fraudster-registration-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-fraudster-registration-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-fraudster-registration-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-fraudster-registration-jobs-response-"))
   (job-summaries common-lisp:nil :type
    (common-lisp:or fraudster-registration-job-summaries common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-fraudster-registration-jobs-response
                    'make-list-fraudster-registration-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-fraudster-registration-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-fraudster-registration-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-summaries))
      (common-lisp:list
       (common-lisp:cons "JobSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-fraudster-registration-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-fraudsters-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-fraudsters-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-for-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (watchlist-id common-lisp:nil :type
    (common-lisp:or watchlist-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-fraudsters-request 'make-list-fraudsters-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-fraudsters-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-fraudsters-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-id))
      (common-lisp:list
       (common-lisp:cons "WatchlistId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-fraudsters-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-fraudsters-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-fraudsters-response-"))
   (fraudster-summaries common-lisp:nil :type
    (common-lisp:or fraudster-summaries common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-fraudsters-response 'make-list-fraudsters-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-fraudsters-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-fraudsters-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fraudster-summaries))
      (common-lisp:list
       (common-lisp:cons "FraudsterSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-fraudsters-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-speaker-enrollment-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-speaker-enrollment-jobs-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or speaker-enrollment-job-status common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-for-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-speaker-enrollment-jobs-request
                    'make-list-speaker-enrollment-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-speaker-enrollment-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-speaker-enrollment-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-speaker-enrollment-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-speaker-enrollment-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-speaker-enrollment-jobs-response-"))
   (job-summaries common-lisp:nil :type
    (common-lisp:or speaker-enrollment-job-summaries common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-speaker-enrollment-jobs-response
                    'make-list-speaker-enrollment-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-speaker-enrollment-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-speaker-enrollment-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-summaries))
      (common-lisp:list
       (common-lisp:cons "JobSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-speaker-enrollment-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-speakers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-speakers-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-for-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-speakers-request 'make-list-speakers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-speakers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-speakers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-speakers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-speakers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-speakers-response-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (speaker-summaries common-lisp:nil :type
    (common-lisp:or speaker-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-speakers-response 'make-list-speakers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-speakers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-speakers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speaker-summaries))
      (common-lisp:list
       (common-lisp:cons "SpeakerSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-speakers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-watchlists-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-watchlists-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results-for-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-watchlists-request 'make-list-watchlists-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-watchlists-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-watchlists-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-watchlists-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-watchlists-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-watchlists-response-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (watchlist-summaries common-lisp:nil :type
    (common-lisp:or watchlist-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-watchlists-response 'make-list-watchlists-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-watchlists-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-watchlists-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-summaries))
      (common-lisp:list
       (common-lisp:cons "WatchlistSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-watchlists-response))
   common-lisp:nil))
(common-lisp:deftype max-results-for-list () 'common-lisp:integer)
(common-lisp:deftype max-results-for-list-domain-fe () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (opt-out-speaker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-opt-out-speaker-request-"))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (speaker-id (common-lisp:error ":speaker-id is required") :type
    (common-lisp:or speaker-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'opt-out-speaker-request 'make-opt-out-speaker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          opt-out-speaker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          opt-out-speaker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speaker-id))
      (common-lisp:list
       (common-lisp:cons "SpeakerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          opt-out-speaker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (opt-out-speaker-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-opt-out-speaker-response-"))
   (speaker common-lisp:nil :type (common-lisp:or speaker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'opt-out-speaker-response 'make-opt-out-speaker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          opt-out-speaker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          opt-out-speaker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speaker))
      (common-lisp:list
       (common-lisp:cons "Speaker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          opt-out-speaker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (output-data-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-data-config-"))
   (kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (s3uri (common-lisp:error ":s3uri is required") :type
    (common-lisp:or s3uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'output-data-config 'make-output-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (registration-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-registration-config-"))
   (duplicate-registration-action common-lisp:nil :type
    (common-lisp:or duplicate-registration-action common-lisp:null))
   (fraudster-similarity-threshold common-lisp:nil :type
    (common-lisp:or score common-lisp:null))
   (watchlist-ids common-lisp:nil :type
    (common-lisp:or registration-config-watchlist-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'registration-config 'make-registration-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input registration-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input registration-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'duplicate-registration-action))
      (common-lisp:list
       (common-lisp:cons "DuplicateRegistrationAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fraudster-similarity-threshold))
      (common-lisp:list
       (common-lisp:cons "FraudsterSimilarityThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-ids))
      (common-lisp:list
       (common-lisp:cons "WatchlistIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input registration-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype registration-config-watchlist-ids ()
   '(trivial-types:proper-list watchlist-id))
 (common-lisp:defun |make-registration-config-watchlist-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list watchlist-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (voice-id-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-type)))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype response-watchlist-ids ()
   '(trivial-types:proper-list watchlist-id))
 (common-lisp:defun |make-response-watchlist-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list watchlist-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype s3uri () 'common-lisp:string)
(common-lisp:deftype score () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (server-side-encryption-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-server-side-encryption-configuration-"))
   (kms-key-id (common-lisp:error ":kms-key-id is required") :type
    (common-lisp:or kms-key-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'server-side-encryption-configuration
                    'make-server-side-encryption-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (server-side-encryption-update-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-server-side-encryption-update-details-"))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (old-kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (update-status common-lisp:nil :type
    (common-lisp:or server-side-encryption-update-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'server-side-encryption-update-details
                    'make-server-side-encryption-update-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption-update-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption-update-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'old-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "OldKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-status))
      (common-lisp:list
       (common-lisp:cons "UpdateStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption-update-details))
   common-lisp:nil))
(common-lisp:deftype server-side-encryption-update-status ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (voice-id-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:deftype session-id () 'common-lisp:string)
(common-lisp:deftype session-name () 'common-lisp:string)
(common-lisp:deftype session-name-or-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (speaker (:copier common-lisp:nil) (:conc-name "struct-shape-speaker-"))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (customer-speaker-id common-lisp:nil :type
    (common-lisp:or customer-speaker-id common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (generated-speaker-id common-lisp:nil :type
    (common-lisp:or generated-speaker-id common-lisp:null))
   (last-accessed-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or speaker-status common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'speaker 'make-speaker))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input speaker))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input speaker))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customer-speaker-id))
      (common-lisp:list
       (common-lisp:cons "CustomerSpeakerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generated-speaker-id))
      (common-lisp:list
       (common-lisp:cons "GeneratedSpeakerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-accessed-at))
      (common-lisp:list
       (common-lisp:cons "LastAccessedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input speaker))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (speaker-enrollment-job (:copier common-lisp:nil)
      (:conc-name "struct-shape-speaker-enrollment-job-"))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (data-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (ended-at common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (enrollment-config common-lisp:nil :type
    (common-lisp:or enrollment-config common-lisp:null))
   (failure-details common-lisp:nil :type
    (common-lisp:or failure-details common-lisp:null))
   (input-data-config common-lisp:nil :type
    (common-lisp:or input-data-config common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-progress common-lisp:nil :type
    (common-lisp:or job-progress common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or speaker-enrollment-job-status common-lisp:null))
   (output-data-config common-lisp:nil :type
    (common-lisp:or output-data-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'speaker-enrollment-job 'make-speaker-enrollment-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          speaker-enrollment-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          speaker-enrollment-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ended-at))
      (common-lisp:list
       (common-lisp:cons "EndedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enrollment-config))
      (common-lisp:list
       (common-lisp:cons "EnrollmentConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-details))
      (common-lisp:list
       (common-lisp:cons "FailureDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-progress))
      (common-lisp:list
       (common-lisp:cons "JobProgress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          speaker-enrollment-job))
   common-lisp:nil))
(common-lisp:deftype speaker-enrollment-job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype speaker-enrollment-job-summaries ()
   '(trivial-types:proper-list speaker-enrollment-job-summary))
 (common-lisp:defun |make-speaker-enrollment-job-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            speaker-enrollment-job-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (speaker-enrollment-job-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-speaker-enrollment-job-summary-"))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (ended-at common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (failure-details common-lisp:nil :type
    (common-lisp:or failure-details common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (job-progress common-lisp:nil :type
    (common-lisp:or job-progress common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or speaker-enrollment-job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'speaker-enrollment-job-summary
                    'make-speaker-enrollment-job-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          speaker-enrollment-job-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          speaker-enrollment-job-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ended-at))
      (common-lisp:list
       (common-lisp:cons "EndedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-details))
      (common-lisp:list
       (common-lisp:cons "FailureDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-progress))
      (common-lisp:list
       (common-lisp:cons "JobProgress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          speaker-enrollment-job-summary))
   common-lisp:nil))
(common-lisp:deftype speaker-id () 'common-lisp:string)
(common-lisp:deftype speaker-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype speaker-summaries ()
   '(trivial-types:proper-list speaker-summary))
 (common-lisp:defun |make-speaker-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list speaker-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (speaker-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-speaker-summary-"))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (customer-speaker-id common-lisp:nil :type
    (common-lisp:or customer-speaker-id common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (generated-speaker-id common-lisp:nil :type
    (common-lisp:or generated-speaker-id common-lisp:null))
   (last-accessed-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or speaker-status common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'speaker-summary 'make-speaker-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input speaker-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input speaker-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customer-speaker-id))
      (common-lisp:list
       (common-lisp:cons "CustomerSpeakerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generated-speaker-id))
      (common-lisp:list
       (common-lisp:cons "GeneratedSpeakerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-accessed-at))
      (common-lisp:list
       (common-lisp:cons "LastAccessedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input speaker-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-fraudster-registration-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-fraudster-registration-job-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token-string common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type (common-lisp:or input-data-config common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (output-data-config (common-lisp:error ":output-data-config is required")
    :type (common-lisp:or output-data-config common-lisp:null))
   (registration-config common-lisp:nil :type
    (common-lisp:or registration-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-fraudster-registration-job-request
                    'make-start-fraudster-registration-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-fraudster-registration-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-fraudster-registration-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registration-config))
      (common-lisp:list
       (common-lisp:cons "RegistrationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-fraudster-registration-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-fraudster-registration-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-fraudster-registration-job-response-"))
   (job common-lisp:nil :type
    (common-lisp:or fraudster-registration-job common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-fraudster-registration-job-response
                    'make-start-fraudster-registration-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-fraudster-registration-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-fraudster-registration-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job))
      (common-lisp:list
       (common-lisp:cons "Job"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-fraudster-registration-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-speaker-enrollment-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-speaker-enrollment-job-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token-string common-lisp:null))
   (data-access-role-arn
    (common-lisp:error ":data-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (enrollment-config common-lisp:nil :type
    (common-lisp:or enrollment-config common-lisp:null))
   (input-data-config (common-lisp:error ":input-data-config is required")
    :type (common-lisp:or input-data-config common-lisp:null))
   (job-name common-lisp:nil :type (common-lisp:or job-name common-lisp:null))
   (output-data-config (common-lisp:error ":output-data-config is required")
    :type (common-lisp:or output-data-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-speaker-enrollment-job-request
                    'make-start-speaker-enrollment-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-enrollment-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-enrollment-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enrollment-config))
      (common-lisp:list
       (common-lisp:cons "EnrollmentConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-enrollment-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-speaker-enrollment-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-speaker-enrollment-job-response-"))
   (job common-lisp:nil :type
    (common-lisp:or speaker-enrollment-job common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-speaker-enrollment-job-response
                    'make-start-speaker-enrollment-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-enrollment-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-enrollment-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job))
      (common-lisp:list
       (common-lisp:cons "Job"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-enrollment-job-response))
   common-lisp:nil))
(common-lisp:deftype streaming-status () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (voice-id-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype unique-id-large () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-request-"))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (server-side-encryption-configuration
    (common-lisp:error ":server-side-encryption-configuration is required")
    :type
    (common-lisp:or server-side-encryption-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-request 'make-update-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-side-encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerSideEncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-response-"))
   (domain common-lisp:nil :type (common-lisp:or domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-response 'make-update-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-watchlist-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-watchlist-request-"))
   (description common-lisp:nil :type
    (common-lisp:or watchlist-description common-lisp:null))
   (domain-id (common-lisp:error ":domain-id is required") :type
    (common-lisp:or domain-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or watchlist-name common-lisp:null))
   (watchlist-id (common-lisp:error ":watchlist-id is required") :type
    (common-lisp:or watchlist-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-watchlist-request 'make-update-watchlist-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-watchlist-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-watchlist-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-id))
      (common-lisp:list
       (common-lisp:cons "WatchlistId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-watchlist-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-watchlist-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-watchlist-response-"))
   (watchlist common-lisp:nil :type
    (common-lisp:or watchlist common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-watchlist-response
                    'make-update-watchlist-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-watchlist-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-watchlist-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist))
      (common-lisp:list
       (common-lisp:cons "Watchlist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-watchlist-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (voice-id-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (voice-spoofing-risk (:copier common-lisp:nil)
      (:conc-name "struct-shape-voice-spoofing-risk-"))
   (risk-score (common-lisp:error ":risk-score is required") :type
    (common-lisp:or score common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'voice-spoofing-risk 'make-voice-spoofing-risk))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input voice-spoofing-risk))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input voice-spoofing-risk))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'risk-score))
      (common-lisp:list
       (common-lisp:cons "RiskScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input voice-spoofing-risk))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (watchlist (:copier common-lisp:nil)
      (:conc-name "struct-shape-watchlist-"))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (default-watchlist common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or watchlist-description common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or watchlist-name common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (watchlist-id common-lisp:nil :type
    (common-lisp:or watchlist-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'watchlist 'make-watchlist))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input watchlist))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input watchlist))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-watchlist))
      (common-lisp:list
       (common-lisp:cons "DefaultWatchlist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-id))
      (common-lisp:list
       (common-lisp:cons "WatchlistId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input watchlist))
   common-lisp:nil))
(common-lisp:deftype watchlist-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (watchlist-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-watchlist-details-"))
   (default-watchlist-id
    (common-lisp:error ":default-watchlist-id is required") :type
    (common-lisp:or watchlist-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'watchlist-details 'make-watchlist-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input watchlist-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input watchlist-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-watchlist-id))
      (common-lisp:list
       (common-lisp:cons "DefaultWatchlistId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input watchlist-details))
   common-lisp:nil))
(common-lisp:deftype watchlist-id () 'common-lisp:string)
(common-lisp:deftype watchlist-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype watchlist-summaries ()
   '(trivial-types:proper-list watchlist-summary))
 (common-lisp:defun |make-watchlist-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list watchlist-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (watchlist-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-watchlist-summary-"))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (default-watchlist common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or watchlist-description common-lisp:null))
   (domain-id common-lisp:nil :type
    (common-lisp:or domain-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or watchlist-name common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (watchlist-id common-lisp:nil :type
    (common-lisp:or watchlist-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'watchlist-summary 'make-watchlist-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input watchlist-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input watchlist-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-watchlist))
      (common-lisp:list
       (common-lisp:cons "DefaultWatchlist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-id))
      (common-lisp:list
       (common-lisp:cons "DomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'watchlist-id))
      (common-lisp:list
       (common-lisp:cons "WatchlistId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input watchlist-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun associate-fraudster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id fraudster-id watchlist-id)
   (common-lisp:declare
    (common-lisp:ignorable domain-id fraudster-id watchlist-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-fraudster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AssociateFraudster"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-fraudster))
(common-lisp:progn
 (common-lisp:defun create-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name
                     server-side-encryption-configuration tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name
     server-side-encryption-configuration tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateDomain"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-domain))
(common-lisp:progn
 (common-lisp:defun create-watchlist
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description domain-id name)
   (common-lisp:declare
    (common-lisp:ignorable client-token description domain-id name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-watchlist-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateWatchlist"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-watchlist))
(common-lisp:progn
 (common-lisp:defun delete-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id)
   (common-lisp:declare (common-lisp:ignorable domain-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteDomain"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-domain))
(common-lisp:progn
 (common-lisp:defun delete-fraudster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id fraudster-id)
   (common-lisp:declare (common-lisp:ignorable domain-id fraudster-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-fraudster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteFraudster"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-fraudster))
(common-lisp:progn
 (common-lisp:defun delete-speaker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id speaker-id)
   (common-lisp:declare (common-lisp:ignorable domain-id speaker-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-speaker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteSpeaker"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-speaker))
(common-lisp:progn
 (common-lisp:defun delete-watchlist
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id watchlist-id)
   (common-lisp:declare (common-lisp:ignorable domain-id watchlist-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-watchlist-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteWatchlist"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-watchlist))
(common-lisp:progn
 (common-lisp:defun describe-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id)
   (common-lisp:declare (common-lisp:ignorable domain-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeDomain"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-domain))
(common-lisp:progn
 (common-lisp:defun describe-fraudster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id fraudster-id)
   (common-lisp:declare (common-lisp:ignorable domain-id fraudster-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-fraudster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeFraudster"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-fraudster))
(common-lisp:progn
 (common-lisp:defun describe-fraudster-registration-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id job-id)
   (common-lisp:declare (common-lisp:ignorable domain-id job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-fraudster-registration-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeFraudsterRegistrationJob"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-fraudster-registration-job))
(common-lisp:progn
 (common-lisp:defun describe-speaker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id speaker-id)
   (common-lisp:declare (common-lisp:ignorable domain-id speaker-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-speaker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeSpeaker"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-speaker))
(common-lisp:progn
 (common-lisp:defun describe-speaker-enrollment-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id job-id)
   (common-lisp:declare (common-lisp:ignorable domain-id job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-speaker-enrollment-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeSpeakerEnrollmentJob"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-speaker-enrollment-job))
(common-lisp:progn
 (common-lisp:defun describe-watchlist
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id watchlist-id)
   (common-lisp:declare (common-lisp:ignorable domain-id watchlist-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-watchlist-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeWatchlist"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-watchlist))
(common-lisp:progn
 (common-lisp:defun disassociate-fraudster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id fraudster-id watchlist-id)
   (common-lisp:declare
    (common-lisp:ignorable domain-id fraudster-id watchlist-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-fraudster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DisassociateFraudster"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-fraudster))
(common-lisp:progn
 (common-lisp:defun evaluate-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id session-name-or-id)
   (common-lisp:declare (common-lisp:ignorable domain-id session-name-or-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-evaluate-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "EvaluateSession"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'evaluate-session))
(common-lisp:progn
 (common-lisp:defun list-domains
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-domains-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListDomains"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-domains))
(common-lisp:progn
 (common-lisp:defun list-fraudster-registration-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id job-status max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable domain-id job-status max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-fraudster-registration-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListFraudsterRegistrationJobs"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-fraudster-registration-jobs))
(common-lisp:progn
 (common-lisp:defun list-fraudsters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id max-results next-token
                     watchlist-id)
   (common-lisp:declare
    (common-lisp:ignorable domain-id max-results next-token watchlist-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-fraudsters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListFraudsters"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-fraudsters))
(common-lisp:progn
 (common-lisp:defun list-speaker-enrollment-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id job-status max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable domain-id job-status max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-speaker-enrollment-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListSpeakerEnrollmentJobs"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-speaker-enrollment-jobs))
(common-lisp:progn
 (common-lisp:defun list-speakers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable domain-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-speakers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListSpeakers"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-speakers))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-watchlists
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable domain-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-watchlists-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListWatchlists"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-watchlists))
(common-lisp:progn
 (common-lisp:defun opt-out-speaker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-id speaker-id)
   (common-lisp:declare (common-lisp:ignorable domain-id speaker-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-opt-out-speaker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "OptOutSpeaker"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'opt-out-speaker))
(common-lisp:progn
 (common-lisp:defun start-fraudster-registration-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token data-access-role-arn
                     domain-id input-data-config job-name output-data-config
                     registration-config)
   (common-lisp:declare
    (common-lisp:ignorable client-token data-access-role-arn domain-id
     input-data-config job-name output-data-config registration-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-fraudster-registration-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartFraudsterRegistrationJob"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-fraudster-registration-job))
(common-lisp:progn
 (common-lisp:defun start-speaker-enrollment-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token data-access-role-arn
                     domain-id enrollment-config input-data-config job-name
                     output-data-config)
   (common-lisp:declare
    (common-lisp:ignorable client-token data-access-role-arn domain-id
     enrollment-config input-data-config job-name output-data-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-speaker-enrollment-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartSpeakerEnrollmentJob"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-speaker-enrollment-job))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "TagResource"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UntagResource"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description domain-id name
                     server-side-encryption-configuration)
   (common-lisp:declare
    (common-lisp:ignorable description domain-id name
     server-side-encryption-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateDomain"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-domain))
(common-lisp:progn
 (common-lisp:defun update-watchlist
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description domain-id name watchlist-id)
   (common-lisp:declare
    (common-lisp:ignorable description domain-id name watchlist-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-watchlist-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'voice-id-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateWatchlist"
                                                        "2021-09-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-watchlist))
