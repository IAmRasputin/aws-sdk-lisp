;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/iotdeviceadvisor/api
  (:use)
  (:nicknames #:aws/iotdeviceadvisor)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/iotdeviceadvisor/api)
(common-lisp:progn
 (common-lisp:defclass iotdeviceadvisor-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "iotdeviceadvisor"))
 (common-lisp:export 'iotdeviceadvisor-request))
(common-lisp:progn
 (common-lisp:define-condition iotdeviceadvisor-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'iotdeviceadvisor-error))
(common-lisp:defvar *error-map*
  '(("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (iotdeviceadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-suite-definition-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-suite-definition-request-"))
   (suite-definition-configuration
    (common-lisp:error ":suitedefinitionconfiguration is required") :type
    (common-lisp:or suite-definition-configuration common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-suite-definition-request
                    'make-create-suite-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-suite-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-suite-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-configuration))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-suite-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-suite-definition-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-suite-definition-response-"))
   (suite-definition-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (suite-definition-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (suite-definition-name common-lisp:nil :type
    (common-lisp:or suite-definition-name common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-suite-definition-response
                    'make-create-suite-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-suite-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-suite-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-definition-id))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-arn))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-name))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-suite-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-suite-definition-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-suite-definition-request-"))
   (suite-definition-id (common-lisp:error ":suitedefinitionid is required")
    :type (common-lisp:or uuid common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-suite-definition-request
                    'make-delete-suite-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-suite-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-suite-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-suite-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-suite-definition-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-suite-definition-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-suite-definition-response
                    'make-delete-suite-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-suite-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-suite-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-suite-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (device-under-test (:copier common-lisp:nil)
      (:conc-name "struct-shape-device-under-test-"))
   (thing-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (certificate-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'device-under-test 'make-device-under-test))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input device-under-test))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input device-under-test))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-arn))
      (common-lisp:list
       (common-lisp:cons "thingArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "certificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input device-under-test))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype device-under-test-list ()
   '(trivial-types:proper-list device-under-test))
 (common-lisp:defun |make-device-under-test-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list device-under-test))
   aws-sdk/generator/shape::members))
(common-lisp:deftype endpoint () 'common-lisp:string)
(common-lisp:deftype error-reason () 'common-lisp:string)
(common-lisp:deftype failure () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-endpoint-request-"))
   (thing-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (certificate-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-request 'make-get-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-endpoint-response-"))
   (endpoint common-lisp:nil :type (common-lisp:or endpoint common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-response 'make-get-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-suite-definition-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-suite-definition-request-"))
   (suite-definition-id (common-lisp:error ":suitedefinitionid is required")
    :type (common-lisp:or uuid common-lisp:null))
   (suite-definition-version common-lisp:nil :type
    (common-lisp:or suite-definition-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-suite-definition-request
                    'make-get-suite-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-suite-definition-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-suite-definition-response-"))
   (suite-definition-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (suite-definition-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (suite-definition-version common-lisp:nil :type
    (common-lisp:or suite-definition-version common-lisp:null))
   (latest-version common-lisp:nil :type
    (common-lisp:or suite-definition-version common-lisp:null))
   (suite-definition-configuration common-lisp:nil :type
    (common-lisp:or suite-definition-configuration common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modified-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-suite-definition-response
                    'make-get-suite-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-definition-id))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-arn))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-version))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "latestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-configuration))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-at))
      (common-lisp:list
       (common-lisp:cons "lastModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-suite-run-report-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-suite-run-report-request-"))
   (suite-definition-id (common-lisp:error ":suitedefinitionid is required")
    :type (common-lisp:or uuid common-lisp:null))
   (suite-run-id (common-lisp:error ":suiterunid is required") :type
    (common-lisp:or uuid common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-suite-run-report-request
                    'make-get-suite-run-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-suite-run-report-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-suite-run-report-response-"))
   (qualification-report-download-url common-lisp:nil :type
    (common-lisp:or qualification-report-download-url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-suite-run-report-response
                    'make-get-suite-run-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-report-download-url))
      (common-lisp:list
       (common-lisp:cons "qualificationReportDownloadUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-suite-run-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-suite-run-request-"))
   (suite-definition-id (common-lisp:error ":suitedefinitionid is required")
    :type (common-lisp:or uuid common-lisp:null))
   (suite-run-id (common-lisp:error ":suiterunid is required") :type
    (common-lisp:or uuid common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-suite-run-request 'make-get-suite-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-suite-run-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-suite-run-response-"))
   (suite-definition-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (suite-definition-version common-lisp:nil :type
    (common-lisp:or suite-definition-version common-lisp:null))
   (suite-run-id common-lisp:nil :type (common-lisp:or uuid common-lisp:null))
   (suite-run-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (suite-run-configuration common-lisp:nil :type
    (common-lisp:or suite-run-configuration common-lisp:null))
   (test-result common-lisp:nil :type
    (common-lisp:or test-result common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or suite-run-status common-lisp:null))
   (error-reason common-lisp:nil :type
    (common-lisp:or error-reason common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-suite-run-response 'make-get-suite-run-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-definition-id))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-version))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-run-id))
      (common-lisp:list
       (common-lisp:cons "suiteRunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-run-arn))
      (common-lisp:list
       (common-lisp:cons "suiteRunArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-run-configuration))
      (common-lisp:list
       (common-lisp:cons "suiteRunConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-result))
      (common-lisp:list
       (common-lisp:cons "testResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-reason))
      (common-lisp:list
       (common-lisp:cons "errorReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-response))
   common-lisp:nil))
(common-lisp:deftype group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (group-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-group-result-"))
   (group-id common-lisp:nil :type (common-lisp:or uuid common-lisp:null))
   (group-name common-lisp:nil :type
    (common-lisp:or group-name common-lisp:null))
   (tests common-lisp:nil :type
    (common-lisp:or test-case-runs common-lisp:null)))
 (common-lisp:export (common-lisp:list 'group-result 'make-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input group-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input group-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-id))
      (common-lisp:list
       (common-lisp:cons "groupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-name))
      (common-lisp:list
       (common-lisp:cons "groupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tests))
      (common-lisp:list
       (common-lisp:cons "tests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input group-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype group-result-list ()
   '(trivial-types:proper-list group-result))
 (common-lisp:defun |make-group-result-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list group-result))
   aws-sdk/generator/shape::members))
(common-lisp:deftype intended-for-qualification-boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (iotdeviceadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype is-long-duration-test-boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (list-suite-definitions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-suite-definitions-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-suite-definitions-request
                    'make-list-suite-definitions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-definitions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-suite-definitions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-suite-definitions-response-"))
   (suite-definition-information-list common-lisp:nil :type
    (common-lisp:or suite-definition-information-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-suite-definitions-response
                    'make-list-suite-definitions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-information-list))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionInformationList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-suite-runs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-suite-runs-request-"))
   (suite-definition-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (suite-definition-version common-lisp:nil :type
    (common-lisp:or suite-definition-version common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-suite-runs-request 'make-list-suite-runs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-runs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-runs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-runs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-suite-runs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-suite-runs-response-"))
   (suite-runs-list common-lisp:nil :type
    (common-lisp:or suite-runs-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-suite-runs-response 'make-list-suite-runs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-runs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-runs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-runs-list))
      (common-lisp:list
       (common-lisp:cons "suiteRunsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-runs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype log-url () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype parallel-run () 'common-lisp:boolean)
(common-lisp:deftype protocol () 'common-lisp:string)
(common-lisp:deftype qualification-report-download-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (iotdeviceadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype root-group () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype selected-test-list () '(trivial-types:proper-list uuid))
 (common-lisp:defun |make-selected-test-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list uuid))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (start-suite-run-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-suite-run-request-"))
   (suite-definition-id (common-lisp:error ":suitedefinitionid is required")
    :type (common-lisp:or uuid common-lisp:null))
   (suite-definition-version common-lisp:nil :type
    (common-lisp:or suite-definition-version common-lisp:null))
   (suite-run-configuration
    (common-lisp:error ":suiterunconfiguration is required") :type
    (common-lisp:or suite-run-configuration common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-suite-run-request 'make-start-suite-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-suite-run-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-suite-run-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-version))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-run-configuration))
      (common-lisp:list
       (common-lisp:cons "suiteRunConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-suite-run-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-suite-run-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-suite-run-response-"))
   (suite-run-id common-lisp:nil :type (common-lisp:or uuid common-lisp:null))
   (suite-run-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (endpoint common-lisp:nil :type (common-lisp:or endpoint common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-suite-run-response 'make-start-suite-run-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-suite-run-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-suite-run-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-run-id))
      (common-lisp:list
       (common-lisp:cons "suiteRunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-run-arn))
      (common-lisp:list
       (common-lisp:cons "suiteRunArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-suite-run-response))
   common-lisp:nil))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (stop-suite-run-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-suite-run-request-"))
   (suite-definition-id (common-lisp:error ":suitedefinitionid is required")
    :type (common-lisp:or uuid common-lisp:null))
   (suite-run-id (common-lisp:error ":suiterunid is required") :type
    (common-lisp:or uuid common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-suite-run-request 'make-stop-suite-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-suite-run-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-suite-run-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-suite-run-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-suite-run-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-suite-run-response-")))
 (common-lisp:export
  (common-lisp:list 'stop-suite-run-response 'make-stop-suite-run-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-suite-run-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-suite-run-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-suite-run-response))
   common-lisp:nil))
(common-lisp:deftype string128 () 'common-lisp:string)
(common-lisp:deftype string256 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (suite-definition-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-suite-definition-configuration-"))
   (suite-definition-name
    (common-lisp:error ":suitedefinitionname is required") :type
    (common-lisp:or suite-definition-name common-lisp:null))
   (devices common-lisp:nil :type
    (common-lisp:or device-under-test-list common-lisp:null))
   (intended-for-qualification common-lisp:nil :type
    (common-lisp:or intended-for-qualification-boolean common-lisp:null))
   (is-long-duration-test common-lisp:nil :type
    (common-lisp:or is-long-duration-test-boolean common-lisp:null))
   (root-group (common-lisp:error ":rootgroup is required") :type
    (common-lisp:or root-group common-lisp:null))
   (device-permission-role-arn
    (common-lisp:error ":devicepermissionrolearn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (protocol common-lisp:nil :type (common-lisp:or protocol common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'suite-definition-configuration
                    'make-suite-definition-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suite-definition-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suite-definition-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-name))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'devices))
      (common-lisp:list
       (common-lisp:cons "devices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'intended-for-qualification))
      (common-lisp:list
       (common-lisp:cons "intendedForQualification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-long-duration-test))
      (common-lisp:list
       (common-lisp:cons "isLongDurationTest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'root-group))
      (common-lisp:list
       (common-lisp:cons "rootGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-permission-role-arn))
      (common-lisp:list
       (common-lisp:cons "devicePermissionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suite-definition-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (suite-definition-information (:copier common-lisp:nil)
      (:conc-name "struct-shape-suite-definition-information-"))
   (suite-definition-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (suite-definition-name common-lisp:nil :type
    (common-lisp:or suite-definition-name common-lisp:null))
   (default-devices common-lisp:nil :type
    (common-lisp:or device-under-test-list common-lisp:null))
   (intended-for-qualification common-lisp:nil :type
    (common-lisp:or intended-for-qualification-boolean common-lisp:null))
   (is-long-duration-test common-lisp:nil :type
    (common-lisp:or is-long-duration-test-boolean common-lisp:null))
   (protocol common-lisp:nil :type (common-lisp:or protocol common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'suite-definition-information
                    'make-suite-definition-information))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suite-definition-information))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suite-definition-information))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-definition-id))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-name))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-devices))
      (common-lisp:list
       (common-lisp:cons "defaultDevices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'intended-for-qualification))
      (common-lisp:list
       (common-lisp:cons "intendedForQualification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-long-duration-test))
      (common-lisp:list
       (common-lisp:cons "isLongDurationTest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suite-definition-information))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype suite-definition-information-list ()
   '(trivial-types:proper-list suite-definition-information))
 (common-lisp:defun |make-suite-definition-information-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            suite-definition-information))
   aws-sdk/generator/shape::members))
(common-lisp:deftype suite-definition-name () 'common-lisp:string)
(common-lisp:deftype suite-definition-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (suite-run-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-suite-run-configuration-"))
   (primary-device (common-lisp:error ":primarydevice is required") :type
    (common-lisp:or device-under-test common-lisp:null))
   (selected-test-list common-lisp:nil :type
    (common-lisp:or selected-test-list common-lisp:null))
   (parallel-run common-lisp:nil :type
    (common-lisp:or parallel-run common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'suite-run-configuration 'make-suite-run-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suite-run-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suite-run-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-device))
      (common-lisp:list
       (common-lisp:cons "primaryDevice"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selected-test-list))
      (common-lisp:list
       (common-lisp:cons "selectedTestList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parallel-run))
      (common-lisp:list
       (common-lisp:cons "parallelRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suite-run-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (suite-run-information (:copier common-lisp:nil)
      (:conc-name "struct-shape-suite-run-information-"))
   (suite-definition-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (suite-definition-version common-lisp:nil :type
    (common-lisp:or suite-definition-version common-lisp:null))
   (suite-definition-name common-lisp:nil :type
    (common-lisp:or suite-definition-name common-lisp:null))
   (suite-run-id common-lisp:nil :type (common-lisp:or uuid common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (started-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-at common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or suite-run-status common-lisp:null))
   (passed common-lisp:nil :type
    (common-lisp:or suite-run-result-count common-lisp:null))
   (failed common-lisp:nil :type
    (common-lisp:or suite-run-result-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'suite-run-information 'make-suite-run-information))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suite-run-information))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suite-run-information))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-definition-id))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-version))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-name))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-run-id))
      (common-lisp:list
       (common-lisp:cons "suiteRunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-at))
      (common-lisp:list
       (common-lisp:cons "startedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-at))
      (common-lisp:list
       (common-lisp:cons "endAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'passed))
      (common-lisp:list
       (common-lisp:cons "passed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed))
      (common-lisp:list
       (common-lisp:cons "failed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suite-run-information))
   common-lisp:nil))
(common-lisp:deftype suite-run-result-count () 'common-lisp:integer)
(common-lisp:deftype suite-run-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype suite-runs-list ()
   '(trivial-types:proper-list suite-run-information))
 (common-lisp:defun |make-suite-runs-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list suite-run-information))
   aws-sdk/generator/shape::members))
(common-lisp:deftype system-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list string128))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string128))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype test-case-definition-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (test-case-run (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-case-run-"))
   (test-case-run-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (test-case-definition-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (test-case-definition-name common-lisp:nil :type
    (common-lisp:or test-case-definition-name common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (log-url common-lisp:nil :type (common-lisp:or log-url common-lisp:null))
   (warnings common-lisp:nil :type (common-lisp:or warnings common-lisp:null))
   (failure common-lisp:nil :type (common-lisp:or failure common-lisp:null))
   (test-scenarios common-lisp:nil :type
    (common-lisp:or test-case-scenarios-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'test-case-run 'make-test-case-run))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input test-case-run))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input test-case-run))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-case-run-id))
      (common-lisp:list
       (common-lisp:cons "testCaseRunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'test-case-definition-id))
      (common-lisp:list
       (common-lisp:cons "testCaseDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'test-case-definition-name))
      (common-lisp:list
       (common-lisp:cons "testCaseDefinitionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-url))
      (common-lisp:list
       (common-lisp:cons "logUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure))
      (common-lisp:list
       (common-lisp:cons "failure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-scenarios))
      (common-lisp:list
       (common-lisp:cons "testScenarios"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input test-case-run))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype test-case-runs ()
   '(trivial-types:proper-list test-case-run))
 (common-lisp:defun |make-test-case-runs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list test-case-run))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (test-case-scenario (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-case-scenario-"))
   (test-case-scenario-id common-lisp:nil :type
    (common-lisp:or test-case-scenario-id common-lisp:null))
   (test-case-scenario-type common-lisp:nil :type
    (common-lisp:or test-case-scenario-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or test-case-scenario-status common-lisp:null))
   (failure common-lisp:nil :type (common-lisp:or failure common-lisp:null))
   (system-message common-lisp:nil :type
    (common-lisp:or system-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-case-scenario 'make-test-case-scenario))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input test-case-scenario))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input test-case-scenario))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'test-case-scenario-id))
      (common-lisp:list
       (common-lisp:cons "testCaseScenarioId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'test-case-scenario-type))
      (common-lisp:list
       (common-lisp:cons "testCaseScenarioType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure))
      (common-lisp:list
       (common-lisp:cons "failure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'system-message))
      (common-lisp:list
       (common-lisp:cons "systemMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input test-case-scenario))
   common-lisp:nil))
(common-lisp:deftype test-case-scenario-id () 'common-lisp:string)
(common-lisp:deftype test-case-scenario-status () 'common-lisp:string)
(common-lisp:deftype test-case-scenario-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype test-case-scenarios-list ()
   '(trivial-types:proper-list test-case-scenario))
 (common-lisp:defun |make-test-case-scenarios-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list test-case-scenario))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (test-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-result-"))
   (groups common-lisp:nil :type
    (common-lisp:or group-result-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'test-result 'make-test-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input test-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input test-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input test-result))
   common-lisp:nil))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tag-keys (common-lisp:error ":tagkeys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-suite-definition-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-suite-definition-request-"))
   (suite-definition-id (common-lisp:error ":suitedefinitionid is required")
    :type (common-lisp:or uuid common-lisp:null))
   (suite-definition-configuration
    (common-lisp:error ":suitedefinitionconfiguration is required") :type
    (common-lisp:or suite-definition-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-suite-definition-request
                    'make-update-suite-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-suite-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-suite-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-configuration))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-suite-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-suite-definition-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-suite-definition-response-"))
   (suite-definition-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (suite-definition-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (suite-definition-name common-lisp:nil :type
    (common-lisp:or suite-definition-name common-lisp:null))
   (suite-definition-version common-lisp:nil :type
    (common-lisp:or suite-definition-version common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-suite-definition-response
                    'make-update-suite-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-suite-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-suite-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-definition-id))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-arn))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-name))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-version))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-suite-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (iotdeviceadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:deftype warnings () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-suite-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-configuration tags)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-configuration tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-suite-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "POST"
        "/suiteDefinitions" "CreateSuiteDefinition" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-suite-definition))
(common-lisp:progn
 (common-lisp:defun delete-suite-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id)
   (common-lisp:declare (common-lisp:ignorable suite-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-suite-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/suiteDefinitions/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))))
        "DeleteSuiteDefinition" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-suite-definition))
(common-lisp:progn
 (common-lisp:defun get-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-arn certificate-arn)
   (common-lisp:declare (common-lisp:ignorable thing-arn certificate-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        "/endpoint" "GetEndpoint" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-endpoint))
(common-lisp:progn
 (common-lisp:defun get-suite-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id
                     suite-definition-version)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-definition-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-suite-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/suiteDefinitions/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))))
        "GetSuiteDefinition" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-suite-definition))
(common-lisp:progn
 (common-lisp:defun get-suite-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id suite-run-id)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-run-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-suite-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/suiteDefinitions/~A/suiteRuns/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-run-id))))
        "GetSuiteRun" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-suite-run))
(common-lisp:progn
 (common-lisp:defun get-suite-run-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id suite-run-id)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-run-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-suite-run-report-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/suiteDefinitions/~A/suiteRuns/~A/report"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-run-id))))
        "GetSuiteRunReport" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-suite-run-report))
(common-lisp:progn
 (common-lisp:defun list-suite-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-suite-definitions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        "/suiteDefinitions" "ListSuiteDefinitions" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-suite-definitions))
(common-lisp:progn
 (common-lisp:defun list-suite-runs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id
                     suite-definition-version max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-definition-version
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-suite-runs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        "/suiteRuns" "ListSuiteRuns" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-suite-runs))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResource" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun start-suite-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id
                     suite-definition-version suite-run-configuration tags)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-definition-version
     suite-run-configuration tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-suite-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/suiteDefinitions/~A/suiteRuns"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))))
        "StartSuiteRun" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-suite-run))
(common-lisp:progn
 (common-lisp:defun stop-suite-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id suite-run-id)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-run-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-suite-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/suiteDefinitions/~A/suiteRuns/~A/stop"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-run-id))))
        "StopSuiteRun" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-suite-run))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-suite-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id
                     suite-definition-configuration)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-definition-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-suite-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "PATCH"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/suiteDefinitions/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))))
        "UpdateSuiteDefinition" "2020-09-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-suite-definition))
