;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/amplifybackend/api
  (:use)
  (:nicknames #:aws/amplifybackend)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/amplifybackend/api)
(common-lisp:progn
 (common-lisp:defclass amplifybackend-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "amplifybackend" :protocol
                        :rest-json))
 (common-lisp:export 'amplifybackend-request))
(common-lisp:progn
 (common-lisp:define-condition amplifybackend-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'amplifybackend-error))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("GatewayTimeoutException" . gateway-timeout-exception)
    ("NotFoundException" . not-found-exception)
    ("TooManyRequestsException" . too-many-requests-exception)))
(common-lisp:deftype auth-resources () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (backend-apiapp-sync-auth-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-apiapp-sync-auth-settings-"))
   (cognito-user-pool-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (expiration-time common-lisp:nil :type
    (common-lisp:or |__double| common-lisp:null))
   (open-idauth-ttl common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (open-idclient-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (open-idiat-ttl common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (open-idissue-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (open-idprovider-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-apiapp-sync-auth-settings
                    'make-backend-apiapp-sync-auth-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backend-apiapp-sync-auth-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backend-apiapp-sync-auth-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cognito-user-pool-id))
      (common-lisp:list
       (common-lisp:cons "CognitoUserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-time))
      (common-lisp:list
       (common-lisp:cons "ExpirationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'open-idauth-ttl))
      (common-lisp:list
       (common-lisp:cons "OpenIDAuthTTL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'open-idclient-id))
      (common-lisp:list
       (common-lisp:cons "OpenIDClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'open-idiat-ttl))
      (common-lisp:list
       (common-lisp:cons "OpenIDIatTTL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'open-idissue-url))
      (common-lisp:list
       (common-lisp:cons "OpenIDIssueURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'open-idprovider-name))
      (common-lisp:list
       (common-lisp:cons "OpenIDProviderName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backend-apiapp-sync-auth-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-apiauth-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-apiauth-type-"))
   (mode common-lisp:nil :type (common-lisp:or mode common-lisp:null))
   (settings common-lisp:nil :type
    (common-lisp:or backend-apiapp-sync-auth-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-apiauth-type 'make-backend-apiauth-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input backend-apiauth-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input backend-apiauth-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'settings))
      (common-lisp:list
       (common-lisp:cons "Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input backend-apiauth-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-apicodegen-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-apicodegen-req-obj-"))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-apicodegen-req-obj
                    'make-backend-apicodegen-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backend-apicodegen-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backend-apicodegen-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backend-apicodegen-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-apicodegen-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-apicodegen-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-apicodegen-resp-obj
                    'make-backend-apicodegen-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backend-apicodegen-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backend-apicodegen-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backend-apicodegen-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-apiconflict-resolution (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-apiconflict-resolution-"))
   (resolution-strategy common-lisp:nil :type
    (common-lisp:or resolution-strategy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-apiconflict-resolution
                    'make-backend-apiconflict-resolution))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backend-apiconflict-resolution))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backend-apiconflict-resolution))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resolution-strategy))
      (common-lisp:list
       (common-lisp:cons "ResolutionStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backend-apiconflict-resolution))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-apireq-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-apireq-obj-"))
   (resource-config common-lisp:nil :type
    (common-lisp:or backend-apiresource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-apireq-obj 'make-backend-apireq-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input backend-apireq-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input backend-apireq-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input backend-apireq-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-apiresource-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-apiresource-config-"))
   (additional-auth-types common-lisp:nil :type
    (common-lisp:or list-of-backend-apiauth-type common-lisp:null))
   (api-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (conflict-resolution common-lisp:nil :type
    (common-lisp:or backend-apiconflict-resolution common-lisp:null))
   (default-auth-type common-lisp:nil :type
    (common-lisp:or backend-apiauth-type common-lisp:null))
   (service common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (transform-schema common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-apiresource-config
                    'make-backend-apiresource-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backend-apiresource-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backend-apiresource-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-auth-types))
      (common-lisp:list
       (common-lisp:cons "AdditionalAuthTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-name))
      (common-lisp:list
       (common-lisp:cons "ApiName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'conflict-resolution))
      (common-lisp:list
       (common-lisp:cons "ConflictResolution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-auth-type))
      (common-lisp:list
       (common-lisp:cons "DefaultAuthType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "Service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transform-schema))
      (common-lisp:list
       (common-lisp:cons "TransformSchema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backend-apiresource-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-apiresp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-apiresp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-apiresp-obj 'make-backend-apiresp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input backend-apiresp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input backend-apiresp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input backend-apiresp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-auth-apple-provider-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-auth-apple-provider-config-"))
   (client-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (key-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (private-key common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (team-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-auth-apple-provider-config
                    'make-backend-auth-apple-provider-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backend-auth-apple-provider-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backend-auth-apple-provider-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-id))
      (common-lisp:list
       (common-lisp:cons "KeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-key))
      (common-lisp:list
       (common-lisp:cons "PrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-id))
      (common-lisp:list
       (common-lisp:cons "TeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backend-auth-apple-provider-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-auth-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-auth-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-auth-resp-obj 'make-backend-auth-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backend-auth-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backend-auth-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backend-auth-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-auth-social-provider-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-auth-social-provider-config-"))
   (client-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (client-secret common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-auth-social-provider-config
                    'make-backend-auth-social-provider-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backend-auth-social-provider-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backend-auth-social-provider-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-secret))
      (common-lisp:list
       (common-lisp:cons "ClientSecret"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backend-auth-social-provider-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-config-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-config-resp-obj-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-manager-app-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (login-auth-config common-lisp:nil :type
    (common-lisp:or login-auth-config-req-obj common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-config-resp-obj 'make-backend-config-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backend-config-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backend-config-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-manager-app-id))
      (common-lisp:list
       (common-lisp:cons "BackendManagerAppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'login-auth-config))
      (common-lisp:list
       (common-lisp:cons "LoginAuthConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backend-config-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-job-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-job-req-obj-"))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-job-req-obj 'make-backend-job-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input backend-job-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input backend-job-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input backend-job-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-job-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-job-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (create-time common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (update-time common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-job-resp-obj 'make-backend-job-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input backend-job-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input backend-job-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "CreateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-time))
      (common-lisp:list
       (common-lisp:cons "UpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input backend-job-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-storage-permissions (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-storage-permissions-"))
   (authenticated (common-lisp:error ":authenticated is required") :type
    (common-lisp:or list-of-authenticated-element common-lisp:null))
   (un-authenticated common-lisp:nil :type
    (common-lisp:or list-of-un-authenticated-element common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-storage-permissions
                    'make-backend-storage-permissions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backend-storage-permissions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backend-storage-permissions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authenticated))
      (common-lisp:list
       (common-lisp:cons "Authenticated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'un-authenticated))
      (common-lisp:list
       (common-lisp:cons "UnAuthenticated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backend-storage-permissions))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (backend-storage-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-backend-storage-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-storage-resp-obj 'make-backend-storage-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          backend-storage-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          backend-storage-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          backend-storage-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (amplifybackend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (clone-backend-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-clone-backend-req-obj-"))
   (target-environment-name
    (common-lisp:error ":target-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'clone-backend-req-obj 'make-clone-backend-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          clone-backend-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          clone-backend-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-environment-name))
      (common-lisp:list
       (common-lisp:cons "TargetEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          clone-backend-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (clone-backend-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-clone-backend-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (target-environment-name
    (common-lisp:error ":target-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'clone-backend-request 'make-clone-backend-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          clone-backend-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          clone-backend-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-environment-name))
      (common-lisp:list
       (common-lisp:cons "TargetEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          clone-backend-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (clone-backend-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-clone-backend-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'clone-backend-resp-obj 'make-clone-backend-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          clone-backend-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          clone-backend-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          clone-backend-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (clone-backend-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-clone-backend-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'clone-backend-response 'make-clone-backend-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          clone-backend-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          clone-backend-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          clone-backend-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-apireq-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-apireq-obj-"))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config (common-lisp:error ":resource-config is required") :type
    (common-lisp:or backend-apiresource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-apireq-obj
                    'make-create-backend-apireq-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-apireq-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-apireq-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-apireq-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-apirequest (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-apirequest-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config (common-lisp:error ":resource-config is required") :type
    (common-lisp:or backend-apiresource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-apirequest
                    'make-create-backend-apirequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-apirequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-apirequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-apirequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-apiresponse (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-apiresponse-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-apiresponse
                    'make-create-backend-apiresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-apiresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-apiresponse))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-apiresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-auth-forgot-password-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-auth-forgot-password-config-"))
   (delivery-method (common-lisp:error ":delivery-method is required") :type
    (common-lisp:or delivery-method common-lisp:null))
   (email-settings common-lisp:nil :type
    (common-lisp:or email-settings common-lisp:null))
   (sms-settings common-lisp:nil :type
    (common-lisp:or sms-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-auth-forgot-password-config
                    'make-create-backend-auth-forgot-password-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-forgot-password-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-forgot-password-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-method))
      (common-lisp:list
       (common-lisp:cons "DeliveryMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-settings))
      (common-lisp:list
       (common-lisp:cons "EmailSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms-settings))
      (common-lisp:list
       (common-lisp:cons "SmsSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-forgot-password-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-auth-identity-pool-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-auth-identity-pool-config-"))
   (identity-pool-name (common-lisp:error ":identity-pool-name is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (unauthenticated-login
    (common-lisp:error ":unauthenticated-login is required") :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-auth-identity-pool-config
                    'make-create-backend-auth-identity-pool-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-identity-pool-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-identity-pool-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-pool-name))
      (common-lisp:list
       (common-lisp:cons "IdentityPoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unauthenticated-login))
      (common-lisp:list
       (common-lisp:cons "UnauthenticatedLogin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-identity-pool-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-auth-mfaconfig (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-auth-mfaconfig-"))
   (mfamode (common-lisp:error ":mfamode is required") :type
    (common-lisp:or mfamode common-lisp:null))
   (settings common-lisp:nil :type (common-lisp:or settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-auth-mfaconfig
                    'make-create-backend-auth-mfaconfig))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-mfaconfig))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-mfaconfig))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfamode))
      (common-lisp:list
       (common-lisp:cons "MFAMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'settings))
      (common-lisp:list
       (common-lisp:cons "Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-mfaconfig))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-auth-oauth-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-auth-oauth-config-"))
   (domain-prefix common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (oauth-grant-type (common-lisp:error ":oauth-grant-type is required") :type
    (common-lisp:or oauth-grant-type common-lisp:null))
   (oauth-scopes (common-lisp:error ":oauth-scopes is required") :type
    (common-lisp:or list-of-oauth-scopes-element common-lisp:null))
   (redirect-sign-in-uris
    (common-lisp:error ":redirect-sign-in-uris is required") :type
    (common-lisp:or list-of-string common-lisp:null))
   (redirect-sign-out-uris
    (common-lisp:error ":redirect-sign-out-uris is required") :type
    (common-lisp:or list-of-string common-lisp:null))
   (social-provider-settings common-lisp:nil :type
    (common-lisp:or social-provider-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-auth-oauth-config
                    'make-create-backend-auth-oauth-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-oauth-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-oauth-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-prefix))
      (common-lisp:list
       (common-lisp:cons "DomainPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oauth-grant-type))
      (common-lisp:list
       (common-lisp:cons "OAuthGrantType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oauth-scopes))
      (common-lisp:list
       (common-lisp:cons "OAuthScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'redirect-sign-in-uris))
      (common-lisp:list
       (common-lisp:cons "RedirectSignInURIs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'redirect-sign-out-uris))
      (common-lisp:list
       (common-lisp:cons "RedirectSignOutURIs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'social-provider-settings))
      (common-lisp:list
       (common-lisp:cons "SocialProviderSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-oauth-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-auth-password-policy-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-auth-password-policy-config-"))
   (additional-constraints common-lisp:nil :type
    (common-lisp:or list-of-additional-constraints-element common-lisp:null))
   (minimum-length (common-lisp:error ":minimum-length is required") :type
    (common-lisp:or |__double| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-auth-password-policy-config
                    'make-create-backend-auth-password-policy-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-password-policy-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-password-policy-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-constraints))
      (common-lisp:list
       (common-lisp:cons "AdditionalConstraints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minimum-length))
      (common-lisp:list
       (common-lisp:cons "MinimumLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-password-policy-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-auth-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-auth-req-obj-"))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config (common-lisp:error ":resource-config is required") :type
    (common-lisp:or create-backend-auth-resource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-auth-req-obj
                    'make-create-backend-auth-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-auth-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-auth-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config (common-lisp:error ":resource-config is required") :type
    (common-lisp:or create-backend-auth-resource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-auth-request
                    'make-create-backend-auth-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-auth-resource-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-auth-resource-config-"))
   (auth-resources (common-lisp:error ":auth-resources is required") :type
    (common-lisp:or auth-resources common-lisp:null))
   (identity-pool-configs common-lisp:nil :type
    (common-lisp:or create-backend-auth-identity-pool-config common-lisp:null))
   (service (common-lisp:error ":service is required") :type
    (common-lisp:or service common-lisp:null))
   (user-pool-configs (common-lisp:error ":user-pool-configs is required")
    :type
    (common-lisp:or create-backend-auth-user-pool-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-auth-resource-config
                    'make-create-backend-auth-resource-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-resource-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-resource-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-resources))
      (common-lisp:list
       (common-lisp:cons "AuthResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-pool-configs))
      (common-lisp:list
       (common-lisp:cons "IdentityPoolConfigs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "Service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-configs))
      (common-lisp:list
       (common-lisp:cons "UserPoolConfigs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-resource-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-auth-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-auth-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-auth-response
                    'make-create-backend-auth-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-auth-user-pool-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-auth-user-pool-config-"))
   (forgot-password common-lisp:nil :type
    (common-lisp:or create-backend-auth-forgot-password-config
                    common-lisp:null))
   (mfa common-lisp:nil :type
    (common-lisp:or create-backend-auth-mfaconfig common-lisp:null))
   (oauth common-lisp:nil :type
    (common-lisp:or create-backend-auth-oauth-config common-lisp:null))
   (password-policy common-lisp:nil :type
    (common-lisp:or create-backend-auth-password-policy-config
                    common-lisp:null))
   (required-sign-up-attributes
    (common-lisp:error ":required-sign-up-attributes is required") :type
    (common-lisp:or list-of-required-sign-up-attributes-element
                    common-lisp:null))
   (sign-in-method (common-lisp:error ":sign-in-method is required") :type
    (common-lisp:or sign-in-method common-lisp:null))
   (user-pool-name (common-lisp:error ":user-pool-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (verification-message common-lisp:nil :type
    (common-lisp:or create-backend-auth-verification-message-config
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-auth-user-pool-config
                    'make-create-backend-auth-user-pool-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-user-pool-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-user-pool-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'forgot-password))
      (common-lisp:list
       (common-lisp:cons "ForgotPassword"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfa))
      (common-lisp:list
       (common-lisp:cons "Mfa"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oauth))
      (common-lisp:list
       (common-lisp:cons "OAuth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password-policy))
      (common-lisp:list
       (common-lisp:cons "PasswordPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'required-sign-up-attributes))
      (common-lisp:list
       (common-lisp:cons "RequiredSignUpAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sign-in-method))
      (common-lisp:list
       (common-lisp:cons "SignInMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-name))
      (common-lisp:list
       (common-lisp:cons "UserPoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verification-message))
      (common-lisp:list
       (common-lisp:cons "VerificationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-user-pool-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-auth-verification-message-config (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-backend-auth-verification-message-config-"))
   (delivery-method (common-lisp:error ":delivery-method is required") :type
    (common-lisp:or delivery-method common-lisp:null))
   (email-settings common-lisp:nil :type
    (common-lisp:or email-settings common-lisp:null))
   (sms-settings common-lisp:nil :type
    (common-lisp:or sms-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-auth-verification-message-config
                    'make-create-backend-auth-verification-message-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-verification-message-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-verification-message-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-method))
      (common-lisp:list
       (common-lisp:cons "DeliveryMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-settings))
      (common-lisp:list
       (common-lisp:cons "EmailSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms-settings))
      (common-lisp:list
       (common-lisp:cons "SmsSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-auth-verification-message-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-config-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-config-req-obj-"))
   (backend-manager-app-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-config-req-obj
                    'make-create-backend-config-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-config-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-config-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-manager-app-id))
      (common-lisp:list
       (common-lisp:cons "BackendManagerAppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-config-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-config-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-config-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-manager-app-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-config-request
                    'make-create-backend-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-manager-app-id))
      (common-lisp:list
       (common-lisp:cons "BackendManagerAppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-config-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-config-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-config-resp-obj
                    'make-create-backend-config-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-config-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-config-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-config-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-config-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-config-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-config-response
                    'make-create-backend-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-req-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (app-name (common-lisp:error ":app-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config common-lisp:nil :type
    (common-lisp:or resource-config common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-req-obj 'make-create-backend-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-name))
      (common-lisp:list
       (common-lisp:cons "AppName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (app-name (common-lisp:error ":app-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config common-lisp:nil :type
    (common-lisp:or resource-config common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-request 'make-create-backend-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-name))
      (common-lisp:list
       (common-lisp:cons "AppName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-resp-obj 'make-create-backend-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-response 'make-create-backend-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-storage-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-storage-req-obj-"))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config (common-lisp:error ":resource-config is required") :type
    (common-lisp:or create-backend-storage-resource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-storage-req-obj
                    'make-create-backend-storage-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-storage-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-storage-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-storage-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-storage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-storage-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config (common-lisp:error ":resource-config is required") :type
    (common-lisp:or create-backend-storage-resource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-storage-request
                    'make-create-backend-storage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-storage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-storage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-storage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-storage-resource-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-storage-resource-config-"))
   (bucket-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (permissions (common-lisp:error ":permissions is required") :type
    (common-lisp:or backend-storage-permissions common-lisp:null))
   (service-name (common-lisp:error ":service-name is required") :type
    (common-lisp:or service-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-storage-resource-config
                    'make-create-backend-storage-resource-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-storage-resource-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-storage-resource-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "Permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-name))
      (common-lisp:list
       (common-lisp:cons "ServiceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-storage-resource-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-backend-storage-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-backend-storage-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-backend-storage-response
                    'make-create-backend-storage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-storage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-backend-storage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-token-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-token-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-token-request 'make-create-token-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-token-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-token-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-token-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-token-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-token-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (challenge-code (common-lisp:error ":challenge-code is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (session-id (common-lisp:error ":session-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (ttl (common-lisp:error ":ttl is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-token-resp-obj 'make-create-token-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-token-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-token-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'challenge-code))
      (common-lisp:list
       (common-lisp:cons "ChallengeCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-id))
      (common-lisp:list
       (common-lisp:cons "SessionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ttl))
      (common-lisp:list
       (common-lisp:cons "Ttl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-token-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-token-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-token-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (challenge-code common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (session-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (ttl common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-token-response 'make-create-token-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-token-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-token-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'challenge-code))
      (common-lisp:list
       (common-lisp:cons "ChallengeCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-id))
      (common-lisp:list
       (common-lisp:cons "SessionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ttl))
      (common-lisp:list
       (common-lisp:cons "Ttl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-token-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backend-apirequest (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backend-apirequest-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config common-lisp:nil :type
    (common-lisp:or backend-apiresource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backend-apirequest
                    'make-delete-backend-apirequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-apirequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-apirequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-apirequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backend-apiresponse (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backend-apiresponse-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backend-apiresponse
                    'make-delete-backend-apiresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-apiresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-apiresponse))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-apiresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backend-auth-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backend-auth-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backend-auth-request
                    'make-delete-backend-auth-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-auth-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-auth-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-auth-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backend-auth-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backend-auth-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backend-auth-response
                    'make-delete-backend-auth-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-auth-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-auth-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-auth-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backend-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backend-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backend-request 'make-delete-backend-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backend-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backend-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backend-resp-obj 'make-delete-backend-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backend-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backend-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backend-response 'make-delete-backend-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backend-storage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backend-storage-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (service-name (common-lisp:error ":service-name is required") :type
    (common-lisp:or service-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backend-storage-request
                    'make-delete-backend-storage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-storage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-storage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-name))
      (common-lisp:list
       (common-lisp:cons "ServiceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-storage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-backend-storage-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-backend-storage-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-backend-storage-response
                    'make-delete-backend-storage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-storage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-backend-storage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-token-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-token-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (session-id (common-lisp:error ":session-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-token-request 'make-delete-token-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-token-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-token-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-token-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-token-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-token-resp-obj-"))
   (is-success (common-lisp:error ":is-success is required") :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-token-resp-obj 'make-delete-token-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-token-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-token-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-success))
      (common-lisp:list
       (common-lisp:cons "IsSuccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-token-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-token-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-token-response-"))
   (is-success common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-token-response 'make-delete-token-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-token-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-token-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-success))
      (common-lisp:list
       (common-lisp:cons "IsSuccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-token-response))
   common-lisp:nil))
(common-lisp:deftype delivery-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (email-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-email-settings-"))
   (email-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (email-subject common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'email-settings 'make-email-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input email-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input email-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-message))
      (common-lisp:list
       (common-lisp:cons "EmailMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-subject))
      (common-lisp:list
       (common-lisp:cons "EmailSubject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input email-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition gateway-timeout-exception
     (amplifybackend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       gateway-timeout-exception-message)))
 (common-lisp:export
  (common-lisp:list 'gateway-timeout-exception
                    'gateway-timeout-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (generate-backend-apimodels-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-generate-backend-apimodels-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-backend-apimodels-request
                    'make-generate-backend-apimodels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generate-backend-apimodels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generate-backend-apimodels-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generate-backend-apimodels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (generate-backend-apimodels-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-generate-backend-apimodels-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-backend-apimodels-response
                    'make-generate-backend-apimodels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generate-backend-apimodels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generate-backend-apimodels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generate-backend-apimodels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-apimodels-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-apimodels-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-apimodels-request
                    'make-get-backend-apimodels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apimodels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apimodels-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apimodels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-apimodels-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-apimodels-response-"))
   (models common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (model-introspection-schema common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-apimodels-response
                    'make-get-backend-apimodels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apimodels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apimodels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'models))
      (common-lisp:list
       (common-lisp:cons "Models"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-introspection-schema))
      (common-lisp:list
       (common-lisp:cons "ModelIntrospectionSchema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apimodels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-apirequest (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-apirequest-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config common-lisp:nil :type
    (common-lisp:or backend-apiresource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-apirequest 'make-get-backend-apirequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apirequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apirequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apirequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-apiresp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-apiresp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (resource-config common-lisp:nil :type
    (common-lisp:or backend-apiresource-config common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-apiresp-obj 'make-get-backend-apiresp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apiresp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apiresp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apiresp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-apiresponse (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-apiresponse-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (resource-config common-lisp:nil :type
    (common-lisp:or backend-apiresource-config common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-apiresponse 'make-get-backend-apiresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apiresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apiresponse))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-apiresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-auth-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-auth-req-obj-"))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-auth-req-obj 'make-get-backend-auth-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-auth-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-auth-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-auth-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-auth-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-auth-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-auth-request 'make-get-backend-auth-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-auth-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-auth-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-auth-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-auth-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-auth-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (resource-config common-lisp:nil :type
    (common-lisp:or create-backend-auth-resource-config common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-auth-resp-obj
                    'make-get-backend-auth-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-auth-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-auth-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-auth-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-auth-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-auth-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (resource-config common-lisp:nil :type
    (common-lisp:or create-backend-auth-resource-config common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-auth-response
                    'make-get-backend-auth-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-auth-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-auth-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-auth-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-job-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-job-request 'make-get-backend-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-job-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (create-time common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (update-time common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-job-response 'make-get-backend-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "CreateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-time))
      (common-lisp:list
       (common-lisp:cons "UpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-req-obj-"))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-req-obj 'make-get-backend-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-backend-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-backend-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-backend-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-request 'make-get-backend-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-backend-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-backend-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-backend-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-resp-obj-"))
   (amplify-feature-flags common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (amplify-meta-config common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (app-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-list common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-resp-obj 'make-get-backend-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-backend-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-backend-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'amplify-feature-flags))
      (common-lisp:list
       (common-lisp:cons "AmplifyFeatureFlags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amplify-meta-config))
      (common-lisp:list
       (common-lisp:cons "AmplifyMetaConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-name))
      (common-lisp:list
       (common-lisp:cons "AppName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-list))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-backend-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-response-"))
   (amplify-feature-flags common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (amplify-meta-config common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (app-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-list common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-response 'make-get-backend-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-backend-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-backend-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'amplify-feature-flags))
      (common-lisp:list
       (common-lisp:cons "AmplifyFeatureFlags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amplify-meta-config))
      (common-lisp:list
       (common-lisp:cons "AmplifyMetaConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-name))
      (common-lisp:list
       (common-lisp:cons "AppName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-list))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-backend-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-storage-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-storage-req-obj-"))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-storage-req-obj
                    'make-get-backend-storage-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-storage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-storage-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-storage-request
                    'make-get-backend-storage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-storage-resource-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-storage-resource-config-"))
   (bucket-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (imported (common-lisp:error ":imported is required") :type
    (common-lisp:or |__boolean| common-lisp:null))
   (permissions common-lisp:nil :type
    (common-lisp:or backend-storage-permissions common-lisp:null))
   (service-name (common-lisp:error ":service-name is required") :type
    (common-lisp:or service-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-storage-resource-config
                    'make-get-backend-storage-resource-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-resource-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-resource-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'imported))
      (common-lisp:list
       (common-lisp:cons "Imported"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "Permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-name))
      (common-lisp:list
       (common-lisp:cons "ServiceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-resource-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-storage-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-storage-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config common-lisp:nil :type
    (common-lisp:or get-backend-storage-resource-config common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-storage-resp-obj
                    'make-get-backend-storage-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-backend-storage-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-backend-storage-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config common-lisp:nil :type
    (common-lisp:or get-backend-storage-resource-config common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-backend-storage-response
                    'make-get-backend-storage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-backend-storage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-token-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-token-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (session-id (common-lisp:error ":session-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-token-request 'make-get-token-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-token-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-token-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-token-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-token-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-token-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (challenge-code (common-lisp:error ":challenge-code is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (session-id (common-lisp:error ":session-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (ttl (common-lisp:error ":ttl is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-token-resp-obj 'make-get-token-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-token-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-token-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'challenge-code))
      (common-lisp:list
       (common-lisp:cons "ChallengeCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-id))
      (common-lisp:list
       (common-lisp:cons "SessionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ttl))
      (common-lisp:list
       (common-lisp:cons "Ttl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-token-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-token-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-token-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (challenge-code common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (session-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (ttl common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-token-response 'make-get-token-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-token-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-token-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'challenge-code))
      (common-lisp:list
       (common-lisp:cons "ChallengeCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-id))
      (common-lisp:list
       (common-lisp:cons "SessionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ttl))
      (common-lisp:list
       (common-lisp:cons "Ttl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-token-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-backend-auth-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-backend-auth-req-obj-"))
   (identity-pool-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (native-client-id (common-lisp:error ":native-client-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (web-client-id (common-lisp:error ":web-client-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-backend-auth-req-obj
                    'make-import-backend-auth-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-auth-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-auth-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-pool-id))
      (common-lisp:list
       (common-lisp:cons "IdentityPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'native-client-id))
      (common-lisp:list
       (common-lisp:cons "NativeClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'web-client-id))
      (common-lisp:list
       (common-lisp:cons "WebClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-auth-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-backend-auth-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-backend-auth-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (identity-pool-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (native-client-id (common-lisp:error ":native-client-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (web-client-id (common-lisp:error ":web-client-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-backend-auth-request
                    'make-import-backend-auth-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-auth-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-auth-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-pool-id))
      (common-lisp:list
       (common-lisp:cons "IdentityPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'native-client-id))
      (common-lisp:list
       (common-lisp:cons "NativeClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'web-client-id))
      (common-lisp:list
       (common-lisp:cons "WebClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-auth-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-backend-auth-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-backend-auth-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-backend-auth-response
                    'make-import-backend-auth-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-auth-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-auth-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-auth-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-backend-storage-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-backend-storage-req-obj-"))
   (bucket-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (service-name (common-lisp:error ":service-name is required") :type
    (common-lisp:or service-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-backend-storage-req-obj
                    'make-import-backend-storage-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-storage-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-storage-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-name))
      (common-lisp:list
       (common-lisp:cons "ServiceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-storage-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-backend-storage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-backend-storage-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (bucket-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (service-name (common-lisp:error ":service-name is required") :type
    (common-lisp:or service-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-backend-storage-request
                    'make-import-backend-storage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-storage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-storage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-name))
      (common-lisp:list
       (common-lisp:cons "ServiceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-storage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-backend-storage-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-backend-storage-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-backend-storage-response
                    'make-import-backend-storage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-storage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-backend-storage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (internal-service-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-internal-service-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-service-exception
                    'make-internal-service-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          internal-service-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          internal-service-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          internal-service-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (limit-exceeded-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-limit-exceeded-exception-"))
   (limit-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          limit-exceeded-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          limit-exceeded-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit-type))
      (common-lisp:list
       (common-lisp:cons "LimitType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          limit-exceeded-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backend-job-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backend-job-req-obj-"))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integerMin1Max25| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backend-job-req-obj 'make-list-backend-job-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backend-job-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backend-job-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backend-job-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backend-job-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backend-job-resp-obj-"))
   (jobs common-lisp:nil :type
    (common-lisp:or list-of-backend-job-resp-obj common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backend-job-resp-obj
                    'make-list-backend-job-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backend-job-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backend-job-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jobs))
      (common-lisp:list
       (common-lisp:cons "Jobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backend-job-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backend-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backend-jobs-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integerMin1Max25| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backend-jobs-request
                    'make-list-backend-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backend-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backend-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backend-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-backend-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-backend-jobs-response-"))
   (jobs common-lisp:nil :type
    (common-lisp:or list-of-backend-job-resp-obj common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-backend-jobs-response
                    'make-list-backend-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-backend-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-backend-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jobs))
      (common-lisp:list
       (common-lisp:cons "Jobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-backend-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-s3buckets-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-s3buckets-req-obj-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-s3buckets-req-obj 'make-list-s3buckets-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-s3buckets-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-s3buckets-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-s3buckets-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-s3buckets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-s3buckets-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-s3buckets-request 'make-list-s3buckets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-s3buckets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-s3buckets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-s3buckets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-s3buckets-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-s3buckets-resp-obj-"))
   (buckets (common-lisp:error ":buckets is required") :type
    (common-lisp:or list-of-s3bucket-info common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-s3buckets-resp-obj 'make-list-s3buckets-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-s3buckets-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-s3buckets-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'buckets))
      (common-lisp:list
       (common-lisp:cons "Buckets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-s3buckets-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-s3buckets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-s3buckets-response-"))
   (buckets common-lisp:nil :type
    (common-lisp:or list-of-s3bucket-info common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-s3buckets-response 'make-list-s3buckets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-s3buckets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-s3buckets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'buckets))
      (common-lisp:list
       (common-lisp:cons "Buckets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-s3buckets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (login-auth-config-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-login-auth-config-req-obj-"))
   (aws-cognito-identity-pool-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (aws-cognito-region common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (aws-user-pools-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (aws-user-pools-web-client-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'login-auth-config-req-obj
                    'make-login-auth-config-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          login-auth-config-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          login-auth-config-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'aws-cognito-identity-pool-id))
      (common-lisp:list
       (common-lisp:cons "AwsCognitoIdentityPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-cognito-region))
      (common-lisp:list
       (common-lisp:cons "AwsCognitoRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-user-pools-id))
      (common-lisp:list
       (common-lisp:cons "AwsUserPoolsId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'aws-user-pools-web-client-id))
      (common-lisp:list
       (common-lisp:cons "AwsUserPoolsWebClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          login-auth-config-req-obj))
   common-lisp:nil))
(common-lisp:deftype mfamode () 'common-lisp:string)
(common-lisp:deftype mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (amplifybackend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message
                    'not-found-exception-resource-type)))
(common-lisp:deftype oauth-grant-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (remove-all-backends-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-all-backends-req-obj-"))
   (clean-amplify-app common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-all-backends-req-obj
                    'make-remove-all-backends-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-all-backends-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-all-backends-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clean-amplify-app))
      (common-lisp:list
       (common-lisp:cons "CleanAmplifyApp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-all-backends-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-all-backends-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-all-backends-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (clean-amplify-app common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-all-backends-request
                    'make-remove-all-backends-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-all-backends-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-all-backends-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clean-amplify-app))
      (common-lisp:list
       (common-lisp:cons "CleanAmplifyApp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-all-backends-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-all-backends-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-all-backends-resp-obj-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-all-backends-resp-obj
                    'make-remove-all-backends-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-all-backends-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-all-backends-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-all-backends-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-all-backends-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-all-backends-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-all-backends-response
                    'make-remove-all-backends-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-all-backends-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-all-backends-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-all-backends-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-backend-auth-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-backend-auth-req-obj-"))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-backend-auth-req-obj
                    'make-remove-backend-auth-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-auth-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-auth-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-auth-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-backend-config-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-backend-config-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-backend-config-request
                    'make-remove-backend-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-backend-config-resp-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-backend-config-resp-obj-"))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-backend-config-resp-obj
                    'make-remove-backend-config-resp-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-config-resp-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-config-resp-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-config-resp-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-backend-config-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-backend-config-response-"))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-backend-config-response
                    'make-remove-backend-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-backend-storage-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-backend-storage-req-obj-"))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (service-name (common-lisp:error ":service-name is required") :type
    (common-lisp:or service-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-backend-storage-req-obj
                    'make-remove-backend-storage-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-storage-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-storage-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-name))
      (common-lisp:list
       (common-lisp:cons "ServiceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-backend-storage-req-obj))
   common-lisp:nil))
(common-lisp:deftype resolution-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-config-")))
 (common-lisp:export (common-lisp:list 'resource-config 'make-resource-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (s3bucket-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3bucket-info-"))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3bucket-info 'make-s3bucket-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3bucket-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3bucket-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3bucket-info))
   common-lisp:nil))
(common-lisp:deftype service () 'common-lisp:string)
(common-lisp:deftype service-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (settings (:copier common-lisp:nil) (:conc-name "struct-shape-settings-"))
   (mfa-types common-lisp:nil :type
    (common-lisp:or list-of-mfa-types-element common-lisp:null))
   (sms-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'settings 'make-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfa-types))
      (common-lisp:list
       (common-lisp:cons "MfaTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms-message))
      (common-lisp:list
       (common-lisp:cons "SmsMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input settings))
   common-lisp:nil))
(common-lisp:deftype sign-in-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (sms-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-sms-settings-"))
   (sms-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sms-settings 'make-sms-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sms-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sms-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms-message))
      (common-lisp:list
       (common-lisp:cons "SmsMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sms-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (social-provider-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-social-provider-settings-"))
   (facebook common-lisp:nil :type
    (common-lisp:or backend-auth-social-provider-config common-lisp:null))
   (google common-lisp:nil :type
    (common-lisp:or backend-auth-social-provider-config common-lisp:null))
   (login-with-amazon common-lisp:nil :type
    (common-lisp:or backend-auth-social-provider-config common-lisp:null))
   (sign-in-with-apple common-lisp:nil :type
    (common-lisp:or backend-auth-apple-provider-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'social-provider-settings 'make-social-provider-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          social-provider-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          social-provider-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'facebook))
      (common-lisp:list
       (common-lisp:cons "Facebook"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'google))
      (common-lisp:list
       (common-lisp:cons "Google"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'login-with-amazon))
      (common-lisp:list
       (common-lisp:cons "LoginWithAmazon"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sign-in-with-apple))
      (common-lisp:list
       (common-lisp:cons "SignInWithApple"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          social-provider-settings))
   common-lisp:nil))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (amplifybackend-error)
     ((limit-type :initarg :limit-type :initform common-lisp:nil :reader
       too-many-requests-exception-limit-type)
      (message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-limit-type
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-apirequest (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-apirequest-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config common-lisp:nil :type
    (common-lisp:or backend-apiresource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-apirequest
                    'make-update-backend-apirequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-apirequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-apirequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-apirequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-apiresponse (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-apiresponse-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-apiresponse
                    'make-update-backend-apiresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-apiresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-apiresponse))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-apiresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-auth-forgot-password-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-auth-forgot-password-config-"))
   (delivery-method common-lisp:nil :type
    (common-lisp:or delivery-method common-lisp:null))
   (email-settings common-lisp:nil :type
    (common-lisp:or email-settings common-lisp:null))
   (sms-settings common-lisp:nil :type
    (common-lisp:or sms-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-auth-forgot-password-config
                    'make-update-backend-auth-forgot-password-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-forgot-password-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-forgot-password-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-method))
      (common-lisp:list
       (common-lisp:cons "DeliveryMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-settings))
      (common-lisp:list
       (common-lisp:cons "EmailSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms-settings))
      (common-lisp:list
       (common-lisp:cons "SmsSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-forgot-password-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-auth-identity-pool-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-auth-identity-pool-config-"))
   (unauthenticated-login common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-auth-identity-pool-config
                    'make-update-backend-auth-identity-pool-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-identity-pool-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-identity-pool-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unauthenticated-login))
      (common-lisp:list
       (common-lisp:cons "UnauthenticatedLogin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-identity-pool-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-auth-mfaconfig (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-auth-mfaconfig-"))
   (mfamode common-lisp:nil :type (common-lisp:or mfamode common-lisp:null))
   (settings common-lisp:nil :type (common-lisp:or settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-auth-mfaconfig
                    'make-update-backend-auth-mfaconfig))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-mfaconfig))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-mfaconfig))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfamode))
      (common-lisp:list
       (common-lisp:cons "MFAMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'settings))
      (common-lisp:list
       (common-lisp:cons "Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-mfaconfig))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-auth-oauth-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-auth-oauth-config-"))
   (domain-prefix common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (oauth-grant-type common-lisp:nil :type
    (common-lisp:or oauth-grant-type common-lisp:null))
   (oauth-scopes common-lisp:nil :type
    (common-lisp:or list-of-oauth-scopes-element common-lisp:null))
   (redirect-sign-in-uris common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (redirect-sign-out-uris common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (social-provider-settings common-lisp:nil :type
    (common-lisp:or social-provider-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-auth-oauth-config
                    'make-update-backend-auth-oauth-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-oauth-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-oauth-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-prefix))
      (common-lisp:list
       (common-lisp:cons "DomainPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oauth-grant-type))
      (common-lisp:list
       (common-lisp:cons "OAuthGrantType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oauth-scopes))
      (common-lisp:list
       (common-lisp:cons "OAuthScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'redirect-sign-in-uris))
      (common-lisp:list
       (common-lisp:cons "RedirectSignInURIs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'redirect-sign-out-uris))
      (common-lisp:list
       (common-lisp:cons "RedirectSignOutURIs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'social-provider-settings))
      (common-lisp:list
       (common-lisp:cons "SocialProviderSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-oauth-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-auth-password-policy-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-auth-password-policy-config-"))
   (additional-constraints common-lisp:nil :type
    (common-lisp:or list-of-additional-constraints-element common-lisp:null))
   (minimum-length common-lisp:nil :type
    (common-lisp:or |__double| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-auth-password-policy-config
                    'make-update-backend-auth-password-policy-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-password-policy-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-password-policy-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-constraints))
      (common-lisp:list
       (common-lisp:cons "AdditionalConstraints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minimum-length))
      (common-lisp:list
       (common-lisp:cons "MinimumLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-password-policy-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-auth-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-auth-req-obj-"))
   (resource-config (common-lisp:error ":resource-config is required") :type
    (common-lisp:or update-backend-auth-resource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-auth-req-obj
                    'make-update-backend-auth-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-auth-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-auth-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config (common-lisp:error ":resource-config is required") :type
    (common-lisp:or update-backend-auth-resource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-auth-request
                    'make-update-backend-auth-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-auth-resource-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-auth-resource-config-"))
   (auth-resources (common-lisp:error ":auth-resources is required") :type
    (common-lisp:or auth-resources common-lisp:null))
   (identity-pool-configs common-lisp:nil :type
    (common-lisp:or update-backend-auth-identity-pool-config common-lisp:null))
   (service (common-lisp:error ":service is required") :type
    (common-lisp:or service common-lisp:null))
   (user-pool-configs (common-lisp:error ":user-pool-configs is required")
    :type
    (common-lisp:or update-backend-auth-user-pool-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-auth-resource-config
                    'make-update-backend-auth-resource-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-resource-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-resource-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-resources))
      (common-lisp:list
       (common-lisp:cons "AuthResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-pool-configs))
      (common-lisp:list
       (common-lisp:cons "IdentityPoolConfigs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "Service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-configs))
      (common-lisp:list
       (common-lisp:cons "UserPoolConfigs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-resource-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-auth-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-auth-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-auth-response
                    'make-update-backend-auth-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-auth-user-pool-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-auth-user-pool-config-"))
   (forgot-password common-lisp:nil :type
    (common-lisp:or update-backend-auth-forgot-password-config
                    common-lisp:null))
   (mfa common-lisp:nil :type
    (common-lisp:or update-backend-auth-mfaconfig common-lisp:null))
   (oauth common-lisp:nil :type
    (common-lisp:or update-backend-auth-oauth-config common-lisp:null))
   (password-policy common-lisp:nil :type
    (common-lisp:or update-backend-auth-password-policy-config
                    common-lisp:null))
   (verification-message common-lisp:nil :type
    (common-lisp:or update-backend-auth-verification-message-config
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-auth-user-pool-config
                    'make-update-backend-auth-user-pool-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-user-pool-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-user-pool-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'forgot-password))
      (common-lisp:list
       (common-lisp:cons "ForgotPassword"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfa))
      (common-lisp:list
       (common-lisp:cons "Mfa"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oauth))
      (common-lisp:list
       (common-lisp:cons "OAuth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password-policy))
      (common-lisp:list
       (common-lisp:cons "PasswordPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verification-message))
      (common-lisp:list
       (common-lisp:cons "VerificationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-user-pool-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-auth-verification-message-config (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-backend-auth-verification-message-config-"))
   (delivery-method (common-lisp:error ":delivery-method is required") :type
    (common-lisp:or delivery-method common-lisp:null))
   (email-settings common-lisp:nil :type
    (common-lisp:or email-settings common-lisp:null))
   (sms-settings common-lisp:nil :type
    (common-lisp:or sms-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-auth-verification-message-config
                    'make-update-backend-auth-verification-message-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-verification-message-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-verification-message-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-method))
      (common-lisp:list
       (common-lisp:cons "DeliveryMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-settings))
      (common-lisp:list
       (common-lisp:cons "EmailSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms-settings))
      (common-lisp:list
       (common-lisp:cons "SmsSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-auth-verification-message-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-config-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-config-req-obj-"))
   (login-auth-config common-lisp:nil :type
    (common-lisp:or login-auth-config-req-obj common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-config-req-obj
                    'make-update-backend-config-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-config-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-config-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'login-auth-config))
      (common-lisp:list
       (common-lisp:cons "LoginAuthConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-config-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-config-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-config-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (login-auth-config common-lisp:nil :type
    (common-lisp:or login-auth-config-req-obj common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-config-request
                    'make-update-backend-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'login-auth-config))
      (common-lisp:list
       (common-lisp:cons "LoginAuthConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-config-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-config-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-manager-app-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (login-auth-config common-lisp:nil :type
    (common-lisp:or login-auth-config-req-obj common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-config-response
                    'make-update-backend-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-manager-app-id))
      (common-lisp:list
       (common-lisp:cons "BackendManagerAppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'login-auth-config))
      (common-lisp:list
       (common-lisp:cons "LoginAuthConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-job-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-job-request
                    'make-update-backend-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-job-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (create-time common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (update-time common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-job-response
                    'make-update-backend-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "CreateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-time))
      (common-lisp:list
       (common-lisp:cons "UpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-storage-req-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-storage-req-obj-"))
   (resource-config (common-lisp:error ":resource-config is required") :type
    (common-lisp:or update-backend-storage-resource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-storage-req-obj
                    'make-update-backend-storage-req-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-storage-req-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-storage-req-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-storage-req-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-storage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-storage-request-"))
   (app-id (common-lisp:error ":app-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name
    (common-lisp:error ":backend-environment-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-config (common-lisp:error ":resource-config is required") :type
    (common-lisp:or update-backend-storage-resource-config common-lisp:null))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-storage-request
                    'make-update-backend-storage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-storage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-storage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-config))
      (common-lisp:list
       (common-lisp:cons "ResourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-storage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-storage-resource-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-storage-resource-config-"))
   (permissions (common-lisp:error ":permissions is required") :type
    (common-lisp:or backend-storage-permissions common-lisp:null))
   (service-name (common-lisp:error ":service-name is required") :type
    (common-lisp:or service-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-storage-resource-config
                    'make-update-backend-storage-resource-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-storage-resource-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-storage-resource-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "Permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-name))
      (common-lisp:list
       (common-lisp:cons "ServiceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-storage-resource-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-backend-storage-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-backend-storage-response-"))
   (app-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (backend-environment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (job-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-backend-storage-response
                    'make-update-backend-storage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-storage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-id))
      (common-lisp:list
       (common-lisp:cons "AppId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'backend-environment-name))
      (common-lisp:list
       (common-lisp:cons "BackendEnvironmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-backend-storage-response))
   common-lisp:nil))
(common-lisp:deftype additional-constraints-element () 'common-lisp:string)
(common-lisp:deftype authenticated-element () 'common-lisp:string)
(common-lisp:deftype mfa-types-element () 'common-lisp:string)
(common-lisp:deftype oauth-scopes-element () 'common-lisp:string)
(common-lisp:deftype required-sign-up-attributes-element () 'common-lisp:string)
(common-lisp:deftype un-authenticated-element () 'common-lisp:string)
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max25| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype list-of-backend-apiauth-type ()
   '(trivial-types:proper-list backend-apiauth-type))
 (common-lisp:defun |make-list-of-backend-apiauth-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list backend-apiauth-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-backend-job-resp-obj ()
   '(trivial-types:proper-list backend-job-resp-obj))
 (common-lisp:defun |make-list-of-backend-job-resp-obj|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list backend-job-resp-obj))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-s3bucket-info ()
   '(trivial-types:proper-list s3bucket-info))
 (common-lisp:defun |make-list-of-s3bucket-info|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list s3bucket-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-additional-constraints-element ()
   '(trivial-types:proper-list additional-constraints-element))
 (common-lisp:defun |make-list-of-additional-constraints-element|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            additional-constraints-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-authenticated-element ()
   '(trivial-types:proper-list authenticated-element))
 (common-lisp:defun |make-list-of-authenticated-element|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list authenticated-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-mfa-types-element ()
   '(trivial-types:proper-list mfa-types-element))
 (common-lisp:defun |make-list-of-mfa-types-element|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list mfa-types-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-oauth-scopes-element ()
   '(trivial-types:proper-list oauth-scopes-element))
 (common-lisp:defun |make-list-of-oauth-scopes-element|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list oauth-scopes-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-required-sign-up-attributes-element ()
   '(trivial-types:proper-list required-sign-up-attributes-element))
 (common-lisp:defun |make-list-of-required-sign-up-attributes-element|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            required-sign-up-attributes-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-un-authenticated-element ()
   '(trivial-types:proper-list un-authenticated-element))
 (common-lisp:defun |make-list-of-un-authenticated-element|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            un-authenticated-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-string ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun |make-list-of-string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun clone-backend
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     target-environment-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name
     target-environment-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-clone-backend-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/environments/~A/clone"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "CloneBackend"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'clone-backend))
(common-lisp:progn
 (common-lisp:defun create-backend
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id app-name backend-environment-name
                     resource-config resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id app-name backend-environment-name
     resource-config resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-backend-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/backend"
                                                        "CreateBackend"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-backend))
(common-lisp:progn
 (common-lisp:defun create-backend-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-config resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-config
     resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-backend-apirequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/api"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))))
                                                        "CreateBackendAPI"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-backend-api))
(common-lisp:progn
 (common-lisp:defun create-backend-auth
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-config resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-config
     resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-backend-auth-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/auth"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))))
                                                        "CreateBackendAuth"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-backend-auth))
(common-lisp:progn
 (common-lisp:defun create-backend-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-manager-app-id)
   (common-lisp:declare (common-lisp:ignorable app-id backend-manager-app-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-backend-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/config"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))))
                                                        "CreateBackendConfig"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-backend-config))
(common-lisp:progn
 (common-lisp:defun create-backend-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-config resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-config
     resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-backend-storage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/storage"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))))
                                                        "CreateBackendStorage"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-backend-storage))
(common-lisp:progn
 (common-lisp:defun create-token
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id)
   (common-lisp:declare (common-lisp:ignorable app-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-token-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/challenge"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))))
                                                        "CreateToken"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-token))
(common-lisp:progn
 (common-lisp:defun delete-backend
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-backend-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/environments/~A/remove"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "DeleteBackend"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-backend))
(common-lisp:progn
 (common-lisp:defun delete-backend-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-config resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-config
     resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-backend-apirequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/api/~A/remove"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "DeleteBackendAPI"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-backend-api))
(common-lisp:progn
 (common-lisp:defun delete-backend-auth
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-backend-auth-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/auth/~A/remove"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "DeleteBackendAuth"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-backend-auth))
(common-lisp:progn
 (common-lisp:defun delete-backend-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-name service-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-name
     service-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-backend-storage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/storage/~A/remove"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "DeleteBackendStorage"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-backend-storage))
(common-lisp:progn
 (common-lisp:defun delete-token
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id session-id)
   (common-lisp:declare (common-lisp:ignorable app-id session-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-token-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/challenge/~A/remove"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'session-id))))
                                                        "DeleteToken"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-token))
(common-lisp:progn
 (common-lisp:defun generate-backend-apimodels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-generate-backend-apimodels-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/api/~A/generateModels"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "GenerateBackendAPIModels"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'generate-backend-apimodels))
(common-lisp:progn
 (common-lisp:defun get-backend
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-backend-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/details"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))))
                                                        "GetBackend"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-backend))
(common-lisp:progn
 (common-lisp:defun get-backend-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-config resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-config
     resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-backend-apirequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/api/~A/details"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "GetBackendAPI"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-backend-api))
(common-lisp:progn
 (common-lisp:defun get-backend-apimodels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-backend-apimodels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/api/~A/getModels"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "GetBackendAPIModels"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-backend-apimodels))
(common-lisp:progn
 (common-lisp:defun get-backend-auth
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-backend-auth-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/auth/~A/details"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "GetBackendAuth"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-backend-auth))
(common-lisp:progn
 (common-lisp:defun get-backend-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name job-id)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-backend-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/job/~A/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "GetBackendJob"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-backend-job))
(common-lisp:progn
 (common-lisp:defun get-backend-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-backend-storage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/storage/~A/details"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "GetBackendStorage"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-backend-storage))
(common-lisp:progn
 (common-lisp:defun get-token
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id session-id)
   (common-lisp:declare (common-lisp:ignorable app-id session-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-token-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/challenge/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'session-id))))
                                                        "GetToken"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-token))
(common-lisp:progn
 (common-lisp:defun import-backend-auth
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     identity-pool-id native-client-id user-pool-id
                     web-client-id)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name identity-pool-id
     native-client-id user-pool-id web-client-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-backend-auth-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/auth/~A/import"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "ImportBackendAuth"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-backend-auth))
(common-lisp:progn
 (common-lisp:defun import-backend-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     bucket-name service-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name bucket-name
     service-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-backend-storage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/storage/~A/import"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "ImportBackendStorage"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-backend-storage))
(common-lisp:progn
 (common-lisp:defun list-backend-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name job-id
                     max-results next-token operation status)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name job-id max-results
     next-token operation status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-backend-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/job/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "ListBackendJobs"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-backend-jobs))
(common-lisp:progn
 (common-lisp:defun list-s3buckets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-s3buckets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/s3Buckets"
                                                        "ListS3Buckets"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-s3buckets))
(common-lisp:progn
 (common-lisp:defun remove-all-backends
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id clean-amplify-app)
   (common-lisp:declare (common-lisp:ignorable app-id clean-amplify-app))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-all-backends-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/remove"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))))
                                                        "RemoveAllBackends"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-all-backends))
(common-lisp:progn
 (common-lisp:defun remove-backend-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id)
   (common-lisp:declare (common-lisp:ignorable app-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-backend-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/config/remove"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))))
                                                        "RemoveBackendConfig"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-backend-config))
(common-lisp:progn
 (common-lisp:defun update-backend-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-config resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-config
     resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-backend-apirequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/api/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "UpdateBackendAPI"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-backend-api))
(common-lisp:progn
 (common-lisp:defun update-backend-auth
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-config resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-config
     resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-backend-auth-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/auth/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "UpdateBackendAuth"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-backend-auth))
(common-lisp:progn
 (common-lisp:defun update-backend-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id login-auth-config)
   (common-lisp:declare (common-lisp:ignorable app-id login-auth-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-backend-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/config/update"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))))
                                                        "UpdateBackendConfig"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-backend-config))
(common-lisp:progn
 (common-lisp:defun update-backend-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name job-id
                     operation status)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name job-id operation
     status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-backend-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/job/~A/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "UpdateBackendJob"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-backend-job))
(common-lisp:progn
 (common-lisp:defun update-backend-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id backend-environment-name
                     resource-config resource-name)
   (common-lisp:declare
    (common-lisp:ignorable app-id backend-environment-name resource-config
     resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-backend-storage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'amplifybackend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backend/~A/storage/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'backend-environment-name))))
                                                        "UpdateBackendStorage"
                                                        "2020-08-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-backend-storage))
