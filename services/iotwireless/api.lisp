;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/iotwireless/api
  (:use)
  (:nicknames #:aws/iotwireless)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/iotwireless/api)
(common-lisp:progn
 (common-lisp:defclass iotwireless-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "iotwireless"))
 (common-lisp:export 'iotwireless-request))
(common-lisp:progn
 (common-lisp:define-condition iotwireless-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'iotwireless-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ThrottlingException" . throttling-exception)
    ("TooManyTagsException" . too-many-tags-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (abp-v1-0-x (:copier common-lisp:nil)
      (:conc-name "struct-shape-abp-v1-0-x-"))
   (dev-addr common-lisp:nil :type (common-lisp:or dev-addr common-lisp:null))
   (session-keys common-lisp:nil :type
    (common-lisp:or session-keys-abp-v1-0-x common-lisp:null))
   (fcnt-start common-lisp:nil :type
    (common-lisp:or fcnt-start common-lisp:null)))
 (common-lisp:export (common-lisp:list 'abp-v1-0-x 'make-abp-v1-0-x))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input abp-v1-0-x))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input abp-v1-0-x))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dev-addr))
      (common-lisp:list
       (common-lisp:cons "DevAddr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-keys))
      (common-lisp:list
       (common-lisp:cons "SessionKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fcnt-start))
      (common-lisp:list
       (common-lisp:cons "FCntStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input abp-v1-0-x))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (abp-v1-1 (:copier common-lisp:nil) (:conc-name "struct-shape-abp-v1-1-"))
   (dev-addr common-lisp:nil :type (common-lisp:or dev-addr common-lisp:null))
   (session-keys common-lisp:nil :type
    (common-lisp:or session-keys-abp-v1-1 common-lisp:null))
   (fcnt-start common-lisp:nil :type
    (common-lisp:or fcnt-start common-lisp:null)))
 (common-lisp:export (common-lisp:list 'abp-v1-1 'make-abp-v1-1))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input abp-v1-1))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input abp-v1-1))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dev-addr))
      (common-lisp:list
       (common-lisp:cons "DevAddr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-keys))
      (common-lisp:list
       (common-lisp:cons "SessionKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fcnt-start))
      (common-lisp:list
       (common-lisp:cons "FCntStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input abp-v1-1))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (iotwireless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype account-linked () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (accuracy (:copier common-lisp:nil) (:conc-name "struct-shape-accuracy-"))
   (horizontal-accuracy common-lisp:nil :type
    (common-lisp:or horizontal-accuracy common-lisp:null))
   (vertical-accuracy common-lisp:nil :type
    (common-lisp:or vertical-accuracy common-lisp:null)))
 (common-lisp:export (common-lisp:list 'accuracy 'make-accuracy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input accuracy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input accuracy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'horizontal-accuracy))
      (common-lisp:list
       (common-lisp:cons "HorizontalAccuracy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vertical-accuracy))
      (common-lisp:list
       (common-lisp:cons "VerticalAccuracy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input accuracy))
   common-lisp:nil))
(common-lisp:deftype ack-mode-retry-duration-secs () 'common-lisp:integer)
(common-lisp:deftype add-gw-metadata () 'common-lisp:boolean)
(common-lisp:deftype amazon-id () 'common-lisp:string)
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:deftype ap-id () 'common-lisp:string)
(common-lisp:deftype app-eui () 'common-lisp:string)
(common-lisp:deftype app-key () 'common-lisp:string)
(common-lisp:deftype app-skey () 'common-lisp:string)
(common-lisp:deftype app-server-private-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (application-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-application-config-"))
   (fport common-lisp:nil :type (common-lisp:or fport common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or application-config-type common-lisp:null))
   (destination-name common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-config 'make-application-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input application-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input application-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fport))
      (common-lisp:list
       (common-lisp:cons "FPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-name))
      (common-lisp:list
       (common-lisp:cons "DestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input application-config))
   common-lisp:nil))
(common-lisp:deftype application-config-type () 'common-lisp:string)
(common-lisp:deftype application-server-public-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype applications ()
   '(trivial-types:proper-list application-config))
 (common-lisp:defun |make-applications|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-config))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype assist-position ()
   '(trivial-types:proper-list coordinate))
 (common-lisp:defun |make-assist-position|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list coordinate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-aws-account-with-partner-account-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-aws-account-with-partner-account-request-"))
   (sidewalk (common-lisp:error ":sidewalk is required") :type
    (common-lisp:or sidewalk-account-info common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-aws-account-with-partner-account-request
                    'make-associate-aws-account-with-partner-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-aws-account-with-partner-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-aws-account-with-partner-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-aws-account-with-partner-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-aws-account-with-partner-account-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-aws-account-with-partner-account-response-"))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-account-info common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or partner-account-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-aws-account-with-partner-account-response
                    'make-associate-aws-account-with-partner-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-aws-account-with-partner-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-aws-account-with-partner-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-aws-account-with-partner-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-multicast-group-with-fuota-task-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-multicast-group-with-fuota-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or fuota-task-id common-lisp:null))
   (multicast-group-id (common-lisp:error ":multicast-group-id is required")
    :type (common-lisp:or multicast-group-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-multicast-group-with-fuota-task-request
                    'make-associate-multicast-group-with-fuota-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-multicast-group-with-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-multicast-group-with-fuota-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multicast-group-id))
      (common-lisp:list
       (common-lisp:cons "MulticastGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-multicast-group-with-fuota-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-multicast-group-with-fuota-task-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-multicast-group-with-fuota-task-response-")))
 (common-lisp:export
  (common-lisp:list 'associate-multicast-group-with-fuota-task-response
                    'make-associate-multicast-group-with-fuota-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-multicast-group-with-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-multicast-group-with-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-multicast-group-with-fuota-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-wireless-device-with-fuota-task-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-wireless-device-with-fuota-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or fuota-task-id common-lisp:null))
   (wireless-device-id (common-lisp:error ":wireless-device-id is required")
    :type (common-lisp:or wireless-device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-wireless-device-with-fuota-task-request
                    'make-associate-wireless-device-with-fuota-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-fuota-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wireless-device-id))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-fuota-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-wireless-device-with-fuota-task-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-wireless-device-with-fuota-task-response-")))
 (common-lisp:export
  (common-lisp:list 'associate-wireless-device-with-fuota-task-response
                    'make-associate-wireless-device-with-fuota-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-fuota-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-wireless-device-with-multicast-group-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-wireless-device-with-multicast-group-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or multicast-group-id common-lisp:null))
   (wireless-device-id (common-lisp:error ":wireless-device-id is required")
    :type (common-lisp:or wireless-device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-wireless-device-with-multicast-group-request
                    'make-associate-wireless-device-with-multicast-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-multicast-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-multicast-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wireless-device-id))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-multicast-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-wireless-device-with-multicast-group-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-wireless-device-with-multicast-group-response-")))
 (common-lisp:export
  (common-lisp:list 'associate-wireless-device-with-multicast-group-response
                    'make-associate-wireless-device-with-multicast-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-multicast-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-wireless-device-with-thing-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-wireless-device-with-thing-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-device-id common-lisp:null))
   (thing-arn (common-lisp:error ":thing-arn is required") :type
    (common-lisp:or thing-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-wireless-device-with-thing-request
                    'make-associate-wireless-device-with-thing-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-thing-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-thing-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-arn))
      (common-lisp:list
       (common-lisp:cons "ThingArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-thing-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-wireless-device-with-thing-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-wireless-device-with-thing-response-")))
 (common-lisp:export
  (common-lisp:list 'associate-wireless-device-with-thing-response
                    'make-associate-wireless-device-with-thing-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-thing-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-thing-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-device-with-thing-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-wireless-gateway-with-certificate-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-wireless-gateway-with-certificate-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-id common-lisp:null))
   (iot-certificate-id (common-lisp:error ":iot-certificate-id is required")
    :type (common-lisp:or iot-certificate-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-wireless-gateway-with-certificate-request
                    'make-associate-wireless-gateway-with-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-gateway-with-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-gateway-with-certificate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-certificate-id))
      (common-lisp:list
       (common-lisp:cons "IotCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-gateway-with-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-wireless-gateway-with-certificate-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-wireless-gateway-with-certificate-response-"))
   (iot-certificate-id common-lisp:nil :type
    (common-lisp:or iot-certificate-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-wireless-gateway-with-certificate-response
                    'make-associate-wireless-gateway-with-certificate-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-gateway-with-certificate-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-gateway-with-certificate-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-certificate-id))
      (common-lisp:list
       (common-lisp:cons "IotCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-gateway-with-certificate-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-wireless-gateway-with-thing-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-wireless-gateway-with-thing-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-id common-lisp:null))
   (thing-arn (common-lisp:error ":thing-arn is required") :type
    (common-lisp:or thing-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-wireless-gateway-with-thing-request
                    'make-associate-wireless-gateway-with-thing-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-gateway-with-thing-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-gateway-with-thing-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-arn))
      (common-lisp:list
       (common-lisp:cons "ThingArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-gateway-with-thing-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-wireless-gateway-with-thing-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-wireless-gateway-with-thing-response-")))
 (common-lisp:export
  (common-lisp:list 'associate-wireless-gateway-with-thing-response
                    'make-associate-wireless-gateway-with-thing-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-gateway-with-thing-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-gateway-with-thing-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-wireless-gateway-with-thing-response))
   common-lisp:nil))
(common-lisp:deftype auto-create-tasks () 'common-lisp:boolean)
(common-lisp:deftype bcch () 'common-lisp:integer)
(common-lisp:deftype bsic () 'common-lisp:integer)
(common-lisp:deftype base-lat () 'common-lisp:single-float)
(common-lisp:deftype base-lng () 'common-lisp:single-float)
(common-lisp:deftype base-station-id () 'common-lisp:integer)
(common-lisp:deftype battery-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (beaconing (:copier common-lisp:nil)
      (:conc-name "struct-shape-beaconing-"))
   (data-rate common-lisp:nil :type
    (common-lisp:or beaconing-data-rate common-lisp:null))
   (frequencies common-lisp:nil :type
    (common-lisp:or beaconing-frequencies common-lisp:null)))
 (common-lisp:export (common-lisp:list 'beaconing 'make-beaconing))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input beaconing))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input beaconing))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-rate))
      (common-lisp:list
       (common-lisp:cons "DataRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'frequencies))
      (common-lisp:list
       (common-lisp:cons "Frequencies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input beaconing))
   common-lisp:nil))
(common-lisp:deftype beaconing-data-rate () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype beaconing-frequencies ()
   '(trivial-types:proper-list beaconing-frequency))
 (common-lisp:defun |make-beaconing-frequencies|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list beaconing-frequency))
   aws-sdk/generator/shape::members))
(common-lisp:deftype beaconing-frequency () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-multicast-group-session-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-multicast-group-session-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or multicast-group-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-multicast-group-session-request
                    'make-cancel-multicast-group-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-multicast-group-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-multicast-group-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-multicast-group-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-multicast-group-session-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-multicast-group-session-response-")))
 (common-lisp:export
  (common-lisp:list 'cancel-multicast-group-session-response
                    'make-cancel-multicast-group-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-multicast-group-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-multicast-group-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-multicast-group-session-response))
   common-lisp:nil))
(common-lisp:deftype capture-time-accuracy () 'common-lisp:single-float)
(common-lisp:deftype cdma-channel () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype cdma-list () '(trivial-types:proper-list cdma-obj))
 (common-lisp:defun |make-cdma-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cdma-obj))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cdma-local-id (:copier common-lisp:nil)
      (:conc-name "struct-shape-cdma-local-id-"))
   (pn-offset (common-lisp:error ":pn-offset is required") :type
    (common-lisp:or pn-offset common-lisp:null))
   (cdma-channel (common-lisp:error ":cdma-channel is required") :type
    (common-lisp:or cdma-channel common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cdma-local-id 'make-cdma-local-id))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cdma-local-id))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cdma-local-id))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pn-offset))
      (common-lisp:list
       (common-lisp:cons "PnOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdma-channel))
      (common-lisp:list
       (common-lisp:cons "CdmaChannel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cdma-local-id))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cdma-nmr-list ()
   '(trivial-types:proper-list cdma-nmr-obj))
 (common-lisp:defun |make-cdma-nmr-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cdma-nmr-obj))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cdma-nmr-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-cdma-nmr-obj-"))
   (pn-offset (common-lisp:error ":pn-offset is required") :type
    (common-lisp:or pn-offset common-lisp:null))
   (cdma-channel (common-lisp:error ":cdma-channel is required") :type
    (common-lisp:or cdma-channel common-lisp:null))
   (pilot-power common-lisp:nil :type
    (common-lisp:or pilot-power common-lisp:null))
   (base-station-id common-lisp:nil :type
    (common-lisp:or base-station-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cdma-nmr-obj 'make-cdma-nmr-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cdma-nmr-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cdma-nmr-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pn-offset))
      (common-lisp:list
       (common-lisp:cons "PnOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdma-channel))
      (common-lisp:list
       (common-lisp:cons "CdmaChannel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pilot-power))
      (common-lisp:list
       (common-lisp:cons "PilotPower"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-station-id))
      (common-lisp:list
       (common-lisp:cons "BaseStationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cdma-nmr-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cdma-obj (:copier common-lisp:nil) (:conc-name "struct-shape-cdma-obj-"))
   (system-id (common-lisp:error ":system-id is required") :type
    (common-lisp:or system-id common-lisp:null))
   (network-id (common-lisp:error ":network-id is required") :type
    (common-lisp:or network-id common-lisp:null))
   (base-station-id (common-lisp:error ":base-station-id is required") :type
    (common-lisp:or base-station-id common-lisp:null))
   (registration-zone common-lisp:nil :type
    (common-lisp:or registration-zone common-lisp:null))
   (cdma-local-id common-lisp:nil :type
    (common-lisp:or cdma-local-id common-lisp:null))
   (pilot-power common-lisp:nil :type
    (common-lisp:or pilot-power common-lisp:null))
   (base-lat common-lisp:nil :type (common-lisp:or base-lat common-lisp:null))
   (base-lng common-lisp:nil :type (common-lisp:or base-lng common-lisp:null))
   (cdma-nmr common-lisp:nil :type
    (common-lisp:or cdma-nmr-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cdma-obj 'make-cdma-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cdma-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cdma-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'system-id))
      (common-lisp:list
       (common-lisp:cons "SystemId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'network-id))
      (common-lisp:list
       (common-lisp:cons "NetworkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-station-id))
      (common-lisp:list
       (common-lisp:cons "BaseStationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registration-zone))
      (common-lisp:list
       (common-lisp:cons "RegistrationZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdma-local-id))
      (common-lisp:list
       (common-lisp:cons "CdmaLocalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pilot-power))
      (common-lisp:list
       (common-lisp:cons "PilotPower"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-lat))
      (common-lisp:list
       (common-lisp:cons "BaseLat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-lng))
      (common-lisp:list
       (common-lisp:cons "BaseLng"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdma-nmr))
      (common-lisp:list
       (common-lisp:cons "CdmaNmr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cdma-obj))
   common-lisp:nil))
(common-lisp:deftype cell-params () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (cell-towers (:copier common-lisp:nil)
      (:conc-name "struct-shape-cell-towers-"))
   (gsm common-lisp:nil :type (common-lisp:or gsm-list common-lisp:null))
   (wcdma common-lisp:nil :type (common-lisp:or wcdma-list common-lisp:null))
   (tdscdma common-lisp:nil :type
    (common-lisp:or tdscdma-list common-lisp:null))
   (lte common-lisp:nil :type (common-lisp:or lte-list common-lisp:null))
   (cdma common-lisp:nil :type (common-lisp:or cdma-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cell-towers 'make-cell-towers))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cell-towers))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cell-towers))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gsm))
      (common-lisp:list
       (common-lisp:cons "Gsm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wcdma))
      (common-lisp:list
       (common-lisp:cons "Wcdma"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tdscdma))
      (common-lisp:list
       (common-lisp:cons "Tdscdma"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lte))
      (common-lisp:list
       (common-lisp:cons "Lte"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdma))
      (common-lisp:list
       (common-lisp:cons "Cdma"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cell-towers))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (certificate-list (:copier common-lisp:nil)
      (:conc-name "struct-shape-certificate-list-"))
   (signing-alg (common-lisp:error ":signing-alg is required") :type
    (common-lisp:or signing-alg common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or certificate-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'certificate-list 'make-certificate-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input certificate-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input certificate-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-alg))
      (common-lisp:list
       (common-lisp:cons "SigningAlg"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input certificate-list))
   common-lisp:nil))
(common-lisp:deftype certificate-pem () 'common-lisp:string)
(common-lisp:deftype certificate-value () 'common-lisp:string)
(common-lisp:deftype channel-mask () 'common-lisp:string)
(common-lisp:deftype class-btimeout () 'common-lisp:integer)
(common-lisp:deftype class-ctimeout () 'common-lisp:integer)
(common-lisp:deftype client-request-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (iotwireless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       conflict-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       conflict-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-resource-id
                    'conflict-exception-resource-type)))
(common-lisp:deftype connection-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (connection-status-event-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-connection-status-event-configuration-"))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or
     lo-ra-wanconnection-status-event-notification-configurations
     common-lisp:null))
   (wireless-gateway-id-event-topic common-lisp:nil :type
    (common-lisp:or event-notification-topic-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'connection-status-event-configuration
                    'make-connection-status-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connection-status-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connection-status-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-gateway-id-event-topic))
      (common-lisp:list
       (common-lisp:cons "WirelessGatewayIdEventTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connection-status-event-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (connection-status-resource-type-event-configuration
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-connection-status-resource-type-event-configuration-"))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or
     lo-ra-wanconnection-status-resource-type-event-configuration
     common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'connection-status-resource-type-event-configuration
                    'make-connection-status-resource-type-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connection-status-resource-type-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connection-status-resource-type-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connection-status-resource-type-event-configuration))
   common-lisp:nil))
(common-lisp:deftype coordinate () 'common-lisp:single-float)
(common-lisp:deftype crc () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (create-destination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-destination-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or destination-name common-lisp:null))
   (expression-type (common-lisp:error ":expression-type is required") :type
    (common-lisp:or expression-type common-lisp:null))
   (expression (common-lisp:error ":expression is required") :type
    (common-lisp:or expression common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (role-arn (common-lisp:error ":role-arn is required") :type
    (common-lisp:or role-arn common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-destination-request
                    'make-create-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression-type))
      (common-lisp:list
       (common-lisp:cons "ExpressionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-destination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-destination-response-"))
   (arn common-lisp:nil :type
    (common-lisp:or destination-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-destination-response
                    'make-create-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-device-profile-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-device-profile-request-"))
   (name common-lisp:nil :type
    (common-lisp:or device-profile-name common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wandevice-profile common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-create-device-profile common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-device-profile-request
                    'make-create-device-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-device-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-device-profile-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-device-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-device-profile-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-device-profile-response-"))
   (arn common-lisp:nil :type
    (common-lisp:or device-profile-arn common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or device-profile-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-device-profile-response
                    'make-create-device-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-device-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-device-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-device-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-fuota-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-fuota-task-request-"))
   (name common-lisp:nil :type
    (common-lisp:or fuota-task-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanfuota-task common-lisp:null))
   (firmware-update-image
    (common-lisp:error ":firmware-update-image is required") :type
    (common-lisp:or firmware-update-image common-lisp:null))
   (firmware-update-role
    (common-lisp:error ":firmware-update-role is required") :type
    (common-lisp:or firmware-update-role common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (redundancy-percent common-lisp:nil :type
    (common-lisp:or redundancy-percent common-lisp:null))
   (fragment-size-bytes common-lisp:nil :type
    (common-lisp:or fragment-size-bytes common-lisp:null))
   (fragment-interval-ms common-lisp:nil :type
    (common-lisp:or fragment-interval-ms common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-fuota-task-request
                    'make-create-fuota-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-fuota-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firmware-update-image))
      (common-lisp:list
       (common-lisp:cons "FirmwareUpdateImage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firmware-update-role))
      (common-lisp:list
       (common-lisp:cons "FirmwareUpdateRole"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redundancy-percent))
      (common-lisp:list
       (common-lisp:cons "RedundancyPercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fragment-size-bytes))
      (common-lisp:list
       (common-lisp:cons "FragmentSizeBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fragment-interval-ms))
      (common-lisp:list
       (common-lisp:cons "FragmentIntervalMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-fuota-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-fuota-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-fuota-task-response-"))
   (arn common-lisp:nil :type (common-lisp:or fuota-task-arn common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or fuota-task-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-fuota-task-response
                    'make-create-fuota-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-fuota-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-fuota-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-multicast-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-multicast-group-request-"))
   (name common-lisp:nil :type
    (common-lisp:or multicast-group-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null))
   (lo-ra-wan (common-lisp:error ":lo-ra-wan is required") :type
    (common-lisp:or lo-ra-wanmulticast common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-multicast-group-request
                    'make-create-multicast-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-multicast-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-multicast-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-multicast-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-multicast-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-multicast-group-response-"))
   (arn common-lisp:nil :type
    (common-lisp:or multicast-group-arn common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or multicast-group-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-multicast-group-response
                    'make-create-multicast-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-multicast-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-multicast-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-network-analyzer-configuration-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-network-analyzer-configuration-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or network-analyzer-configuration-name common-lisp:null))
   (trace-content common-lisp:nil :type
    (common-lisp:or trace-content common-lisp:null))
   (wireless-devices common-lisp:nil :type
    (common-lisp:or wireless-device-list common-lisp:null))
   (wireless-gateways common-lisp:nil :type
    (common-lisp:or wireless-gateway-list common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-network-analyzer-configuration-request
                    'make-create-network-analyzer-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-network-analyzer-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-network-analyzer-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trace-content))
      (common-lisp:list
       (common-lisp:cons "TraceContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wireless-devices))
      (common-lisp:list
       (common-lisp:cons "WirelessDevices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wireless-gateways))
      (common-lisp:list
       (common-lisp:cons "WirelessGateways"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-network-analyzer-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-network-analyzer-configuration-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-network-analyzer-configuration-response-"))
   (arn common-lisp:nil :type
    (common-lisp:or network-analyzer-configuration-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or network-analyzer-configuration-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-network-analyzer-configuration-response
                    'make-create-network-analyzer-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-network-analyzer-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-network-analyzer-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-network-analyzer-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-service-profile-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-service-profile-request-"))
   (name common-lisp:nil :type
    (common-lisp:or service-profile-name common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanservice-profile common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-service-profile-request
                    'make-create-service-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-service-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-service-profile-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-service-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-service-profile-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-service-profile-response-"))
   (arn common-lisp:nil :type
    (common-lisp:or service-profile-arn common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or service-profile-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-service-profile-response
                    'make-create-service-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-service-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-service-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-service-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-wireless-device-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-wireless-device-request-"))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or wireless-device-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or wireless-device-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (destination-name (common-lisp:error ":destination-name is required") :type
    (common-lisp:or destination-name common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wandevice common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (positioning common-lisp:nil :type
    (common-lisp:or positioning-config-status common-lisp:null))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-create-wireless-device common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-wireless-device-request
                    'make-create-wireless-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-device-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-name))
      (common-lisp:list
       (common-lisp:cons "DestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'positioning))
      (common-lisp:list
       (common-lisp:cons "Positioning"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-wireless-device-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-wireless-device-response-"))
   (arn common-lisp:nil :type
    (common-lisp:or wireless-device-arn common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or wireless-device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-wireless-device-response
                    'make-create-wireless-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-device-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-wireless-gateway-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-wireless-gateway-request-"))
   (name common-lisp:nil :type
    (common-lisp:or wireless-gateway-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (lo-ra-wan (common-lisp:error ":lo-ra-wan is required") :type
    (common-lisp:or lo-ra-wangateway common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-wireless-gateway-request
                    'make-create-wireless-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-wireless-gateway-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-wireless-gateway-response-"))
   (arn common-lisp:nil :type
    (common-lisp:or wireless-gateway-arn common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or wireless-device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-wireless-gateway-response
                    'make-create-wireless-gateway-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-wireless-gateway-task-definition-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-wireless-gateway-task-definition-request-"))
   (auto-create-tasks (common-lisp:error ":auto-create-tasks is required")
    :type (common-lisp:or auto-create-tasks common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-name common-lisp:null))
   (update common-lisp:nil :type
    (common-lisp:or update-wireless-gateway-task-create common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-wireless-gateway-task-definition-request
                    'make-create-wireless-gateway-task-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-task-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-task-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-create-tasks))
      (common-lisp:list
       (common-lisp:cons "AutoCreateTasks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update))
      (common-lisp:list
       (common-lisp:cons "Update"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-task-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-wireless-gateway-task-definition-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-wireless-gateway-task-definition-response-"))
   (id common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-definition-id common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-definition-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-wireless-gateway-task-definition-response
                    'make-create-wireless-gateway-task-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-task-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-task-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-task-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-wireless-gateway-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-wireless-gateway-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-id common-lisp:null))
   (wireless-gateway-task-definition-id
    (common-lisp:error ":wireless-gateway-task-definition-id is required")
    :type
    (common-lisp:or wireless-gateway-task-definition-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-wireless-gateway-task-request
                    'make-create-wireless-gateway-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-gateway-task-definition-id))
      (common-lisp:list
       (common-lisp:cons "WirelessGatewayTaskDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-wireless-gateway-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-wireless-gateway-task-response-"))
   (wireless-gateway-task-definition-id common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-definition-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-wireless-gateway-task-response
                    'make-create-wireless-gateway-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-gateway-task-definition-id))
      (common-lisp:list
       (common-lisp:cons "WirelessGatewayTaskDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-wireless-gateway-task-response))
   common-lisp:nil))
(common-lisp:deftype created-at () 'common-lisp:string)
(common-lisp:deftype creation-date () 'common-lisp:string)
(common-lisp:deftype creation-time () 'common-lisp:string)
(common-lisp:deftype dak-certificate-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dak-certificate-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-dak-certificate-metadata-"))
   (certificate-id (common-lisp:error ":certificate-id is required") :type
    (common-lisp:or dak-certificate-id common-lisp:null))
   (max-allowed-signature common-lisp:nil :type
    (common-lisp:or max-allowed-signature common-lisp:null))
   (factory-support common-lisp:nil :type
    (common-lisp:or factory-support common-lisp:null))
   (ap-id common-lisp:nil :type (common-lisp:or ap-id common-lisp:null))
   (device-type-id common-lisp:nil :type
    (common-lisp:or device-type-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dak-certificate-metadata 'make-dak-certificate-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dak-certificate-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dak-certificate-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-id))
      (common-lisp:list
       (common-lisp:cons "CertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-allowed-signature))
      (common-lisp:list
       (common-lisp:cons "MaxAllowedSignature"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'factory-support))
      (common-lisp:list
       (common-lisp:cons "FactorySupport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ap-id))
      (common-lisp:list
       (common-lisp:cons "ApId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-type-id))
      (common-lisp:list
       (common-lisp:cons "DeviceTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dak-certificate-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dak-certificate-metadata-list ()
   '(trivial-types:proper-list dak-certificate-metadata))
 (common-lisp:defun |make-dak-certificate-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            dak-certificate-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-destination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-destination-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-destination-request
                    'make-delete-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-destination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-destination-response
                    'make-delete-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-device-profile-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-device-profile-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or device-profile-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-device-profile-request
                    'make-delete-device-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-device-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-device-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-device-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-device-profile-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-device-profile-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-device-profile-response
                    'make-delete-device-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-device-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-device-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-device-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-fuota-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-fuota-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or fuota-task-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-fuota-task-request
                    'make-delete-fuota-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-fuota-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-fuota-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-fuota-task-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-fuota-task-response
                    'make-delete-fuota-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-fuota-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-multicast-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-multicast-group-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or multicast-group-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-multicast-group-request
                    'make-delete-multicast-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-multicast-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-multicast-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-multicast-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-multicast-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-multicast-group-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-multicast-group-response
                    'make-delete-multicast-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-multicast-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-network-analyzer-configuration-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-network-analyzer-configuration-request-"))
   (configuration-name (common-lisp:error ":configuration-name is required")
    :type
    (common-lisp:or network-analyzer-configuration-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-network-analyzer-configuration-request
                    'make-delete-network-analyzer-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-network-analyzer-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-network-analyzer-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-network-analyzer-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-network-analyzer-configuration-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-network-analyzer-configuration-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-network-analyzer-configuration-response
                    'make-delete-network-analyzer-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-network-analyzer-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-network-analyzer-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-network-analyzer-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-queued-messages-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-queued-messages-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-device-id common-lisp:null))
   (message-id (common-lisp:error ":message-id is required") :type
    (common-lisp:or message-id common-lisp:null))
   (wireless-device-type common-lisp:nil :type
    (common-lisp:or wireless-device-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-queued-messages-request
                    'make-delete-queued-messages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-queued-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-queued-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-queued-messages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-queued-messages-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-queued-messages-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-queued-messages-response
                    'make-delete-queued-messages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-queued-messages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-queued-messages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-queued-messages-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-service-profile-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-service-profile-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or service-profile-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-service-profile-request
                    'make-delete-service-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-service-profile-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-service-profile-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-service-profile-response
                    'make-delete-service-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-wireless-device-import-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-wireless-device-import-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or import-task-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-wireless-device-import-task-request
                    'make-delete-wireless-device-import-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-device-import-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-device-import-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-device-import-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-wireless-device-import-task-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-wireless-device-import-task-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-wireless-device-import-task-response
                    'make-delete-wireless-device-import-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-device-import-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-device-import-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-device-import-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-wireless-device-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-wireless-device-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-wireless-device-request
                    'make-delete-wireless-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-wireless-device-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-wireless-device-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-wireless-device-response
                    'make-delete-wireless-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-device-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-wireless-gateway-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-wireless-gateway-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-wireless-gateway-request
                    'make-delete-wireless-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-wireless-gateway-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-wireless-gateway-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-wireless-gateway-response
                    'make-delete-wireless-gateway-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-wireless-gateway-task-definition-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-wireless-gateway-task-definition-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-task-definition-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-wireless-gateway-task-definition-request
                    'make-delete-wireless-gateway-task-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-task-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-task-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-task-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-wireless-gateway-task-definition-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-wireless-gateway-task-definition-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-wireless-gateway-task-definition-response
                    'make-delete-wireless-gateway-task-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-task-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-task-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-task-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-wireless-gateway-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-wireless-gateway-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-wireless-gateway-task-request
                    'make-delete-wireless-gateway-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-wireless-gateway-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-wireless-gateway-task-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-wireless-gateway-task-response
                    'make-delete-wireless-gateway-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-wireless-gateway-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-wireless-device-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-deregister-wireless-device-request-"))
   (identifier (common-lisp:error ":identifier is required") :type
    (common-lisp:or identifier common-lisp:null))
   (wireless-device-type common-lisp:nil :type
    (common-lisp:or wireless-device-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-wireless-device-request
                    'make-deregister-wireless-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deregister-wireless-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deregister-wireless-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deregister-wireless-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-wireless-device-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-deregister-wireless-device-response-")))
 (common-lisp:export
  (common-lisp:list 'deregister-wireless-device-response
                    'make-deregister-wireless-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deregister-wireless-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deregister-wireless-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deregister-wireless-device-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:deftype destination-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype destination-list ()
   '(trivial-types:proper-list destinations))
 (common-lisp:defun |make-destination-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list destinations))
   aws-sdk/generator/shape::members))
(common-lisp:deftype destination-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (destinations (:copier common-lisp:nil)
      (:conc-name "struct-shape-destinations-"))
   (arn common-lisp:nil :type
    (common-lisp:or destination-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null))
   (expression-type common-lisp:nil :type
    (common-lisp:or expression-type common-lisp:null))
   (expression common-lisp:nil :type
    (common-lisp:or expression common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'destinations 'make-destinations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input destinations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input destinations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression-type))
      (common-lisp:list
       (common-lisp:cons "ExpressionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input destinations))
   common-lisp:nil))
(common-lisp:deftype dev-addr () 'common-lisp:string)
(common-lisp:deftype dev-eui () 'common-lisp:string)
(common-lisp:deftype dev-status-req-freq () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype device-certificate-list ()
   '(trivial-types:proper-list certificate-list))
 (common-lisp:defun |make-device-certificate-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list certificate-list))
   aws-sdk/generator/shape::members))
(common-lisp:deftype device-creation-file () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype device-creation-file-list ()
   '(trivial-types:proper-list device-creation-file))
 (common-lisp:defun |make-device-creation-file-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list device-creation-file))
   aws-sdk/generator/shape::members))
(common-lisp:deftype device-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (device-profile (:copier common-lisp:nil)
      (:conc-name "struct-shape-device-profile-"))
   (arn common-lisp:nil :type
    (common-lisp:or device-profile-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or device-profile-name common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or device-profile-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'device-profile 'make-device-profile))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input device-profile))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input device-profile))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input device-profile))
   common-lisp:nil))
(common-lisp:deftype device-profile-arn () 'common-lisp:string)
(common-lisp:deftype device-profile-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype device-profile-list ()
   '(trivial-types:proper-list device-profile))
 (common-lisp:defun |make-device-profile-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list device-profile))
   aws-sdk/generator/shape::members))
(common-lisp:deftype device-profile-name () 'common-lisp:string)
(common-lisp:deftype device-profile-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (device-registration-state-event-configuration (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-device-registration-state-event-configuration-"))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-event-notification-configurations
                    common-lisp:null))
   (wireless-device-id-event-topic common-lisp:nil :type
    (common-lisp:or event-notification-topic-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'device-registration-state-event-configuration
                    'make-device-registration-state-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          device-registration-state-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          device-registration-state-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-device-id-event-topic))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceIdEventTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          device-registration-state-event-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (device-registration-state-resource-type-event-configuration
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-device-registration-state-resource-type-event-configuration-"))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-resource-type-event-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'device-registration-state-resource-type-event-configuration
   'make-device-registration-state-resource-type-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          device-registration-state-resource-type-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          device-registration-state-resource-type-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          device-registration-state-resource-type-event-configuration))
   common-lisp:nil))
(common-lisp:deftype device-state () 'common-lisp:string)
(common-lisp:deftype device-type-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-aws-account-from-partner-account-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-aws-account-from-partner-account-request-"))
   (partner-account-id (common-lisp:error ":partner-account-id is required")
    :type (common-lisp:or partner-account-id common-lisp:null))
   (partner-type (common-lisp:error ":partner-type is required") :type
    (common-lisp:or partner-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-aws-account-from-partner-account-request
                    'make-disassociate-aws-account-from-partner-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-aws-account-from-partner-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-aws-account-from-partner-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-aws-account-from-partner-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-aws-account-from-partner-account-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-aws-account-from-partner-account-response-")))
 (common-lisp:export
  (common-lisp:list 'disassociate-aws-account-from-partner-account-response
                    'make-disassociate-aws-account-from-partner-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-aws-account-from-partner-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-aws-account-from-partner-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-aws-account-from-partner-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-multicast-group-from-fuota-task-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-multicast-group-from-fuota-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or fuota-task-id common-lisp:null))
   (multicast-group-id (common-lisp:error ":multicast-group-id is required")
    :type (common-lisp:or multicast-group-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-multicast-group-from-fuota-task-request
                    'make-disassociate-multicast-group-from-fuota-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-multicast-group-from-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-multicast-group-from-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-multicast-group-from-fuota-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-multicast-group-from-fuota-task-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-multicast-group-from-fuota-task-response-")))
 (common-lisp:export
  (common-lisp:list 'disassociate-multicast-group-from-fuota-task-response
                    'make-disassociate-multicast-group-from-fuota-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-multicast-group-from-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-multicast-group-from-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-multicast-group-from-fuota-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-wireless-device-from-fuota-task-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-wireless-device-from-fuota-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or fuota-task-id common-lisp:null))
   (wireless-device-id (common-lisp:error ":wireless-device-id is required")
    :type (common-lisp:or wireless-device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-wireless-device-from-fuota-task-request
                    'make-disassociate-wireless-device-from-fuota-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-fuota-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-wireless-device-from-fuota-task-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-wireless-device-from-fuota-task-response-")))
 (common-lisp:export
  (common-lisp:list 'disassociate-wireless-device-from-fuota-task-response
                    'make-disassociate-wireless-device-from-fuota-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-fuota-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-wireless-device-from-multicast-group-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-wireless-device-from-multicast-group-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or multicast-group-id common-lisp:null))
   (wireless-device-id (common-lisp:error ":wireless-device-id is required")
    :type (common-lisp:or wireless-device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-wireless-device-from-multicast-group-request
                    'make-disassociate-wireless-device-from-multicast-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-multicast-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-multicast-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-multicast-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-wireless-device-from-multicast-group-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-wireless-device-from-multicast-group-response-")))
 (common-lisp:export
  (common-lisp:list 'disassociate-wireless-device-from-multicast-group-response
                    'make-disassociate-wireless-device-from-multicast-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-multicast-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-wireless-device-from-thing-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-wireless-device-from-thing-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-wireless-device-from-thing-request
                    'make-disassociate-wireless-device-from-thing-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-thing-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-thing-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-thing-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-wireless-device-from-thing-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-wireless-device-from-thing-response-")))
 (common-lisp:export
  (common-lisp:list 'disassociate-wireless-device-from-thing-response
                    'make-disassociate-wireless-device-from-thing-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-thing-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-thing-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-device-from-thing-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-wireless-gateway-from-certificate-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-wireless-gateway-from-certificate-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-wireless-gateway-from-certificate-request
                    'make-disassociate-wireless-gateway-from-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-gateway-from-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-gateway-from-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-gateway-from-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-wireless-gateway-from-certificate-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-wireless-gateway-from-certificate-response-")))
 (common-lisp:export
  (common-lisp:list 'disassociate-wireless-gateway-from-certificate-response
                    'make-disassociate-wireless-gateway-from-certificate-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-gateway-from-certificate-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-gateway-from-certificate-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-gateway-from-certificate-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-wireless-gateway-from-thing-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-wireless-gateway-from-thing-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-wireless-gateway-from-thing-request
                    'make-disassociate-wireless-gateway-from-thing-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-gateway-from-thing-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-gateway-from-thing-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-gateway-from-thing-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-wireless-gateway-from-thing-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-wireless-gateway-from-thing-response-")))
 (common-lisp:export
  (common-lisp:list 'disassociate-wireless-gateway-from-thing-response
                    'make-disassociate-wireless-gateway-from-thing-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-gateway-from-thing-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-gateway-from-thing-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-wireless-gateway-from-thing-response))
   common-lisp:nil))
(common-lisp:deftype dl-bucket-size () 'common-lisp:integer)
(common-lisp:deftype dl-class () 'common-lisp:string)
(common-lisp:deftype dl-dr () 'common-lisp:integer)
(common-lisp:deftype dl-freq () 'common-lisp:integer)
(common-lisp:deftype dl-rate () 'common-lisp:integer)
(common-lisp:deftype dl-rate-policy () 'common-lisp:string)
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:deftype downlink-frequency () 'common-lisp:integer)
(common-lisp:deftype downlink-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (downlink-queue-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-downlink-queue-message-"))
   (message-id common-lisp:nil :type
    (common-lisp:or message-id common-lisp:null))
   (transmit-mode common-lisp:nil :type
    (common-lisp:or transmit-mode common-lisp:null))
   (received-at common-lisp:nil :type
    (common-lisp:or isodate-time-string common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wansend-data-to-device common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'downlink-queue-message 'make-downlink-queue-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          downlink-queue-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          downlink-queue-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transmit-mode))
      (common-lisp:list
       (common-lisp:cons "TransmitMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'received-at))
      (common-lisp:list
       (common-lisp:cons "ReceivedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          downlink-queue-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype downlink-queue-messages-list ()
   '(trivial-types:proper-list downlink-queue-message))
 (common-lisp:defun |make-downlink-queue-messages-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list downlink-queue-message))
   aws-sdk/generator/shape::members))
(common-lisp:deftype dr-max () 'common-lisp:integer)
(common-lisp:deftype dr-max-box () 'common-lisp:integer)
(common-lisp:deftype dr-min () 'common-lisp:integer)
(common-lisp:deftype dr-min-box () 'common-lisp:integer)
(common-lisp:deftype earfcn () 'common-lisp:integer)
(common-lisp:deftype end-point () 'common-lisp:string)
(common-lisp:deftype eutran-cid () 'common-lisp:integer)
(common-lisp:deftype event () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (event-configuration-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-event-configuration-item-"))
   (identifier common-lisp:nil :type
    (common-lisp:or identifier common-lisp:null))
   (identifier-type common-lisp:nil :type
    (common-lisp:or identifier-type common-lisp:null))
   (partner-type common-lisp:nil :type
    (common-lisp:or event-notification-partner-type common-lisp:null))
   (events common-lisp:nil :type
    (common-lisp:or event-notification-item-configurations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-configuration-item 'make-event-configuration-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          event-configuration-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          event-configuration-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier-type))
      (common-lisp:list
       (common-lisp:cons "IdentifierType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'partner-type))
      (common-lisp:list
       (common-lisp:cons "PartnerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "Events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          event-configuration-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-configurations-list ()
   '(trivial-types:proper-list event-configuration-item))
 (common-lisp:defun |make-event-configurations-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            event-configuration-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (event-notification-item-configurations (:copier common-lisp:nil)
      (:conc-name "struct-shape-event-notification-item-configurations-"))
   (device-registration-state common-lisp:nil :type
    (common-lisp:or device-registration-state-event-configuration
                    common-lisp:null))
   (proximity common-lisp:nil :type
    (common-lisp:or proximity-event-configuration common-lisp:null))
   (join common-lisp:nil :type
    (common-lisp:or join-event-configuration common-lisp:null))
   (connection-status common-lisp:nil :type
    (common-lisp:or connection-status-event-configuration common-lisp:null))
   (message-delivery-status common-lisp:nil :type
    (common-lisp:or message-delivery-status-event-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-notification-item-configurations
                    'make-event-notification-item-configurations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          event-notification-item-configurations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          event-notification-item-configurations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-registration-state))
      (common-lisp:list
       (common-lisp:cons "DeviceRegistrationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proximity))
      (common-lisp:list
       (common-lisp:cons "Proximity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'join))
      (common-lisp:list
       (common-lisp:cons "Join"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-status))
      (common-lisp:list
       (common-lisp:cons "ConnectionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-delivery-status))
      (common-lisp:list
       (common-lisp:cons "MessageDeliveryStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          event-notification-item-configurations))
   common-lisp:nil))
(common-lisp:deftype event-notification-partner-type () 'common-lisp:string)
(common-lisp:deftype event-notification-resource-type () 'common-lisp:string)
(common-lisp:deftype event-notification-topic-status () 'common-lisp:string)
(common-lisp:deftype expression () 'common-lisp:string)
(common-lisp:deftype expression-type () 'common-lisp:string)
(common-lisp:deftype fcnt-start () 'common-lisp:integer)
(common-lisp:deftype fnwk-sint-key () 'common-lisp:string)
(common-lisp:deftype fport () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (fports (:copier common-lisp:nil) (:conc-name "struct-shape-fports-"))
   (fuota common-lisp:nil :type (common-lisp:or fport common-lisp:null))
   (multicast common-lisp:nil :type (common-lisp:or fport common-lisp:null))
   (clock-sync common-lisp:nil :type (common-lisp:or fport common-lisp:null))
   (positioning common-lisp:nil :type
    (common-lisp:or positioning common-lisp:null))
   (applications common-lisp:nil :type
    (common-lisp:or applications common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fports 'make-fports))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fports))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fports))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fuota))
      (common-lisp:list
       (common-lisp:cons "Fuota"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multicast))
      (common-lisp:list
       (common-lisp:cons "Multicast"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clock-sync))
      (common-lisp:list
       (common-lisp:cons "ClockSync"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'positioning))
      (common-lisp:list
       (common-lisp:cons "Positioning"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'applications))
      (common-lisp:list
       (common-lisp:cons "Applications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fports))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype factory-preset-freqs-list ()
   '(trivial-types:proper-list preset-freq))
 (common-lisp:defun |make-factory-preset-freqs-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list preset-freq))
   aws-sdk/generator/shape::members))
(common-lisp:deftype factory-support () 'common-lisp:boolean)
(common-lisp:deftype fingerprint () 'common-lisp:string)
(common-lisp:deftype firmware-update-image () 'common-lisp:string)
(common-lisp:deftype firmware-update-role () 'common-lisp:string)
(common-lisp:deftype fragment-interval-ms () 'common-lisp:integer)
(common-lisp:deftype fragment-size-bytes () 'common-lisp:integer)
(common-lisp:deftype fuota-device-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (fuota-task (:copier common-lisp:nil)
      (:conc-name "struct-shape-fuota-task-"))
   (id common-lisp:nil :type (common-lisp:or fuota-task-id common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or fuota-task-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or fuota-task-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fuota-task 'make-fuota-task))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fuota-task))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fuota-task))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fuota-task))
   common-lisp:nil))
(common-lisp:deftype fuota-task-arn () 'common-lisp:string)
(common-lisp:deftype fuota-task-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype fuota-task-list ()
   '(trivial-types:proper-list fuota-task))
 (common-lisp:defun |make-fuota-task-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list fuota-task))
   aws-sdk/generator/shape::members))
(common-lisp:deftype fuota-task-name () 'common-lisp:string)
(common-lisp:deftype fuota-task-status () 'common-lisp:string)
(common-lisp:deftype gpst () 'common-lisp:single-float)
(common-lisp:deftype gateway-eui () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype gateway-list ()
   '(trivial-types:proper-list gateway-list-item))
 (common-lisp:defun |make-gateway-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gateway-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (gateway-list-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-gateway-list-item-"))
   (gateway-id (common-lisp:error ":gateway-id is required") :type
    (common-lisp:or wireless-gateway-id common-lisp:null))
   (downlink-frequency (common-lisp:error ":downlink-frequency is required")
    :type (common-lisp:or downlink-frequency common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'gateway-list-item 'make-gateway-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-id))
      (common-lisp:list
       (common-lisp:cons "GatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'downlink-frequency))
      (common-lisp:list
       (common-lisp:cons "DownlinkFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway-list-item))
   common-lisp:nil))
(common-lisp:deftype gateway-max-eirp () 'common-lisp:single-float)
(common-lisp:deftype gen-app-key () 'common-lisp:string)
(common-lisp:deftype geo-json-payload ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype geran-cid () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (get-destination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-destination-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-destination-request 'make-get-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-destination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-destination-response-"))
   (arn common-lisp:nil :type
    (common-lisp:or destination-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null))
   (expression common-lisp:nil :type
    (common-lisp:or expression common-lisp:null))
   (expression-type common-lisp:nil :type
    (common-lisp:or expression-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-destination-response 'make-get-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression-type))
      (common-lisp:list
       (common-lisp:cons "ExpressionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-device-profile-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-device-profile-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or device-profile-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-profile-request
                    'make-get-device-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-device-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-device-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-device-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-device-profile-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-device-profile-response-"))
   (arn common-lisp:nil :type
    (common-lisp:or device-profile-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or device-profile-name common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or device-profile-id common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wandevice-profile common-lisp:null))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-get-device-profile common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-profile-response
                    'make-get-device-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-device-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-device-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-device-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-event-configuration-by-resource-types-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-event-configuration-by-resource-types-request-")))
 (common-lisp:export
  (common-lisp:list 'get-event-configuration-by-resource-types-request
                    'make-get-event-configuration-by-resource-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-configuration-by-resource-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-configuration-by-resource-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-configuration-by-resource-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-event-configuration-by-resource-types-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-event-configuration-by-resource-types-response-"))
   (device-registration-state common-lisp:nil :type
    (common-lisp:or device-registration-state-resource-type-event-configuration
                    common-lisp:null))
   (proximity common-lisp:nil :type
    (common-lisp:or proximity-resource-type-event-configuration
                    common-lisp:null))
   (join common-lisp:nil :type
    (common-lisp:or join-resource-type-event-configuration common-lisp:null))
   (connection-status common-lisp:nil :type
    (common-lisp:or connection-status-resource-type-event-configuration
                    common-lisp:null))
   (message-delivery-status common-lisp:nil :type
    (common-lisp:or message-delivery-status-resource-type-event-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-event-configuration-by-resource-types-response
                    'make-get-event-configuration-by-resource-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-configuration-by-resource-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-configuration-by-resource-types-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-registration-state))
      (common-lisp:list
       (common-lisp:cons "DeviceRegistrationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proximity))
      (common-lisp:list
       (common-lisp:cons "Proximity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'join))
      (common-lisp:list
       (common-lisp:cons "Join"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-status))
      (common-lisp:list
       (common-lisp:cons "ConnectionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-delivery-status))
      (common-lisp:list
       (common-lisp:cons "MessageDeliveryStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-configuration-by-resource-types-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-fuota-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-fuota-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or fuota-task-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-fuota-task-request 'make-get-fuota-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-fuota-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-fuota-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-fuota-task-response-"))
   (arn common-lisp:nil :type (common-lisp:or fuota-task-arn common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or fuota-task-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or fuota-task-status common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or fuota-task-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanfuota-task-get-info common-lisp:null))
   (firmware-update-image common-lisp:nil :type
    (common-lisp:or firmware-update-image common-lisp:null))
   (firmware-update-role common-lisp:nil :type
    (common-lisp:or firmware-update-role common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or created-at common-lisp:null))
   (redundancy-percent common-lisp:nil :type
    (common-lisp:or redundancy-percent common-lisp:null))
   (fragment-size-bytes common-lisp:nil :type
    (common-lisp:or fragment-size-bytes common-lisp:null))
   (fragment-interval-ms common-lisp:nil :type
    (common-lisp:or fragment-interval-ms common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-fuota-task-response 'make-get-fuota-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-fuota-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firmware-update-image))
      (common-lisp:list
       (common-lisp:cons "FirmwareUpdateImage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firmware-update-role))
      (common-lisp:list
       (common-lisp:cons "FirmwareUpdateRole"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redundancy-percent))
      (common-lisp:list
       (common-lisp:cons "RedundancyPercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fragment-size-bytes))
      (common-lisp:list
       (common-lisp:cons "FragmentSizeBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fragment-interval-ms))
      (common-lisp:list
       (common-lisp:cons "FragmentIntervalMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-fuota-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-log-levels-by-resource-types-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-log-levels-by-resource-types-request-")))
 (common-lisp:export
  (common-lisp:list 'get-log-levels-by-resource-types-request
                    'make-get-log-levels-by-resource-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-log-levels-by-resource-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-log-levels-by-resource-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-log-levels-by-resource-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-log-levels-by-resource-types-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-log-levels-by-resource-types-response-"))
   (default-log-level common-lisp:nil :type
    (common-lisp:or log-level common-lisp:null))
   (wireless-gateway-log-options common-lisp:nil :type
    (common-lisp:or wireless-gateway-log-option-list common-lisp:null))
   (wireless-device-log-options common-lisp:nil :type
    (common-lisp:or wireless-device-log-option-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-log-levels-by-resource-types-response
                    'make-get-log-levels-by-resource-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-log-levels-by-resource-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-log-levels-by-resource-types-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-log-level))
      (common-lisp:list
       (common-lisp:cons "DefaultLogLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-gateway-log-options))
      (common-lisp:list
       (common-lisp:cons "WirelessGatewayLogOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-device-log-options))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceLogOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-log-levels-by-resource-types-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-multicast-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-multicast-group-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or multicast-group-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-multicast-group-request
                    'make-get-multicast-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-multicast-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-multicast-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-multicast-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-multicast-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-multicast-group-response-"))
   (arn common-lisp:nil :type
    (common-lisp:or multicast-group-arn common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or multicast-group-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or multicast-group-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or multicast-group-status common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanmulticast-get common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or created-at common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-multicast-group-response
                    'make-get-multicast-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-multicast-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-multicast-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-multicast-group-session-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-multicast-group-session-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or multicast-group-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-multicast-group-session-request
                    'make-get-multicast-group-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-multicast-group-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-multicast-group-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-multicast-group-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-multicast-group-session-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-multicast-group-session-response-"))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanmulticast-session common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-multicast-group-session-response
                    'make-get-multicast-group-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-multicast-group-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-multicast-group-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-multicast-group-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-network-analyzer-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-network-analyzer-configuration-request-"))
   (configuration-name (common-lisp:error ":configuration-name is required")
    :type
    (common-lisp:or network-analyzer-configuration-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-network-analyzer-configuration-request
                    'make-get-network-analyzer-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-network-analyzer-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-network-analyzer-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-network-analyzer-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-network-analyzer-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-network-analyzer-configuration-response-"))
   (trace-content common-lisp:nil :type
    (common-lisp:or trace-content common-lisp:null))
   (wireless-devices common-lisp:nil :type
    (common-lisp:or wireless-device-list common-lisp:null))
   (wireless-gateways common-lisp:nil :type
    (common-lisp:or wireless-gateway-list common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or network-analyzer-configuration-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or network-analyzer-configuration-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-network-analyzer-configuration-response
                    'make-get-network-analyzer-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-network-analyzer-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-network-analyzer-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trace-content))
      (common-lisp:list
       (common-lisp:cons "TraceContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wireless-devices))
      (common-lisp:list
       (common-lisp:cons "WirelessDevices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wireless-gateways))
      (common-lisp:list
       (common-lisp:cons "WirelessGateways"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-network-analyzer-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-partner-account-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-partner-account-request-"))
   (partner-account-id (common-lisp:error ":partner-account-id is required")
    :type (common-lisp:or partner-account-id common-lisp:null))
   (partner-type (common-lisp:error ":partner-type is required") :type
    (common-lisp:or partner-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-partner-account-request
                    'make-get-partner-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-partner-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-partner-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-partner-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-partner-account-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-partner-account-response-"))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-account-info-with-fingerprint common-lisp:null))
   (account-linked common-lisp:nil :type
    (common-lisp:or account-linked common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-partner-account-response
                    'make-get-partner-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-partner-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-partner-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-linked))
      (common-lisp:list
       (common-lisp:cons "AccountLinked"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-partner-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-position-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-position-configuration-request-"))
   (resource-identifier (common-lisp:error ":resource-identifier is required")
    :type (common-lisp:or position-resource-identifier common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or position-resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-position-configuration-request
                    'make-get-position-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-position-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-position-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-position-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-position-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-position-configuration-response-"))
   (solvers common-lisp:nil :type
    (common-lisp:or position-solver-details common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-position-configuration-response
                    'make-get-position-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-position-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-position-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'solvers))
      (common-lisp:list
       (common-lisp:cons "Solvers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-position-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-position-estimate-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-position-estimate-request-"))
   (wi-fi-access-points common-lisp:nil :type
    (common-lisp:or wi-fi-access-points common-lisp:null))
   (cell-towers common-lisp:nil :type
    (common-lisp:or cell-towers common-lisp:null))
   (ip common-lisp:nil :type (common-lisp:or ip common-lisp:null))
   (gnss common-lisp:nil :type (common-lisp:or gnss common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or creation-date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-position-estimate-request
                    'make-get-position-estimate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-position-estimate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-position-estimate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wi-fi-access-points))
      (common-lisp:list
       (common-lisp:cons "WiFiAccessPoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-towers))
      (common-lisp:list
       (common-lisp:cons "CellTowers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip))
      (common-lisp:list
       (common-lisp:cons "Ip"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gnss))
      (common-lisp:list
       (common-lisp:cons "Gnss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-position-estimate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-position-estimate-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-position-estimate-response-"))
   (geo-json-payload common-lisp:nil :type
    (common-lisp:or geo-json-payload common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-position-estimate-response
                    'make-get-position-estimate-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-position-estimate-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-position-estimate-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-json-payload))
      (common-lisp:list
       (common-lisp:cons "GeoJsonPayload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-position-estimate-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'geo-json-payload)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-position-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-position-request-"))
   (resource-identifier (common-lisp:error ":resource-identifier is required")
    :type (common-lisp:or position-resource-identifier common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or position-resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-position-request 'make-get-position-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-position-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-position-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-position-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-position-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-position-response-"))
   (position common-lisp:nil :type
    (common-lisp:or position-coordinate common-lisp:null))
   (accuracy common-lisp:nil :type (common-lisp:or accuracy common-lisp:null))
   (solver-type common-lisp:nil :type
    (common-lisp:or position-solver-type common-lisp:null))
   (solver-provider common-lisp:nil :type
    (common-lisp:or position-solver-provider common-lisp:null))
   (solver-version common-lisp:nil :type
    (common-lisp:or position-solver-version common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or isodate-time-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-position-response 'make-get-position-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-position-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-position-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "Position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accuracy))
      (common-lisp:list
       (common-lisp:cons "Accuracy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'solver-type))
      (common-lisp:list
       (common-lisp:cons "SolverType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'solver-provider))
      (common-lisp:list
       (common-lisp:cons "SolverProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'solver-version))
      (common-lisp:list
       (common-lisp:cons "SolverVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-position-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-event-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-event-configuration-request-"))
   (identifier (common-lisp:error ":identifier is required") :type
    (common-lisp:or identifier common-lisp:null))
   (identifier-type (common-lisp:error ":identifier-type is required") :type
    (common-lisp:or identifier-type common-lisp:null))
   (partner-type common-lisp:nil :type
    (common-lisp:or event-notification-partner-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-event-configuration-request
                    'make-get-resource-event-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-event-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-event-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-event-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-event-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-event-configuration-response-"))
   (device-registration-state common-lisp:nil :type
    (common-lisp:or device-registration-state-event-configuration
                    common-lisp:null))
   (proximity common-lisp:nil :type
    (common-lisp:or proximity-event-configuration common-lisp:null))
   (join common-lisp:nil :type
    (common-lisp:or join-event-configuration common-lisp:null))
   (connection-status common-lisp:nil :type
    (common-lisp:or connection-status-event-configuration common-lisp:null))
   (message-delivery-status common-lisp:nil :type
    (common-lisp:or message-delivery-status-event-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-event-configuration-response
                    'make-get-resource-event-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-event-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-event-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-registration-state))
      (common-lisp:list
       (common-lisp:cons "DeviceRegistrationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proximity))
      (common-lisp:list
       (common-lisp:cons "Proximity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'join))
      (common-lisp:list
       (common-lisp:cons "Join"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-status))
      (common-lisp:list
       (common-lisp:cons "ConnectionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-delivery-status))
      (common-lisp:list
       (common-lisp:cons "MessageDeliveryStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-event-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-log-level-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-log-level-request-"))
   (resource-identifier (common-lisp:error ":resource-identifier is required")
    :type (common-lisp:or resource-identifier common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-log-level-request
                    'make-get-resource-log-level-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-log-level-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-log-level-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-log-level-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-log-level-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-log-level-response-"))
   (log-level common-lisp:nil :type
    (common-lisp:or log-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-log-level-response
                    'make-get-resource-log-level-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-log-level-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-log-level-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-level))
      (common-lisp:list
       (common-lisp:cons "LogLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-log-level-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-position-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-position-request-"))
   (resource-identifier (common-lisp:error ":resource-identifier is required")
    :type (common-lisp:or position-resource-identifier common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or position-resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-position-request
                    'make-get-resource-position-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-position-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-position-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-position-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-position-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-position-response-"))
   (geo-json-payload common-lisp:nil :type
    (common-lisp:or geo-json-payload common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-position-response
                    'make-get-resource-position-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-position-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-position-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-json-payload))
      (common-lisp:list
       (common-lisp:cons "GeoJsonPayload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-position-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'geo-json-payload)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-service-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-service-endpoint-request-"))
   (service-type common-lisp:nil :type
    (common-lisp:or wireless-gateway-service-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-service-endpoint-request
                    'make-get-service-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-service-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-service-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-service-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-service-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-service-endpoint-response-"))
   (service-type common-lisp:nil :type
    (common-lisp:or wireless-gateway-service-type common-lisp:null))
   (service-endpoint common-lisp:nil :type
    (common-lisp:or end-point common-lisp:null))
   (server-trust common-lisp:nil :type
    (common-lisp:or certificate-pem common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-service-endpoint-response
                    'make-get-service-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-service-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-service-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-endpoint))
      (common-lisp:list
       (common-lisp:cons "ServiceEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-trust))
      (common-lisp:list
       (common-lisp:cons "ServerTrust"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-service-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-service-profile-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-service-profile-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or service-profile-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-service-profile-request
                    'make-get-service-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-service-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-service-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-service-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-service-profile-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-service-profile-response-"))
   (arn common-lisp:nil :type
    (common-lisp:or service-profile-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or service-profile-name common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or service-profile-id common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanget-service-profile-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-service-profile-response
                    'make-get-service-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-service-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-service-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-service-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-device-import-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-device-import-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or import-task-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-device-import-task-request
                    'make-get-wireless-device-import-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-import-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-import-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-import-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-device-import-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-device-import-task-response-"))
   (id common-lisp:nil :type (common-lisp:or import-task-id common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or import-task-arn common-lisp:null))
   (destination-name common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-get-start-import-info common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or creation-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or import-task-status common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or status-reason common-lisp:null))
   (initialized-imported-device-count common-lisp:nil :type
    (common-lisp:or imported-wireless-device-count common-lisp:null))
   (pending-imported-device-count common-lisp:nil :type
    (common-lisp:or imported-wireless-device-count common-lisp:null))
   (onboarded-imported-device-count common-lisp:nil :type
    (common-lisp:or imported-wireless-device-count common-lisp:null))
   (failed-imported-device-count common-lisp:nil :type
    (common-lisp:or imported-wireless-device-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-device-import-task-response
                    'make-get-wireless-device-import-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-import-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-import-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-name))
      (common-lisp:list
       (common-lisp:cons "DestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initialized-imported-device-count))
      (common-lisp:list
       (common-lisp:cons "InitializedImportedDeviceCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-imported-device-count))
      (common-lisp:list
       (common-lisp:cons "PendingImportedDeviceCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'onboarded-imported-device-count))
      (common-lisp:list
       (common-lisp:cons "OnboardedImportedDeviceCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-imported-device-count))
      (common-lisp:list
       (common-lisp:cons "FailedImportedDeviceCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-import-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-device-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-device-request-"))
   (identifier (common-lisp:error ":identifier is required") :type
    (common-lisp:or identifier common-lisp:null))
   (identifier-type (common-lisp:error ":identifier-type is required") :type
    (common-lisp:or wireless-device-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-device-request
                    'make-get-wireless-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-device-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-device-response-"))
   (type common-lisp:nil :type
    (common-lisp:or wireless-device-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or wireless-device-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (destination-name common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or wireless-device-id common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or wireless-device-arn common-lisp:null))
   (thing-name common-lisp:nil :type
    (common-lisp:or thing-name common-lisp:null))
   (thing-arn common-lisp:nil :type
    (common-lisp:or thing-arn common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wandevice common-lisp:null))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-device common-lisp:null))
   (positioning common-lisp:nil :type
    (common-lisp:or positioning-config-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-device-response
                    'make-get-wireless-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-name))
      (common-lisp:list
       (common-lisp:cons "DestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-name))
      (common-lisp:list
       (common-lisp:cons "ThingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-arn))
      (common-lisp:list
       (common-lisp:cons "ThingArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'positioning))
      (common-lisp:list
       (common-lisp:cons "Positioning"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-device-statistics-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-device-statistics-request-"))
   (wireless-device-id (common-lisp:error ":wireless-device-id is required")
    :type (common-lisp:or wireless-device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-device-statistics-request
                    'make-get-wireless-device-statistics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-statistics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-statistics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-statistics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-device-statistics-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-device-statistics-response-"))
   (wireless-device-id common-lisp:nil :type
    (common-lisp:or wireless-device-id common-lisp:null))
   (last-uplink-received-at common-lisp:nil :type
    (common-lisp:or isodate-time-string common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wandevice-metadata common-lisp:null))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-device-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-device-statistics-response
                    'make-get-wireless-device-statistics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-statistics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-statistics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wireless-device-id))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-uplink-received-at))
      (common-lisp:list
       (common-lisp:cons "LastUplinkReceivedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-device-statistics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-gateway-certificate-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-gateway-certificate-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-gateway-certificate-request
                    'make-get-wireless-gateway-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-gateway-certificate-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-gateway-certificate-response-"))
   (iot-certificate-id common-lisp:nil :type
    (common-lisp:or iot-certificate-id common-lisp:null))
   (lo-ra-wannetwork-server-certificate-id common-lisp:nil :type
    (common-lisp:or iot-certificate-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-gateway-certificate-response
                    'make-get-wireless-gateway-certificate-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-certificate-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-certificate-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-certificate-id))
      (common-lisp:list
       (common-lisp:cons "IotCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lo-ra-wannetwork-server-certificate-id))
      (common-lisp:list
       (common-lisp:cons "LoRaWANNetworkServerCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-certificate-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-gateway-firmware-information-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-wireless-gateway-firmware-information-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-gateway-firmware-information-request
                    'make-get-wireless-gateway-firmware-information-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-firmware-information-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-firmware-information-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-firmware-information-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-gateway-firmware-information-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-wireless-gateway-firmware-information-response-"))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wangateway-current-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-gateway-firmware-information-response
                    'make-get-wireless-gateway-firmware-information-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-firmware-information-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-firmware-information-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-firmware-information-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-gateway-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-gateway-request-"))
   (identifier (common-lisp:error ":identifier is required") :type
    (common-lisp:or identifier common-lisp:null))
   (identifier-type (common-lisp:error ":identifier-type is required") :type
    (common-lisp:or wireless-gateway-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-gateway-request
                    'make-get-wireless-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-gateway-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-gateway-response-"))
   (name common-lisp:nil :type
    (common-lisp:or wireless-gateway-name common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or wireless-gateway-id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wangateway common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or wireless-gateway-arn common-lisp:null))
   (thing-name common-lisp:nil :type
    (common-lisp:or thing-name common-lisp:null))
   (thing-arn common-lisp:nil :type
    (common-lisp:or thing-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-gateway-response
                    'make-get-wireless-gateway-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-name))
      (common-lisp:list
       (common-lisp:cons "ThingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-arn))
      (common-lisp:list
       (common-lisp:cons "ThingArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-gateway-statistics-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-gateway-statistics-request-"))
   (wireless-gateway-id (common-lisp:error ":wireless-gateway-id is required")
    :type (common-lisp:or wireless-gateway-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-gateway-statistics-request
                    'make-get-wireless-gateway-statistics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-statistics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-statistics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-statistics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-gateway-statistics-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-gateway-statistics-response-"))
   (wireless-gateway-id common-lisp:nil :type
    (common-lisp:or wireless-gateway-id common-lisp:null))
   (last-uplink-received-at common-lisp:nil :type
    (common-lisp:or isodate-time-string common-lisp:null))
   (connection-status common-lisp:nil :type
    (common-lisp:or connection-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-gateway-statistics-response
                    'make-get-wireless-gateway-statistics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-statistics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-statistics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wireless-gateway-id))
      (common-lisp:list
       (common-lisp:cons "WirelessGatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-uplink-received-at))
      (common-lisp:list
       (common-lisp:cons "LastUplinkReceivedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-status))
      (common-lisp:list
       (common-lisp:cons "ConnectionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-statistics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-gateway-task-definition-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-wireless-gateway-task-definition-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-task-definition-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-gateway-task-definition-request
                    'make-get-wireless-gateway-task-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-task-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-task-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-task-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-gateway-task-definition-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-wireless-gateway-task-definition-response-"))
   (auto-create-tasks common-lisp:nil :type
    (common-lisp:or auto-create-tasks common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-name common-lisp:null))
   (update common-lisp:nil :type
    (common-lisp:or update-wireless-gateway-task-create common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-definition-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-gateway-task-definition-response
                    'make-get-wireless-gateway-task-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-task-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-task-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-create-tasks))
      (common-lisp:list
       (common-lisp:cons "AutoCreateTasks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update))
      (common-lisp:list
       (common-lisp:cons "Update"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-task-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-gateway-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-gateway-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-gateway-task-request
                    'make-get-wireless-gateway-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-wireless-gateway-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-wireless-gateway-task-response-"))
   (wireless-gateway-id common-lisp:nil :type
    (common-lisp:or wireless-gateway-id common-lisp:null))
   (wireless-gateway-task-definition-id common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-definition-id common-lisp:null))
   (last-uplink-received-at common-lisp:nil :type
    (common-lisp:or isodate-time-string common-lisp:null))
   (task-created-at common-lisp:nil :type
    (common-lisp:or isodate-time-string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-wireless-gateway-task-response
                    'make-get-wireless-gateway-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wireless-gateway-id))
      (common-lisp:list
       (common-lisp:cons "WirelessGatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-gateway-task-definition-id))
      (common-lisp:list
       (common-lisp:cons "WirelessGatewayTaskDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-uplink-received-at))
      (common-lisp:list
       (common-lisp:cons "LastUplinkReceivedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-created-at))
      (common-lisp:list
       (common-lisp:cons "TaskCreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-wireless-gateway-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (global-identity (:copier common-lisp:nil)
      (:conc-name "struct-shape-global-identity-"))
   (lac (common-lisp:error ":lac is required") :type
    (common-lisp:or lac common-lisp:null))
   (geran-cid (common-lisp:error ":geran-cid is required") :type
    (common-lisp:or geran-cid common-lisp:null)))
 (common-lisp:export (common-lisp:list 'global-identity 'make-global-identity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input global-identity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input global-identity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lac))
      (common-lisp:list
       (common-lisp:cons "Lac"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geran-cid))
      (common-lisp:list
       (common-lisp:cons "GeranCid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input global-identity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (gnss (:copier common-lisp:nil) (:conc-name "struct-shape-gnss-"))
   (payload (common-lisp:error ":payload is required") :type
    (common-lisp:or gnss-nav common-lisp:null))
   (capture-time common-lisp:nil :type (common-lisp:or gpst common-lisp:null))
   (capture-time-accuracy common-lisp:nil :type
    (common-lisp:or capture-time-accuracy common-lisp:null))
   (assist-position common-lisp:nil :type
    (common-lisp:or assist-position common-lisp:null))
   (assist-altitude common-lisp:nil :type
    (common-lisp:or coordinate common-lisp:null))
   (use2dsolver common-lisp:nil :type
    (common-lisp:or use2dsolver common-lisp:null)))
 (common-lisp:export (common-lisp:list 'gnss 'make-gnss))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gnss))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gnss))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "Payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capture-time))
      (common-lisp:list
       (common-lisp:cons "CaptureTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'capture-time-accuracy))
      (common-lisp:list
       (common-lisp:cons "CaptureTimeAccuracy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assist-position))
      (common-lisp:list
       (common-lisp:cons "AssistPosition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assist-altitude))
      (common-lisp:list
       (common-lisp:cons "AssistAltitude"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use2dsolver))
      (common-lisp:list
       (common-lisp:cons "Use2DSolver"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gnss))
   common-lisp:nil))
(common-lisp:deftype gnss-nav () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype gsm-list () '(trivial-types:proper-list gsm-obj))
 (common-lisp:defun |make-gsm-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gsm-obj))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (gsm-local-id (:copier common-lisp:nil)
      (:conc-name "struct-shape-gsm-local-id-"))
   (bsic (common-lisp:error ":bsic is required") :type
    (common-lisp:or bsic common-lisp:null))
   (bcch (common-lisp:error ":bcch is required") :type
    (common-lisp:or bcch common-lisp:null)))
 (common-lisp:export (common-lisp:list 'gsm-local-id 'make-gsm-local-id))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gsm-local-id))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gsm-local-id))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bsic))
      (common-lisp:list
       (common-lisp:cons "Bsic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bcch))
      (common-lisp:list
       (common-lisp:cons "Bcch"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gsm-local-id))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype gsm-nmr-list () '(trivial-types:proper-list gsm-nmr-obj))
 (common-lisp:defun |make-gsm-nmr-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gsm-nmr-obj))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (gsm-nmr-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-gsm-nmr-obj-"))
   (bsic (common-lisp:error ":bsic is required") :type
    (common-lisp:or bsic common-lisp:null))
   (bcch (common-lisp:error ":bcch is required") :type
    (common-lisp:or bcch common-lisp:null))
   (rx-level common-lisp:nil :type (common-lisp:or rx-level common-lisp:null))
   (global-identity common-lisp:nil :type
    (common-lisp:or global-identity common-lisp:null)))
 (common-lisp:export (common-lisp:list 'gsm-nmr-obj 'make-gsm-nmr-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gsm-nmr-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gsm-nmr-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bsic))
      (common-lisp:list
       (common-lisp:cons "Bsic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bcch))
      (common-lisp:list
       (common-lisp:cons "Bcch"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rx-level))
      (common-lisp:list
       (common-lisp:cons "RxLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'global-identity))
      (common-lisp:list
       (common-lisp:cons "GlobalIdentity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gsm-nmr-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (gsm-obj (:copier common-lisp:nil) (:conc-name "struct-shape-gsm-obj-"))
   (mcc (common-lisp:error ":mcc is required") :type
    (common-lisp:or mcc common-lisp:null))
   (mnc (common-lisp:error ":mnc is required") :type
    (common-lisp:or mnc common-lisp:null))
   (lac (common-lisp:error ":lac is required") :type
    (common-lisp:or lac common-lisp:null))
   (geran-cid (common-lisp:error ":geran-cid is required") :type
    (common-lisp:or geran-cid common-lisp:null))
   (gsm-local-id common-lisp:nil :type
    (common-lisp:or gsm-local-id common-lisp:null))
   (gsm-timing-advance common-lisp:nil :type
    (common-lisp:or gsm-timing-advance common-lisp:null))
   (rx-level common-lisp:nil :type (common-lisp:or rx-level common-lisp:null))
   (gsm-nmr common-lisp:nil :type
    (common-lisp:or gsm-nmr-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'gsm-obj 'make-gsm-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gsm-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gsm-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mcc))
      (common-lisp:list
       (common-lisp:cons "Mcc"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mnc))
      (common-lisp:list
       (common-lisp:cons "Mnc"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lac))
      (common-lisp:list
       (common-lisp:cons "Lac"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geran-cid))
      (common-lisp:list
       (common-lisp:cons "GeranCid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gsm-local-id))
      (common-lisp:list
       (common-lisp:cons "GsmLocalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gsm-timing-advance))
      (common-lisp:list
       (common-lisp:cons "GsmTimingAdvance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rx-level))
      (common-lisp:list
       (common-lisp:cons "RxLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gsm-nmr))
      (common-lisp:list
       (common-lisp:cons "GsmNmr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gsm-obj))
   common-lisp:nil))
(common-lisp:deftype gsm-timing-advance () 'common-lisp:integer)
(common-lisp:deftype horizontal-accuracy () 'common-lisp:single-float)
(common-lisp:deftype hr-allowed () 'common-lisp:boolean)
(common-lisp:deftype ipaddress () 'common-lisp:string)
(common-lisp:deftype isodate-time-string () 'common-lisp:string)
(common-lisp:deftype identifier () 'common-lisp:string)
(common-lisp:deftype identifier-type () 'common-lisp:string)
(common-lisp:deftype import-task-arn () 'common-lisp:string)
(common-lisp:deftype import-task-id () 'common-lisp:string)
(common-lisp:deftype import-task-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (imported-sidewalk-device (:copier common-lisp:nil)
      (:conc-name "struct-shape-imported-sidewalk-device-"))
   (sidewalk-manufacturing-sn common-lisp:nil :type
    (common-lisp:or sidewalk-manufacturing-sn common-lisp:null))
   (onboarding-status common-lisp:nil :type
    (common-lisp:or onboard-status common-lisp:null))
   (onboarding-status-reason common-lisp:nil :type
    (common-lisp:or onboard-status-reason common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or last-update-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'imported-sidewalk-device 'make-imported-sidewalk-device))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          imported-sidewalk-device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          imported-sidewalk-device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sidewalk-manufacturing-sn))
      (common-lisp:list
       (common-lisp:cons "SidewalkManufacturingSn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'onboarding-status))
      (common-lisp:list
       (common-lisp:cons "OnboardingStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'onboarding-status-reason))
      (common-lisp:list
       (common-lisp:cons "OnboardingStatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          imported-sidewalk-device))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (imported-wireless-device (:copier common-lisp:nil)
      (:conc-name "struct-shape-imported-wireless-device-"))
   (sidewalk common-lisp:nil :type
    (common-lisp:or imported-sidewalk-device common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'imported-wireless-device 'make-imported-wireless-device))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          imported-wireless-device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          imported-wireless-device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          imported-wireless-device))
   common-lisp:nil))
(common-lisp:deftype imported-wireless-device-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype imported-wireless-device-list ()
   '(trivial-types:proper-list imported-wireless-device))
 (common-lisp:defun |make-imported-wireless-device-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            imported-wireless-device))
   aws-sdk/generator/shape::members))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (iotwireless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype iot-certificate-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ip (:copier common-lisp:nil) (:conc-name "struct-shape-ip-"))
   (ip-address (common-lisp:error ":ip-address is required") :type
    (common-lisp:or ipaddress common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ip 'make-ip))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ip))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ip))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-address))
      (common-lisp:list
       (common-lisp:cons "IpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ip))
   common-lisp:nil))
(common-lisp:deftype join-eui () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype join-eui-filters ()
   '(trivial-types:proper-list join-eui-range))
 (common-lisp:defun |make-join-eui-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list join-eui-range))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype join-eui-range () '(trivial-types:proper-list join-eui))
 (common-lisp:defun |make-join-eui-range|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list join-eui))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (join-event-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-join-event-configuration-"))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanjoin-event-notification-configurations
                    common-lisp:null))
   (wireless-device-id-event-topic common-lisp:nil :type
    (common-lisp:or event-notification-topic-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'join-event-configuration 'make-join-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          join-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          join-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-device-id-event-topic))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceIdEventTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          join-event-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (join-resource-type-event-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-join-resource-type-event-configuration-"))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanjoin-resource-type-event-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'join-resource-type-event-configuration
                    'make-join-resource-type-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          join-resource-type-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          join-resource-type-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          join-resource-type-event-configuration))
   common-lisp:nil))
(common-lisp:deftype lac () 'common-lisp:integer)
(common-lisp:deftype last-update-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-destinations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-destinations-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-destinations-request
                    'make-list-destinations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-destinations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-destinations-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (destination-list common-lisp:nil :type
    (common-lisp:or destination-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-destinations-response
                    'make-list-destinations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-list))
      (common-lisp:list
       (common-lisp:cons "DestinationList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-device-profiles-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-device-profiles-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (device-profile-type common-lisp:nil :type
    (common-lisp:or device-profile-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-device-profiles-request
                    'make-list-device-profiles-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-device-profiles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-device-profiles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-device-profiles-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-device-profiles-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-device-profiles-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (device-profile-list common-lisp:nil :type
    (common-lisp:or device-profile-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-device-profiles-response
                    'make-list-device-profiles-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-device-profiles-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-device-profiles-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-profile-list))
      (common-lisp:list
       (common-lisp:cons "DeviceProfileList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-device-profiles-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-devices-for-wireless-device-import-task-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-devices-for-wireless-device-import-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or import-task-id common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or onboard-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-devices-for-wireless-device-import-task-request
                    'make-list-devices-for-wireless-device-import-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-devices-for-wireless-device-import-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-devices-for-wireless-device-import-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-devices-for-wireless-device-import-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-devices-for-wireless-device-import-task-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-devices-for-wireless-device-import-task-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (destination-name common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null))
   (imported-wireless-device-list common-lisp:nil :type
    (common-lisp:or imported-wireless-device-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-devices-for-wireless-device-import-task-response
                    'make-list-devices-for-wireless-device-import-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-devices-for-wireless-device-import-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-devices-for-wireless-device-import-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-name))
      (common-lisp:list
       (common-lisp:cons "DestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'imported-wireless-device-list))
      (common-lisp:list
       (common-lisp:cons "ImportedWirelessDeviceList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-devices-for-wireless-device-import-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-event-configurations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-event-configurations-request-"))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or event-notification-resource-type common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-event-configurations-request
                    'make-list-event-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-event-configurations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-event-configurations-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (event-configurations-list common-lisp:nil :type
    (common-lisp:or event-configurations-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-event-configurations-response
                    'make-list-event-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-configurations-list))
      (common-lisp:list
       (common-lisp:cons "EventConfigurationsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-fuota-tasks-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-fuota-tasks-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-fuota-tasks-request 'make-list-fuota-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-fuota-tasks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-fuota-tasks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-fuota-tasks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-fuota-tasks-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-fuota-tasks-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (fuota-task-list common-lisp:nil :type
    (common-lisp:or fuota-task-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-fuota-tasks-response
                    'make-list-fuota-tasks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-fuota-tasks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-fuota-tasks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fuota-task-list))
      (common-lisp:list
       (common-lisp:cons "FuotaTaskList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-fuota-tasks-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-multicast-groups-by-fuota-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-multicast-groups-by-fuota-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or fuota-task-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-multicast-groups-by-fuota-task-request
                    'make-list-multicast-groups-by-fuota-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-multicast-groups-by-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-multicast-groups-by-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-multicast-groups-by-fuota-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-multicast-groups-by-fuota-task-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-multicast-groups-by-fuota-task-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (multicast-group-list common-lisp:nil :type
    (common-lisp:or multicast-group-list-by-fuota-task common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-multicast-groups-by-fuota-task-response
                    'make-list-multicast-groups-by-fuota-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-multicast-groups-by-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-multicast-groups-by-fuota-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'multicast-group-list))
      (common-lisp:list
       (common-lisp:cons "MulticastGroupList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-multicast-groups-by-fuota-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-multicast-groups-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-multicast-groups-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-multicast-groups-request
                    'make-list-multicast-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-multicast-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-multicast-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-multicast-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-multicast-groups-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-multicast-groups-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (multicast-group-list common-lisp:nil :type
    (common-lisp:or multicast-group-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-multicast-groups-response
                    'make-list-multicast-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-multicast-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-multicast-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'multicast-group-list))
      (common-lisp:list
       (common-lisp:cons "MulticastGroupList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-multicast-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-network-analyzer-configurations-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-network-analyzer-configurations-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-network-analyzer-configurations-request
                    'make-list-network-analyzer-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-network-analyzer-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-network-analyzer-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-network-analyzer-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-network-analyzer-configurations-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-network-analyzer-configurations-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (network-analyzer-configuration-list common-lisp:nil :type
    (common-lisp:or network-analyzer-configuration-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-network-analyzer-configurations-response
                    'make-list-network-analyzer-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-network-analyzer-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-network-analyzer-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-analyzer-configuration-list))
      (common-lisp:list
       (common-lisp:cons "NetworkAnalyzerConfigurationList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-network-analyzer-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-partner-accounts-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-partner-accounts-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-partner-accounts-request
                    'make-list-partner-accounts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-accounts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-accounts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-accounts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-partner-accounts-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-partner-accounts-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-account-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-partner-accounts-response
                    'make-list-partner-accounts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-accounts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-accounts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-accounts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-position-configurations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-position-configurations-request-"))
   (resource-type common-lisp:nil :type
    (common-lisp:or position-resource-type common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-position-configurations-request
                    'make-list-position-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-position-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-position-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-position-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-position-configurations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-position-configurations-response-"))
   (position-configuration-list common-lisp:nil :type
    (common-lisp:or position-configuration-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-position-configurations-response
                    'make-list-position-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-position-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-position-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'position-configuration-list))
      (common-lisp:list
       (common-lisp:cons "PositionConfigurationList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-position-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-queued-messages-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-queued-messages-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-device-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (wireless-device-type common-lisp:nil :type
    (common-lisp:or wireless-device-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-queued-messages-request
                    'make-list-queued-messages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-queued-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-queued-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-queued-messages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-queued-messages-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-queued-messages-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (downlink-queue-messages-list common-lisp:nil :type
    (common-lisp:or downlink-queue-messages-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-queued-messages-response
                    'make-list-queued-messages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-queued-messages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-queued-messages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'downlink-queue-messages-list))
      (common-lisp:list
       (common-lisp:cons "DownlinkQueueMessagesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-queued-messages-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-service-profiles-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-service-profiles-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-service-profiles-request
                    'make-list-service-profiles-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-service-profiles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-service-profiles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-service-profiles-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-service-profiles-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-service-profiles-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (service-profile-list common-lisp:nil :type
    (common-lisp:or service-profile-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-service-profiles-response
                    'make-list-service-profiles-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-service-profiles-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-service-profiles-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-profile-list))
      (common-lisp:list
       (common-lisp:cons "ServiceProfileList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-service-profiles-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-wireless-device-import-tasks-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-wireless-device-import-tasks-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-wireless-device-import-tasks-request
                    'make-list-wireless-device-import-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-device-import-tasks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-device-import-tasks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-device-import-tasks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-wireless-device-import-tasks-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-wireless-device-import-tasks-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (wireless-device-import-task-list common-lisp:nil :type
    (common-lisp:or wireless-device-import-task-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-wireless-device-import-tasks-response
                    'make-list-wireless-device-import-tasks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-device-import-tasks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-device-import-tasks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-device-import-task-list))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceImportTaskList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-device-import-tasks-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-wireless-devices-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-wireless-devices-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (destination-name common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null))
   (device-profile-id common-lisp:nil :type
    (common-lisp:or device-profile-id common-lisp:null))
   (service-profile-id common-lisp:nil :type
    (common-lisp:or service-profile-id common-lisp:null))
   (wireless-device-type common-lisp:nil :type
    (common-lisp:or wireless-device-type common-lisp:null))
   (fuota-task-id common-lisp:nil :type
    (common-lisp:or fuota-task-id common-lisp:null))
   (multicast-group-id common-lisp:nil :type
    (common-lisp:or multicast-group-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-wireless-devices-request
                    'make-list-wireless-devices-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-devices-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-devices-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-devices-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-wireless-devices-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-wireless-devices-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (wireless-device-list common-lisp:nil :type
    (common-lisp:or wireless-device-statistics-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-wireless-devices-response
                    'make-list-wireless-devices-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-devices-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-devices-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-device-list))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-devices-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-wireless-gateway-task-definitions-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-wireless-gateway-task-definitions-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (task-definition-type common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-definition-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-wireless-gateway-task-definitions-request
                    'make-list-wireless-gateway-task-definitions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-gateway-task-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-gateway-task-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-gateway-task-definitions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-wireless-gateway-task-definitions-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-wireless-gateway-task-definitions-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (task-definitions common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-definition-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-wireless-gateway-task-definitions-response
                    'make-list-wireless-gateway-task-definitions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-gateway-task-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-gateway-task-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definitions))
      (common-lisp:list
       (common-lisp:cons "TaskDefinitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-gateway-task-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-wireless-gateways-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-wireless-gateways-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-wireless-gateways-request
                    'make-list-wireless-gateways-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-gateways-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-gateways-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-gateways-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-wireless-gateways-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-wireless-gateways-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (wireless-gateway-list common-lisp:nil :type
    (common-lisp:or wireless-gateway-statistics-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-wireless-gateways-response
                    'make-list-wireless-gateways-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-gateways-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-gateways-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-gateway-list))
      (common-lisp:list
       (common-lisp:cons "WirelessGatewayList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-wireless-gateways-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanconnection-status-event-notification-configurations
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-lo-ra-wanconnection-status-event-notification-configurations-"))
   (gateway-eui-event-topic common-lisp:nil :type
    (common-lisp:or event-notification-topic-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'lo-ra-wanconnection-status-event-notification-configurations
   'make-lo-ra-wanconnection-status-event-notification-configurations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanconnection-status-event-notification-configurations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanconnection-status-event-notification-configurations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-eui-event-topic))
      (common-lisp:list
       (common-lisp:cons "GatewayEuiEventTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanconnection-status-event-notification-configurations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanconnection-status-resource-type-event-configuration
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-lo-ra-wanconnection-status-resource-type-event-configuration-"))
   (wireless-gateway-event-topic common-lisp:nil :type
    (common-lisp:or event-notification-topic-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'lo-ra-wanconnection-status-resource-type-event-configuration
   'make-lo-ra-wanconnection-status-resource-type-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanconnection-status-resource-type-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanconnection-status-resource-type-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-gateway-event-topic))
      (common-lisp:list
       (common-lisp:cons "WirelessGatewayEventTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanconnection-status-resource-type-event-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wandevice (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wandevice-"))
   (dev-eui common-lisp:nil :type (common-lisp:or dev-eui common-lisp:null))
   (device-profile-id common-lisp:nil :type
    (common-lisp:or device-profile-id common-lisp:null))
   (service-profile-id common-lisp:nil :type
    (common-lisp:or service-profile-id common-lisp:null))
   (otaa-v1-1 common-lisp:nil :type
    (common-lisp:or otaa-v1-1 common-lisp:null))
   (otaa-v1-0-x common-lisp:nil :type
    (common-lisp:or otaa-v1-0-x common-lisp:null))
   (abp-v1-1 common-lisp:nil :type (common-lisp:or abp-v1-1 common-lisp:null))
   (abp-v1-0-x common-lisp:nil :type
    (common-lisp:or abp-v1-0-x common-lisp:null))
   (fports common-lisp:nil :type (common-lisp:or fports common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lo-ra-wandevice 'make-lo-ra-wandevice))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lo-ra-wandevice))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lo-ra-wandevice))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dev-eui))
      (common-lisp:list
       (common-lisp:cons "DevEui"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-profile-id))
      (common-lisp:list
       (common-lisp:cons "DeviceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-profile-id))
      (common-lisp:list
       (common-lisp:cons "ServiceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'otaa-v1-1))
      (common-lisp:list
       (common-lisp:cons "OtaaV1_1"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'otaa-v1-0-x))
      (common-lisp:list
       (common-lisp:cons "OtaaV1_0_x"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'abp-v1-1))
      (common-lisp:list
       (common-lisp:cons "AbpV1_1"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'abp-v1-0-x))
      (common-lisp:list
       (common-lisp:cons "AbpV1_0_x"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fports))
      (common-lisp:list
       (common-lisp:cons "FPorts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lo-ra-wandevice))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wandevice-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wandevice-metadata-"))
   (dev-eui common-lisp:nil :type (common-lisp:or dev-eui common-lisp:null))
   (fport common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (data-rate common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (frequency common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or isodate-time-string common-lisp:null))
   (gateways common-lisp:nil :type
    (common-lisp:or lo-ra-wangateway-metadata-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wandevice-metadata 'make-lo-ra-wandevice-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wandevice-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wandevice-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dev-eui))
      (common-lisp:list
       (common-lisp:cons "DevEui"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fport))
      (common-lisp:list
       (common-lisp:cons "FPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-rate))
      (common-lisp:list
       (common-lisp:cons "DataRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'frequency))
      (common-lisp:list
       (common-lisp:cons "Frequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateways))
      (common-lisp:list
       (common-lisp:cons "Gateways"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wandevice-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wandevice-profile (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wandevice-profile-"))
   (supports-class-b common-lisp:nil :type
    (common-lisp:or supports-class-b common-lisp:null))
   (class-btimeout common-lisp:nil :type
    (common-lisp:or class-btimeout common-lisp:null))
   (ping-slot-period common-lisp:nil :type
    (common-lisp:or ping-slot-period common-lisp:null))
   (ping-slot-dr common-lisp:nil :type
    (common-lisp:or ping-slot-dr common-lisp:null))
   (ping-slot-freq common-lisp:nil :type
    (common-lisp:or ping-slot-freq common-lisp:null))
   (supports-class-c common-lisp:nil :type
    (common-lisp:or supports-class-c common-lisp:null))
   (class-ctimeout common-lisp:nil :type
    (common-lisp:or class-ctimeout common-lisp:null))
   (mac-version common-lisp:nil :type
    (common-lisp:or mac-version common-lisp:null))
   (reg-params-revision common-lisp:nil :type
    (common-lisp:or reg-params-revision common-lisp:null))
   (rx-delay1 common-lisp:nil :type
    (common-lisp:or rx-delay1 common-lisp:null))
   (rx-dr-offset1 common-lisp:nil :type
    (common-lisp:or rx-dr-offset1 common-lisp:null))
   (rx-data-rate2 common-lisp:nil :type
    (common-lisp:or rx-data-rate2 common-lisp:null))
   (rx-freq2 common-lisp:nil :type (common-lisp:or rx-freq2 common-lisp:null))
   (factory-preset-freqs-list common-lisp:nil :type
    (common-lisp:or factory-preset-freqs-list common-lisp:null))
   (max-eirp common-lisp:nil :type (common-lisp:or max-eirp common-lisp:null))
   (max-duty-cycle common-lisp:nil :type
    (common-lisp:or max-duty-cycle common-lisp:null))
   (rf-region common-lisp:nil :type
    (common-lisp:or rf-region common-lisp:null))
   (supports-join common-lisp:nil :type
    (common-lisp:or supports-join common-lisp:null))
   (supports32bit-fcnt common-lisp:nil :type
    (common-lisp:or supports32bit-fcnt common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wandevice-profile 'make-lo-ra-wandevice-profile))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wandevice-profile))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wandevice-profile))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'supports-class-b))
      (common-lisp:list
       (common-lisp:cons "SupportsClassB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'class-btimeout))
      (common-lisp:list
       (common-lisp:cons "ClassBTimeout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ping-slot-period))
      (common-lisp:list
       (common-lisp:cons "PingSlotPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ping-slot-dr))
      (common-lisp:list
       (common-lisp:cons "PingSlotDr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ping-slot-freq))
      (common-lisp:list
       (common-lisp:cons "PingSlotFreq"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'supports-class-c))
      (common-lisp:list
       (common-lisp:cons "SupportsClassC"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'class-ctimeout))
      (common-lisp:list
       (common-lisp:cons "ClassCTimeout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mac-version))
      (common-lisp:list
       (common-lisp:cons "MacVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reg-params-revision))
      (common-lisp:list
       (common-lisp:cons "RegParamsRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rx-delay1))
      (common-lisp:list
       (common-lisp:cons "RxDelay1"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rx-dr-offset1))
      (common-lisp:list
       (common-lisp:cons "RxDrOffset1"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rx-data-rate2))
      (common-lisp:list
       (common-lisp:cons "RxDataRate2"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rx-freq2))
      (common-lisp:list
       (common-lisp:cons "RxFreq2"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'factory-preset-freqs-list))
      (common-lisp:list
       (common-lisp:cons "FactoryPresetFreqsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-eirp))
      (common-lisp:list
       (common-lisp:cons "MaxEirp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-duty-cycle))
      (common-lisp:list
       (common-lisp:cons "MaxDutyCycle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rf-region))
      (common-lisp:list
       (common-lisp:cons "RfRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'supports-join))
      (common-lisp:list
       (common-lisp:cons "SupportsJoin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'supports32bit-fcnt))
      (common-lisp:list
       (common-lisp:cons "Supports32BitFCnt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wandevice-profile))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanfuota-task (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanfuota-task-"))
   (rf-region common-lisp:nil :type
    (common-lisp:or supported-rf-region common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanfuota-task 'make-lo-ra-wanfuota-task))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lo-ra-wanfuota-task))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lo-ra-wanfuota-task))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rf-region))
      (common-lisp:list
       (common-lisp:cons "RfRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lo-ra-wanfuota-task))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanfuota-task-get-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanfuota-task-get-info-"))
   (rf-region common-lisp:nil :type
    (common-lisp:or rf-region common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or start-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanfuota-task-get-info
                    'make-lo-ra-wanfuota-task-get-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanfuota-task-get-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanfuota-task-get-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rf-region))
      (common-lisp:list
       (common-lisp:cons "RfRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanfuota-task-get-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wangateway (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wangateway-"))
   (gateway-eui common-lisp:nil :type
    (common-lisp:or gateway-eui common-lisp:null))
   (rf-region common-lisp:nil :type
    (common-lisp:or rf-region common-lisp:null))
   (join-eui-filters common-lisp:nil :type
    (common-lisp:or join-eui-filters common-lisp:null))
   (net-id-filters common-lisp:nil :type
    (common-lisp:or net-id-filters common-lisp:null))
   (sub-bands common-lisp:nil :type
    (common-lisp:or sub-bands common-lisp:null))
   (beaconing common-lisp:nil :type
    (common-lisp:or beaconing common-lisp:null))
   (max-eirp common-lisp:nil :type
    (common-lisp:or gateway-max-eirp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wangateway 'make-lo-ra-wangateway))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lo-ra-wangateway))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lo-ra-wangateway))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-eui))
      (common-lisp:list
       (common-lisp:cons "GatewayEui"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rf-region))
      (common-lisp:list
       (common-lisp:cons "RfRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'join-eui-filters))
      (common-lisp:list
       (common-lisp:cons "JoinEuiFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'net-id-filters))
      (common-lisp:list
       (common-lisp:cons "NetIdFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-bands))
      (common-lisp:list
       (common-lisp:cons "SubBands"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'beaconing))
      (common-lisp:list
       (common-lisp:cons "Beaconing"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-eirp))
      (common-lisp:list
       (common-lisp:cons "MaxEirp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lo-ra-wangateway))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wangateway-current-version (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wangateway-current-version-"))
   (current-version common-lisp:nil :type
    (common-lisp:or lo-ra-wangateway-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wangateway-current-version
                    'make-lo-ra-wangateway-current-version))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wangateway-current-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wangateway-current-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-version))
      (common-lisp:list
       (common-lisp:cons "CurrentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wangateway-current-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wangateway-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wangateway-metadata-"))
   (gateway-eui common-lisp:nil :type
    (common-lisp:or gateway-eui common-lisp:null))
   (snr common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (rssi common-lisp:nil :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wangateway-metadata
                    'make-lo-ra-wangateway-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wangateway-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wangateway-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-eui))
      (common-lisp:list
       (common-lisp:cons "GatewayEui"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snr))
      (common-lisp:list
       (common-lisp:cons "Snr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rssi))
      (common-lisp:list
       (common-lisp:cons "Rssi"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wangateway-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lo-ra-wangateway-metadata-list ()
   '(trivial-types:proper-list lo-ra-wangateway-metadata))
 (common-lisp:defun |make-lo-ra-wangateway-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lo-ra-wangateway-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wangateway-version (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wangateway-version-"))
   (package-version common-lisp:nil :type
    (common-lisp:or package-version common-lisp:null))
   (model common-lisp:nil :type (common-lisp:or model common-lisp:null))
   (station common-lisp:nil :type (common-lisp:or station common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wangateway-version 'make-lo-ra-wangateway-version))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wangateway-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wangateway-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'package-version))
      (common-lisp:list
       (common-lisp:cons "PackageVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model))
      (common-lisp:list
       (common-lisp:cons "Model"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'station))
      (common-lisp:list
       (common-lisp:cons "Station"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wangateway-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanget-service-profile-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanget-service-profile-info-"))
   (ul-rate common-lisp:nil :type (common-lisp:or ul-rate common-lisp:null))
   (ul-bucket-size common-lisp:nil :type
    (common-lisp:or ul-bucket-size common-lisp:null))
   (ul-rate-policy common-lisp:nil :type
    (common-lisp:or ul-rate-policy common-lisp:null))
   (dl-rate common-lisp:nil :type (common-lisp:or dl-rate common-lisp:null))
   (dl-bucket-size common-lisp:nil :type
    (common-lisp:or dl-bucket-size common-lisp:null))
   (dl-rate-policy common-lisp:nil :type
    (common-lisp:or dl-rate-policy common-lisp:null))
   (add-gw-metadata common-lisp:nil :type
    (common-lisp:or add-gw-metadata common-lisp:null))
   (dev-status-req-freq common-lisp:nil :type
    (common-lisp:or dev-status-req-freq common-lisp:null))
   (report-dev-status-battery common-lisp:nil :type
    (common-lisp:or report-dev-status-battery common-lisp:null))
   (report-dev-status-margin common-lisp:nil :type
    (common-lisp:or report-dev-status-margin common-lisp:null))
   (dr-min common-lisp:nil :type (common-lisp:or dr-min common-lisp:null))
   (dr-max common-lisp:nil :type (common-lisp:or dr-max common-lisp:null))
   (channel-mask common-lisp:nil :type
    (common-lisp:or channel-mask common-lisp:null))
   (pr-allowed common-lisp:nil :type
    (common-lisp:or pr-allowed common-lisp:null))
   (hr-allowed common-lisp:nil :type
    (common-lisp:or hr-allowed common-lisp:null))
   (ra-allowed common-lisp:nil :type
    (common-lisp:or ra-allowed common-lisp:null))
   (nwk-geo-loc common-lisp:nil :type
    (common-lisp:or nwk-geo-loc common-lisp:null))
   (target-per common-lisp:nil :type
    (common-lisp:or target-per common-lisp:null))
   (min-gw-diversity common-lisp:nil :type
    (common-lisp:or min-gw-diversity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanget-service-profile-info
                    'make-lo-ra-wanget-service-profile-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanget-service-profile-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanget-service-profile-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ul-rate))
      (common-lisp:list
       (common-lisp:cons "UlRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ul-bucket-size))
      (common-lisp:list
       (common-lisp:cons "UlBucketSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ul-rate-policy))
      (common-lisp:list
       (common-lisp:cons "UlRatePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dl-rate))
      (common-lisp:list
       (common-lisp:cons "DlRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dl-bucket-size))
      (common-lisp:list
       (common-lisp:cons "DlBucketSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dl-rate-policy))
      (common-lisp:list
       (common-lisp:cons "DlRatePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'add-gw-metadata))
      (common-lisp:list
       (common-lisp:cons "AddGwMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dev-status-req-freq))
      (common-lisp:list
       (common-lisp:cons "DevStatusReqFreq"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'report-dev-status-battery))
      (common-lisp:list
       (common-lisp:cons "ReportDevStatusBattery"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'report-dev-status-margin))
      (common-lisp:list
       (common-lisp:cons "ReportDevStatusMargin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dr-min))
      (common-lisp:list
       (common-lisp:cons "DrMin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dr-max))
      (common-lisp:list
       (common-lisp:cons "DrMax"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-mask))
      (common-lisp:list
       (common-lisp:cons "ChannelMask"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pr-allowed))
      (common-lisp:list
       (common-lisp:cons "PrAllowed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hr-allowed))
      (common-lisp:list
       (common-lisp:cons "HrAllowed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ra-allowed))
      (common-lisp:list
       (common-lisp:cons "RaAllowed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nwk-geo-loc))
      (common-lisp:list
       (common-lisp:cons "NwkGeoLoc"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-per))
      (common-lisp:list
       (common-lisp:cons "TargetPer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-gw-diversity))
      (common-lisp:list
       (common-lisp:cons "MinGwDiversity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanget-service-profile-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanjoin-event-notification-configurations (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-lo-ra-wanjoin-event-notification-configurations-"))
   (dev-eui-event-topic common-lisp:nil :type
    (common-lisp:or event-notification-topic-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanjoin-event-notification-configurations
                    'make-lo-ra-wanjoin-event-notification-configurations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanjoin-event-notification-configurations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanjoin-event-notification-configurations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dev-eui-event-topic))
      (common-lisp:list
       (common-lisp:cons "DevEuiEventTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanjoin-event-notification-configurations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanjoin-resource-type-event-configuration (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-lo-ra-wanjoin-resource-type-event-configuration-"))
   (wireless-device-event-topic common-lisp:nil :type
    (common-lisp:or event-notification-topic-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanjoin-resource-type-event-configuration
                    'make-lo-ra-wanjoin-resource-type-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanjoin-resource-type-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanjoin-resource-type-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-device-event-topic))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceEventTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanjoin-resource-type-event-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanlist-device (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanlist-device-"))
   (dev-eui common-lisp:nil :type (common-lisp:or dev-eui common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanlist-device 'make-lo-ra-wanlist-device))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lo-ra-wanlist-device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lo-ra-wanlist-device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dev-eui))
      (common-lisp:list
       (common-lisp:cons "DevEui"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lo-ra-wanlist-device))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanmulticast (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanmulticast-"))
   (rf-region common-lisp:nil :type
    (common-lisp:or supported-rf-region common-lisp:null))
   (dl-class common-lisp:nil :type (common-lisp:or dl-class common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanmulticast 'make-lo-ra-wanmulticast))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lo-ra-wanmulticast))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lo-ra-wanmulticast))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rf-region))
      (common-lisp:list
       (common-lisp:cons "RfRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dl-class))
      (common-lisp:list
       (common-lisp:cons "DlClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lo-ra-wanmulticast))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanmulticast-get (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanmulticast-get-"))
   (rf-region common-lisp:nil :type
    (common-lisp:or supported-rf-region common-lisp:null))
   (dl-class common-lisp:nil :type (common-lisp:or dl-class common-lisp:null))
   (number-of-devices-requested common-lisp:nil :type
    (common-lisp:or number-of-devices-requested common-lisp:null))
   (number-of-devices-in-group common-lisp:nil :type
    (common-lisp:or number-of-devices-in-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanmulticast-get 'make-lo-ra-wanmulticast-get))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanmulticast-get))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanmulticast-get))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rf-region))
      (common-lisp:list
       (common-lisp:cons "RfRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dl-class))
      (common-lisp:list
       (common-lisp:cons "DlClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-devices-requested))
      (common-lisp:list
       (common-lisp:cons "NumberOfDevicesRequested"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-devices-in-group))
      (common-lisp:list
       (common-lisp:cons "NumberOfDevicesInGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanmulticast-get))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanmulticast-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanmulticast-metadata-"))
   (fport common-lisp:nil :type (common-lisp:or fport common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanmulticast-metadata
                    'make-lo-ra-wanmulticast-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanmulticast-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanmulticast-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fport))
      (common-lisp:list
       (common-lisp:cons "FPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanmulticast-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanmulticast-session (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanmulticast-session-"))
   (dl-dr common-lisp:nil :type (common-lisp:or dl-dr common-lisp:null))
   (dl-freq common-lisp:nil :type (common-lisp:or dl-freq common-lisp:null))
   (session-start-time common-lisp:nil :type
    (common-lisp:or session-start-time-timestamp common-lisp:null))
   (session-timeout common-lisp:nil :type
    (common-lisp:or session-timeout common-lisp:null))
   (ping-slot-period common-lisp:nil :type
    (common-lisp:or ping-slot-period common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanmulticast-session
                    'make-lo-ra-wanmulticast-session))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanmulticast-session))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanmulticast-session))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dl-dr))
      (common-lisp:list
       (common-lisp:cons "DlDr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dl-freq))
      (common-lisp:list
       (common-lisp:cons "DlFreq"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-start-time))
      (common-lisp:list
       (common-lisp:cons "SessionStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-timeout))
      (common-lisp:list
       (common-lisp:cons "SessionTimeout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ping-slot-period))
      (common-lisp:list
       (common-lisp:cons "PingSlotPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanmulticast-session))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wansend-data-to-device (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wansend-data-to-device-"))
   (fport common-lisp:nil :type (common-lisp:or fport common-lisp:null))
   (participating-gateways common-lisp:nil :type
    (common-lisp:or participating-gateways common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wansend-data-to-device
                    'make-lo-ra-wansend-data-to-device))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wansend-data-to-device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wansend-data-to-device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fport))
      (common-lisp:list
       (common-lisp:cons "FPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'participating-gateways))
      (common-lisp:list
       (common-lisp:cons "ParticipatingGateways"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wansend-data-to-device))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanservice-profile (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanservice-profile-"))
   (add-gw-metadata common-lisp:nil :type
    (common-lisp:or add-gw-metadata common-lisp:null))
   (dr-min common-lisp:nil :type (common-lisp:or dr-min-box common-lisp:null))
   (dr-max common-lisp:nil :type (common-lisp:or dr-max-box common-lisp:null))
   (pr-allowed common-lisp:nil :type
    (common-lisp:or pr-allowed common-lisp:null))
   (ra-allowed common-lisp:nil :type
    (common-lisp:or ra-allowed common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanservice-profile 'make-lo-ra-wanservice-profile))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanservice-profile))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanservice-profile))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'add-gw-metadata))
      (common-lisp:list
       (common-lisp:cons "AddGwMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dr-min))
      (common-lisp:list
       (common-lisp:cons "DrMin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dr-max))
      (common-lisp:list
       (common-lisp:cons "DrMax"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pr-allowed))
      (common-lisp:list
       (common-lisp:cons "PrAllowed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ra-allowed))
      (common-lisp:list
       (common-lisp:cons "RaAllowed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanservice-profile))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanstart-fuota-task (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanstart-fuota-task-"))
   (start-time common-lisp:nil :type
    (common-lisp:or start-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanstart-fuota-task
                    'make-lo-ra-wanstart-fuota-task))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanstart-fuota-task))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanstart-fuota-task))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanstart-fuota-task))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanupdate-device (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanupdate-device-"))
   (device-profile-id common-lisp:nil :type
    (common-lisp:or device-profile-id common-lisp:null))
   (service-profile-id common-lisp:nil :type
    (common-lisp:or service-profile-id common-lisp:null))
   (abp-v1-1 common-lisp:nil :type
    (common-lisp:or update-abp-v1-1 common-lisp:null))
   (abp-v1-0-x common-lisp:nil :type
    (common-lisp:or update-abp-v1-0-x common-lisp:null))
   (fports common-lisp:nil :type
    (common-lisp:or update-fports common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanupdate-device 'make-lo-ra-wanupdate-device))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanupdate-device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanupdate-device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-profile-id))
      (common-lisp:list
       (common-lisp:cons "DeviceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-profile-id))
      (common-lisp:list
       (common-lisp:cons "ServiceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'abp-v1-1))
      (common-lisp:list
       (common-lisp:cons "AbpV1_1"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'abp-v1-0-x))
      (common-lisp:list
       (common-lisp:cons "AbpV1_0_x"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fports))
      (common-lisp:list
       (common-lisp:cons "FPorts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanupdate-device))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanupdate-gateway-task-create (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanupdate-gateway-task-create-"))
   (update-signature common-lisp:nil :type
    (common-lisp:or update-signature common-lisp:null))
   (sig-key-crc common-lisp:nil :type (common-lisp:or crc common-lisp:null))
   (current-version common-lisp:nil :type
    (common-lisp:or lo-ra-wangateway-version common-lisp:null))
   (update-version common-lisp:nil :type
    (common-lisp:or lo-ra-wangateway-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanupdate-gateway-task-create
                    'make-lo-ra-wanupdate-gateway-task-create))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanupdate-gateway-task-create))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanupdate-gateway-task-create))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-signature))
      (common-lisp:list
       (common-lisp:cons "UpdateSignature"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sig-key-crc))
      (common-lisp:list
       (common-lisp:cons "SigKeyCrc"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-version))
      (common-lisp:list
       (common-lisp:cons "CurrentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-version))
      (common-lisp:list
       (common-lisp:cons "UpdateVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanupdate-gateway-task-create))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lo-ra-wanupdate-gateway-task-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-lo-ra-wanupdate-gateway-task-entry-"))
   (current-version common-lisp:nil :type
    (common-lisp:or lo-ra-wangateway-version common-lisp:null))
   (update-version common-lisp:nil :type
    (common-lisp:or lo-ra-wangateway-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lo-ra-wanupdate-gateway-task-entry
                    'make-lo-ra-wanupdate-gateway-task-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanupdate-gateway-task-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanupdate-gateway-task-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-version))
      (common-lisp:list
       (common-lisp:cons "CurrentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-version))
      (common-lisp:list
       (common-lisp:cons "UpdateVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lo-ra-wanupdate-gateway-task-entry))
   common-lisp:nil))
(common-lisp:deftype log-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype lte-list () '(trivial-types:proper-list lte-obj))
 (common-lisp:defun |make-lte-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lte-obj))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lte-local-id (:copier common-lisp:nil)
      (:conc-name "struct-shape-lte-local-id-"))
   (pci (common-lisp:error ":pci is required") :type
    (common-lisp:or pci common-lisp:null))
   (earfcn (common-lisp:error ":earfcn is required") :type
    (common-lisp:or earfcn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lte-local-id 'make-lte-local-id))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lte-local-id))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lte-local-id))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pci))
      (common-lisp:list
       (common-lisp:cons "Pci"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'earfcn))
      (common-lisp:list
       (common-lisp:cons "Earfcn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lte-local-id))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lte-nmr-list () '(trivial-types:proper-list lte-nmr-obj))
 (common-lisp:defun |make-lte-nmr-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lte-nmr-obj))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lte-nmr-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-lte-nmr-obj-"))
   (pci (common-lisp:error ":pci is required") :type
    (common-lisp:or pci common-lisp:null))
   (earfcn (common-lisp:error ":earfcn is required") :type
    (common-lisp:or earfcn common-lisp:null))
   (eutran-cid (common-lisp:error ":eutran-cid is required") :type
    (common-lisp:or eutran-cid common-lisp:null))
   (rsrp common-lisp:nil :type (common-lisp:or rsrp common-lisp:null))
   (rsrq common-lisp:nil :type (common-lisp:or rsrq common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lte-nmr-obj 'make-lte-nmr-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lte-nmr-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lte-nmr-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pci))
      (common-lisp:list
       (common-lisp:cons "Pci"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'earfcn))
      (common-lisp:list
       (common-lisp:cons "Earfcn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eutran-cid))
      (common-lisp:list
       (common-lisp:cons "EutranCid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rsrp))
      (common-lisp:list
       (common-lisp:cons "Rsrp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rsrq))
      (common-lisp:list
       (common-lisp:cons "Rsrq"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lte-nmr-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lte-obj (:copier common-lisp:nil) (:conc-name "struct-shape-lte-obj-"))
   (mcc (common-lisp:error ":mcc is required") :type
    (common-lisp:or mcc common-lisp:null))
   (mnc (common-lisp:error ":mnc is required") :type
    (common-lisp:or mnc common-lisp:null))
   (eutran-cid (common-lisp:error ":eutran-cid is required") :type
    (common-lisp:or eutran-cid common-lisp:null))
   (tac common-lisp:nil :type (common-lisp:or tac common-lisp:null))
   (lte-local-id common-lisp:nil :type
    (common-lisp:or lte-local-id common-lisp:null))
   (lte-timing-advance common-lisp:nil :type
    (common-lisp:or lte-timing-advance common-lisp:null))
   (rsrp common-lisp:nil :type (common-lisp:or rsrp common-lisp:null))
   (rsrq common-lisp:nil :type (common-lisp:or rsrq common-lisp:null))
   (nr-capable common-lisp:nil :type
    (common-lisp:or nrcapable common-lisp:null))
   (lte-nmr common-lisp:nil :type
    (common-lisp:or lte-nmr-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lte-obj 'make-lte-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lte-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lte-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mcc))
      (common-lisp:list
       (common-lisp:cons "Mcc"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mnc))
      (common-lisp:list
       (common-lisp:cons "Mnc"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eutran-cid))
      (common-lisp:list
       (common-lisp:cons "EutranCid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tac))
      (common-lisp:list
       (common-lisp:cons "Tac"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lte-local-id))
      (common-lisp:list
       (common-lisp:cons "LteLocalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lte-timing-advance))
      (common-lisp:list
       (common-lisp:cons "LteTimingAdvance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rsrp))
      (common-lisp:list
       (common-lisp:cons "Rsrp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rsrq))
      (common-lisp:list
       (common-lisp:cons "Rsrq"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nr-capable))
      (common-lisp:list
       (common-lisp:cons "NrCapable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lte-nmr))
      (common-lisp:list
       (common-lisp:cons "LteNmr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lte-obj))
   common-lisp:nil))
(common-lisp:deftype lte-timing-advance () 'common-lisp:integer)
(common-lisp:deftype mcc () 'common-lisp:integer)
(common-lisp:deftype mnc () 'common-lisp:integer)
(common-lisp:deftype mac-address () 'common-lisp:string)
(common-lisp:deftype mac-version () 'common-lisp:string)
(common-lisp:deftype max-allowed-signature () 'common-lisp:integer)
(common-lisp:deftype max-duty-cycle () 'common-lisp:integer)
(common-lisp:deftype max-eirp () 'common-lisp:integer)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype mc-group-id () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (message-delivery-status-event-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-message-delivery-status-event-configuration-"))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-event-notification-configurations
                    common-lisp:null))
   (wireless-device-id-event-topic common-lisp:nil :type
    (common-lisp:or event-notification-topic-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'message-delivery-status-event-configuration
                    'make-message-delivery-status-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          message-delivery-status-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          message-delivery-status-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-device-id-event-topic))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceIdEventTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          message-delivery-status-event-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (message-delivery-status-resource-type-event-configuration
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-message-delivery-status-resource-type-event-configuration-"))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-resource-type-event-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'message-delivery-status-resource-type-event-configuration
                    'make-message-delivery-status-resource-type-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          message-delivery-status-resource-type-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          message-delivery-status-resource-type-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          message-delivery-status-resource-type-event-configuration))
   common-lisp:nil))
(common-lisp:deftype message-id () 'common-lisp:string)
(common-lisp:deftype message-type () 'common-lisp:string)
(common-lisp:deftype min-gw-diversity () 'common-lisp:integer)
(common-lisp:deftype model () 'common-lisp:string)
(common-lisp:deftype multicast-device-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (multicast-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-multicast-group-"))
   (id common-lisp:nil :type
    (common-lisp:or multicast-group-id common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or multicast-group-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or multicast-group-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'multicast-group 'make-multicast-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input multicast-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input multicast-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input multicast-group))
   common-lisp:nil))
(common-lisp:deftype multicast-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (multicast-group-by-fuota-task (:copier common-lisp:nil)
      (:conc-name "struct-shape-multicast-group-by-fuota-task-"))
   (id common-lisp:nil :type
    (common-lisp:or multicast-group-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'multicast-group-by-fuota-task
                    'make-multicast-group-by-fuota-task))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          multicast-group-by-fuota-task))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          multicast-group-by-fuota-task))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          multicast-group-by-fuota-task))
   common-lisp:nil))
(common-lisp:deftype multicast-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype multicast-group-list ()
   '(trivial-types:proper-list multicast-group))
 (common-lisp:defun |make-multicast-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list multicast-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype multicast-group-list-by-fuota-task ()
   '(trivial-types:proper-list multicast-group-by-fuota-task))
 (common-lisp:defun |make-multicast-group-list-by-fuota-task|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            multicast-group-by-fuota-task))
   aws-sdk/generator/shape::members))
(common-lisp:deftype multicast-group-message-id () 'common-lisp:string)
(common-lisp:deftype multicast-group-name () 'common-lisp:string)
(common-lisp:deftype multicast-group-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (multicast-wireless-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-multicast-wireless-metadata-"))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanmulticast-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'multicast-wireless-metadata
                    'make-multicast-wireless-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          multicast-wireless-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          multicast-wireless-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          multicast-wireless-metadata))
   common-lisp:nil))
(common-lisp:deftype nrcapable () 'common-lisp:boolean)
(common-lisp:deftype net-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype net-id-filters () '(trivial-types:proper-list net-id))
 (common-lisp:defun |make-net-id-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list net-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype network-analyzer-configuration-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype network-analyzer-configuration-list ()
   '(trivial-types:proper-list network-analyzer-configurations))
 (common-lisp:defun |make-network-analyzer-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            network-analyzer-configurations))
   aws-sdk/generator/shape::members))
(common-lisp:deftype network-analyzer-configuration-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (network-analyzer-configurations (:copier common-lisp:nil)
      (:conc-name "struct-shape-network-analyzer-configurations-"))
   (arn common-lisp:nil :type
    (common-lisp:or network-analyzer-configuration-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or network-analyzer-configuration-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'network-analyzer-configurations
                    'make-network-analyzer-configurations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          network-analyzer-configurations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          network-analyzer-configurations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          network-analyzer-configurations))
   common-lisp:nil))
(common-lisp:deftype network-id () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype number-of-devices-in-group () 'common-lisp:integer)
(common-lisp:deftype number-of-devices-requested () 'common-lisp:integer)
(common-lisp:deftype nwk-geo-loc () 'common-lisp:boolean)
(common-lisp:deftype nwk-key () 'common-lisp:string)
(common-lisp:deftype nwk-senc-key () 'common-lisp:string)
(common-lisp:deftype nwk-skey () 'common-lisp:string)
(common-lisp:deftype onboard-status () 'common-lisp:string)
(common-lisp:deftype onboard-status-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (otaa-v1-0-x (:copier common-lisp:nil)
      (:conc-name "struct-shape-otaa-v1-0-x-"))
   (app-key common-lisp:nil :type (common-lisp:or app-key common-lisp:null))
   (app-eui common-lisp:nil :type (common-lisp:or app-eui common-lisp:null))
   (gen-app-key common-lisp:nil :type
    (common-lisp:or gen-app-key common-lisp:null)))
 (common-lisp:export (common-lisp:list 'otaa-v1-0-x 'make-otaa-v1-0-x))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input otaa-v1-0-x))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input otaa-v1-0-x))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-key))
      (common-lisp:list
       (common-lisp:cons "AppKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-eui))
      (common-lisp:list
       (common-lisp:cons "AppEui"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gen-app-key))
      (common-lisp:list
       (common-lisp:cons "GenAppKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input otaa-v1-0-x))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (otaa-v1-1 (:copier common-lisp:nil)
      (:conc-name "struct-shape-otaa-v1-1-"))
   (app-key common-lisp:nil :type (common-lisp:or app-key common-lisp:null))
   (nwk-key common-lisp:nil :type (common-lisp:or nwk-key common-lisp:null))
   (join-eui common-lisp:nil :type (common-lisp:or join-eui common-lisp:null)))
 (common-lisp:export (common-lisp:list 'otaa-v1-1 'make-otaa-v1-1))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input otaa-v1-1))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input otaa-v1-1))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-key))
      (common-lisp:list
       (common-lisp:cons "AppKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nwk-key))
      (common-lisp:list
       (common-lisp:cons "NwkKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'join-eui))
      (common-lisp:list
       (common-lisp:cons "JoinEui"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input otaa-v1-1))
   common-lisp:nil))
(common-lisp:deftype pci () 'common-lisp:integer)
(common-lisp:deftype psc () 'common-lisp:integer)
(common-lisp:deftype package-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (participating-gateways (:copier common-lisp:nil)
      (:conc-name "struct-shape-participating-gateways-"))
   (downlink-mode (common-lisp:error ":downlink-mode is required") :type
    (common-lisp:or downlink-mode common-lisp:null))
   (gateway-list (common-lisp:error ":gateway-list is required") :type
    (common-lisp:or gateway-list common-lisp:null))
   (transmission-interval
    (common-lisp:error ":transmission-interval is required") :type
    (common-lisp:or transmission-interval common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'participating-gateways 'make-participating-gateways))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          participating-gateways))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          participating-gateways))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'downlink-mode))
      (common-lisp:list
       (common-lisp:cons "DownlinkMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-list))
      (common-lisp:list
       (common-lisp:cons "GatewayList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'transmission-interval))
      (common-lisp:list
       (common-lisp:cons "TransmissionInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          participating-gateways))
   common-lisp:nil))
(common-lisp:deftype partner-account-arn () 'common-lisp:string)
(common-lisp:deftype partner-account-id () 'common-lisp:string)
(common-lisp:deftype partner-type () 'common-lisp:string)
(common-lisp:deftype path-loss () 'common-lisp:integer)
(common-lisp:deftype payload-data () 'common-lisp:string)
(common-lisp:deftype pilot-power () 'common-lisp:integer)
(common-lisp:deftype ping-slot-dr () 'common-lisp:integer)
(common-lisp:deftype ping-slot-freq () 'common-lisp:integer)
(common-lisp:deftype ping-slot-period () 'common-lisp:integer)
(common-lisp:deftype pn-offset () 'common-lisp:integer)
(common-lisp:deftype position-configuration-fec () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (position-configuration-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-position-configuration-item-"))
   (resource-identifier common-lisp:nil :type
    (common-lisp:or position-resource-identifier common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or position-resource-type common-lisp:null))
   (solvers common-lisp:nil :type
    (common-lisp:or position-solver-details common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'position-configuration-item
                    'make-position-configuration-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          position-configuration-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          position-configuration-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-identifier))
      (common-lisp:list
       (common-lisp:cons "ResourceIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'solvers))
      (common-lisp:list
       (common-lisp:cons "Solvers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          position-configuration-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype position-configuration-list ()
   '(trivial-types:proper-list position-configuration-item))
 (common-lisp:defun |make-position-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            position-configuration-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype position-configuration-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype position-coordinate ()
   '(trivial-types:proper-list position-coordinate-value))
 (common-lisp:defun |make-position-coordinate|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            position-coordinate-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype position-coordinate-value () 'common-lisp:single-float)
(common-lisp:deftype position-resource-identifier () 'common-lisp:string)
(common-lisp:deftype position-resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (position-solver-configurations (:copier common-lisp:nil)
      (:conc-name "struct-shape-position-solver-configurations-"))
   (semtech-gnss common-lisp:nil :type
    (common-lisp:or semtech-gnss-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'position-solver-configurations
                    'make-position-solver-configurations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          position-solver-configurations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          position-solver-configurations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'semtech-gnss))
      (common-lisp:list
       (common-lisp:cons "SemtechGnss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          position-solver-configurations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (position-solver-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-position-solver-details-"))
   (semtech-gnss common-lisp:nil :type
    (common-lisp:or semtech-gnss-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'position-solver-details 'make-position-solver-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          position-solver-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          position-solver-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'semtech-gnss))
      (common-lisp:list
       (common-lisp:cons "SemtechGnss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          position-solver-details))
   common-lisp:nil))
(common-lisp:deftype position-solver-provider () 'common-lisp:string)
(common-lisp:deftype position-solver-type () 'common-lisp:string)
(common-lisp:deftype position-solver-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (positioning (:copier common-lisp:nil)
      (:conc-name "struct-shape-positioning-"))
   (clock-sync common-lisp:nil :type (common-lisp:or fport common-lisp:null))
   (stream common-lisp:nil :type (common-lisp:or fport common-lisp:null))
   (gnss common-lisp:nil :type (common-lisp:or fport common-lisp:null)))
 (common-lisp:export (common-lisp:list 'positioning 'make-positioning))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input positioning))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input positioning))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clock-sync))
      (common-lisp:list
       (common-lisp:cons "ClockSync"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream))
      (common-lisp:list
       (common-lisp:cons "Stream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gnss))
      (common-lisp:list
       (common-lisp:cons "Gnss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input positioning))
   common-lisp:nil))
(common-lisp:deftype positioning-config-status () 'common-lisp:string)
(common-lisp:deftype pr-allowed () 'common-lisp:boolean)
(common-lisp:deftype preset-freq () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype private-keys-list ()
   '(trivial-types:proper-list certificate-list))
 (common-lisp:defun |make-private-keys-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list certificate-list))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (proximity-event-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-proximity-event-configuration-"))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-event-notification-configurations
                    common-lisp:null))
   (wireless-device-id-event-topic common-lisp:nil :type
    (common-lisp:or event-notification-topic-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'proximity-event-configuration
                    'make-proximity-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          proximity-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          proximity-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-device-id-event-topic))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceIdEventTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          proximity-event-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (proximity-resource-type-event-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-proximity-resource-type-event-configuration-"))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-resource-type-event-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'proximity-resource-type-event-configuration
                    'make-proximity-resource-type-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          proximity-resource-type-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          proximity-resource-type-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          proximity-resource-type-event-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-position-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-position-configuration-request-"))
   (resource-identifier (common-lisp:error ":resource-identifier is required")
    :type (common-lisp:or position-resource-identifier common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or position-resource-type common-lisp:null))
   (solvers common-lisp:nil :type
    (common-lisp:or position-solver-configurations common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-position-configuration-request
                    'make-put-position-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-position-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-position-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'solvers))
      (common-lisp:list
       (common-lisp:cons "Solvers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-position-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-position-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-position-configuration-response-")))
 (common-lisp:export
  (common-lisp:list 'put-position-configuration-response
                    'make-put-position-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-position-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-position-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-position-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-resource-log-level-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-resource-log-level-request-"))
   (resource-identifier (common-lisp:error ":resource-identifier is required")
    :type (common-lisp:or resource-identifier common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or resource-type common-lisp:null))
   (log-level (common-lisp:error ":log-level is required") :type
    (common-lisp:or log-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-resource-log-level-request
                    'make-put-resource-log-level-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-log-level-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-log-level-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-level))
      (common-lisp:list
       (common-lisp:cons "LogLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-log-level-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-resource-log-level-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-resource-log-level-response-")))
 (common-lisp:export
  (common-lisp:list 'put-resource-log-level-response
                    'make-put-resource-log-level-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-log-level-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-log-level-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-log-level-response))
   common-lisp:nil))
(common-lisp:deftype qualification-status () 'common-lisp:boolean)
(common-lisp:deftype query-string () 'common-lisp:string)
(common-lisp:deftype rscp () 'common-lisp:integer)
(common-lisp:deftype rsrp () 'common-lisp:integer)
(common-lisp:deftype rsrq () 'common-lisp:single-float)
(common-lisp:deftype rss () 'common-lisp:integer)
(common-lisp:deftype ra-allowed () 'common-lisp:boolean)
(common-lisp:deftype redundancy-percent () 'common-lisp:integer)
(common-lisp:deftype reg-params-revision () 'common-lisp:string)
(common-lisp:deftype registration-zone () 'common-lisp:integer)
(common-lisp:deftype report-dev-status-battery () 'common-lisp:boolean)
(common-lisp:deftype report-dev-status-margin () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (reset-all-resource-log-levels-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-reset-all-resource-log-levels-request-")))
 (common-lisp:export
  (common-lisp:list 'reset-all-resource-log-levels-request
                    'make-reset-all-resource-log-levels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-all-resource-log-levels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-all-resource-log-levels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-all-resource-log-levels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reset-all-resource-log-levels-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-reset-all-resource-log-levels-response-")))
 (common-lisp:export
  (common-lisp:list 'reset-all-resource-log-levels-response
                    'make-reset-all-resource-log-levels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-all-resource-log-levels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-all-resource-log-levels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-all-resource-log-levels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reset-resource-log-level-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-reset-resource-log-level-request-"))
   (resource-identifier (common-lisp:error ":resource-identifier is required")
    :type (common-lisp:or resource-identifier common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reset-resource-log-level-request
                    'make-reset-resource-log-level-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-resource-log-level-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-resource-log-level-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-resource-log-level-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reset-resource-log-level-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-reset-resource-log-level-response-")))
 (common-lisp:export
  (common-lisp:list 'reset-resource-log-level-response
                    'make-reset-resource-log-level-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-resource-log-level-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-resource-log-level-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-resource-log-level-response))
   common-lisp:nil))
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:deftype resource-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (iotwireless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-not-found-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-id
                    'resource-not-found-exception-resource-type)))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:deftype result () 'common-lisp:string)
(common-lisp:deftype rf-region () 'common-lisp:string)
(common-lisp:deftype role () 'common-lisp:string)
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:deftype rx-data-rate2 () 'common-lisp:integer)
(common-lisp:deftype rx-delay1 () 'common-lisp:integer)
(common-lisp:deftype rx-dr-offset1 () 'common-lisp:integer)
(common-lisp:deftype rx-freq2 () 'common-lisp:integer)
(common-lisp:deftype rx-level () 'common-lisp:integer)
(common-lisp:deftype snwk-sint-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (semtech-gnss-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-semtech-gnss-configuration-"))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or position-configuration-status common-lisp:null))
   (fec (common-lisp:error ":fec is required") :type
    (common-lisp:or position-configuration-fec common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'semtech-gnss-configuration
                    'make-semtech-gnss-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          semtech-gnss-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          semtech-gnss-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fec))
      (common-lisp:list
       (common-lisp:cons "Fec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          semtech-gnss-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (semtech-gnss-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-semtech-gnss-detail-"))
   (provider common-lisp:nil :type
    (common-lisp:or position-solver-provider common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or position-solver-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or position-configuration-status common-lisp:null))
   (fec common-lisp:nil :type
    (common-lisp:or position-configuration-fec common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'semtech-gnss-detail 'make-semtech-gnss-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input semtech-gnss-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input semtech-gnss-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider))
      (common-lisp:list
       (common-lisp:cons "Provider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fec))
      (common-lisp:list
       (common-lisp:cons "Fec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input semtech-gnss-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-data-to-multicast-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-data-to-multicast-group-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or multicast-group-id common-lisp:null))
   (payload-data (common-lisp:error ":payload-data is required") :type
    (common-lisp:or payload-data common-lisp:null))
   (wireless-metadata (common-lisp:error ":wireless-metadata is required")
    :type (common-lisp:or multicast-wireless-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-data-to-multicast-group-request
                    'make-send-data-to-multicast-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-data-to-multicast-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-data-to-multicast-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload-data))
      (common-lisp:list
       (common-lisp:cons "PayloadData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wireless-metadata))
      (common-lisp:list
       (common-lisp:cons "WirelessMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-data-to-multicast-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-data-to-multicast-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-data-to-multicast-group-response-"))
   (message-id common-lisp:nil :type
    (common-lisp:or multicast-group-message-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-data-to-multicast-group-response
                    'make-send-data-to-multicast-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-data-to-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-data-to-multicast-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-data-to-multicast-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-data-to-wireless-device-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-data-to-wireless-device-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-device-id common-lisp:null))
   (transmit-mode (common-lisp:error ":transmit-mode is required") :type
    (common-lisp:or transmit-mode common-lisp:null))
   (payload-data (common-lisp:error ":payload-data is required") :type
    (common-lisp:or payload-data common-lisp:null))
   (wireless-metadata common-lisp:nil :type
    (common-lisp:or wireless-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-data-to-wireless-device-request
                    'make-send-data-to-wireless-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-data-to-wireless-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-data-to-wireless-device-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transmit-mode))
      (common-lisp:list
       (common-lisp:cons "TransmitMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload-data))
      (common-lisp:list
       (common-lisp:cons "PayloadData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wireless-metadata))
      (common-lisp:list
       (common-lisp:cons "WirelessMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-data-to-wireless-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-data-to-wireless-device-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-data-to-wireless-device-response-"))
   (message-id common-lisp:nil :type
    (common-lisp:or message-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-data-to-wireless-device-response
                    'make-send-data-to-wireless-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-data-to-wireless-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-data-to-wireless-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-data-to-wireless-device-response))
   common-lisp:nil))
(common-lisp:deftype seq () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (service-profile (:copier common-lisp:nil)
      (:conc-name "struct-shape-service-profile-"))
   (arn common-lisp:nil :type
    (common-lisp:or service-profile-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or service-profile-name common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or service-profile-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'service-profile 'make-service-profile))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input service-profile))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input service-profile))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input service-profile))
   common-lisp:nil))
(common-lisp:deftype service-profile-arn () 'common-lisp:string)
(common-lisp:deftype service-profile-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype service-profile-list ()
   '(trivial-types:proper-list service-profile))
 (common-lisp:defun |make-service-profile-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list service-profile))
   aws-sdk/generator/shape::members))
(common-lisp:deftype service-profile-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (session-keys-abp-v1-0-x (:copier common-lisp:nil)
      (:conc-name "struct-shape-session-keys-abp-v1-0-x-"))
   (nwk-skey common-lisp:nil :type (common-lisp:or nwk-skey common-lisp:null))
   (app-skey common-lisp:nil :type (common-lisp:or app-skey common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'session-keys-abp-v1-0-x 'make-session-keys-abp-v1-0-x))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          session-keys-abp-v1-0-x))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          session-keys-abp-v1-0-x))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nwk-skey))
      (common-lisp:list
       (common-lisp:cons "NwkSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-skey))
      (common-lisp:list
       (common-lisp:cons "AppSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          session-keys-abp-v1-0-x))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (session-keys-abp-v1-1 (:copier common-lisp:nil)
      (:conc-name "struct-shape-session-keys-abp-v1-1-"))
   (fnwk-sint-key common-lisp:nil :type
    (common-lisp:or fnwk-sint-key common-lisp:null))
   (snwk-sint-key common-lisp:nil :type
    (common-lisp:or snwk-sint-key common-lisp:null))
   (nwk-senc-key common-lisp:nil :type
    (common-lisp:or nwk-senc-key common-lisp:null))
   (app-skey common-lisp:nil :type (common-lisp:or app-skey common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'session-keys-abp-v1-1 'make-session-keys-abp-v1-1))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          session-keys-abp-v1-1))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          session-keys-abp-v1-1))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fnwk-sint-key))
      (common-lisp:list
       (common-lisp:cons "FNwkSIntKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snwk-sint-key))
      (common-lisp:list
       (common-lisp:cons "SNwkSIntKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nwk-senc-key))
      (common-lisp:list
       (common-lisp:cons "NwkSEncKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-skey))
      (common-lisp:list
       (common-lisp:cons "AppSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          session-keys-abp-v1-1))
   common-lisp:nil))
(common-lisp:deftype session-start-time-timestamp () 'common-lisp:string)
(common-lisp:deftype session-timeout () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-account-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-account-info-"))
   (amazon-id common-lisp:nil :type
    (common-lisp:or amazon-id common-lisp:null))
   (app-server-private-key common-lisp:nil :type
    (common-lisp:or app-server-private-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-account-info 'make-sidewalk-account-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-account-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-account-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amazon-id))
      (common-lisp:list
       (common-lisp:cons "AmazonId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-server-private-key))
      (common-lisp:list
       (common-lisp:cons "AppServerPrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-account-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-account-info-with-fingerprint (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-account-info-with-fingerprint-"))
   (amazon-id common-lisp:nil :type
    (common-lisp:or amazon-id common-lisp:null))
   (fingerprint common-lisp:nil :type
    (common-lisp:or fingerprint common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or partner-account-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-account-info-with-fingerprint
                    'make-sidewalk-account-info-with-fingerprint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-account-info-with-fingerprint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-account-info-with-fingerprint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amazon-id))
      (common-lisp:list
       (common-lisp:cons "AmazonId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fingerprint))
      (common-lisp:list
       (common-lisp:cons "Fingerprint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-account-info-with-fingerprint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sidewalk-account-list ()
   '(trivial-types:proper-list sidewalk-account-info-with-fingerprint))
 (common-lisp:defun |make-sidewalk-account-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sidewalk-account-info-with-fingerprint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-create-device-profile (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-create-device-profile-")))
 (common-lisp:export
  (common-lisp:list 'sidewalk-create-device-profile
                    'make-sidewalk-create-device-profile))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-create-device-profile))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-create-device-profile))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-create-device-profile))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-create-wireless-device (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-create-wireless-device-"))
   (device-profile-id common-lisp:nil :type
    (common-lisp:or device-profile-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-create-wireless-device
                    'make-sidewalk-create-wireless-device))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-create-wireless-device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-create-wireless-device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-profile-id))
      (common-lisp:list
       (common-lisp:cons "DeviceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-create-wireless-device))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-device (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-device-"))
   (amazon-id common-lisp:nil :type
    (common-lisp:or amazon-id common-lisp:null))
   (sidewalk-id common-lisp:nil :type
    (common-lisp:or sidewalk-id common-lisp:null))
   (sidewalk-manufacturing-sn common-lisp:nil :type
    (common-lisp:or sidewalk-manufacturing-sn common-lisp:null))
   (device-certificates common-lisp:nil :type
    (common-lisp:or device-certificate-list common-lisp:null))
   (private-keys common-lisp:nil :type
    (common-lisp:or private-keys-list common-lisp:null))
   (device-profile-id common-lisp:nil :type
    (common-lisp:or device-profile-id common-lisp:null))
   (certificate-id common-lisp:nil :type
    (common-lisp:or dak-certificate-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or wireless-device-sidewalk-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sidewalk-device 'make-sidewalk-device))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sidewalk-device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sidewalk-device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amazon-id))
      (common-lisp:list
       (common-lisp:cons "AmazonId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk-id))
      (common-lisp:list
       (common-lisp:cons "SidewalkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sidewalk-manufacturing-sn))
      (common-lisp:list
       (common-lisp:cons "SidewalkManufacturingSn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-certificates))
      (common-lisp:list
       (common-lisp:cons "DeviceCertificates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-keys))
      (common-lisp:list
       (common-lisp:cons "PrivateKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-profile-id))
      (common-lisp:list
       (common-lisp:cons "DeviceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-id))
      (common-lisp:list
       (common-lisp:cons "CertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sidewalk-device))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-device-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-device-metadata-"))
   (rssi common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (battery-level common-lisp:nil :type
    (common-lisp:or battery-level common-lisp:null))
   (event common-lisp:nil :type (common-lisp:or event common-lisp:null))
   (device-state common-lisp:nil :type
    (common-lisp:or device-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-device-metadata 'make-sidewalk-device-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-device-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-device-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rssi))
      (common-lisp:list
       (common-lisp:cons "Rssi"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'battery-level))
      (common-lisp:list
       (common-lisp:cons "BatteryLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "Event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-state))
      (common-lisp:list
       (common-lisp:cons "DeviceState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-device-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-event-notification-configurations (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-event-notification-configurations-"))
   (amazon-id-event-topic common-lisp:nil :type
    (common-lisp:or event-notification-topic-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-event-notification-configurations
                    'make-sidewalk-event-notification-configurations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-event-notification-configurations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-event-notification-configurations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'amazon-id-event-topic))
      (common-lisp:list
       (common-lisp:cons "AmazonIdEventTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-event-notification-configurations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-get-device-profile (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-get-device-profile-"))
   (application-server-public-key common-lisp:nil :type
    (common-lisp:or application-server-public-key common-lisp:null))
   (qualification-status common-lisp:nil :type
    (common-lisp:or qualification-status common-lisp:null))
   (dak-certificate-metadata common-lisp:nil :type
    (common-lisp:or dak-certificate-metadata-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-get-device-profile
                    'make-sidewalk-get-device-profile))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-get-device-profile))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-get-device-profile))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-server-public-key))
      (common-lisp:list
       (common-lisp:cons "ApplicationServerPublicKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-status))
      (common-lisp:list
       (common-lisp:cons "QualificationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dak-certificate-metadata))
      (common-lisp:list
       (common-lisp:cons "DakCertificateMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-get-device-profile))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-get-start-import-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-get-start-import-info-"))
   (device-creation-file-list common-lisp:nil :type
    (common-lisp:or device-creation-file-list common-lisp:null))
   (role common-lisp:nil :type (common-lisp:or role common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-get-start-import-info
                    'make-sidewalk-get-start-import-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-get-start-import-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-get-start-import-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-creation-file-list))
      (common-lisp:list
       (common-lisp:cons "DeviceCreationFileList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-get-start-import-info))
   common-lisp:nil))
(common-lisp:deftype sidewalk-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-list-device (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-list-device-"))
   (amazon-id common-lisp:nil :type
    (common-lisp:or amazon-id common-lisp:null))
   (sidewalk-id common-lisp:nil :type
    (common-lisp:or sidewalk-id common-lisp:null))
   (sidewalk-manufacturing-sn common-lisp:nil :type
    (common-lisp:or sidewalk-manufacturing-sn common-lisp:null))
   (device-certificates common-lisp:nil :type
    (common-lisp:or device-certificate-list common-lisp:null))
   (device-profile-id common-lisp:nil :type
    (common-lisp:or device-profile-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or wireless-device-sidewalk-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-list-device 'make-sidewalk-list-device))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sidewalk-list-device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sidewalk-list-device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amazon-id))
      (common-lisp:list
       (common-lisp:cons "AmazonId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk-id))
      (common-lisp:list
       (common-lisp:cons "SidewalkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sidewalk-manufacturing-sn))
      (common-lisp:list
       (common-lisp:cons "SidewalkManufacturingSn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-certificates))
      (common-lisp:list
       (common-lisp:cons "DeviceCertificates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-profile-id))
      (common-lisp:list
       (common-lisp:cons "DeviceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sidewalk-list-device))
   common-lisp:nil))
(common-lisp:deftype sidewalk-manufacturing-sn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-resource-type-event-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-resource-type-event-configuration-"))
   (wireless-device-event-topic common-lisp:nil :type
    (common-lisp:or event-notification-topic-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-resource-type-event-configuration
                    'make-sidewalk-resource-type-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-resource-type-event-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-resource-type-event-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-device-event-topic))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceEventTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-resource-type-event-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-send-data-to-device (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-send-data-to-device-"))
   (seq common-lisp:nil :type (common-lisp:or seq common-lisp:null))
   (message-type common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null))
   (ack-mode-retry-duration-secs common-lisp:nil :type
    (common-lisp:or ack-mode-retry-duration-secs common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-send-data-to-device
                    'make-sidewalk-send-data-to-device))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-send-data-to-device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-send-data-to-device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'seq))
      (common-lisp:list
       (common-lisp:cons "Seq"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-type))
      (common-lisp:list
       (common-lisp:cons "MessageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ack-mode-retry-duration-secs))
      (common-lisp:list
       (common-lisp:cons "AckModeRetryDurationSecs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-send-data-to-device))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-single-start-import-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-single-start-import-info-"))
   (sidewalk-manufacturing-sn common-lisp:nil :type
    (common-lisp:or sidewalk-manufacturing-sn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-single-start-import-info
                    'make-sidewalk-single-start-import-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-single-start-import-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-single-start-import-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sidewalk-manufacturing-sn))
      (common-lisp:list
       (common-lisp:cons "SidewalkManufacturingSn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-single-start-import-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-start-import-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-start-import-info-"))
   (device-creation-file common-lisp:nil :type
    (common-lisp:or device-creation-file common-lisp:null))
   (role common-lisp:nil :type (common-lisp:or role common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-start-import-info
                    'make-sidewalk-start-import-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-start-import-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-start-import-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-creation-file))
      (common-lisp:list
       (common-lisp:cons "DeviceCreationFile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-start-import-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-update-account (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-update-account-"))
   (app-server-private-key common-lisp:nil :type
    (common-lisp:or app-server-private-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-update-account 'make-sidewalk-update-account))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-update-account))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-update-account))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-server-private-key))
      (common-lisp:list
       (common-lisp:cons "AppServerPrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-update-account))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sidewalk-update-import-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-sidewalk-update-import-info-"))
   (device-creation-file common-lisp:nil :type
    (common-lisp:or device-creation-file common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sidewalk-update-import-info
                    'make-sidewalk-update-import-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-update-import-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-update-import-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-creation-file))
      (common-lisp:list
       (common-lisp:cons "DeviceCreationFile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sidewalk-update-import-info))
   common-lisp:nil))
(common-lisp:deftype signing-alg () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-bulk-associate-wireless-device-with-multicast-group-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-start-bulk-associate-wireless-device-with-multicast-group-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or multicast-group-id common-lisp:null))
   (query-string common-lisp:nil :type
    (common-lisp:or query-string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'start-bulk-associate-wireless-device-with-multicast-group-request
   'make-start-bulk-associate-wireless-device-with-multicast-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-associate-wireless-device-with-multicast-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-associate-wireless-device-with-multicast-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'query-string))
      (common-lisp:list
       (common-lisp:cons "QueryString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-associate-wireless-device-with-multicast-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-bulk-associate-wireless-device-with-multicast-group-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-start-bulk-associate-wireless-device-with-multicast-group-response-")))
 (common-lisp:export
  (common-lisp:list
   'start-bulk-associate-wireless-device-with-multicast-group-response
   'make-start-bulk-associate-wireless-device-with-multicast-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-associate-wireless-device-with-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-associate-wireless-device-with-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-associate-wireless-device-with-multicast-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-bulk-disassociate-wireless-device-from-multicast-group-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-start-bulk-disassociate-wireless-device-from-multicast-group-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or multicast-group-id common-lisp:null))
   (query-string common-lisp:nil :type
    (common-lisp:or query-string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'start-bulk-disassociate-wireless-device-from-multicast-group-request
   'make-start-bulk-disassociate-wireless-device-from-multicast-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-disassociate-wireless-device-from-multicast-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-disassociate-wireless-device-from-multicast-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'query-string))
      (common-lisp:list
       (common-lisp:cons "QueryString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-disassociate-wireless-device-from-multicast-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-bulk-disassociate-wireless-device-from-multicast-group-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-start-bulk-disassociate-wireless-device-from-multicast-group-response-")))
 (common-lisp:export
  (common-lisp:list
   'start-bulk-disassociate-wireless-device-from-multicast-group-response
   'make-start-bulk-disassociate-wireless-device-from-multicast-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-disassociate-wireless-device-from-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-disassociate-wireless-device-from-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-bulk-disassociate-wireless-device-from-multicast-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-fuota-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-fuota-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or fuota-task-id common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanstart-fuota-task common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-fuota-task-request 'make-start-fuota-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-fuota-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-fuota-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-fuota-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-fuota-task-response-")))
 (common-lisp:export
  (common-lisp:list 'start-fuota-task-response
                    'make-start-fuota-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-fuota-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-multicast-group-session-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-multicast-group-session-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or multicast-group-id common-lisp:null))
   (lo-ra-wan (common-lisp:error ":lo-ra-wan is required") :type
    (common-lisp:or lo-ra-wanmulticast-session common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-multicast-group-session-request
                    'make-start-multicast-group-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-multicast-group-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-multicast-group-session-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-multicast-group-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-multicast-group-session-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-multicast-group-session-response-")))
 (common-lisp:export
  (common-lisp:list 'start-multicast-group-session-response
                    'make-start-multicast-group-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-multicast-group-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-multicast-group-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-multicast-group-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-single-wireless-device-import-task-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-start-single-wireless-device-import-task-request-"))
   (destination-name (common-lisp:error ":destination-name is required") :type
    (common-lisp:or destination-name common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null))
   (device-name common-lisp:nil :type
    (common-lisp:or device-name common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (sidewalk (common-lisp:error ":sidewalk is required") :type
    (common-lisp:or sidewalk-single-start-import-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-single-wireless-device-import-task-request
                    'make-start-single-wireless-device-import-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-single-wireless-device-import-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-single-wireless-device-import-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-name))
      (common-lisp:list
       (common-lisp:cons "DestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-name))
      (common-lisp:list
       (common-lisp:cons "DeviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-single-wireless-device-import-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-single-wireless-device-import-task-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-start-single-wireless-device-import-task-response-"))
   (id common-lisp:nil :type (common-lisp:or import-task-id common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or import-task-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-single-wireless-device-import-task-response
                    'make-start-single-wireless-device-import-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-single-wireless-device-import-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-single-wireless-device-import-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-single-wireless-device-import-task-response))
   common-lisp:nil))
(common-lisp:deftype start-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-wireless-device-import-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-wireless-device-import-task-request-"))
   (destination-name (common-lisp:error ":destination-name is required") :type
    (common-lisp:or destination-name common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or client-request-token common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (sidewalk (common-lisp:error ":sidewalk is required") :type
    (common-lisp:or sidewalk-start-import-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-wireless-device-import-task-request
                    'make-start-wireless-device-import-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-wireless-device-import-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-wireless-device-import-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-name))
      (common-lisp:list
       (common-lisp:cons "DestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-wireless-device-import-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-wireless-device-import-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-wireless-device-import-task-response-"))
   (id common-lisp:nil :type (common-lisp:or import-task-id common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or import-task-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-wireless-device-import-task-response
                    'make-start-wireless-device-import-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-wireless-device-import-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-wireless-device-import-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-wireless-device-import-task-response))
   common-lisp:nil))
(common-lisp:deftype station () 'common-lisp:string)
(common-lisp:deftype status-reason () 'common-lisp:string)
(common-lisp:deftype sub-band () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype sub-bands () '(trivial-types:proper-list sub-band))
 (common-lisp:defun |make-sub-bands|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sub-band))
   aws-sdk/generator/shape::members))
(common-lisp:deftype supported-rf-region () 'common-lisp:string)
(common-lisp:deftype supports32bit-fcnt () 'common-lisp:boolean)
(common-lisp:deftype supports-class-b () 'common-lisp:boolean)
(common-lisp:deftype supports-class-c () 'common-lisp:boolean)
(common-lisp:deftype supports-join () 'common-lisp:boolean)
(common-lisp:deftype system-id () 'common-lisp:integer)
(common-lisp:deftype tac () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype target-per () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype tdscdma-list () '(trivial-types:proper-list tdscdma-obj))
 (common-lisp:defun |make-tdscdma-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tdscdma-obj))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tdscdma-local-id (:copier common-lisp:nil)
      (:conc-name "struct-shape-tdscdma-local-id-"))
   (uarfcn (common-lisp:error ":uarfcn is required") :type
    (common-lisp:or uarfcn common-lisp:null))
   (cell-params (common-lisp:error ":cell-params is required") :type
    (common-lisp:or cell-params common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tdscdma-local-id 'make-tdscdma-local-id))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tdscdma-local-id))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tdscdma-local-id))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uarfcn))
      (common-lisp:list
       (common-lisp:cons "Uarfcn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-params))
      (common-lisp:list
       (common-lisp:cons "CellParams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tdscdma-local-id))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tdscdma-nmr-list ()
   '(trivial-types:proper-list tdscdma-nmr-obj))
 (common-lisp:defun |make-tdscdma-nmr-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tdscdma-nmr-obj))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tdscdma-nmr-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-tdscdma-nmr-obj-"))
   (uarfcn (common-lisp:error ":uarfcn is required") :type
    (common-lisp:or uarfcn common-lisp:null))
   (cell-params (common-lisp:error ":cell-params is required") :type
    (common-lisp:or cell-params common-lisp:null))
   (utran-cid common-lisp:nil :type
    (common-lisp:or utran-cid common-lisp:null))
   (rscp common-lisp:nil :type (common-lisp:or rscp common-lisp:null))
   (path-loss common-lisp:nil :type
    (common-lisp:or path-loss common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tdscdma-nmr-obj 'make-tdscdma-nmr-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tdscdma-nmr-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tdscdma-nmr-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uarfcn))
      (common-lisp:list
       (common-lisp:cons "Uarfcn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-params))
      (common-lisp:list
       (common-lisp:cons "CellParams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utran-cid))
      (common-lisp:list
       (common-lisp:cons "UtranCid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rscp))
      (common-lisp:list
       (common-lisp:cons "Rscp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path-loss))
      (common-lisp:list
       (common-lisp:cons "PathLoss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tdscdma-nmr-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tdscdma-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-tdscdma-obj-"))
   (mcc (common-lisp:error ":mcc is required") :type
    (common-lisp:or mcc common-lisp:null))
   (mnc (common-lisp:error ":mnc is required") :type
    (common-lisp:or mnc common-lisp:null))
   (lac common-lisp:nil :type (common-lisp:or lac common-lisp:null))
   (utran-cid (common-lisp:error ":utran-cid is required") :type
    (common-lisp:or utran-cid common-lisp:null))
   (tdscdma-local-id common-lisp:nil :type
    (common-lisp:or tdscdma-local-id common-lisp:null))
   (tdscdma-timing-advance common-lisp:nil :type
    (common-lisp:or tdscdma-timing-advance common-lisp:null))
   (rscp common-lisp:nil :type (common-lisp:or rscp common-lisp:null))
   (path-loss common-lisp:nil :type
    (common-lisp:or path-loss common-lisp:null))
   (tdscdma-nmr common-lisp:nil :type
    (common-lisp:or tdscdma-nmr-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tdscdma-obj 'make-tdscdma-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tdscdma-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tdscdma-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mcc))
      (common-lisp:list
       (common-lisp:cons "Mcc"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mnc))
      (common-lisp:list
       (common-lisp:cons "Mnc"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lac))
      (common-lisp:list
       (common-lisp:cons "Lac"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utran-cid))
      (common-lisp:list
       (common-lisp:cons "UtranCid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tdscdma-local-id))
      (common-lisp:list
       (common-lisp:cons "TdscdmaLocalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tdscdma-timing-advance))
      (common-lisp:list
       (common-lisp:cons "TdscdmaTimingAdvance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rscp))
      (common-lisp:list
       (common-lisp:cons "Rscp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path-loss))
      (common-lisp:list
       (common-lisp:cons "PathLoss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tdscdma-nmr))
      (common-lisp:list
       (common-lisp:cons "TdscdmaNmr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tdscdma-obj))
   common-lisp:nil))
(common-lisp:deftype tdscdma-timing-advance () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (test-wireless-device-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-wireless-device-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-wireless-device-request
                    'make-test-wireless-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-wireless-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-wireless-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-wireless-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (test-wireless-device-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-wireless-device-response-"))
   (result common-lisp:nil :type (common-lisp:or result common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-wireless-device-response
                    'make-test-wireless-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-wireless-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-wireless-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result))
      (common-lisp:list
       (common-lisp:cons "Result"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-wireless-device-response))
   common-lisp:nil))
(common-lisp:deftype thing-arn () 'common-lisp:string)
(common-lisp:deftype thing-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (iotwireless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition too-many-tags-exception
     (iotwireless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-tags-exception-message)
      (resource-name :initarg :resource-name :initform common-lisp:nil :reader
       too-many-tags-exception-resource-name)))
 (common-lisp:export
  (common-lisp:list 'too-many-tags-exception 'too-many-tags-exception-message
                    'too-many-tags-exception-resource-name)))
(common-lisp:progn
 (common-lisp:defstruct
     (trace-content (:copier common-lisp:nil)
      (:conc-name "struct-shape-trace-content-"))
   (wireless-device-frame-info common-lisp:nil :type
    (common-lisp:or wireless-device-frame-info common-lisp:null))
   (log-level common-lisp:nil :type
    (common-lisp:or log-level common-lisp:null)))
 (common-lisp:export (common-lisp:list 'trace-content 'make-trace-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input trace-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input trace-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-device-frame-info))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceFrameInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-level))
      (common-lisp:list
       (common-lisp:cons "LogLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input trace-content))
   common-lisp:nil))
(common-lisp:deftype transmission-interval () 'common-lisp:integer)
(common-lisp:deftype transmit-mode () 'common-lisp:integer)
(common-lisp:deftype uarfcn () 'common-lisp:integer)
(common-lisp:deftype uarfcndl () 'common-lisp:integer)
(common-lisp:deftype ul-bucket-size () 'common-lisp:integer)
(common-lisp:deftype ul-rate () 'common-lisp:integer)
(common-lisp:deftype ul-rate-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-abp-v1-0-x (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-abp-v1-0-x-"))
   (fcnt-start common-lisp:nil :type
    (common-lisp:or fcnt-start common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-abp-v1-0-x 'make-update-abp-v1-0-x))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-abp-v1-0-x))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-abp-v1-0-x))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fcnt-start))
      (common-lisp:list
       (common-lisp:cons "FCntStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-abp-v1-0-x))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-abp-v1-1 (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-abp-v1-1-"))
   (fcnt-start common-lisp:nil :type
    (common-lisp:or fcnt-start common-lisp:null)))
 (common-lisp:export (common-lisp:list 'update-abp-v1-1 'make-update-abp-v1-1))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-abp-v1-1))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-abp-v1-1))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fcnt-start))
      (common-lisp:list
       (common-lisp:cons "FCntStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-abp-v1-1))
   common-lisp:nil))
(common-lisp:deftype update-data-source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-destination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-destination-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or destination-name common-lisp:null))
   (expression-type common-lisp:nil :type
    (common-lisp:or expression-type common-lisp:null))
   (expression common-lisp:nil :type
    (common-lisp:or expression common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-destination-request
                    'make-update-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression-type))
      (common-lisp:list
       (common-lisp:cons "ExpressionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-destination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'update-destination-response
                    'make-update-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-event-configuration-by-resource-types-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-event-configuration-by-resource-types-request-"))
   (device-registration-state common-lisp:nil :type
    (common-lisp:or device-registration-state-resource-type-event-configuration
                    common-lisp:null))
   (proximity common-lisp:nil :type
    (common-lisp:or proximity-resource-type-event-configuration
                    common-lisp:null))
   (join common-lisp:nil :type
    (common-lisp:or join-resource-type-event-configuration common-lisp:null))
   (connection-status common-lisp:nil :type
    (common-lisp:or connection-status-resource-type-event-configuration
                    common-lisp:null))
   (message-delivery-status common-lisp:nil :type
    (common-lisp:or message-delivery-status-resource-type-event-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-event-configuration-by-resource-types-request
                    'make-update-event-configuration-by-resource-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-event-configuration-by-resource-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-event-configuration-by-resource-types-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-registration-state))
      (common-lisp:list
       (common-lisp:cons "DeviceRegistrationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proximity))
      (common-lisp:list
       (common-lisp:cons "Proximity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'join))
      (common-lisp:list
       (common-lisp:cons "Join"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-status))
      (common-lisp:list
       (common-lisp:cons "ConnectionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-delivery-status))
      (common-lisp:list
       (common-lisp:cons "MessageDeliveryStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-event-configuration-by-resource-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-event-configuration-by-resource-types-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-event-configuration-by-resource-types-response-")))
 (common-lisp:export
  (common-lisp:list 'update-event-configuration-by-resource-types-response
                    'make-update-event-configuration-by-resource-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-event-configuration-by-resource-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-event-configuration-by-resource-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-event-configuration-by-resource-types-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-fports (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-fports-"))
   (positioning common-lisp:nil :type
    (common-lisp:or positioning common-lisp:null))
   (applications common-lisp:nil :type
    (common-lisp:or applications common-lisp:null)))
 (common-lisp:export (common-lisp:list 'update-fports 'make-update-fports))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-fports))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-fports))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'positioning))
      (common-lisp:list
       (common-lisp:cons "Positioning"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'applications))
      (common-lisp:list
       (common-lisp:cons "Applications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-fports))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-fuota-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-fuota-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or fuota-task-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or fuota-task-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanfuota-task common-lisp:null))
   (firmware-update-image common-lisp:nil :type
    (common-lisp:or firmware-update-image common-lisp:null))
   (firmware-update-role common-lisp:nil :type
    (common-lisp:or firmware-update-role common-lisp:null))
   (redundancy-percent common-lisp:nil :type
    (common-lisp:or redundancy-percent common-lisp:null))
   (fragment-size-bytes common-lisp:nil :type
    (common-lisp:or fragment-size-bytes common-lisp:null))
   (fragment-interval-ms common-lisp:nil :type
    (common-lisp:or fragment-interval-ms common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-fuota-task-request
                    'make-update-fuota-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-fuota-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-fuota-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firmware-update-image))
      (common-lisp:list
       (common-lisp:cons "FirmwareUpdateImage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firmware-update-role))
      (common-lisp:list
       (common-lisp:cons "FirmwareUpdateRole"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redundancy-percent))
      (common-lisp:list
       (common-lisp:cons "RedundancyPercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fragment-size-bytes))
      (common-lisp:list
       (common-lisp:cons "FragmentSizeBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fragment-interval-ms))
      (common-lisp:list
       (common-lisp:cons "FragmentIntervalMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-fuota-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-fuota-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-fuota-task-response-")))
 (common-lisp:export
  (common-lisp:list 'update-fuota-task-response
                    'make-update-fuota-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-fuota-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-fuota-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-log-levels-by-resource-types-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-log-levels-by-resource-types-request-"))
   (default-log-level common-lisp:nil :type
    (common-lisp:or log-level common-lisp:null))
   (wireless-device-log-options common-lisp:nil :type
    (common-lisp:or wireless-device-log-option-list common-lisp:null))
   (wireless-gateway-log-options common-lisp:nil :type
    (common-lisp:or wireless-gateway-log-option-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-log-levels-by-resource-types-request
                    'make-update-log-levels-by-resource-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-log-levels-by-resource-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-log-levels-by-resource-types-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-log-level))
      (common-lisp:list
       (common-lisp:cons "DefaultLogLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-device-log-options))
      (common-lisp:list
       (common-lisp:cons "WirelessDeviceLogOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-gateway-log-options))
      (common-lisp:list
       (common-lisp:cons "WirelessGatewayLogOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-log-levels-by-resource-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-log-levels-by-resource-types-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-log-levels-by-resource-types-response-")))
 (common-lisp:export
  (common-lisp:list 'update-log-levels-by-resource-types-response
                    'make-update-log-levels-by-resource-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-log-levels-by-resource-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-log-levels-by-resource-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-log-levels-by-resource-types-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-multicast-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-multicast-group-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or multicast-group-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or multicast-group-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanmulticast common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-multicast-group-request
                    'make-update-multicast-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-multicast-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-multicast-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-multicast-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-multicast-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-multicast-group-response-")))
 (common-lisp:export
  (common-lisp:list 'update-multicast-group-response
                    'make-update-multicast-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-multicast-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-multicast-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-network-analyzer-configuration-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-network-analyzer-configuration-request-"))
   (configuration-name (common-lisp:error ":configuration-name is required")
    :type
    (common-lisp:or network-analyzer-configuration-name common-lisp:null))
   (trace-content common-lisp:nil :type
    (common-lisp:or trace-content common-lisp:null))
   (wireless-devices-to-add common-lisp:nil :type
    (common-lisp:or wireless-device-list common-lisp:null))
   (wireless-devices-to-remove common-lisp:nil :type
    (common-lisp:or wireless-device-list common-lisp:null))
   (wireless-gateways-to-add common-lisp:nil :type
    (common-lisp:or wireless-gateway-list common-lisp:null))
   (wireless-gateways-to-remove common-lisp:nil :type
    (common-lisp:or wireless-gateway-list common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-network-analyzer-configuration-request
                    'make-update-network-analyzer-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-network-analyzer-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-network-analyzer-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trace-content))
      (common-lisp:list
       (common-lisp:cons "TraceContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-devices-to-add))
      (common-lisp:list
       (common-lisp:cons "WirelessDevicesToAdd"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-devices-to-remove))
      (common-lisp:list
       (common-lisp:cons "WirelessDevicesToRemove"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-gateways-to-add))
      (common-lisp:list
       (common-lisp:cons "WirelessGatewaysToAdd"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'wireless-gateways-to-remove))
      (common-lisp:list
       (common-lisp:cons "WirelessGatewaysToRemove"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-network-analyzer-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-network-analyzer-configuration-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-network-analyzer-configuration-response-")))
 (common-lisp:export
  (common-lisp:list 'update-network-analyzer-configuration-response
                    'make-update-network-analyzer-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-network-analyzer-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-network-analyzer-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-network-analyzer-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-partner-account-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-partner-account-request-"))
   (sidewalk (common-lisp:error ":sidewalk is required") :type
    (common-lisp:or sidewalk-update-account common-lisp:null))
   (partner-account-id (common-lisp:error ":partner-account-id is required")
    :type (common-lisp:or partner-account-id common-lisp:null))
   (partner-type (common-lisp:error ":partner-type is required") :type
    (common-lisp:or partner-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-partner-account-request
                    'make-update-partner-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-partner-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-partner-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-partner-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-partner-account-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-partner-account-response-")))
 (common-lisp:export
  (common-lisp:list 'update-partner-account-response
                    'make-update-partner-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-partner-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-partner-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-partner-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-position-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-position-request-"))
   (resource-identifier (common-lisp:error ":resource-identifier is required")
    :type (common-lisp:or position-resource-identifier common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or position-resource-type common-lisp:null))
   (position (common-lisp:error ":position is required") :type
    (common-lisp:or position-coordinate common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-position-request 'make-update-position-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-position-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-position-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "Position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-position-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-position-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-position-response-")))
 (common-lisp:export
  (common-lisp:list 'update-position-response 'make-update-position-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-position-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-position-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-position-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-event-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-resource-event-configuration-request-"))
   (identifier (common-lisp:error ":identifier is required") :type
    (common-lisp:or identifier common-lisp:null))
   (identifier-type (common-lisp:error ":identifier-type is required") :type
    (common-lisp:or identifier-type common-lisp:null))
   (partner-type common-lisp:nil :type
    (common-lisp:or event-notification-partner-type common-lisp:null))
   (device-registration-state common-lisp:nil :type
    (common-lisp:or device-registration-state-event-configuration
                    common-lisp:null))
   (proximity common-lisp:nil :type
    (common-lisp:or proximity-event-configuration common-lisp:null))
   (join common-lisp:nil :type
    (common-lisp:or join-event-configuration common-lisp:null))
   (connection-status common-lisp:nil :type
    (common-lisp:or connection-status-event-configuration common-lisp:null))
   (message-delivery-status common-lisp:nil :type
    (common-lisp:or message-delivery-status-event-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-resource-event-configuration-request
                    'make-update-resource-event-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-event-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-event-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-registration-state))
      (common-lisp:list
       (common-lisp:cons "DeviceRegistrationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proximity))
      (common-lisp:list
       (common-lisp:cons "Proximity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'join))
      (common-lisp:list
       (common-lisp:cons "Join"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-status))
      (common-lisp:list
       (common-lisp:cons "ConnectionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-delivery-status))
      (common-lisp:list
       (common-lisp:cons "MessageDeliveryStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-event-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-event-configuration-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-resource-event-configuration-response-")))
 (common-lisp:export
  (common-lisp:list 'update-resource-event-configuration-response
                    'make-update-resource-event-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-event-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-event-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-event-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-position-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-resource-position-request-"))
   (resource-identifier (common-lisp:error ":resource-identifier is required")
    :type (common-lisp:or position-resource-identifier common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or position-resource-type common-lisp:null))
   (geo-json-payload common-lisp:nil :type
    (common-lisp:or geo-json-payload common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-resource-position-request
                    'make-update-resource-position-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-position-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-position-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-json-payload))
      (common-lisp:list
       (common-lisp:cons "GeoJsonPayload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-position-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'geo-json-payload)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-position-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-resource-position-response-")))
 (common-lisp:export
  (common-lisp:list 'update-resource-position-response
                    'make-update-resource-position-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-position-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-position-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-position-response))
   common-lisp:nil))
(common-lisp:deftype update-signature () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-wireless-device-import-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-wireless-device-import-task-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or import-task-id common-lisp:null))
   (sidewalk (common-lisp:error ":sidewalk is required") :type
    (common-lisp:or sidewalk-update-import-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-wireless-device-import-task-request
                    'make-update-wireless-device-import-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-device-import-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-device-import-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-device-import-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-wireless-device-import-task-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-wireless-device-import-task-response-")))
 (common-lisp:export
  (common-lisp:list 'update-wireless-device-import-task-response
                    'make-update-wireless-device-import-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-device-import-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-device-import-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-device-import-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-wireless-device-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-wireless-device-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-device-id common-lisp:null))
   (destination-name common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or wireless-device-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanupdate-device common-lisp:null))
   (positioning common-lisp:nil :type
    (common-lisp:or positioning-config-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-wireless-device-request
                    'make-update-wireless-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-device-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-name))
      (common-lisp:list
       (common-lisp:cons "DestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'positioning))
      (common-lisp:list
       (common-lisp:cons "Positioning"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-wireless-device-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-wireless-device-response-")))
 (common-lisp:export
  (common-lisp:list 'update-wireless-device-response
                    'make-update-wireless-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-device-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-wireless-gateway-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-wireless-gateway-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or wireless-gateway-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or wireless-gateway-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (join-eui-filters common-lisp:nil :type
    (common-lisp:or join-eui-filters common-lisp:null))
   (net-id-filters common-lisp:nil :type
    (common-lisp:or net-id-filters common-lisp:null))
   (max-eirp common-lisp:nil :type
    (common-lisp:or gateway-max-eirp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-wireless-gateway-request
                    'make-update-wireless-gateway-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-gateway-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-gateway-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'join-eui-filters))
      (common-lisp:list
       (common-lisp:cons "JoinEuiFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'net-id-filters))
      (common-lisp:list
       (common-lisp:cons "NetIdFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-eirp))
      (common-lisp:list
       (common-lisp:cons "MaxEirp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-gateway-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-wireless-gateway-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-wireless-gateway-response-")))
 (common-lisp:export
  (common-lisp:list 'update-wireless-gateway-response
                    'make-update-wireless-gateway-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-gateway-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-gateway-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-gateway-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-wireless-gateway-task-create (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-wireless-gateway-task-create-"))
   (update-data-source common-lisp:nil :type
    (common-lisp:or update-data-source common-lisp:null))
   (update-data-role common-lisp:nil :type
    (common-lisp:or update-data-source common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanupdate-gateway-task-create common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-wireless-gateway-task-create
                    'make-update-wireless-gateway-task-create))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-gateway-task-create))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-gateway-task-create))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-data-source))
      (common-lisp:list
       (common-lisp:cons "UpdateDataSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-data-role))
      (common-lisp:list
       (common-lisp:cons "UpdateDataRole"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-gateway-task-create))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-wireless-gateway-task-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-wireless-gateway-task-entry-"))
   (id common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-definition-id common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanupdate-gateway-task-entry common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or wireless-gateway-task-definition-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-wireless-gateway-task-entry
                    'make-update-wireless-gateway-task-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-gateway-task-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-gateway-task-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-wireless-gateway-task-entry))
   common-lisp:nil))
(common-lisp:deftype use2dsolver () 'common-lisp:boolean)
(common-lisp:deftype utran-cid () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (iotwireless-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:deftype vertical-accuracy () 'common-lisp:single-float)
(common-lisp:progn
 (common-lisp:deftype wcdma-list () '(trivial-types:proper-list wcdma-obj))
 (common-lisp:defun |make-wcdma-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list wcdma-obj))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (wcdma-local-id (:copier common-lisp:nil)
      (:conc-name "struct-shape-wcdma-local-id-"))
   (uarfcndl (common-lisp:error ":uarfcndl is required") :type
    (common-lisp:or uarfcndl common-lisp:null))
   (psc (common-lisp:error ":psc is required") :type
    (common-lisp:or psc common-lisp:null)))
 (common-lisp:export (common-lisp:list 'wcdma-local-id 'make-wcdma-local-id))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input wcdma-local-id))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input wcdma-local-id))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uarfcndl))
      (common-lisp:list
       (common-lisp:cons "Uarfcndl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'psc))
      (common-lisp:list
       (common-lisp:cons "Psc"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input wcdma-local-id))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype wcdma-nmr-list ()
   '(trivial-types:proper-list wcdma-nmr-obj))
 (common-lisp:defun |make-wcdma-nmr-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list wcdma-nmr-obj))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (wcdma-nmr-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-wcdma-nmr-obj-"))
   (uarfcndl (common-lisp:error ":uarfcndl is required") :type
    (common-lisp:or uarfcndl common-lisp:null))
   (psc (common-lisp:error ":psc is required") :type
    (common-lisp:or psc common-lisp:null))
   (utran-cid (common-lisp:error ":utran-cid is required") :type
    (common-lisp:or utran-cid common-lisp:null))
   (rscp common-lisp:nil :type (common-lisp:or rscp common-lisp:null))
   (path-loss common-lisp:nil :type
    (common-lisp:or path-loss common-lisp:null)))
 (common-lisp:export (common-lisp:list 'wcdma-nmr-obj 'make-wcdma-nmr-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input wcdma-nmr-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input wcdma-nmr-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uarfcndl))
      (common-lisp:list
       (common-lisp:cons "Uarfcndl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'psc))
      (common-lisp:list
       (common-lisp:cons "Psc"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utran-cid))
      (common-lisp:list
       (common-lisp:cons "UtranCid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rscp))
      (common-lisp:list
       (common-lisp:cons "Rscp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path-loss))
      (common-lisp:list
       (common-lisp:cons "PathLoss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input wcdma-nmr-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (wcdma-obj (:copier common-lisp:nil)
      (:conc-name "struct-shape-wcdma-obj-"))
   (mcc (common-lisp:error ":mcc is required") :type
    (common-lisp:or mcc common-lisp:null))
   (mnc (common-lisp:error ":mnc is required") :type
    (common-lisp:or mnc common-lisp:null))
   (lac common-lisp:nil :type (common-lisp:or lac common-lisp:null))
   (utran-cid (common-lisp:error ":utran-cid is required") :type
    (common-lisp:or utran-cid common-lisp:null))
   (wcdma-local-id common-lisp:nil :type
    (common-lisp:or wcdma-local-id common-lisp:null))
   (rscp common-lisp:nil :type (common-lisp:or rscp common-lisp:null))
   (path-loss common-lisp:nil :type
    (common-lisp:or path-loss common-lisp:null))
   (wcdma-nmr common-lisp:nil :type
    (common-lisp:or wcdma-nmr-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'wcdma-obj 'make-wcdma-obj))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input wcdma-obj))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input wcdma-obj))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mcc))
      (common-lisp:list
       (common-lisp:cons "Mcc"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mnc))
      (common-lisp:list
       (common-lisp:cons "Mnc"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lac))
      (common-lisp:list
       (common-lisp:cons "Lac"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utran-cid))
      (common-lisp:list
       (common-lisp:cons "UtranCid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wcdma-local-id))
      (common-lisp:list
       (common-lisp:cons "WcdmaLocalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rscp))
      (common-lisp:list
       (common-lisp:cons "Rscp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path-loss))
      (common-lisp:list
       (common-lisp:cons "PathLoss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wcdma-nmr))
      (common-lisp:list
       (common-lisp:cons "WcdmaNmr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input wcdma-obj))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (wi-fi-access-point (:copier common-lisp:nil)
      (:conc-name "struct-shape-wi-fi-access-point-"))
   (mac-address (common-lisp:error ":mac-address is required") :type
    (common-lisp:or mac-address common-lisp:null))
   (rss (common-lisp:error ":rss is required") :type
    (common-lisp:or rss common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wi-fi-access-point 'make-wi-fi-access-point))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input wi-fi-access-point))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input wi-fi-access-point))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mac-address))
      (common-lisp:list
       (common-lisp:cons "MacAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rss))
      (common-lisp:list
       (common-lisp:cons "Rss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input wi-fi-access-point))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype wi-fi-access-points ()
   '(trivial-types:proper-list wi-fi-access-point))
 (common-lisp:defun |make-wi-fi-access-points|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list wi-fi-access-point))
   aws-sdk/generator/shape::members))
(common-lisp:deftype wireless-device-arn () 'common-lisp:string)
(common-lisp:deftype wireless-device-event () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (wireless-device-event-log-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-wireless-device-event-log-option-"))
   (event (common-lisp:error ":event is required") :type
    (common-lisp:or wireless-device-event common-lisp:null))
   (log-level (common-lisp:error ":log-level is required") :type
    (common-lisp:or log-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wireless-device-event-log-option
                    'make-wireless-device-event-log-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          wireless-device-event-log-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          wireless-device-event-log-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "Event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-level))
      (common-lisp:list
       (common-lisp:cons "LogLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          wireless-device-event-log-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype wireless-device-event-log-option-list ()
   '(trivial-types:proper-list wireless-device-event-log-option))
 (common-lisp:defun |make-wireless-device-event-log-option-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            wireless-device-event-log-option))
   aws-sdk/generator/shape::members))
(common-lisp:deftype wireless-device-frame-info () 'common-lisp:string)
(common-lisp:deftype wireless-device-id () 'common-lisp:string)
(common-lisp:deftype wireless-device-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (wireless-device-import-task (:copier common-lisp:nil)
      (:conc-name "struct-shape-wireless-device-import-task-"))
   (id common-lisp:nil :type (common-lisp:or import-task-id common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or import-task-arn common-lisp:null))
   (destination-name common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-get-start-import-info common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or creation-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or import-task-status common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or status-reason common-lisp:null))
   (initialized-imported-device-count common-lisp:nil :type
    (common-lisp:or imported-wireless-device-count common-lisp:null))
   (pending-imported-device-count common-lisp:nil :type
    (common-lisp:or imported-wireless-device-count common-lisp:null))
   (onboarded-imported-device-count common-lisp:nil :type
    (common-lisp:or imported-wireless-device-count common-lisp:null))
   (failed-imported-device-count common-lisp:nil :type
    (common-lisp:or imported-wireless-device-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wireless-device-import-task
                    'make-wireless-device-import-task))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          wireless-device-import-task))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          wireless-device-import-task))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-name))
      (common-lisp:list
       (common-lisp:cons "DestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initialized-imported-device-count))
      (common-lisp:list
       (common-lisp:cons "InitializedImportedDeviceCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-imported-device-count))
      (common-lisp:list
       (common-lisp:cons "PendingImportedDeviceCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'onboarded-imported-device-count))
      (common-lisp:list
       (common-lisp:cons "OnboardedImportedDeviceCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-imported-device-count))
      (common-lisp:list
       (common-lisp:cons "FailedImportedDeviceCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          wireless-device-import-task))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype wireless-device-import-task-list ()
   '(trivial-types:proper-list wireless-device-import-task))
 (common-lisp:defun |make-wireless-device-import-task-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            wireless-device-import-task))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype wireless-device-list ()
   '(trivial-types:proper-list wireless-device-id))
 (common-lisp:defun |make-wireless-device-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list wireless-device-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (wireless-device-log-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-wireless-device-log-option-"))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or wireless-device-type common-lisp:null))
   (log-level (common-lisp:error ":log-level is required") :type
    (common-lisp:or log-level common-lisp:null))
   (events common-lisp:nil :type
    (common-lisp:or wireless-device-event-log-option-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wireless-device-log-option
                    'make-wireless-device-log-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          wireless-device-log-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          wireless-device-log-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-level))
      (common-lisp:list
       (common-lisp:cons "LogLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "Events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          wireless-device-log-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype wireless-device-log-option-list ()
   '(trivial-types:proper-list wireless-device-log-option))
 (common-lisp:defun |make-wireless-device-log-option-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            wireless-device-log-option))
   aws-sdk/generator/shape::members))
(common-lisp:deftype wireless-device-name () 'common-lisp:string)
(common-lisp:deftype wireless-device-sidewalk-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (wireless-device-statistics (:copier common-lisp:nil)
      (:conc-name "struct-shape-wireless-device-statistics-"))
   (arn common-lisp:nil :type
    (common-lisp:or wireless-device-arn common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or wireless-device-id common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or wireless-device-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or wireless-device-name common-lisp:null))
   (destination-name common-lisp:nil :type
    (common-lisp:or destination-name common-lisp:null))
   (last-uplink-received-at common-lisp:nil :type
    (common-lisp:or isodate-time-string common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wanlist-device common-lisp:null))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-list-device common-lisp:null))
   (fuota-device-status common-lisp:nil :type
    (common-lisp:or fuota-device-status common-lisp:null))
   (multicast-device-status common-lisp:nil :type
    (common-lisp:or multicast-device-status common-lisp:null))
   (mc-group-id common-lisp:nil :type
    (common-lisp:or mc-group-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wireless-device-statistics
                    'make-wireless-device-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          wireless-device-statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          wireless-device-statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-name))
      (common-lisp:list
       (common-lisp:cons "DestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-uplink-received-at))
      (common-lisp:list
       (common-lisp:cons "LastUplinkReceivedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fuota-device-status))
      (common-lisp:list
       (common-lisp:cons "FuotaDeviceStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'multicast-device-status))
      (common-lisp:list
       (common-lisp:cons "MulticastDeviceStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mc-group-id))
      (common-lisp:list
       (common-lisp:cons "McGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          wireless-device-statistics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype wireless-device-statistics-list ()
   '(trivial-types:proper-list wireless-device-statistics))
 (common-lisp:defun |make-wireless-device-statistics-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            wireless-device-statistics))
   aws-sdk/generator/shape::members))
(common-lisp:deftype wireless-device-type () 'common-lisp:string)
(common-lisp:deftype wireless-gateway-arn () 'common-lisp:string)
(common-lisp:deftype wireless-gateway-event () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (wireless-gateway-event-log-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-wireless-gateway-event-log-option-"))
   (event (common-lisp:error ":event is required") :type
    (common-lisp:or wireless-gateway-event common-lisp:null))
   (log-level (common-lisp:error ":log-level is required") :type
    (common-lisp:or log-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wireless-gateway-event-log-option
                    'make-wireless-gateway-event-log-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          wireless-gateway-event-log-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          wireless-gateway-event-log-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "Event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-level))
      (common-lisp:list
       (common-lisp:cons "LogLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          wireless-gateway-event-log-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype wireless-gateway-event-log-option-list ()
   '(trivial-types:proper-list wireless-gateway-event-log-option))
 (common-lisp:defun |make-wireless-gateway-event-log-option-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            wireless-gateway-event-log-option))
   aws-sdk/generator/shape::members))
(common-lisp:deftype wireless-gateway-id () 'common-lisp:string)
(common-lisp:deftype wireless-gateway-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype wireless-gateway-list ()
   '(trivial-types:proper-list wireless-gateway-id))
 (common-lisp:defun |make-wireless-gateway-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list wireless-gateway-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (wireless-gateway-log-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-wireless-gateway-log-option-"))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or wireless-gateway-type common-lisp:null))
   (log-level (common-lisp:error ":log-level is required") :type
    (common-lisp:or log-level common-lisp:null))
   (events common-lisp:nil :type
    (common-lisp:or wireless-gateway-event-log-option-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wireless-gateway-log-option
                    'make-wireless-gateway-log-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          wireless-gateway-log-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          wireless-gateway-log-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-level))
      (common-lisp:list
       (common-lisp:cons "LogLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "Events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          wireless-gateway-log-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype wireless-gateway-log-option-list ()
   '(trivial-types:proper-list wireless-gateway-log-option))
 (common-lisp:defun |make-wireless-gateway-log-option-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            wireless-gateway-log-option))
   aws-sdk/generator/shape::members))
(common-lisp:deftype wireless-gateway-name () 'common-lisp:string)
(common-lisp:deftype wireless-gateway-service-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (wireless-gateway-statistics (:copier common-lisp:nil)
      (:conc-name "struct-shape-wireless-gateway-statistics-"))
   (arn common-lisp:nil :type
    (common-lisp:or wireless-gateway-arn common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or wireless-gateway-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or wireless-gateway-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wangateway common-lisp:null))
   (last-uplink-received-at common-lisp:nil :type
    (common-lisp:or isodate-time-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wireless-gateway-statistics
                    'make-wireless-gateway-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          wireless-gateway-statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          wireless-gateway-statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-uplink-received-at))
      (common-lisp:list
       (common-lisp:cons "LastUplinkReceivedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          wireless-gateway-statistics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype wireless-gateway-statistics-list ()
   '(trivial-types:proper-list wireless-gateway-statistics))
 (common-lisp:defun |make-wireless-gateway-statistics-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            wireless-gateway-statistics))
   aws-sdk/generator/shape::members))
(common-lisp:deftype wireless-gateway-task-definition-arn ()
  'common-lisp:string)
(common-lisp:deftype wireless-gateway-task-definition-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype wireless-gateway-task-definition-list ()
   '(trivial-types:proper-list update-wireless-gateway-task-entry))
 (common-lisp:defun |make-wireless-gateway-task-definition-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            update-wireless-gateway-task-entry))
   aws-sdk/generator/shape::members))
(common-lisp:deftype wireless-gateway-task-definition-type ()
  'common-lisp:string)
(common-lisp:deftype wireless-gateway-task-name () 'common-lisp:string)
(common-lisp:deftype wireless-gateway-task-status () 'common-lisp:string)
(common-lisp:deftype wireless-gateway-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (wireless-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-wireless-metadata-"))
   (lo-ra-wan common-lisp:nil :type
    (common-lisp:or lo-ra-wansend-data-to-device common-lisp:null))
   (sidewalk common-lisp:nil :type
    (common-lisp:or sidewalk-send-data-to-device common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wireless-metadata 'make-wireless-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input wireless-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input wireless-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lo-ra-wan))
      (common-lisp:list
       (common-lisp:cons "LoRaWAN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sidewalk))
      (common-lisp:list
       (common-lisp:cons "Sidewalk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input wireless-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun associate-aws-account-with-partner-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sidewalk client-request-token tags)
   (common-lisp:declare
    (common-lisp:ignorable sidewalk client-request-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-aws-account-with-partner-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/partner-accounts"
                                                        "AssociateAwsAccountWithPartnerAccount"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-aws-account-with-partner-account))
(common-lisp:progn
 (common-lisp:defun associate-multicast-group-with-fuota-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id multicast-group-id)
   (common-lisp:declare (common-lisp:ignorable id multicast-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-multicast-group-with-fuota-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/fuota-tasks/~A/multicast-group"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "AssociateMulticastGroupWithFuotaTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-multicast-group-with-fuota-task))
(common-lisp:progn
 (common-lisp:defun associate-wireless-device-with-fuota-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id wireless-device-id)
   (common-lisp:declare (common-lisp:ignorable id wireless-device-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-wireless-device-with-fuota-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/fuota-tasks/~A/wireless-device"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "AssociateWirelessDeviceWithFuotaTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-wireless-device-with-fuota-task))
(common-lisp:progn
 (common-lisp:defun associate-wireless-device-with-multicast-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id wireless-device-id)
   (common-lisp:declare (common-lisp:ignorable id wireless-device-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-wireless-device-with-multicast-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/multicast-groups/~A/wireless-device"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "AssociateWirelessDeviceWithMulticastGroup"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-wireless-device-with-multicast-group))
(common-lisp:progn
 (common-lisp:defun associate-wireless-device-with-thing
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id thing-arn)
   (common-lisp:declare (common-lisp:ignorable id thing-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-wireless-device-with-thing-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-devices/~A/thing"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "AssociateWirelessDeviceWithThing"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-wireless-device-with-thing))
(common-lisp:progn
 (common-lisp:defun associate-wireless-gateway-with-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id iot-certificate-id)
   (common-lisp:declare (common-lisp:ignorable id iot-certificate-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-wireless-gateway-with-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A/certificate"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "AssociateWirelessGatewayWithCertificate"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-wireless-gateway-with-certificate))
(common-lisp:progn
 (common-lisp:defun associate-wireless-gateway-with-thing
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id thing-arn)
   (common-lisp:declare (common-lisp:ignorable id thing-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-wireless-gateway-with-thing-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A/thing"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "AssociateWirelessGatewayWithThing"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-wireless-gateway-with-thing))
(common-lisp:progn
 (common-lisp:defun cancel-multicast-group-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-cancel-multicast-group-session-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/multicast-groups/~A/session"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "CancelMulticastGroupSession"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'cancel-multicast-group-session))
(common-lisp:progn
 (common-lisp:defun create-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name expression-type expression
                     description role-arn tags client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable name expression-type expression description role-arn
     tags client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/destinations"
                                                        "CreateDestination"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-destination))
(common-lisp:progn
 (common-lisp:defun create-device-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name lo-ra-wan tags client-request-token
                     sidewalk)
   (common-lisp:declare
    (common-lisp:ignorable name lo-ra-wan tags client-request-token sidewalk))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-device-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/device-profiles"
                                                        "CreateDeviceProfile"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-device-profile))
(common-lisp:progn
 (common-lisp:defun create-fuota-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description client-request-token
                     lo-ra-wan firmware-update-image firmware-update-role tags
                     redundancy-percent fragment-size-bytes
                     fragment-interval-ms)
   (common-lisp:declare
    (common-lisp:ignorable name description client-request-token lo-ra-wan
     firmware-update-image firmware-update-role tags redundancy-percent
     fragment-size-bytes fragment-interval-ms))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-fuota-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/fuota-tasks"
                                                        "CreateFuotaTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-fuota-task))
(common-lisp:progn
 (common-lisp:defun create-multicast-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description client-request-token
                     lo-ra-wan tags)
   (common-lisp:declare
    (common-lisp:ignorable name description client-request-token lo-ra-wan
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-multicast-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/multicast-groups"
                                                        "CreateMulticastGroup"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-multicast-group))
(common-lisp:progn
 (common-lisp:defun create-network-analyzer-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name trace-content wireless-devices
                     wireless-gateways description tags client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable name trace-content wireless-devices
     wireless-gateways description tags client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-network-analyzer-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/network-analyzer-configurations"
                                                        "CreateNetworkAnalyzerConfiguration"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-network-analyzer-configuration))
(common-lisp:progn
 (common-lisp:defun create-service-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name lo-ra-wan tags client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable name lo-ra-wan tags client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-service-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/service-profiles"
                                                        "CreateServiceProfile"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-service-profile))
(common-lisp:progn
 (common-lisp:defun create-wireless-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key type name description destination-name
                     client-request-token lo-ra-wan tags positioning sidewalk)
   (common-lisp:declare
    (common-lisp:ignorable type name description destination-name
     client-request-token lo-ra-wan tags positioning sidewalk))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-wireless-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/wireless-devices"
                                                        "CreateWirelessDevice"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-wireless-device))
(common-lisp:progn
 (common-lisp:defun create-wireless-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description lo-ra-wan tags
                     client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable name description lo-ra-wan tags
     client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-wireless-gateway-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/wireless-gateways"
                                                        "CreateWirelessGateway"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-wireless-gateway))
(common-lisp:progn
 (common-lisp:defun create-wireless-gateway-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id wireless-gateway-task-definition-id)
   (common-lisp:declare
    (common-lisp:ignorable id wireless-gateway-task-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-wireless-gateway-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A/tasks"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "CreateWirelessGatewayTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-wireless-gateway-task))
(common-lisp:progn
 (common-lisp:defun create-wireless-gateway-task-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-create-tasks name update
                     client-request-token tags)
   (common-lisp:declare
    (common-lisp:ignorable auto-create-tasks name update client-request-token
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-wireless-gateway-task-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/wireless-gateway-task-definitions"
                                                        "CreateWirelessGatewayTaskDefinition"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-wireless-gateway-task-definition))
(common-lisp:progn
 (common-lisp:defun delete-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/destinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeleteDestination"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-destination))
(common-lisp:progn
 (common-lisp:defun delete-device-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-device-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/device-profiles/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteDeviceProfile"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-device-profile))
(common-lisp:progn
 (common-lisp:defun delete-fuota-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-fuota-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/fuota-tasks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteFuotaTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-fuota-task))
(common-lisp:progn
 (common-lisp:defun delete-multicast-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-multicast-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/multicast-groups/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteMulticastGroup"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-multicast-group))
(common-lisp:progn
 (common-lisp:defun delete-network-analyzer-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-name)
   (common-lisp:declare (common-lisp:ignorable configuration-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-network-analyzer-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/network-analyzer-configurations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-name))))
                                                        "DeleteNetworkAnalyzerConfiguration"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-network-analyzer-configuration))
(common-lisp:progn
 (common-lisp:defun delete-queued-messages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id message-id wireless-device-type)
   (common-lisp:declare
    (common-lisp:ignorable id message-id wireless-device-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-queued-messages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-devices/~A/data"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteQueuedMessages"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-queued-messages))
(common-lisp:progn
 (common-lisp:defun delete-service-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-service-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/service-profiles/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteServiceProfile"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-service-profile))
(common-lisp:progn
 (common-lisp:defun delete-wireless-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-wireless-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-devices/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteWirelessDevice"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-wireless-device))
(common-lisp:progn
 (common-lisp:defun delete-wireless-device-import-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-wireless-device-import-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless_device_import_task/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteWirelessDeviceImportTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-wireless-device-import-task))
(common-lisp:progn
 (common-lisp:defun delete-wireless-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-wireless-gateway-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteWirelessGateway"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-wireless-gateway))
(common-lisp:progn
 (common-lisp:defun delete-wireless-gateway-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-wireless-gateway-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A/tasks"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteWirelessGatewayTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-wireless-gateway-task))
(common-lisp:progn
 (common-lisp:defun delete-wireless-gateway-task-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-wireless-gateway-task-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateway-task-definitions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteWirelessGatewayTaskDefinition"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-wireless-gateway-task-definition))
(common-lisp:progn
 (common-lisp:defun deregister-wireless-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier wireless-device-type)
   (common-lisp:declare
    (common-lisp:ignorable identifier wireless-device-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-wireless-device-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-devices/~A/deregister"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'identifier))))
                                                        "DeregisterWirelessDevice"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'deregister-wireless-device))
(common-lisp:progn
 (common-lisp:defun disassociate-aws-account-from-partner-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key partner-account-id partner-type)
   (common-lisp:declare
    (common-lisp:ignorable partner-account-id partner-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-aws-account-from-partner-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/partner-accounts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'partner-account-id))))
                                                        "DisassociateAwsAccountFromPartnerAccount"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-aws-account-from-partner-account))
(common-lisp:progn
 (common-lisp:defun disassociate-multicast-group-from-fuota-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id multicast-group-id)
   (common-lisp:declare (common-lisp:ignorable id multicast-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-multicast-group-from-fuota-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/fuota-tasks/~A/multicast-groups/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'multicast-group-id))))
                                                        "DisassociateMulticastGroupFromFuotaTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-multicast-group-from-fuota-task))
(common-lisp:progn
 (common-lisp:defun disassociate-wireless-device-from-fuota-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id wireless-device-id)
   (common-lisp:declare (common-lisp:ignorable id wireless-device-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-wireless-device-from-fuota-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/fuota-tasks/~A/wireless-devices/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'wireless-device-id))))
                                                        "DisassociateWirelessDeviceFromFuotaTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-wireless-device-from-fuota-task))
(common-lisp:progn
 (common-lisp:defun disassociate-wireless-device-from-multicast-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id wireless-device-id)
   (common-lisp:declare (common-lisp:ignorable id wireless-device-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-wireless-device-from-multicast-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/multicast-groups/~A/wireless-devices/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'wireless-device-id))))
                                                        "DisassociateWirelessDeviceFromMulticastGroup"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-wireless-device-from-multicast-group))
(common-lisp:progn
 (common-lisp:defun disassociate-wireless-device-from-thing
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-wireless-device-from-thing-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-devices/~A/thing"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DisassociateWirelessDeviceFromThing"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-wireless-device-from-thing))
(common-lisp:progn
 (common-lisp:defun disassociate-wireless-gateway-from-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-wireless-gateway-from-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A/certificate"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DisassociateWirelessGatewayFromCertificate"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-wireless-gateway-from-certificate))
(common-lisp:progn
 (common-lisp:defun disassociate-wireless-gateway-from-thing
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-wireless-gateway-from-thing-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A/thing"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DisassociateWirelessGatewayFromThing"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-wireless-gateway-from-thing))
(common-lisp:progn
 (common-lisp:defun get-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/destinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetDestination"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-destination))
(common-lisp:progn
 (common-lisp:defun get-device-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-device-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/device-profiles/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetDeviceProfile"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-device-profile))
(common-lisp:progn
 (common-lisp:defun get-event-configuration-by-resource-types ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'iotwireless-request :method "GET" :path
                                "/event-configurations-resource-types" :params
                                `(("Action"
                                   ,@"GetEventConfigurationByResourceTypes")
                                  ("Version" ,@"2020-11-22"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-event-configuration-by-resource-types))
(common-lisp:progn
 (common-lisp:defun get-fuota-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-fuota-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/fuota-tasks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetFuotaTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-fuota-task))
(common-lisp:progn
 (common-lisp:defun get-log-levels-by-resource-types ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'iotwireless-request :method "GET" :path
                                "/log-levels" :params
                                `(("Action" ,@"GetLogLevelsByResourceTypes")
                                  ("Version" ,@"2020-11-22"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-log-levels-by-resource-types))
(common-lisp:progn
 (common-lisp:defun get-multicast-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-multicast-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/multicast-groups/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetMulticastGroup"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-multicast-group))
(common-lisp:progn
 (common-lisp:defun get-multicast-group-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-multicast-group-session-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/multicast-groups/~A/session"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetMulticastGroupSession"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-multicast-group-session))
(common-lisp:progn
 (common-lisp:defun get-network-analyzer-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-name)
   (common-lisp:declare (common-lisp:ignorable configuration-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-network-analyzer-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/network-analyzer-configurations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-name))))
                                                        "GetNetworkAnalyzerConfiguration"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-network-analyzer-configuration))
(common-lisp:progn
 (common-lisp:defun get-partner-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key partner-account-id partner-type)
   (common-lisp:declare
    (common-lisp:ignorable partner-account-id partner-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-partner-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/partner-accounts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'partner-account-id))))
                                                        "GetPartnerAccount"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-partner-account))
(common-lisp:progn
 (common-lisp:defun get-position
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifier resource-type)
   (common-lisp:declare
    (common-lisp:ignorable resource-identifier resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-position-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/positions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-identifier))))
                                                        "GetPosition"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-position))
(common-lisp:progn
 (common-lisp:defun get-position-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifier resource-type)
   (common-lisp:declare
    (common-lisp:ignorable resource-identifier resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-position-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/position-configurations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-identifier))))
                                                        "GetPositionConfiguration"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-position-configuration))
(common-lisp:progn
 (common-lisp:defun get-position-estimate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key wi-fi-access-points cell-towers ip gnss
                     timestamp)
   (common-lisp:declare
    (common-lisp:ignorable wi-fi-access-points cell-towers ip gnss timestamp))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-position-estimate-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/position-estimate"
                                                        "GetPositionEstimate"
                                                        "2020-11-22")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'get-position-estimate))
(common-lisp:progn
 (common-lisp:defun get-resource-event-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier identifier-type partner-type)
   (common-lisp:declare
    (common-lisp:ignorable identifier identifier-type partner-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-resource-event-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/event-configurations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'identifier))))
                                                        "GetResourceEventConfiguration"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-event-configuration))
(common-lisp:progn
 (common-lisp:defun get-resource-log-level
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifier resource-type)
   (common-lisp:declare
    (common-lisp:ignorable resource-identifier resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-log-level-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/log-levels/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-identifier))))
                                                        "GetResourceLogLevel"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-log-level))
(common-lisp:progn
 (common-lisp:defun get-resource-position
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifier resource-type)
   (common-lisp:declare
    (common-lisp:ignorable resource-identifier resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-position-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/resource-positions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-identifier))))
                                                        "GetResourcePosition"
                                                        "2020-11-22")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-position))
(common-lisp:progn
 (common-lisp:defun get-service-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type)
   (common-lisp:declare (common-lisp:ignorable service-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-service-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/service-endpoint"
                                                        "GetServiceEndpoint"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-service-endpoint))
(common-lisp:progn
 (common-lisp:defun get-service-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-service-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/service-profiles/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetServiceProfile"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-service-profile))
(common-lisp:progn
 (common-lisp:defun get-wireless-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier identifier-type)
   (common-lisp:declare (common-lisp:ignorable identifier identifier-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-wireless-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-devices/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'identifier))))
                                                        "GetWirelessDevice"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-wireless-device))
(common-lisp:progn
 (common-lisp:defun get-wireless-device-import-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-wireless-device-import-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless_device_import_task/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetWirelessDeviceImportTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-wireless-device-import-task))
(common-lisp:progn
 (common-lisp:defun get-wireless-device-statistics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key wireless-device-id)
   (common-lisp:declare (common-lisp:ignorable wireless-device-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-wireless-device-statistics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-devices/~A/statistics"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetWirelessDeviceStatistics"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-wireless-device-statistics))
(common-lisp:progn
 (common-lisp:defun get-wireless-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier identifier-type)
   (common-lisp:declare (common-lisp:ignorable identifier identifier-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-wireless-gateway-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'identifier))))
                                                        "GetWirelessGateway"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-wireless-gateway))
(common-lisp:progn
 (common-lisp:defun get-wireless-gateway-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-wireless-gateway-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A/certificate"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetWirelessGatewayCertificate"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-wireless-gateway-certificate))
(common-lisp:progn
 (common-lisp:defun get-wireless-gateway-firmware-information
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-wireless-gateway-firmware-information-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A/firmware-information"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetWirelessGatewayFirmwareInformation"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-wireless-gateway-firmware-information))
(common-lisp:progn
 (common-lisp:defun get-wireless-gateway-statistics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key wireless-gateway-id)
   (common-lisp:declare (common-lisp:ignorable wireless-gateway-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-wireless-gateway-statistics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A/statistics"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetWirelessGatewayStatistics"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-wireless-gateway-statistics))
(common-lisp:progn
 (common-lisp:defun get-wireless-gateway-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-wireless-gateway-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A/tasks"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetWirelessGatewayTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-wireless-gateway-task))
(common-lisp:progn
 (common-lisp:defun get-wireless-gateway-task-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-wireless-gateway-task-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateway-task-definitions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetWirelessGatewayTaskDefinition"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-wireless-gateway-task-definition))
(common-lisp:progn
 (common-lisp:defun list-destinations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-destinations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/destinations"
                                                        "ListDestinations"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-destinations))
(common-lisp:progn
 (common-lisp:defun list-device-profiles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results
                     device-profile-type)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results device-profile-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-device-profiles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/device-profiles"
                                                        "ListDeviceProfiles"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-device-profiles))
(common-lisp:progn
 (common-lisp:defun list-devices-for-wireless-device-import-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id max-results next-token status)
   (common-lisp:declare
    (common-lisp:ignorable id max-results next-token status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-devices-for-wireless-device-import-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/wireless_device_import_task"
                                                        "ListDevicesForWirelessDeviceImportTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-devices-for-wireless-device-import-task))
(common-lisp:progn
 (common-lisp:defun list-event-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-type max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-event-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/event-configurations"
                                                        "ListEventConfigurations"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-event-configurations))
(common-lisp:progn
 (common-lisp:defun list-fuota-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-fuota-tasks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/fuota-tasks"
                                                        "ListFuotaTasks"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-fuota-tasks))
(common-lisp:progn
 (common-lisp:defun list-multicast-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-multicast-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/multicast-groups"
                                                        "ListMulticastGroups"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-multicast-groups))
(common-lisp:progn
 (common-lisp:defun list-multicast-groups-by-fuota-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id next-token max-results)
   (common-lisp:declare (common-lisp:ignorable id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-multicast-groups-by-fuota-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/fuota-tasks/~A/multicast-groups"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "ListMulticastGroupsByFuotaTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-multicast-groups-by-fuota-task))
(common-lisp:progn
 (common-lisp:defun list-network-analyzer-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-network-analyzer-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/network-analyzer-configurations"
                                                        "ListNetworkAnalyzerConfigurations"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-network-analyzer-configurations))
(common-lisp:progn
 (common-lisp:defun list-partner-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-partner-accounts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/partner-accounts"
                                                        "ListPartnerAccounts"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-partner-accounts))
(common-lisp:progn
 (common-lisp:defun list-position-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-type max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-position-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/position-configurations"
                                                        "ListPositionConfigurations"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-position-configurations))
(common-lisp:progn
 (common-lisp:defun list-queued-messages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id next-token max-results
                     wireless-device-type)
   (common-lisp:declare
    (common-lisp:ignorable id next-token max-results wireless-device-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-queued-messages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-devices/~A/data"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "ListQueuedMessages"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-queued-messages))
(common-lisp:progn
 (common-lisp:defun list-service-profiles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-service-profiles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/service-profiles"
                                                        "ListServiceProfiles"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-service-profiles))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/tags"
                                                        "ListTagsForResource"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-wireless-device-import-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-wireless-device-import-tasks-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/wireless_device_import_tasks"
                                                        "ListWirelessDeviceImportTasks"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-wireless-device-import-tasks))
(common-lisp:progn
 (common-lisp:defun list-wireless-devices
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token destination-name
                     device-profile-id service-profile-id wireless-device-type
                     fuota-task-id multicast-group-id)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token destination-name
     device-profile-id service-profile-id wireless-device-type fuota-task-id
     multicast-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-wireless-devices-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/wireless-devices"
                                                        "ListWirelessDevices"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-wireless-devices))
(common-lisp:progn
 (common-lisp:defun list-wireless-gateway-task-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     task-definition-type)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token task-definition-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-wireless-gateway-task-definitions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/wireless-gateway-task-definitions"
                                                        "ListWirelessGatewayTaskDefinitions"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-wireless-gateway-task-definitions))
(common-lisp:progn
 (common-lisp:defun list-wireless-gateways
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-wireless-gateways-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/wireless-gateways"
                                                        "ListWirelessGateways"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-wireless-gateways))
(common-lisp:progn
 (common-lisp:defun put-position-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifier resource-type solvers
                     destination)
   (common-lisp:declare
    (common-lisp:ignorable resource-identifier resource-type solvers
     destination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-position-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/position-configurations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-identifier))))
                                                        "PutPositionConfiguration"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-position-configuration))
(common-lisp:progn
 (common-lisp:defun put-resource-log-level
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifier resource-type
                     log-level)
   (common-lisp:declare
    (common-lisp:ignorable resource-identifier resource-type log-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-resource-log-level-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/log-levels/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-identifier))))
                                                        "PutResourceLogLevel"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-resource-log-level))
(common-lisp:progn
 (common-lisp:defun reset-all-resource-log-levels ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'iotwireless-request :method "DELETE" :path
                                "/log-levels" :params
                                `(("Action" ,@"ResetAllResourceLogLevels")
                                  ("Version" ,@"2020-11-22"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'reset-all-resource-log-levels))
(common-lisp:progn
 (common-lisp:defun reset-resource-log-level
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifier resource-type)
   (common-lisp:declare
    (common-lisp:ignorable resource-identifier resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reset-resource-log-level-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/log-levels/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-identifier))))
                                                        "ResetResourceLogLevel"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'reset-resource-log-level))
(common-lisp:progn
 (common-lisp:defun send-data-to-multicast-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id payload-data wireless-metadata)
   (common-lisp:declare
    (common-lisp:ignorable id payload-data wireless-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-send-data-to-multicast-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/multicast-groups/~A/data"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "SendDataToMulticastGroup"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'send-data-to-multicast-group))
(common-lisp:progn
 (common-lisp:defun send-data-to-wireless-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id transmit-mode payload-data
                     wireless-metadata)
   (common-lisp:declare
    (common-lisp:ignorable id transmit-mode payload-data wireless-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-send-data-to-wireless-device-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-devices/~A/data"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "SendDataToWirelessDevice"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'send-data-to-wireless-device))
(common-lisp:progn
 (common-lisp:defun start-bulk-associate-wireless-device-with-multicast-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id query-string tags)
   (common-lisp:declare (common-lisp:ignorable id query-string tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-bulk-associate-wireless-device-with-multicast-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/multicast-groups/~A/bulk"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "StartBulkAssociateWirelessDeviceWithMulticastGroup"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export
  'start-bulk-associate-wireless-device-with-multicast-group))
(common-lisp:progn
 (common-lisp:defun start-bulk-disassociate-wireless-device-from-multicast-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id query-string tags)
   (common-lisp:declare (common-lisp:ignorable id query-string tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-bulk-disassociate-wireless-device-from-multicast-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/multicast-groups/~A/bulk"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "StartBulkDisassociateWirelessDeviceFromMulticastGroup"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export
  'start-bulk-disassociate-wireless-device-from-multicast-group))
(common-lisp:progn
 (common-lisp:defun start-fuota-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id lo-ra-wan)
   (common-lisp:declare (common-lisp:ignorable id lo-ra-wan))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-fuota-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/fuota-tasks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "StartFuotaTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-fuota-task))
(common-lisp:progn
 (common-lisp:defun start-multicast-group-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id lo-ra-wan)
   (common-lisp:declare (common-lisp:ignorable id lo-ra-wan))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-multicast-group-session-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/multicast-groups/~A/session"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "StartMulticastGroupSession"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-multicast-group-session))
(common-lisp:progn
 (common-lisp:defun start-single-wireless-device-import-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key destination-name client-request-token
                     device-name tags sidewalk)
   (common-lisp:declare
    (common-lisp:ignorable destination-name client-request-token device-name
     tags sidewalk))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-single-wireless-device-import-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/wireless_single_device_import_task"
                                                        "StartSingleWirelessDeviceImportTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-single-wireless-device-import-task))
(common-lisp:progn
 (common-lisp:defun start-wireless-device-import-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key destination-name client-request-token
                     tags sidewalk)
   (common-lisp:declare
    (common-lisp:ignorable destination-name client-request-token tags
     sidewalk))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-wireless-device-import-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/wireless_device_import_task"
                                                        "StartWirelessDeviceImportTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-wireless-device-import-task))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/tags"
                                                        "TagResource"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun test-wireless-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-wireless-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-devices/~A/test"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "TestWirelessDevice"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'test-wireless-device))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" "/tags"
                                                        "UntagResource"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name expression-type expression
                     description role-arn)
   (common-lisp:declare
    (common-lisp:ignorable name expression-type expression description
     role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/destinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "UpdateDestination"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-destination))
(common-lisp:progn
 (common-lisp:defun update-event-configuration-by-resource-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-registration-state proximity join
                     connection-status message-delivery-status)
   (common-lisp:declare
    (common-lisp:ignorable device-registration-state proximity join
     connection-status message-delivery-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-event-configuration-by-resource-types-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        "/event-configurations-resource-types"
                                                        "UpdateEventConfigurationByResourceTypes"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-event-configuration-by-resource-types))
(common-lisp:progn
 (common-lisp:defun update-fuota-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name description lo-ra-wan
                     firmware-update-image firmware-update-role
                     redundancy-percent fragment-size-bytes
                     fragment-interval-ms)
   (common-lisp:declare
    (common-lisp:ignorable id name description lo-ra-wan firmware-update-image
     firmware-update-role redundancy-percent fragment-size-bytes
     fragment-interval-ms))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-fuota-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/fuota-tasks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "UpdateFuotaTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-fuota-task))
(common-lisp:progn
 (common-lisp:defun update-log-levels-by-resource-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key default-log-level
                     wireless-device-log-options wireless-gateway-log-options)
   (common-lisp:declare
    (common-lisp:ignorable default-log-level wireless-device-log-options
     wireless-gateway-log-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-log-levels-by-resource-types-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/log-levels"
                                                        "UpdateLogLevelsByResourceTypes"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-log-levels-by-resource-types))
(common-lisp:progn
 (common-lisp:defun update-multicast-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name description lo-ra-wan)
   (common-lisp:declare (common-lisp:ignorable id name description lo-ra-wan))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-multicast-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/multicast-groups/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "UpdateMulticastGroup"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-multicast-group))
(common-lisp:progn
 (common-lisp:defun update-network-analyzer-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-name trace-content
                     wireless-devices-to-add wireless-devices-to-remove
                     wireless-gateways-to-add wireless-gateways-to-remove
                     description)
   (common-lisp:declare
    (common-lisp:ignorable configuration-name trace-content
     wireless-devices-to-add wireless-devices-to-remove
     wireless-gateways-to-add wireless-gateways-to-remove description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-network-analyzer-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/network-analyzer-configurations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-name))))
                                                        "UpdateNetworkAnalyzerConfiguration"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-network-analyzer-configuration))
(common-lisp:progn
 (common-lisp:defun update-partner-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sidewalk partner-account-id partner-type)
   (common-lisp:declare
    (common-lisp:ignorable sidewalk partner-account-id partner-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-partner-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/partner-accounts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'partner-account-id))))
                                                        "UpdatePartnerAccount"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-partner-account))
(common-lisp:progn
 (common-lisp:defun update-position
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifier resource-type
                     position)
   (common-lisp:declare
    (common-lisp:ignorable resource-identifier resource-type position))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-position-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/positions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-identifier))))
                                                        "UpdatePosition"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-position))
(common-lisp:progn
 (common-lisp:defun update-resource-event-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier identifier-type partner-type
                     device-registration-state proximity join connection-status
                     message-delivery-status)
   (common-lisp:declare
    (common-lisp:ignorable identifier identifier-type partner-type
     device-registration-state proximity join connection-status
     message-delivery-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-resource-event-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/event-configurations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'identifier))))
                                                        "UpdateResourceEventConfiguration"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-resource-event-configuration))
(common-lisp:progn
 (common-lisp:defun update-resource-position
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifier resource-type
                     geo-json-payload)
   (common-lisp:declare
    (common-lisp:ignorable resource-identifier resource-type geo-json-payload))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-resource-position-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/resource-positions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-identifier))))
                                                        "UpdateResourcePosition"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-resource-position))
(common-lisp:progn
 (common-lisp:defun update-wireless-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id destination-name name description
                     lo-ra-wan positioning)
   (common-lisp:declare
    (common-lisp:ignorable id destination-name name description lo-ra-wan
     positioning))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-wireless-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-devices/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "UpdateWirelessDevice"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-wireless-device))
(common-lisp:progn
 (common-lisp:defun update-wireless-device-import-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id sidewalk)
   (common-lisp:declare (common-lisp:ignorable id sidewalk))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-wireless-device-import-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless_device_import_task/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "UpdateWirelessDeviceImportTask"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-wireless-device-import-task))
(common-lisp:progn
 (common-lisp:defun update-wireless-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name description join-eui-filters
                     net-id-filters max-eirp)
   (common-lisp:declare
    (common-lisp:ignorable id name description join-eui-filters net-id-filters
     max-eirp))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-wireless-gateway-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotwireless-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/wireless-gateways/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "UpdateWirelessGateway"
                                                        "2020-11-22"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-wireless-gateway))
