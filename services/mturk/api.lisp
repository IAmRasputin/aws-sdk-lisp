;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/mturk/api
  (:use)
  (:nicknames #:aws/mturk)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/mturk/api)
(common-lisp:progn
 (common-lisp:defclass mturk-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "mturk"))
 (common-lisp:export 'mturk-request))
(common-lisp:progn
 (common-lisp:define-condition mturk-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'mturk-error))
(common-lisp:defvar *error-map*
  '(("RequestError" . request-error) ("ServiceFault" . service-fault)))
(common-lisp:progn
 (common-lisp:defstruct
     (accept-qualification-request-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-accept-qualification-request-request-"))
   (qualification-request-id
    (common-lisp:error ":qualification-request-id is required") :type
    (common-lisp:or string common-lisp:null))
   (integer-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'accept-qualification-request-request
                    'make-accept-qualification-request-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          accept-qualification-request-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          accept-qualification-request-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-request-id))
      (common-lisp:list
       (common-lisp:cons "QualificationRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integer-value))
      (common-lisp:list
       (common-lisp:cons "IntegerValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          accept-qualification-request-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (accept-qualification-request-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-accept-qualification-request-response-")))
 (common-lisp:export
  (common-lisp:list 'accept-qualification-request-response
                    'make-accept-qualification-request-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          accept-qualification-request-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          accept-qualification-request-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          accept-qualification-request-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (approve-assignment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-approve-assignment-request-"))
   (assignment-id (common-lisp:error ":assignment-id is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (requester-feedback common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (override-rejection common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'approve-assignment-request
                    'make-approve-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          approve-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          approve-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-id))
      (common-lisp:list
       (common-lisp:cons "AssignmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'requester-feedback))
      (common-lisp:list
       (common-lisp:cons "RequesterFeedback"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'override-rejection))
      (common-lisp:list
       (common-lisp:cons "OverrideRejection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          approve-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (approve-assignment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-approve-assignment-response-")))
 (common-lisp:export
  (common-lisp:list 'approve-assignment-response
                    'make-approve-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          approve-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          approve-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          approve-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (assignment (:copier common-lisp:nil)
      (:conc-name "struct-shape-assignment-"))
   (assignment-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (worker-id common-lisp:nil :type
    (common-lisp:or customer-id common-lisp:null))
   (hitid common-lisp:nil :type (common-lisp:or entity-id common-lisp:null))
   (assignment-status common-lisp:nil :type
    (common-lisp:or assignment-status common-lisp:null))
   (auto-approval-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (accept-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (approval-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (rejection-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (deadline common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (answer common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (requester-feedback common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'assignment 'make-assignment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input assignment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input assignment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-id))
      (common-lisp:list
       (common-lisp:cons "AssignmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-id))
      (common-lisp:list
       (common-lisp:cons "WorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitid))
      (common-lisp:list
       (common-lisp:cons "HITId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-status))
      (common-lisp:list
       (common-lisp:cons "AssignmentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-approval-time))
      (common-lisp:list
       (common-lisp:cons "AutoApprovalTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accept-time))
      (common-lisp:list
       (common-lisp:cons "AcceptTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'approval-time))
      (common-lisp:list
       (common-lisp:cons "ApprovalTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rejection-time))
      (common-lisp:list
       (common-lisp:cons "RejectionTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deadline))
      (common-lisp:list
       (common-lisp:cons "Deadline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'answer))
      (common-lisp:list
       (common-lisp:cons "Answer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'requester-feedback))
      (common-lisp:list
       (common-lisp:cons "RequesterFeedback"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input assignment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype assignment-list ()
   '(trivial-types:proper-list assignment))
 (common-lisp:defun |make-assignment-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list assignment))
   aws-sdk/generator/shape::members))
(common-lisp:deftype assignment-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype assignment-status-list ()
   '(trivial-types:proper-list assignment-status))
 (common-lisp:defun |make-assignment-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list assignment-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-qualification-with-worker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-qualification-with-worker-request-"))
   (qualification-type-id
    (common-lisp:error ":qualification-type-id is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (worker-id (common-lisp:error ":worker-id is required") :type
    (common-lisp:or customer-id common-lisp:null))
   (integer-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (send-notification common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-qualification-with-worker-request
                    'make-associate-qualification-with-worker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-qualification-with-worker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-qualification-with-worker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-id))
      (common-lisp:list
       (common-lisp:cons "WorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integer-value))
      (common-lisp:list
       (common-lisp:cons "IntegerValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'send-notification))
      (common-lisp:list
       (common-lisp:cons "SendNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-qualification-with-worker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-qualification-with-worker-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-qualification-with-worker-response-")))
 (common-lisp:export
  (common-lisp:list 'associate-qualification-with-worker-response
                    'make-associate-qualification-with-worker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-qualification-with-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-qualification-with-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-qualification-with-worker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (bonus-payment (:copier common-lisp:nil)
      (:conc-name "struct-shape-bonus-payment-"))
   (worker-id common-lisp:nil :type
    (common-lisp:or customer-id common-lisp:null))
   (bonus-amount common-lisp:nil :type
    (common-lisp:or currency-amount common-lisp:null))
   (assignment-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (grant-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bonus-payment 'make-bonus-payment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bonus-payment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bonus-payment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-id))
      (common-lisp:list
       (common-lisp:cons "WorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bonus-amount))
      (common-lisp:list
       (common-lisp:cons "BonusAmount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-id))
      (common-lisp:list
       (common-lisp:cons "AssignmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant-time))
      (common-lisp:list
       (common-lisp:cons "GrantTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bonus-payment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bonus-payment-list ()
   '(trivial-types:proper-list bonus-payment))
 (common-lisp:defun |make-bonus-payment-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bonus-payment))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype comparator () 'common-lisp:string)
(common-lisp:deftype country-parameters () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-additional-assignments-for-hitrequest (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-additional-assignments-for-hitrequest-"))
   (hitid (common-lisp:error ":hitid is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (number-of-additional-assignments
    (common-lisp:error ":number-of-additional-assignments is required") :type
    (common-lisp:or integer common-lisp:null))
   (unique-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-additional-assignments-for-hitrequest
                    'make-create-additional-assignments-for-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-additional-assignments-for-hitrequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-additional-assignments-for-hitrequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitid))
      (common-lisp:list
       (common-lisp:cons "HITId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-additional-assignments))
      (common-lisp:list
       (common-lisp:cons "NumberOfAdditionalAssignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unique-request-token))
      (common-lisp:list
       (common-lisp:cons "UniqueRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-additional-assignments-for-hitrequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-additional-assignments-for-hitresponse (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-additional-assignments-for-hitresponse-")))
 (common-lisp:export
  (common-lisp:list 'create-additional-assignments-for-hitresponse
                    'make-create-additional-assignments-for-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-additional-assignments-for-hitresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-additional-assignments-for-hitresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-additional-assignments-for-hitresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-hitrequest (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-hitrequest-"))
   (max-assignments common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (auto-approval-delay-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (lifetime-in-seconds (common-lisp:error ":lifetime-in-seconds is required")
    :type (common-lisp:or long common-lisp:null))
   (assignment-duration-in-seconds
    (common-lisp:error ":assignment-duration-in-seconds is required") :type
    (common-lisp:or long common-lisp:null))
   (reward (common-lisp:error ":reward is required") :type
    (common-lisp:or currency-amount common-lisp:null))
   (title (common-lisp:error ":title is required") :type
    (common-lisp:or string common-lisp:null))
   (keywords common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description (common-lisp:error ":description is required") :type
    (common-lisp:or string common-lisp:null))
   (question common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (requester-annotation common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (qualification-requirements common-lisp:nil :type
    (common-lisp:or qualification-requirement-list common-lisp:null))
   (unique-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (assignment-review-policy common-lisp:nil :type
    (common-lisp:or review-policy common-lisp:null))
   (hitreview-policy common-lisp:nil :type
    (common-lisp:or review-policy common-lisp:null))
   (hitlayout-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (hitlayout-parameters common-lisp:nil :type
    (common-lisp:or hitlayout-parameter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hitrequest 'make-create-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-hitrequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-hitrequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-assignments))
      (common-lisp:list
       (common-lisp:cons "MaxAssignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-approval-delay-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AutoApprovalDelayInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifetime-in-seconds))
      (common-lisp:list
       (common-lisp:cons "LifetimeInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'assignment-duration-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AssignmentDurationInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reward))
      (common-lisp:list
       (common-lisp:cons "Reward"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keywords))
      (common-lisp:list
       (common-lisp:cons "Keywords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'question))
      (common-lisp:list
       (common-lisp:cons "Question"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'requester-annotation))
      (common-lisp:list
       (common-lisp:cons "RequesterAnnotation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-requirements))
      (common-lisp:list
       (common-lisp:cons "QualificationRequirements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unique-request-token))
      (common-lisp:list
       (common-lisp:cons "UniqueRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'assignment-review-policy))
      (common-lisp:list
       (common-lisp:cons "AssignmentReviewPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitreview-policy))
      (common-lisp:list
       (common-lisp:cons "HITReviewPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitlayout-id))
      (common-lisp:list
       (common-lisp:cons "HITLayoutId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hitlayout-parameters))
      (common-lisp:list
       (common-lisp:cons "HITLayoutParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-hitrequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-hitresponse (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-hitresponse-"))
   (hit common-lisp:nil :type (common-lisp:or hit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hitresponse 'make-create-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-hitresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-hitresponse))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hit))
      (common-lisp:list
       (common-lisp:cons "HIT"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-hitresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-hittype-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-hittype-request-"))
   (auto-approval-delay-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (assignment-duration-in-seconds
    (common-lisp:error ":assignment-duration-in-seconds is required") :type
    (common-lisp:or long common-lisp:null))
   (reward (common-lisp:error ":reward is required") :type
    (common-lisp:or currency-amount common-lisp:null))
   (title (common-lisp:error ":title is required") :type
    (common-lisp:or string common-lisp:null))
   (keywords common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description (common-lisp:error ":description is required") :type
    (common-lisp:or string common-lisp:null))
   (qualification-requirements common-lisp:nil :type
    (common-lisp:or qualification-requirement-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hittype-request 'make-create-hittype-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-hittype-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-hittype-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-approval-delay-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AutoApprovalDelayInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'assignment-duration-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AssignmentDurationInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reward))
      (common-lisp:list
       (common-lisp:cons "Reward"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keywords))
      (common-lisp:list
       (common-lisp:cons "Keywords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-requirements))
      (common-lisp:list
       (common-lisp:cons "QualificationRequirements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-hittype-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-hittype-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-hittype-response-"))
   (hittype-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hittype-response 'make-create-hittype-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-hittype-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-hittype-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hittype-id))
      (common-lisp:list
       (common-lisp:cons "HITTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-hittype-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-hitwith-hittype-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-hitwith-hittype-request-"))
   (hittype-id (common-lisp:error ":hittype-id is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (max-assignments common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (lifetime-in-seconds (common-lisp:error ":lifetime-in-seconds is required")
    :type (common-lisp:or long common-lisp:null))
   (question common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (requester-annotation common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (unique-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (assignment-review-policy common-lisp:nil :type
    (common-lisp:or review-policy common-lisp:null))
   (hitreview-policy common-lisp:nil :type
    (common-lisp:or review-policy common-lisp:null))
   (hitlayout-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (hitlayout-parameters common-lisp:nil :type
    (common-lisp:or hitlayout-parameter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hitwith-hittype-request
                    'make-create-hitwith-hittype-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-hitwith-hittype-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-hitwith-hittype-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hittype-id))
      (common-lisp:list
       (common-lisp:cons "HITTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-assignments))
      (common-lisp:list
       (common-lisp:cons "MaxAssignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifetime-in-seconds))
      (common-lisp:list
       (common-lisp:cons "LifetimeInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'question))
      (common-lisp:list
       (common-lisp:cons "Question"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'requester-annotation))
      (common-lisp:list
       (common-lisp:cons "RequesterAnnotation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unique-request-token))
      (common-lisp:list
       (common-lisp:cons "UniqueRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'assignment-review-policy))
      (common-lisp:list
       (common-lisp:cons "AssignmentReviewPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitreview-policy))
      (common-lisp:list
       (common-lisp:cons "HITReviewPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitlayout-id))
      (common-lisp:list
       (common-lisp:cons "HITLayoutId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hitlayout-parameters))
      (common-lisp:list
       (common-lisp:cons "HITLayoutParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-hitwith-hittype-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-hitwith-hittype-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-hitwith-hittype-response-"))
   (hit common-lisp:nil :type (common-lisp:or hit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hitwith-hittype-response
                    'make-create-hitwith-hittype-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-hitwith-hittype-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-hitwith-hittype-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hit))
      (common-lisp:list
       (common-lisp:cons "HIT"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-hitwith-hittype-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-qualification-type-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-qualification-type-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (keywords common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description (common-lisp:error ":description is required") :type
    (common-lisp:or string common-lisp:null))
   (qualification-type-status
    (common-lisp:error ":qualification-type-status is required") :type
    (common-lisp:or qualification-type-status common-lisp:null))
   (retry-delay-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (test common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (answer-key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (test-duration-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (auto-granted common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-granted-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-qualification-type-request
                    'make-create-qualification-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-qualification-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-qualification-type-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keywords))
      (common-lisp:list
       (common-lisp:cons "Keywords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-status))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retry-delay-in-seconds))
      (common-lisp:list
       (common-lisp:cons "RetryDelayInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test))
      (common-lisp:list
       (common-lisp:cons "Test"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'answer-key))
      (common-lisp:list
       (common-lisp:cons "AnswerKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'test-duration-in-seconds))
      (common-lisp:list
       (common-lisp:cons "TestDurationInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-granted))
      (common-lisp:list
       (common-lisp:cons "AutoGranted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-granted-value))
      (common-lisp:list
       (common-lisp:cons "AutoGrantedValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-qualification-type-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-qualification-type-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-qualification-type-response-"))
   (qualification-type common-lisp:nil :type
    (common-lisp:or qualification-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-qualification-type-response
                    'make-create-qualification-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-qualification-type-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-qualification-type-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qualification-type))
      (common-lisp:list
       (common-lisp:cons "QualificationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-qualification-type-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-worker-block-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-worker-block-request-"))
   (worker-id (common-lisp:error ":worker-id is required") :type
    (common-lisp:or customer-id common-lisp:null))
   (reason (common-lisp:error ":reason is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-worker-block-request
                    'make-create-worker-block-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-block-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-block-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-id))
      (common-lisp:list
       (common-lisp:cons "WorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-block-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-worker-block-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-worker-block-response-")))
 (common-lisp:export
  (common-lisp:list 'create-worker-block-response
                    'make-create-worker-block-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-block-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-block-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-block-response))
   common-lisp:nil))
(common-lisp:deftype currency-amount () 'common-lisp:string)
(common-lisp:deftype customer-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype customer-id-list ()
   '(trivial-types:proper-list customer-id))
 (common-lisp:defun |make-customer-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list customer-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-hitrequest (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-hitrequest-"))
   (hitid (common-lisp:error ":hitid is required") :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-hitrequest 'make-delete-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-hitrequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-hitrequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitid))
      (common-lisp:list
       (common-lisp:cons "HITId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-hitrequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-hitresponse (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-hitresponse-")))
 (common-lisp:export
  (common-lisp:list 'delete-hitresponse 'make-delete-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-hitresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-hitresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-hitresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-qualification-type-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-qualification-type-request-"))
   (qualification-type-id
    (common-lisp:error ":qualification-type-id is required") :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-qualification-type-request
                    'make-delete-qualification-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-qualification-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-qualification-type-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-qualification-type-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-qualification-type-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-qualification-type-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-qualification-type-response
                    'make-delete-qualification-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-qualification-type-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-qualification-type-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-qualification-type-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-worker-block-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-worker-block-request-"))
   (worker-id (common-lisp:error ":worker-id is required") :type
    (common-lisp:or customer-id common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-worker-block-request
                    'make-delete-worker-block-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-block-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-block-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-id))
      (common-lisp:list
       (common-lisp:cons "WorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-block-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-worker-block-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-worker-block-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-worker-block-response
                    'make-delete-worker-block-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-block-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-block-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-block-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-qualification-from-worker-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-qualification-from-worker-request-"))
   (worker-id (common-lisp:error ":worker-id is required") :type
    (common-lisp:or customer-id common-lisp:null))
   (qualification-type-id
    (common-lisp:error ":qualification-type-id is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-qualification-from-worker-request
                    'make-disassociate-qualification-from-worker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-qualification-from-worker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-qualification-from-worker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-id))
      (common-lisp:list
       (common-lisp:cons "WorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-qualification-from-worker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-qualification-from-worker-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-qualification-from-worker-response-")))
 (common-lisp:export
  (common-lisp:list 'disassociate-qualification-from-worker-response
                    'make-disassociate-qualification-from-worker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-qualification-from-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-qualification-from-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-qualification-from-worker-response))
   common-lisp:nil))
(common-lisp:deftype entity-id () 'common-lisp:string)
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-type-list ()
   '(trivial-types:proper-list event-type))
 (common-lisp:defun |make-event-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-balance-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-account-balance-request-")))
 (common-lisp:export
  (common-lisp:list 'get-account-balance-request
                    'make-get-account-balance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-balance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-balance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-balance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-balance-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-account-balance-response-"))
   (available-balance common-lisp:nil :type
    (common-lisp:or currency-amount common-lisp:null))
   (on-hold-balance common-lisp:nil :type
    (common-lisp:or currency-amount common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-account-balance-response
                    'make-get-account-balance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-balance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-balance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'available-balance))
      (common-lisp:list
       (common-lisp:cons "AvailableBalance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-hold-balance))
      (common-lisp:list
       (common-lisp:cons "OnHoldBalance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-balance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-assignment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-assignment-request-"))
   (assignment-id (common-lisp:error ":assignment-id is required") :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-assignment-request 'make-get-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-id))
      (common-lisp:list
       (common-lisp:cons "AssignmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-assignment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-assignment-response-"))
   (assignment common-lisp:nil :type
    (common-lisp:or assignment common-lisp:null))
   (hit common-lisp:nil :type (common-lisp:or hit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-assignment-response 'make-get-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-assignment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment))
      (common-lisp:list
       (common-lisp:cons "Assignment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hit))
      (common-lisp:list
       (common-lisp:cons "HIT"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-file-upload-urlrequest (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-file-upload-urlrequest-"))
   (assignment-id (common-lisp:error ":assignment-id is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (question-identifier (common-lisp:error ":question-identifier is required")
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-file-upload-urlrequest
                    'make-get-file-upload-urlrequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-file-upload-urlrequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-file-upload-urlrequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-id))
      (common-lisp:list
       (common-lisp:cons "AssignmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'question-identifier))
      (common-lisp:list
       (common-lisp:cons "QuestionIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-file-upload-urlrequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-file-upload-urlresponse (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-file-upload-urlresponse-"))
   (file-upload-url common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-file-upload-urlresponse
                    'make-get-file-upload-urlresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-file-upload-urlresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-file-upload-urlresponse))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-upload-url))
      (common-lisp:list
       (common-lisp:cons "FileUploadURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-file-upload-urlresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-hitrequest (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-hitrequest-"))
   (hitid (common-lisp:error ":hitid is required") :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-hitrequest 'make-get-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-hitrequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-hitrequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitid))
      (common-lisp:list
       (common-lisp:cons "HITId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-hitrequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-hitresponse (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-hitresponse-"))
   (hit common-lisp:nil :type (common-lisp:or hit common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-hitresponse 'make-get-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-hitresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-hitresponse))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hit))
      (common-lisp:list
       (common-lisp:cons "HIT"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-hitresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-qualification-score-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-qualification-score-request-"))
   (qualification-type-id
    (common-lisp:error ":qualification-type-id is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (worker-id (common-lisp:error ":worker-id is required") :type
    (common-lisp:or customer-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-qualification-score-request
                    'make-get-qualification-score-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-qualification-score-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-qualification-score-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-id))
      (common-lisp:list
       (common-lisp:cons "WorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-qualification-score-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-qualification-score-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-qualification-score-response-"))
   (qualification common-lisp:nil :type
    (common-lisp:or qualification common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-qualification-score-response
                    'make-get-qualification-score-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-qualification-score-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-qualification-score-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qualification))
      (common-lisp:list
       (common-lisp:cons "Qualification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-qualification-score-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-qualification-type-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-qualification-type-request-"))
   (qualification-type-id
    (common-lisp:error ":qualification-type-id is required") :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-qualification-type-request
                    'make-get-qualification-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-qualification-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-qualification-type-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-qualification-type-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-qualification-type-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-qualification-type-response-"))
   (qualification-type common-lisp:nil :type
    (common-lisp:or qualification-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-qualification-type-response
                    'make-get-qualification-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-qualification-type-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-qualification-type-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qualification-type))
      (common-lisp:list
       (common-lisp:cons "QualificationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-qualification-type-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (hit (:copier common-lisp:nil) (:conc-name "struct-shape-hit-"))
   (hitid common-lisp:nil :type (common-lisp:or entity-id common-lisp:null))
   (hittype-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (hitgroup-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (hitlayout-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (question common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (keywords common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (hitstatus common-lisp:nil :type
    (common-lisp:or hitstatus common-lisp:null))
   (max-assignments common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (reward common-lisp:nil :type
    (common-lisp:or currency-amount common-lisp:null))
   (auto-approval-delay-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (expiration common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (assignment-duration-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (requester-annotation common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (qualification-requirements common-lisp:nil :type
    (common-lisp:or qualification-requirement-list common-lisp:null))
   (hitreview-status common-lisp:nil :type
    (common-lisp:or hitreview-status common-lisp:null))
   (number-of-assignments-pending common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (number-of-assignments-available common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (number-of-assignments-completed common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'hit 'make-hit))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hit))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hit))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitid))
      (common-lisp:list
       (common-lisp:cons "HITId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hittype-id))
      (common-lisp:list
       (common-lisp:cons "HITTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitgroup-id))
      (common-lisp:list
       (common-lisp:cons "HITGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitlayout-id))
      (common-lisp:list
       (common-lisp:cons "HITLayoutId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'question))
      (common-lisp:list
       (common-lisp:cons "Question"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keywords))
      (common-lisp:list
       (common-lisp:cons "Keywords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitstatus))
      (common-lisp:list
       (common-lisp:cons "HITStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-assignments))
      (common-lisp:list
       (common-lisp:cons "MaxAssignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reward))
      (common-lisp:list
       (common-lisp:cons "Reward"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-approval-delay-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AutoApprovalDelayInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration))
      (common-lisp:list
       (common-lisp:cons "Expiration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'assignment-duration-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AssignmentDurationInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'requester-annotation))
      (common-lisp:list
       (common-lisp:cons "RequesterAnnotation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-requirements))
      (common-lisp:list
       (common-lisp:cons "QualificationRequirements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitreview-status))
      (common-lisp:list
       (common-lisp:cons "HITReviewStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-assignments-pending))
      (common-lisp:list
       (common-lisp:cons "NumberOfAssignmentsPending"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-assignments-available))
      (common-lisp:list
       (common-lisp:cons "NumberOfAssignmentsAvailable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-assignments-completed))
      (common-lisp:list
       (common-lisp:cons "NumberOfAssignmentsCompleted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hit))
   common-lisp:nil))
(common-lisp:deftype hitaccess-actions () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (hitlayout-parameter (:copier common-lisp:nil)
      (:conc-name "struct-shape-hitlayout-parameter-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hitlayout-parameter 'make-hitlayout-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hitlayout-parameter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hitlayout-parameter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hitlayout-parameter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype hitlayout-parameter-list ()
   '(trivial-types:proper-list hitlayout-parameter))
 (common-lisp:defun |make-hitlayout-parameter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hitlayout-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype hitlist () '(trivial-types:proper-list hit))
 (common-lisp:defun |make-hitlist|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hit))
   aws-sdk/generator/shape::members))
(common-lisp:deftype hitreview-status () 'common-lisp:string)
(common-lisp:deftype hitstatus () 'common-lisp:string)
(common-lisp:deftype idempotency-token () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype integer-list () '(trivial-types:proper-list integer))
 (common-lisp:defun |make-integer-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list integer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-assignments-for-hitrequest (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-assignments-for-hitrequest-"))
   (hitid (common-lisp:error ":hitid is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null))
   (assignment-statuses common-lisp:nil :type
    (common-lisp:or assignment-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-assignments-for-hitrequest
                    'make-list-assignments-for-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-assignments-for-hitrequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-assignments-for-hitrequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitid))
      (common-lisp:list
       (common-lisp:cons "HITId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-statuses))
      (common-lisp:list
       (common-lisp:cons "AssignmentStatuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-assignments-for-hitrequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-assignments-for-hitresponse (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-assignments-for-hitresponse-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (assignments common-lisp:nil :type
    (common-lisp:or assignment-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-assignments-for-hitresponse
                    'make-list-assignments-for-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-assignments-for-hitresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-assignments-for-hitresponse))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-results))
      (common-lisp:list
       (common-lisp:cons "NumResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignments))
      (common-lisp:list
       (common-lisp:cons "Assignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-assignments-for-hitresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-bonus-payments-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-bonus-payments-request-"))
   (hitid common-lisp:nil :type (common-lisp:or entity-id common-lisp:null))
   (assignment-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-bonus-payments-request
                    'make-list-bonus-payments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-bonus-payments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-bonus-payments-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitid))
      (common-lisp:list
       (common-lisp:cons "HITId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-id))
      (common-lisp:list
       (common-lisp:cons "AssignmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-bonus-payments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-bonus-payments-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-bonus-payments-response-"))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (bonus-payments common-lisp:nil :type
    (common-lisp:or bonus-payment-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-bonus-payments-response
                    'make-list-bonus-payments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-bonus-payments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-bonus-payments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-results))
      (common-lisp:list
       (common-lisp:cons "NumResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bonus-payments))
      (common-lisp:list
       (common-lisp:cons "BonusPayments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-bonus-payments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-hits-for-qualification-type-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-hits-for-qualification-type-request-"))
   (qualification-type-id
    (common-lisp:error ":qualification-type-id is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hits-for-qualification-type-request
                    'make-list-hits-for-qualification-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-hits-for-qualification-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-hits-for-qualification-type-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-hits-for-qualification-type-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-hits-for-qualification-type-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-hits-for-qualification-type-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (hits common-lisp:nil :type (common-lisp:or hitlist common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hits-for-qualification-type-response
                    'make-list-hits-for-qualification-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-hits-for-qualification-type-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-hits-for-qualification-type-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-results))
      (common-lisp:list
       (common-lisp:cons "NumResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hits))
      (common-lisp:list
       (common-lisp:cons "HITs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-hits-for-qualification-type-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-hits-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-hits-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hits-request 'make-list-hits-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-hits-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-hits-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-hits-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-hits-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-hits-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (hits common-lisp:nil :type (common-lisp:or hitlist common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hits-response 'make-list-hits-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-hits-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-hits-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-results))
      (common-lisp:list
       (common-lisp:cons "NumResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hits))
      (common-lisp:list
       (common-lisp:cons "HITs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-hits-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-qualification-requests-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-qualification-requests-request-"))
   (qualification-type-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-qualification-requests-request
                    'make-list-qualification-requests-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-qualification-requests-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-qualification-requests-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-qualification-requests-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-qualification-requests-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-qualification-requests-response-"))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (qualification-requests common-lisp:nil :type
    (common-lisp:or qualification-request-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-qualification-requests-response
                    'make-list-qualification-requests-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-qualification-requests-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-qualification-requests-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-results))
      (common-lisp:list
       (common-lisp:cons "NumResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-requests))
      (common-lisp:list
       (common-lisp:cons "QualificationRequests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-qualification-requests-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-qualification-types-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-qualification-types-request-"))
   (query common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (must-be-requestable (common-lisp:error ":must-be-requestable is required")
    :type (common-lisp:or boolean common-lisp:null))
   (must-be-owned-by-caller common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-qualification-types-request
                    'make-list-qualification-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-qualification-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-qualification-types-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'query))
      (common-lisp:list
       (common-lisp:cons "Query"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'must-be-requestable))
      (common-lisp:list
       (common-lisp:cons "MustBeRequestable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'must-be-owned-by-caller))
      (common-lisp:list
       (common-lisp:cons "MustBeOwnedByCaller"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-qualification-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-qualification-types-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-qualification-types-response-"))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (qualification-types common-lisp:nil :type
    (common-lisp:or qualification-type-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-qualification-types-response
                    'make-list-qualification-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-qualification-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-qualification-types-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-results))
      (common-lisp:list
       (common-lisp:cons "NumResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qualification-types))
      (common-lisp:list
       (common-lisp:cons "QualificationTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-qualification-types-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-review-policy-results-for-hitrequest (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-review-policy-results-for-hitrequest-"))
   (hitid (common-lisp:error ":hitid is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (policy-levels common-lisp:nil :type
    (common-lisp:or review-policy-level-list common-lisp:null))
   (retrieve-actions common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (retrieve-results common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-review-policy-results-for-hitrequest
                    'make-list-review-policy-results-for-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-review-policy-results-for-hitrequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-review-policy-results-for-hitrequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitid))
      (common-lisp:list
       (common-lisp:cons "HITId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-levels))
      (common-lisp:list
       (common-lisp:cons "PolicyLevels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieve-actions))
      (common-lisp:list
       (common-lisp:cons "RetrieveActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieve-results))
      (common-lisp:list
       (common-lisp:cons "RetrieveResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-review-policy-results-for-hitrequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-review-policy-results-for-hitresponse (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-review-policy-results-for-hitresponse-"))
   (hitid common-lisp:nil :type (common-lisp:or entity-id common-lisp:null))
   (assignment-review-policy common-lisp:nil :type
    (common-lisp:or review-policy common-lisp:null))
   (hitreview-policy common-lisp:nil :type
    (common-lisp:or review-policy common-lisp:null))
   (assignment-review-report common-lisp:nil :type
    (common-lisp:or review-report common-lisp:null))
   (hitreview-report common-lisp:nil :type
    (common-lisp:or review-report common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-review-policy-results-for-hitresponse
                    'make-list-review-policy-results-for-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-review-policy-results-for-hitresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-review-policy-results-for-hitresponse))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitid))
      (common-lisp:list
       (common-lisp:cons "HITId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'assignment-review-policy))
      (common-lisp:list
       (common-lisp:cons "AssignmentReviewPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitreview-policy))
      (common-lisp:list
       (common-lisp:cons "HITReviewPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'assignment-review-report))
      (common-lisp:list
       (common-lisp:cons "AssignmentReviewReport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitreview-report))
      (common-lisp:list
       (common-lisp:cons "HITReviewReport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-review-policy-results-for-hitresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-reviewable-hits-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-reviewable-hits-request-"))
   (hittype-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or reviewable-hitstatus common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-reviewable-hits-request
                    'make-list-reviewable-hits-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-reviewable-hits-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-reviewable-hits-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hittype-id))
      (common-lisp:list
       (common-lisp:cons "HITTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-reviewable-hits-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-reviewable-hits-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-reviewable-hits-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (hits common-lisp:nil :type (common-lisp:or hitlist common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-reviewable-hits-response
                    'make-list-reviewable-hits-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-reviewable-hits-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-reviewable-hits-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-results))
      (common-lisp:list
       (common-lisp:cons "NumResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hits))
      (common-lisp:list
       (common-lisp:cons "HITs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-reviewable-hits-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-worker-blocks-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-worker-blocks-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-worker-blocks-request
                    'make-list-worker-blocks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-blocks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-blocks-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-blocks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-worker-blocks-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-worker-blocks-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (worker-blocks common-lisp:nil :type
    (common-lisp:or worker-block-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-worker-blocks-response
                    'make-list-worker-blocks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-blocks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-blocks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-results))
      (common-lisp:list
       (common-lisp:cons "NumResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-blocks))
      (common-lisp:list
       (common-lisp:cons "WorkerBlocks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-blocks-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-workers-with-qualification-type-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-workers-with-qualification-type-request-"))
   (qualification-type-id
    (common-lisp:error ":qualification-type-id is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or qualification-status common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-workers-with-qualification-type-request
                    'make-list-workers-with-qualification-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-workers-with-qualification-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-workers-with-qualification-type-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-workers-with-qualification-type-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-workers-with-qualification-type-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-workers-with-qualification-type-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (qualifications common-lisp:nil :type
    (common-lisp:or qualification-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-workers-with-qualification-type-response
                    'make-list-workers-with-qualification-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-workers-with-qualification-type-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-workers-with-qualification-type-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-results))
      (common-lisp:list
       (common-lisp:cons "NumResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qualifications))
      (common-lisp:list
       (common-lisp:cons "Qualifications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-workers-with-qualification-type-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (locale (:copier common-lisp:nil) (:conc-name "struct-shape-locale-"))
   (country (common-lisp:error ":country is required") :type
    (common-lisp:or country-parameters common-lisp:null))
   (subdivision common-lisp:nil :type
    (common-lisp:or country-parameters common-lisp:null)))
 (common-lisp:export (common-lisp:list 'locale 'make-locale))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input locale))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input locale))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdivision))
      (common-lisp:list
       (common-lisp:cons "Subdivision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input locale))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype locale-list () '(trivial-types:proper-list locale))
 (common-lisp:defun |make-locale-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list locale))
   aws-sdk/generator/shape::members))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (notification-specification (:copier common-lisp:nil)
      (:conc-name "struct-shape-notification-specification-"))
   (destination (common-lisp:error ":destination is required") :type
    (common-lisp:or string common-lisp:null))
   (transport (common-lisp:error ":transport is required") :type
    (common-lisp:or notification-transport common-lisp:null))
   (version (common-lisp:error ":version is required") :type
    (common-lisp:or string common-lisp:null))
   (event-types (common-lisp:error ":event-types is required") :type
    (common-lisp:or event-type-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notification-specification
                    'make-notification-specification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notification-specification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notification-specification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transport))
      (common-lisp:list
       (common-lisp:cons "Transport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-types))
      (common-lisp:list
       (common-lisp:cons "EventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notification-specification))
   common-lisp:nil))
(common-lisp:deftype notification-transport () 'common-lisp:string)
(common-lisp:deftype notify-workers-failure-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (notify-workers-failure-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-notify-workers-failure-status-"))
   (notify-workers-failure-code common-lisp:nil :type
    (common-lisp:or notify-workers-failure-code common-lisp:null))
   (notify-workers-failure-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (worker-id common-lisp:nil :type
    (common-lisp:or customer-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notify-workers-failure-status
                    'make-notify-workers-failure-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notify-workers-failure-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notify-workers-failure-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notify-workers-failure-code))
      (common-lisp:list
       (common-lisp:cons "NotifyWorkersFailureCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notify-workers-failure-message))
      (common-lisp:list
       (common-lisp:cons "NotifyWorkersFailureMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-id))
      (common-lisp:list
       (common-lisp:cons "WorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notify-workers-failure-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype notify-workers-failure-status-list ()
   '(trivial-types:proper-list notify-workers-failure-status))
 (common-lisp:defun |make-notify-workers-failure-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            notify-workers-failure-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (notify-workers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-notify-workers-request-"))
   (subject (common-lisp:error ":subject is required") :type
    (common-lisp:or string common-lisp:null))
   (message-text (common-lisp:error ":message-text is required") :type
    (common-lisp:or string common-lisp:null))
   (worker-ids (common-lisp:error ":worker-ids is required") :type
    (common-lisp:or customer-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notify-workers-request 'make-notify-workers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notify-workers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notify-workers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-text))
      (common-lisp:list
       (common-lisp:cons "MessageText"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-ids))
      (common-lisp:list
       (common-lisp:cons "WorkerIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notify-workers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (notify-workers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-notify-workers-response-"))
   (notify-workers-failure-statuses common-lisp:nil :type
    (common-lisp:or notify-workers-failure-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notify-workers-response 'make-notify-workers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notify-workers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notify-workers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notify-workers-failure-statuses))
      (common-lisp:list
       (common-lisp:cons "NotifyWorkersFailureStatuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notify-workers-response))
   common-lisp:nil))
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (parameter-map-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-parameter-map-entry-"))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-map-entry 'make-parameter-map-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input parameter-map-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input parameter-map-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input parameter-map-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype parameter-map-entry-list ()
   '(trivial-types:proper-list parameter-map-entry))
 (common-lisp:defun |make-parameter-map-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameter-map-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (policy-parameter (:copier common-lisp:nil)
      (:conc-name "struct-shape-policy-parameter-"))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (values common-lisp:nil :type (common-lisp:or string-list common-lisp:null))
   (map-entries common-lisp:nil :type
    (common-lisp:or parameter-map-entry-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-parameter 'make-policy-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input policy-parameter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input policy-parameter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'map-entries))
      (common-lisp:list
       (common-lisp:cons "MapEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input policy-parameter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype policy-parameter-list ()
   '(trivial-types:proper-list policy-parameter))
 (common-lisp:defun |make-policy-parameter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (qualification (:copier common-lisp:nil)
      (:conc-name "struct-shape-qualification-"))
   (qualification-type-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (worker-id common-lisp:nil :type
    (common-lisp:or customer-id common-lisp:null))
   (grant-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (integer-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (locale-value common-lisp:nil :type
    (common-lisp:or locale common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or qualification-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'qualification 'make-qualification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input qualification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input qualification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-id))
      (common-lisp:list
       (common-lisp:cons "WorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant-time))
      (common-lisp:list
       (common-lisp:cons "GrantTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integer-value))
      (common-lisp:list
       (common-lisp:cons "IntegerValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale-value))
      (common-lisp:list
       (common-lisp:cons "LocaleValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input qualification))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype qualification-list ()
   '(trivial-types:proper-list qualification))
 (common-lisp:defun |make-qualification-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list qualification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (qualification-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-qualification-request-"))
   (qualification-request-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (qualification-type-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (worker-id common-lisp:nil :type
    (common-lisp:or customer-id common-lisp:null))
   (test common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (answer common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'qualification-request 'make-qualification-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          qualification-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          qualification-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-request-id))
      (common-lisp:list
       (common-lisp:cons "QualificationRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-id))
      (common-lisp:list
       (common-lisp:cons "WorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test))
      (common-lisp:list
       (common-lisp:cons "Test"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'answer))
      (common-lisp:list
       (common-lisp:cons "Answer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          qualification-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype qualification-request-list ()
   '(trivial-types:proper-list qualification-request))
 (common-lisp:defun |make-qualification-request-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list qualification-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (qualification-requirement (:copier common-lisp:nil)
      (:conc-name "struct-shape-qualification-requirement-"))
   (qualification-type-id
    (common-lisp:error ":qualification-type-id is required") :type
    (common-lisp:or string common-lisp:null))
   (comparator (common-lisp:error ":comparator is required") :type
    (common-lisp:or comparator common-lisp:null))
   (integer-values common-lisp:nil :type
    (common-lisp:or integer-list common-lisp:null))
   (locale-values common-lisp:nil :type
    (common-lisp:or locale-list common-lisp:null))
   (required-to-preview common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (actions-guarded common-lisp:nil :type
    (common-lisp:or hitaccess-actions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'qualification-requirement
                    'make-qualification-requirement))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          qualification-requirement))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          qualification-requirement))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparator))
      (common-lisp:list
       (common-lisp:cons "Comparator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integer-values))
      (common-lisp:list
       (common-lisp:cons "IntegerValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale-values))
      (common-lisp:list
       (common-lisp:cons "LocaleValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'required-to-preview))
      (common-lisp:list
       (common-lisp:cons "RequiredToPreview"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions-guarded))
      (common-lisp:list
       (common-lisp:cons "ActionsGuarded"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          qualification-requirement))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype qualification-requirement-list ()
   '(trivial-types:proper-list qualification-requirement))
 (common-lisp:defun |make-qualification-requirement-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            qualification-requirement))
   aws-sdk/generator/shape::members))
(common-lisp:deftype qualification-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (qualification-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-qualification-type-"))
   (qualification-type-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (keywords common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (qualification-type-status common-lisp:nil :type
    (common-lisp:or qualification-type-status common-lisp:null))
   (test common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (test-duration-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (answer-key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (retry-delay-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (is-requestable common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-granted common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-granted-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'qualification-type 'make-qualification-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input qualification-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input qualification-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keywords))
      (common-lisp:list
       (common-lisp:cons "Keywords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-status))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test))
      (common-lisp:list
       (common-lisp:cons "Test"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'test-duration-in-seconds))
      (common-lisp:list
       (common-lisp:cons "TestDurationInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'answer-key))
      (common-lisp:list
       (common-lisp:cons "AnswerKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retry-delay-in-seconds))
      (common-lisp:list
       (common-lisp:cons "RetryDelayInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-requestable))
      (common-lisp:list
       (common-lisp:cons "IsRequestable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-granted))
      (common-lisp:list
       (common-lisp:cons "AutoGranted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-granted-value))
      (common-lisp:list
       (common-lisp:cons "AutoGrantedValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input qualification-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype qualification-type-list ()
   '(trivial-types:proper-list qualification-type))
 (common-lisp:defun |make-qualification-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list qualification-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype qualification-type-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (reject-assignment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-reject-assignment-request-"))
   (assignment-id (common-lisp:error ":assignment-id is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (requester-feedback (common-lisp:error ":requester-feedback is required")
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reject-assignment-request
                    'make-reject-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reject-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reject-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-id))
      (common-lisp:list
       (common-lisp:cons "AssignmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'requester-feedback))
      (common-lisp:list
       (common-lisp:cons "RequesterFeedback"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reject-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reject-assignment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-reject-assignment-response-")))
 (common-lisp:export
  (common-lisp:list 'reject-assignment-response
                    'make-reject-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reject-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reject-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reject-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reject-qualification-request-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-reject-qualification-request-request-"))
   (qualification-request-id
    (common-lisp:error ":qualification-request-id is required") :type
    (common-lisp:or string common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reject-qualification-request-request
                    'make-reject-qualification-request-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reject-qualification-request-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reject-qualification-request-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-request-id))
      (common-lisp:list
       (common-lisp:cons "QualificationRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reject-qualification-request-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reject-qualification-request-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-reject-qualification-request-response-")))
 (common-lisp:export
  (common-lisp:list 'reject-qualification-request-response
                    'make-reject-qualification-request-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reject-qualification-request-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reject-qualification-request-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reject-qualification-request-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition request-error
     (mturk-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       request-error-message)
      (turk-error-code :initarg :turk-error-code :initform common-lisp:nil
       :reader request-error-turk-error-code)))
 (common-lisp:export
  (common-lisp:list 'request-error 'request-error-message
                    'request-error-turk-error-code)))
(common-lisp:deftype result-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (review-action-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-review-action-detail-"))
   (action-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (action-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (target-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or review-action-status common-lisp:null))
   (complete-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (result common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (error-code common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'review-action-detail 'make-review-action-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input review-action-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input review-action-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "ActionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-name))
      (common-lisp:list
       (common-lisp:cons "ActionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "TargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-type))
      (common-lisp:list
       (common-lisp:cons "TargetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'complete-time))
      (common-lisp:list
       (common-lisp:cons "CompleteTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result))
      (common-lisp:list
       (common-lisp:cons "Result"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input review-action-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype review-action-detail-list ()
   '(trivial-types:proper-list review-action-detail))
 (common-lisp:defun |make-review-action-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list review-action-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype review-action-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (review-policy (:copier common-lisp:nil)
      (:conc-name "struct-shape-review-policy-"))
   (policy-name (common-lisp:error ":policy-name is required") :type
    (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or policy-parameter-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'review-policy 'make-review-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input review-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input review-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-name))
      (common-lisp:list
       (common-lisp:cons "PolicyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parameters))
      (common-lisp:list
       (common-lisp:cons "Parameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input review-policy))
   common-lisp:nil))
(common-lisp:deftype review-policy-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype review-policy-level-list ()
   '(trivial-types:proper-list review-policy-level))
 (common-lisp:defun |make-review-policy-level-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list review-policy-level))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (review-report (:copier common-lisp:nil)
      (:conc-name "struct-shape-review-report-"))
   (review-results common-lisp:nil :type
    (common-lisp:or review-result-detail-list common-lisp:null))
   (review-actions common-lisp:nil :type
    (common-lisp:or review-action-detail-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'review-report 'make-review-report))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input review-report))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input review-report))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'review-results))
      (common-lisp:list
       (common-lisp:cons "ReviewResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'review-actions))
      (common-lisp:list
       (common-lisp:cons "ReviewActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input review-report))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (review-result-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-review-result-detail-"))
   (action-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (subject-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (subject-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (question-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'review-result-detail 'make-review-result-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input review-result-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input review-result-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "ActionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject-id))
      (common-lisp:list
       (common-lisp:cons "SubjectId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject-type))
      (common-lisp:list
       (common-lisp:cons "SubjectType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'question-id))
      (common-lisp:list
       (common-lisp:cons "QuestionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input review-result-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype review-result-detail-list ()
   '(trivial-types:proper-list review-result-detail))
 (common-lisp:defun |make-review-result-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list review-result-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype reviewable-hitstatus () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (send-bonus-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-bonus-request-"))
   (worker-id (common-lisp:error ":worker-id is required") :type
    (common-lisp:or customer-id common-lisp:null))
   (bonus-amount (common-lisp:error ":bonus-amount is required") :type
    (common-lisp:or currency-amount common-lisp:null))
   (assignment-id (common-lisp:error ":assignment-id is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (reason (common-lisp:error ":reason is required") :type
    (common-lisp:or string common-lisp:null))
   (unique-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-bonus-request 'make-send-bonus-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-bonus-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-bonus-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-id))
      (common-lisp:list
       (common-lisp:cons "WorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bonus-amount))
      (common-lisp:list
       (common-lisp:cons "BonusAmount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-id))
      (common-lisp:list
       (common-lisp:cons "AssignmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unique-request-token))
      (common-lisp:list
       (common-lisp:cons "UniqueRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-bonus-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-bonus-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-bonus-response-")))
 (common-lisp:export
  (common-lisp:list 'send-bonus-response 'make-send-bonus-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-bonus-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-bonus-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-bonus-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-test-event-notification-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-test-event-notification-request-"))
   (notification (common-lisp:error ":notification is required") :type
    (common-lisp:or notification-specification common-lisp:null))
   (test-event-type (common-lisp:error ":test-event-type is required") :type
    (common-lisp:or event-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-test-event-notification-request
                    'make-send-test-event-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-test-event-notification-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-test-event-notification-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification))
      (common-lisp:list
       (common-lisp:cons "Notification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-event-type))
      (common-lisp:list
       (common-lisp:cons "TestEventType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-test-event-notification-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-test-event-notification-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-test-event-notification-response-")))
 (common-lisp:export
  (common-lisp:list 'send-test-event-notification-response
                    'make-send-test-event-notification-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-test-event-notification-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-test-event-notification-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-test-event-notification-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-fault
     (mturk-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-fault-message)
      (turk-error-code :initarg :turk-error-code :initform common-lisp:nil
       :reader service-fault-turk-error-code)))
 (common-lisp:export
  (common-lisp:list 'service-fault 'service-fault-message
                    'service-fault-turk-error-code)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype turk-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-expiration-for-hitrequest (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-expiration-for-hitrequest-"))
   (hitid (common-lisp:error ":hitid is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (expire-at (common-lisp:error ":expire-at is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-expiration-for-hitrequest
                    'make-update-expiration-for-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-expiration-for-hitrequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-expiration-for-hitrequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitid))
      (common-lisp:list
       (common-lisp:cons "HITId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expire-at))
      (common-lisp:list
       (common-lisp:cons "ExpireAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-expiration-for-hitrequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-expiration-for-hitresponse (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-expiration-for-hitresponse-")))
 (common-lisp:export
  (common-lisp:list 'update-expiration-for-hitresponse
                    'make-update-expiration-for-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-expiration-for-hitresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-expiration-for-hitresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-expiration-for-hitresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-hitreview-status-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-hitreview-status-request-"))
   (hitid (common-lisp:error ":hitid is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (revert common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-hitreview-status-request
                    'make-update-hitreview-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-hitreview-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-hitreview-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitid))
      (common-lisp:list
       (common-lisp:cons "HITId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revert))
      (common-lisp:list
       (common-lisp:cons "Revert"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-hitreview-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-hitreview-status-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-hitreview-status-response-")))
 (common-lisp:export
  (common-lisp:list 'update-hitreview-status-response
                    'make-update-hitreview-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-hitreview-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-hitreview-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-hitreview-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-hittype-of-hitrequest (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-hittype-of-hitrequest-"))
   (hitid (common-lisp:error ":hitid is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (hittype-id (common-lisp:error ":hittype-id is required") :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-hittype-of-hitrequest
                    'make-update-hittype-of-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-hittype-of-hitrequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-hittype-of-hitrequest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hitid))
      (common-lisp:list
       (common-lisp:cons "HITId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hittype-id))
      (common-lisp:list
       (common-lisp:cons "HITTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-hittype-of-hitrequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-hittype-of-hitresponse (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-hittype-of-hitresponse-")))
 (common-lisp:export
  (common-lisp:list 'update-hittype-of-hitresponse
                    'make-update-hittype-of-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-hittype-of-hitresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-hittype-of-hitresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-hittype-of-hitresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-notification-settings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-notification-settings-request-"))
   (hittype-id (common-lisp:error ":hittype-id is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (notification common-lisp:nil :type
    (common-lisp:or notification-specification common-lisp:null))
   (active common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-notification-settings-request
                    'make-update-notification-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hittype-id))
      (common-lisp:list
       (common-lisp:cons "HITTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification))
      (common-lisp:list
       (common-lisp:cons "Notification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active))
      (common-lisp:list
       (common-lisp:cons "Active"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-notification-settings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-notification-settings-response-")))
 (common-lisp:export
  (common-lisp:list 'update-notification-settings-response
                    'make-update-notification-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-qualification-type-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-qualification-type-request-"))
   (qualification-type-id
    (common-lisp:error ":qualification-type-id is required") :type
    (common-lisp:or entity-id common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (qualification-type-status common-lisp:nil :type
    (common-lisp:or qualification-type-status common-lisp:null))
   (test common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (answer-key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (test-duration-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (retry-delay-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (auto-granted common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-granted-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-qualification-type-request
                    'make-update-qualification-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-qualification-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-qualification-type-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-id))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-type-status))
      (common-lisp:list
       (common-lisp:cons "QualificationTypeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test))
      (common-lisp:list
       (common-lisp:cons "Test"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'answer-key))
      (common-lisp:list
       (common-lisp:cons "AnswerKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'test-duration-in-seconds))
      (common-lisp:list
       (common-lisp:cons "TestDurationInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retry-delay-in-seconds))
      (common-lisp:list
       (common-lisp:cons "RetryDelayInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-granted))
      (common-lisp:list
       (common-lisp:cons "AutoGranted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-granted-value))
      (common-lisp:list
       (common-lisp:cons "AutoGrantedValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-qualification-type-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-qualification-type-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-qualification-type-response-"))
   (qualification-type common-lisp:nil :type
    (common-lisp:or qualification-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-qualification-type-response
                    'make-update-qualification-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-qualification-type-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-qualification-type-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qualification-type))
      (common-lisp:list
       (common-lisp:cons "QualificationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-qualification-type-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (worker-block (:copier common-lisp:nil)
      (:conc-name "struct-shape-worker-block-"))
   (worker-id common-lisp:nil :type
    (common-lisp:or customer-id common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'worker-block 'make-worker-block))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input worker-block))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input worker-block))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-id))
      (common-lisp:list
       (common-lisp:cons "WorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input worker-block))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype worker-block-list ()
   '(trivial-types:proper-list worker-block))
 (common-lisp:defun |make-worker-block-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list worker-block))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun accept-qualification-request
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-request-id integer-value)
   (common-lisp:declare
    (common-lisp:ignorable qualification-request-id integer-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-accept-qualification-request-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AcceptQualificationRequest"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'accept-qualification-request))
(common-lisp:progn
 (common-lisp:defun approve-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assignment-id requester-feedback
                     override-rejection)
   (common-lisp:declare
    (common-lisp:ignorable assignment-id requester-feedback
     override-rejection))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-approve-assignment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ApproveAssignment"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'approve-assignment))
(common-lisp:progn
 (common-lisp:defun associate-qualification-with-worker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id worker-id
                     integer-value send-notification)
   (common-lisp:declare
    (common-lisp:ignorable qualification-type-id worker-id integer-value
     send-notification))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-qualification-with-worker-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AssociateQualificationWithWorker"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-qualification-with-worker))
(common-lisp:progn
 (common-lisp:defun create-additional-assignments-for-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid number-of-additional-assignments
                     unique-request-token)
   (common-lisp:declare
    (common-lisp:ignorable hitid number-of-additional-assignments
     unique-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-additional-assignments-for-hitrequest
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateAdditionalAssignmentsForHIT"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-additional-assignments-for-hit))
(common-lisp:progn
 (common-lisp:defun create-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-assignments
                     auto-approval-delay-in-seconds lifetime-in-seconds
                     assignment-duration-in-seconds reward title keywords
                     description question requester-annotation
                     qualification-requirements unique-request-token
                     assignment-review-policy hitreview-policy hitlayout-id
                     hitlayout-parameters)
   (common-lisp:declare
    (common-lisp:ignorable max-assignments auto-approval-delay-in-seconds
     lifetime-in-seconds assignment-duration-in-seconds reward title keywords
     description question requester-annotation qualification-requirements
     unique-request-token assignment-review-policy hitreview-policy
     hitlayout-id hitlayout-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-hitrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "CreateHIT"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-hit))
(common-lisp:progn
 (common-lisp:defun create-hittype
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-approval-delay-in-seconds
                     assignment-duration-in-seconds reward title keywords
                     description qualification-requirements)
   (common-lisp:declare
    (common-lisp:ignorable auto-approval-delay-in-seconds
     assignment-duration-in-seconds reward title keywords description
     qualification-requirements))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-hittype-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateHITType"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-hittype))
(common-lisp:progn
 (common-lisp:defun create-hitwith-hittype
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hittype-id max-assignments
                     lifetime-in-seconds question requester-annotation
                     unique-request-token assignment-review-policy
                     hitreview-policy hitlayout-id hitlayout-parameters)
   (common-lisp:declare
    (common-lisp:ignorable hittype-id max-assignments lifetime-in-seconds
     question requester-annotation unique-request-token
     assignment-review-policy hitreview-policy hitlayout-id
     hitlayout-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-hitwith-hittype-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateHITWithHITType"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-hitwith-hittype))
(common-lisp:progn
 (common-lisp:defun create-qualification-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name keywords description
                     qualification-type-status retry-delay-in-seconds test
                     answer-key test-duration-in-seconds auto-granted
                     auto-granted-value)
   (common-lisp:declare
    (common-lisp:ignorable name keywords description qualification-type-status
     retry-delay-in-seconds test answer-key test-duration-in-seconds
     auto-granted auto-granted-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-qualification-type-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateQualificationType"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-qualification-type))
(common-lisp:progn
 (common-lisp:defun create-worker-block
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key worker-id reason)
   (common-lisp:declare (common-lisp:ignorable worker-id reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-worker-block-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateWorkerBlock"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-worker-block))
(common-lisp:progn
 (common-lisp:defun delete-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid)
   (common-lisp:declare (common-lisp:ignorable hitid))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-hitrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "DeleteHIT"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-hit))
(common-lisp:progn
 (common-lisp:defun delete-qualification-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id)
   (common-lisp:declare (common-lisp:ignorable qualification-type-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-qualification-type-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteQualificationType"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-qualification-type))
(common-lisp:progn
 (common-lisp:defun delete-worker-block
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key worker-id reason)
   (common-lisp:declare (common-lisp:ignorable worker-id reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-worker-block-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteWorkerBlock"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-worker-block))
(common-lisp:progn
 (common-lisp:defun disassociate-qualification-from-worker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key worker-id qualification-type-id reason)
   (common-lisp:declare
    (common-lisp:ignorable worker-id qualification-type-id reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-qualification-from-worker-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DisassociateQualificationFromWorker"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-qualification-from-worker))
(common-lisp:progn
 (common-lisp:defun get-account-balance ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'mturk-request :method "POST" :path "/" :params
                                `(("Action" ,@"GetAccountBalance")
                                  ("Version" ,@"2017-01-17"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-account-balance))
(common-lisp:progn
 (common-lisp:defun get-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assignment-id)
   (common-lisp:declare (common-lisp:ignorable assignment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-assignment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetAssignment"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-assignment))
(common-lisp:progn
 (common-lisp:defun get-file-upload-url
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assignment-id question-identifier)
   (common-lisp:declare
    (common-lisp:ignorable assignment-id question-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-file-upload-urlrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetFileUploadURL"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-file-upload-url))
(common-lisp:progn
 (common-lisp:defun get-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid)
   (common-lisp:declare (common-lisp:ignorable hitid))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-hitrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "GetHIT"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-hit))
(common-lisp:progn
 (common-lisp:defun get-qualification-score
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id worker-id)
   (common-lisp:declare
    (common-lisp:ignorable qualification-type-id worker-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-qualification-score-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetQualificationScore"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-qualification-score))
(common-lisp:progn
 (common-lisp:defun get-qualification-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id)
   (common-lisp:declare (common-lisp:ignorable qualification-type-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-qualification-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetQualificationType"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-qualification-type))
(common-lisp:progn
 (common-lisp:defun list-assignments-for-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid next-token max-results
                     assignment-statuses)
   (common-lisp:declare
    (common-lisp:ignorable hitid next-token max-results assignment-statuses))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-assignments-for-hitrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAssignmentsForHIT"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-assignments-for-hit))
(common-lisp:progn
 (common-lisp:defun list-bonus-payments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid assignment-id next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable hitid assignment-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-bonus-payments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListBonusPayments"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-bonus-payments))
(common-lisp:progn
 (common-lisp:defun list-hits
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-hits-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "ListHITs"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-hits))
(common-lisp:progn
 (common-lisp:defun list-hits-for-qualification-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable qualification-type-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-hits-for-qualification-type-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListHITsForQualificationType"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-hits-for-qualification-type))
(common-lisp:progn
 (common-lisp:defun list-qualification-requests
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable qualification-type-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-qualification-requests-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListQualificationRequests"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-qualification-requests))
(common-lisp:progn
 (common-lisp:defun list-qualification-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key query must-be-requestable
                     must-be-owned-by-caller next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable query must-be-requestable must-be-owned-by-caller
     next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-qualification-types-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListQualificationTypes"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-qualification-types))
(common-lisp:progn
 (common-lisp:defun list-review-policy-results-for-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid policy-levels retrieve-actions
                     retrieve-results next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable hitid policy-levels retrieve-actions
     retrieve-results next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-review-policy-results-for-hitrequest
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListReviewPolicyResultsForHIT"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-review-policy-results-for-hit))
(common-lisp:progn
 (common-lisp:defun list-reviewable-hits
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hittype-id status next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable hittype-id status next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-reviewable-hits-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListReviewableHITs"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-reviewable-hits))
(common-lisp:progn
 (common-lisp:defun list-worker-blocks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-worker-blocks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListWorkerBlocks"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-worker-blocks))
(common-lisp:progn
 (common-lisp:defun list-workers-with-qualification-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id status next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable qualification-type-id status next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-workers-with-qualification-type-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListWorkersWithQualificationType"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-workers-with-qualification-type))
(common-lisp:progn
 (common-lisp:defun notify-workers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subject message-text worker-ids)
   (common-lisp:declare
    (common-lisp:ignorable subject message-text worker-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-notify-workers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "NotifyWorkers"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'notify-workers))
(common-lisp:progn
 (common-lisp:defun reject-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assignment-id requester-feedback)
   (common-lisp:declare
    (common-lisp:ignorable assignment-id requester-feedback))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reject-assignment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RejectAssignment"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'reject-assignment))
(common-lisp:progn
 (common-lisp:defun reject-qualification-request
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-request-id reason)
   (common-lisp:declare
    (common-lisp:ignorable qualification-request-id reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-reject-qualification-request-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RejectQualificationRequest"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'reject-qualification-request))
(common-lisp:progn
 (common-lisp:defun send-bonus
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key worker-id bonus-amount assignment-id
                     reason unique-request-token)
   (common-lisp:declare
    (common-lisp:ignorable worker-id bonus-amount assignment-id reason
     unique-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-bonus-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "SendBonus"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'send-bonus))
(common-lisp:progn
 (common-lisp:defun send-test-event-notification
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key notification test-event-type)
   (common-lisp:declare (common-lisp:ignorable notification test-event-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-send-test-event-notification-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SendTestEventNotification"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'send-test-event-notification))
(common-lisp:progn
 (common-lisp:defun update-expiration-for-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid expire-at)
   (common-lisp:declare (common-lisp:ignorable hitid expire-at))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-expiration-for-hitrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateExpirationForHIT"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-expiration-for-hit))
(common-lisp:progn
 (common-lisp:defun update-hitreview-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid revert)
   (common-lisp:declare (common-lisp:ignorable hitid revert))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-hitreview-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateHITReviewStatus"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-hitreview-status))
(common-lisp:progn
 (common-lisp:defun update-hittype-of-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid hittype-id)
   (common-lisp:declare (common-lisp:ignorable hitid hittype-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-hittype-of-hitrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateHITTypeOfHIT"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-hittype-of-hit))
(common-lisp:progn
 (common-lisp:defun update-notification-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hittype-id notification active)
   (common-lisp:declare (common-lisp:ignorable hittype-id notification active))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-notification-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateNotificationSettings"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-notification-settings))
(common-lisp:progn
 (common-lisp:defun update-qualification-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id description
                     qualification-type-status test answer-key
                     test-duration-in-seconds retry-delay-in-seconds
                     auto-granted auto-granted-value)
   (common-lisp:declare
    (common-lisp:ignorable qualification-type-id description
     qualification-type-status test answer-key test-duration-in-seconds
     retry-delay-in-seconds auto-granted auto-granted-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-qualification-type-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mturk-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateQualificationType"
                                                        "2017-01-17"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-qualification-type))
