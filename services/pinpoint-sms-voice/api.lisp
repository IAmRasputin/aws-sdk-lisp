;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/pinpoint-sms-voice/api
  (:use)
  (:nicknames #:aws/pinpoint-sms-voice)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/pinpoint-sms-voice/api)
(common-lisp:progn
 (common-lisp:defclass pinpoint-sms-voice-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "pinpoint-sms-voice"))
 (common-lisp:export 'pinpoint-sms-voice-request))
(common-lisp:progn
 (common-lisp:define-condition pinpoint-sms-voice-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'pinpoint-sms-voice-error))
(common-lisp:defvar *error-map*
  '(("AlreadyExistsException" . already-exists-exception)
    ("BadRequestException" . bad-request-exception)
    ("InternalServiceErrorException" . internal-service-error-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("NotFoundException" . not-found-exception)
    ("TooManyRequestsException" . too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:define-condition already-exists-exception
     (pinpoint-sms-voice-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       already-exists-exception-message)))
 (common-lisp:export
  (common-lisp:list 'already-exists-exception
                    'already-exists-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (pinpoint-sms-voice-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (call-instructions-message-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-call-instructions-message-type-"))
   (text common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'call-instructions-message-type
                    'make-call-instructions-message-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          call-instructions-message-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          call-instructions-message-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          call-instructions-message-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-logs-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-cloud-watch-logs-destination-"))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (log-group-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-logs-destination
                    'make-cloud-watch-logs-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-logs-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-logs-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group-arn))
      (common-lisp:list
       (common-lisp:cons "LogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-logs-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-event-destination-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-configuration-set-event-destination-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (event-destination common-lisp:nil :type
    (common-lisp:or event-destination-definition common-lisp:null))
   (event-destination-name common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-event-destination-request
                    'make-create-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destination))
      (common-lisp:list
       (common-lisp:cons "EventDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-destination-name))
      (common-lisp:list
       (common-lisp:cons "EventDestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-event-destination-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-configuration-set-event-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-event-destination-response
                    'make-create-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-configuration-set-request-"))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or word-characters-with-delimiters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-request
                    'make-create-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-configuration-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-configuration-set-response-")))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-response
                    'make-create-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-event-destination-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-configuration-set-event-destination-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (event-destination-name
    (common-lisp:error ":event-destination-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-event-destination-request
                    'make-delete-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-event-destination-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-configuration-set-event-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-event-destination-response
                    'make-delete-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-configuration-set-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-request
                    'make-delete-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-configuration-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-configuration-set-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-response
                    'make-delete-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (event-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-event-destination-"))
   (cloud-watch-logs-destination common-lisp:nil :type
    (common-lisp:or cloud-watch-logs-destination common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (kinesis-firehose-destination common-lisp:nil :type
    (common-lisp:or kinesis-firehose-destination common-lisp:null))
   (matching-event-types common-lisp:nil :type
    (common-lisp:or event-types common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (sns-destination common-lisp:nil :type
    (common-lisp:or sns-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-destination 'make-event-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-destination))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kinesis-firehose-destination))
      (common-lisp:list
       (common-lisp:cons "KinesisFirehoseDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'matching-event-types))
      (common-lisp:list
       (common-lisp:cons "MatchingEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-destination))
      (common-lisp:list
       (common-lisp:cons "SnsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (event-destination-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-event-destination-definition-"))
   (cloud-watch-logs-destination common-lisp:nil :type
    (common-lisp:or cloud-watch-logs-destination common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (kinesis-firehose-destination common-lisp:nil :type
    (common-lisp:or kinesis-firehose-destination common-lisp:null))
   (matching-event-types common-lisp:nil :type
    (common-lisp:or event-types common-lisp:null))
   (sns-destination common-lisp:nil :type
    (common-lisp:or sns-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-destination-definition
                    'make-event-destination-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-destination))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kinesis-firehose-destination))
      (common-lisp:list
       (common-lisp:cons "KinesisFirehoseDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'matching-event-types))
      (common-lisp:list
       (common-lisp:cons "MatchingEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-destination))
      (common-lisp:list
       (common-lisp:cons "SnsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-destinations ()
   '(trivial-types:proper-list event-destination))
 (common-lisp:defun |make-event-destinations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-destination))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-types () '(trivial-types:proper-list event-type))
 (common-lisp:defun |make-event-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (get-configuration-set-event-destinations-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-configuration-set-event-destinations-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-event-destinations-request
                    'make-get-configuration-set-event-destinations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-configuration-set-event-destinations-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-configuration-set-event-destinations-response-"))
   (event-destinations common-lisp:nil :type
    (common-lisp:or event-destinations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-event-destinations-response
                    'make-get-configuration-set-event-destinations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destinations))
      (common-lisp:list
       (common-lisp:cons "EventDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-service-error-exception
     (pinpoint-sms-voice-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-service-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-service-error-exception
                    'internal-service-error-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (kinesis-firehose-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-kinesis-firehose-destination-"))
   (delivery-stream-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-firehose-destination
                    'make-kinesis-firehose-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-stream-arn))
      (common-lisp:list
       (common-lisp:cons "DeliveryStreamArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (pinpoint-sms-voice-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-message)))
(common-lisp:deftype non-empty-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (pinpoint-sms-voice-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (plain-text-message-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-plain-text-message-type-"))
   (language-code common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (text common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (voice-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'plain-text-message-type 'make-plain-text-message-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          plain-text-message-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          plain-text-message-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-id))
      (common-lisp:list
       (common-lisp:cons "VoiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          plain-text-message-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (ssmlmessage-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-ssmlmessage-type-"))
   (language-code common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (text common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (voice-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ssmlmessage-type 'make-ssmlmessage-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ssmlmessage-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ssmlmessage-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-id))
      (common-lisp:list
       (common-lisp:cons "VoiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ssmlmessage-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-voice-message-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-voice-message-request-"))
   (caller-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (configuration-set-name common-lisp:nil :type
    (common-lisp:or word-characters-with-delimiters common-lisp:null))
   (content common-lisp:nil :type
    (common-lisp:or voice-message-content common-lisp:null))
   (destination-phone-number common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (origination-phone-number common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-voice-message-request
                    'make-send-voice-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-voice-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-voice-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'caller-id))
      (common-lisp:list
       (common-lisp:cons "CallerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-phone-number))
      (common-lisp:list
       (common-lisp:cons "DestinationPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origination-phone-number))
      (common-lisp:list
       (common-lisp:cons "OriginationPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-voice-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-voice-message-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-voice-message-response-"))
   (message-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-voice-message-response
                    'make-send-voice-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-voice-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-voice-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-voice-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sns-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-sns-destination-"))
   (topic-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sns-destination 'make-sns-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sns-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sns-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sns-destination))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (pinpoint-sms-voice-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-set-event-destination-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-configuration-set-event-destination-request-"))
   (configuration-set-name
    (common-lisp:error ":configuration-set-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (event-destination common-lisp:nil :type
    (common-lisp:or event-destination-definition common-lisp:null))
   (event-destination-name
    (common-lisp:error ":event-destination-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-configuration-set-event-destination-request
                    'make-update-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destination))
      (common-lisp:list
       (common-lisp:cons "EventDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-configuration-set-event-destination-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-configuration-set-event-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'update-configuration-set-event-destination-response
                    'make-update-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (voice-message-content (:copier common-lisp:nil)
      (:conc-name "struct-shape-voice-message-content-"))
   (call-instructions-message common-lisp:nil :type
    (common-lisp:or call-instructions-message-type common-lisp:null))
   (plain-text-message common-lisp:nil :type
    (common-lisp:or plain-text-message-type common-lisp:null))
   (ssmlmessage common-lisp:nil :type
    (common-lisp:or ssmlmessage-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'voice-message-content 'make-voice-message-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-message-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-message-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'call-instructions-message))
      (common-lisp:list
       (common-lisp:cons "CallInstructionsMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'plain-text-message))
      (common-lisp:list
       (common-lisp:cons "PlainTextMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ssmlmessage))
      (common-lisp:list
       (common-lisp:cons "SSMLMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-message-content))
   common-lisp:nil))
(common-lisp:deftype word-characters-with-delimiters () 'common-lisp:string)
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'pinpoint-sms-voice-request aws-sdk/generator/operation::input "POST"
        "/v1/sms-voice/configuration-sets" "CreateConfigurationSet"
        "2018-09-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-configuration-set))
(common-lisp:progn
 (common-lisp:defun create-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name event-destination
                     event-destination-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination
     event-destination-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'pinpoint-sms-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/v1/sms-voice/configuration-sets/~A/event-destinations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'configuration-set-name))))
        "CreateConfigurationSetEventDestination" "2018-09-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun delete-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'pinpoint-sms-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/v1/sms-voice/configuration-sets/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'configuration-set-name))))
        "DeleteConfigurationSet" "2018-09-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-configuration-set))
(common-lisp:progn
 (common-lisp:defun delete-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     event-destination-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'pinpoint-sms-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/v1/sms-voice/configuration-sets/~A/event-destinations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'configuration-set-name))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'event-destination-name))))
        "DeleteConfigurationSetEventDestination" "2018-09-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun get-configuration-set-event-destinations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-configuration-set-event-destinations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'pinpoint-sms-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/v1/sms-voice/configuration-sets/~A/event-destinations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'configuration-set-name))))
        "GetConfigurationSetEventDestinations" "2018-09-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-configuration-set-event-destinations))
(common-lisp:progn
 (common-lisp:defun send-voice-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key caller-id configuration-set-name content
                     destination-phone-number origination-phone-number)
   (common-lisp:declare
    (common-lisp:ignorable caller-id configuration-set-name content
     destination-phone-number origination-phone-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-voice-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'pinpoint-sms-voice-request aws-sdk/generator/operation::input "POST"
        "/v1/sms-voice/voice/message" "SendVoiceMessage" "2018-09-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'send-voice-message))
(common-lisp:progn
 (common-lisp:defun update-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name event-destination
                     event-destination-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination
     event-destination-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'pinpoint-sms-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/v1/sms-voice/configuration-sets/~A/event-destinations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'configuration-set-name))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'event-destination-name))))
        "UpdateConfigurationSetEventDestination" "2018-09-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-configuration-set-event-destination))
